/* You can add global styles to this file, and also import other style files */
@use 'sam-styles/packages/theme/settings' with (
  $sam-uswds-font-path: '/assets/uswds/fonts',
  $sam-uswds-image-path: '/assets/uswds/img'
);
@use 'sam-styles/packages/theme/variables' with (
  $sam-image-path: '/assets/uswds/img'
);
@forward 'sam-styles';

@import './base-documentation.scss';

// ::ng-deep {
  .popover {
    // scss-docs-start popover-css-vars
    --sds-popover-zindex: 1070;
    --sds-popover-max-width: 276px;
    --sds-popover-font-size: 0.875rem;
    --sds-popover-bg: white;
    --sds-popover-border-width: 1px;
    --sds-popover-border-color: #dee2e6;
    --sds-popover-border-radius: 0.5rem;
    --sds-popover-inner-border-radius: calc(0.5rem - 1px);
    --sds-popover-box-shadow: 0 .5rem 1rem rgba($black, .15);
    --sds-popover-header-padding-x: 1rem;
    --sds-popover-header-padding-y: 0.5rem;
    --sds-popover-header-font-size: 1rem;
    --sds-popover-header-color: black;
    --sds-popover-header-bg: tint-color($secondary, 80%);
    --sds-popover-body-padding-x: 1rem;
    --sds-popover-body-padding-y: 1rem;
    --sds-popover-body-color: #212529;
    --sds-popover-arrow-width: 1rem;
    --sds-popover-arrow-height: 0.5rem;
    --sds-popover-arrow-border: rgba($black, .175);
    // scss-docs-end popover-css-vars

    z-index: var(--sds-popover-zindex);
    display: block;
    max-width: var(--sds-popover-max-width);
    // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
    // So reset our font and text properties to avoid inheriting weird values.
    // @include reset-text();
    font-size: var(--sds-popover-font-size);
    // @include font-size(var(--sds-popover-font-size));
    // Allow breaking very long words so they don't overflow the popover's bounds
    word-wrap: break-word;
    background-color: var(--sds-popover-bg);
    background-clip: padding-box;
    border: var(--sds-popover-border-width) solid var(--sds-popover-border-color);
    border-radius: var(--sds-popover-border-radius);
    // @include border-radius(var(--sds-popover-border-radius));
    box-shadow: var(--sds-popover-box-shadow);
    // @include box-shadow(var(--sds-popover-box-shadow));

    .popover-arrow {
      display: block;
      width: var(--sds-popover-arrow-width);
      height: var(--sds-popover-arrow-height);

      &::before,
      &::after {
        position: absolute;
        display: block;
        content: "";
        border-color: transparent;
        border-style: solid;
        border-width: 0;
      }
    }
  }

  .bs-popover-top {
    > .popover-arrow {
      bottom: calc(-1 * (var(--sds-popover-arrow-height)) - var(--sds-popover-border-width)); // stylelint-disable-line function-disallowed-list

      &::before,
      &::after {
        border-width: var(--sds-popover-arrow-height) calc(var(--sds-popover-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
      }

      &::before {
        bottom: 0;
        border-top-color: var(--sds-popover-arrow-border);
      }

      &::after {
        bottom: var(--sds-popover-border-width);
        border-top-color: var(--sds-popover-bg);
      }
    }
  }

  /* rtl:begin:ignore */
  .bs-popover-end {
    > .popover-arrow {
      left: calc(-1 * (var(--sds-popover-arrow-height)) - var(--sds-popover-border-width)); // stylelint-disable-line function-disallowed-list
      width: var(--sds-popover-arrow-height);
      height: var(--sds-popover-arrow-width);

      &::before,
      &::after {
        border-width: calc(var(--sds-popover-arrow-width) * .5) var(--sds-popover-arrow-height) calc(var(--sds-popover-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
      }

      &::before {
        left: 0;
        border-right-color: var(--sds-popover-arrow-border);
      }

      &::after {
        left: var(--sds-popover-border-width);
        border-right-color: var(--sds-popover-bg);
      }
    }
  }

  /* rtl:end:ignore */

  .bs-popover-bottom {
    > .popover-arrow {
      top: calc(-1 * (var(--sds-popover-arrow-height)) - var(--sds-popover-border-width)); // stylelint-disable-line function-disallowed-list

      &::before,
      &::after {
        border-width: 0 calc(var(--sds-popover-arrow-width) * .5) var(--sds-popover-arrow-height); // stylelint-disable-line function-disallowed-list
      }

      &::before {
        top: 0;
        border-bottom-color: var(--sds-popover-arrow-border);
      }

      &::after {
        top: var(--sds-popover-border-width);
        border-bottom-color: var(--sds-popover-bg);
      }
    }

    // This will remove the popover-header's border just below the arrow
    .popover-header::before {
      position: absolute;
      top: 0;
      left: 50%;
      display: block;
      width: var(--sds-popover-arrow-width);
      margin-left: calc(-.5 * var(--sds-popover-arrow-width)); // stylelint-disable-line function-disallowed-list
      content: "";
      border-bottom: var(--sds-popover-border-width) solid var(--sds-popover-header-bg);
    }
  }

  /* rtl:begin:ignore */
  .bs-popover-start {
    > .popover-arrow {
      right: calc(-1 * (var(--sds-popover-arrow-height)) - var(--sds-popover-border-width)); // stylelint-disable-line function-disallowed-list
      width: var(--sds-popover-arrow-height);
      height: var(--sds-popover-arrow-width);

      &::before,
      &::after {
        border-width: calc(var(--sds-popover-arrow-width) * .5) 0 calc(var(--sds-popover-arrow-width) * .5) var(--sds-popover-arrow-height); // stylelint-disable-line function-disallowed-list
      }

      &::before {
        right: 0;
        border-left-color: var(--sds-popover-arrow-border);
      }

      &::after {
        right: var(--sds-popover-border-width);
        border-left-color: var(--sds-popover-bg);
      }
    }
  }

  /* rtl:end:ignore */

  .bs-popover-auto {
    &[data-popper-placement^="top"] {
      @extend .bs-popover-top;
    }
    &[data-popper-placement^="right"] {
      @extend .bs-popover-end;
    }
    &[data-popper-placement^="bottom"] {
      @extend .bs-popover-bottom;
    }
    &[data-popper-placement^="left"] {
      @extend .bs-popover-start;
    }
  }

  // Offset the popover to account for the popover arrow
  .popover-header {
    padding: var(--sds-popover-header-padding-y) var(--sds-popover-header-padding-x);
    margin-bottom: 0; // Reset the default from Reboot
    // @include font-size(var(--sds-popover-header-font-size));
    font-size: var(--sds-popover-header-font-size);
    color: var(--sds-popover-header-color);
    background-color: var(--sds-popover-header-bg);
    border-bottom: var(--sds-popover-border-width) solid var(--sds-popover-border-color);
    // @include border-top-radius();
    border-top-right-radius: var(--sds-popover-inner-border-radius);
    border-top-left-radius: var(--sds-popover-inner-border-radius);
    margin-top: initial;

    &:empty {
      display: none;
    }
  }

  .popover-body {
    padding: var(--sds-popover-body-padding-y) var(--sds-popover-body-padding-x);
    color: var(--sds-popover-body-color);
    margin-top: initial;
  }

// }

// ::ng-deep {
  // Base class
  .tooltip {
    // scss-docs-start tooltip-css-vars
    --bs-tooltip-zindex: 1080;
    --bs-tooltip-max-width: 200px;
    --bs-tooltip-padding-x: 0.5rem;
    --bs-tooltip-padding-y: 0.25rem;
    --bs-tooltip-margin: null;
    --bs-tooltip-font-size: 0.875rem;
    --bs-tooltip-color: white;
    --bs-tooltip-bg: black;
    --bs-tooltip-border-radius: 0.375;
    --bs-tooltip-opacity: 0.9;
    --bs-tooltip-arrow-width: 0.8rem;
    --bs-tooltip-arrow-height: 0.4rem;
    // scss-docs-end tooltip-css-vars

    z-index: var(--bs-tooltip-zindex);
    display: block;
    margin: var(--bs-tooltip-margin);
    // @include deprecate("`$tooltip-margin`", "v5", "v5.x", true);
    // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
    // So reset our font and text properties to avoid inheriting weird values.
    // @include reset-text();
    // @include font-size(var(--bs-tooltip-font-size));
    // Allow breaking very long words so they don't overflow the tooltip's bounds
    word-wrap: break-word;
    opacity: 0;

    &.show { opacity: var(--bs-tooltip-opacity); }

    .tooltip-arrow {
      display: block;
      width: var(--bs-tooltip-arrow-width);
      height: var(--bs-tooltip-arrow-height);

      &::before {
        position: absolute;
        content: "";
        border-color: transparent;
        border-style: solid;
      }
    }
  }

  .bs-tooltip-top .tooltip-arrow {
    bottom: calc(-1 * var(--bs-tooltip-arrow-height)); // stylelint-disable-line function-disallowed-list

    &::before {
      top: -1px;
      border-width: var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
      border-top-color: var(--bs-tooltip-bg);
    }
  }

  /* rtl:begin:ignore */
  .bs-tooltip-end .tooltip-arrow {
    left: calc(-1 * var(--bs-tooltip-arrow-height)); // stylelint-disable-line function-disallowed-list
    width: var(--bs-tooltip-arrow-height);
    height: var(--bs-tooltip-arrow-width);

    &::before {
      right: -1px;
      border-width: calc(var(--bs-tooltip-arrow-width) * .5) var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * .5) 0; // stylelint-disable-line function-disallowed-list
      border-right-color: var(--bs-tooltip-bg);
    }
  }

  /* rtl:end:ignore */

  .bs-tooltip-bottom .tooltip-arrow {
    top: calc(-1 * var(--bs-tooltip-arrow-height)); // stylelint-disable-line function-disallowed-list

    &::before {
      bottom: -1px;
      border-width: 0 calc(var(--bs-tooltip-arrow-width) * .5) var(--bs-tooltip-arrow-height); // stylelint-disable-line function-disallowed-list
      border-bottom-color: var(--bs-tooltip-bg);
    }
  }

  /* rtl:begin:ignore */
  .bs-tooltip-start .tooltip-arrow {
    right: calc(-1 * var(--bs-tooltip-arrow-height)); // stylelint-disable-line function-disallowed-list
    width: var(--bs-tooltip-arrow-height);
    height: var(--bs-tooltip-arrow-width);

    &::before {
      left: -1px;
      border-width: calc(var(--bs-tooltip-arrow-width) * .5) 0 calc(var(--bs-tooltip-arrow-width) * .5) var(--bs-tooltip-arrow-height); // stylelint-disable-line function-disallowed-list
      border-left-color: var(--bs-tooltip-bg);
    }
  }

  /* rtl:end:ignore */

  .bs-tooltip-auto {
    &[data-popper-placement^="top"] {
      @extend .bs-tooltip-top;
    }
    &[data-popper-placement^="right"] {
      @extend .bs-tooltip-end;
    }
    &[data-popper-placement^="bottom"] {
      @extend .bs-tooltip-bottom;
    }
    &[data-popper-placement^="left"] {
      @extend .bs-tooltip-start;
    }
  }

  // Wrapper for the tooltip content
  .tooltip-inner {
    max-width: var(--bs-tooltip-max-width);
    padding: var(--bs-tooltip-padding-y) var(--bs-tooltip-padding-x);
    color: var(--bs-tooltip-color);
    text-align: center;
    background-color: var(--bs-tooltip-bg);
    border-radius: 0.375rem;
    p {
      color: var(--bs-tooltip-color);
    }
  }

// }
