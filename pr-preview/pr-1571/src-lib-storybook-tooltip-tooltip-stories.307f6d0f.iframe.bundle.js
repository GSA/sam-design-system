"use strict";(self.webpackChunksam_design_system=self.webpackChunksam_design_system||[]).push([[642],{"./libs/documentation/src/lib/storybook/tooltip/tooltip.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Configurable:()=>Configurable,Introduction:()=>Introduction,Position:()=>Position,SdsTooltip:()=>SdsTooltip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>tooltip_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),sandbox_utils=__webpack_require__("./libs/documentation/src/sandbox/sandbox-utils.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let TooltipConfigurableComponent=class TooltipConfigurableComponent{constructor(){this.position="top"}static#_=this.ctorParameters=()=>[];static#_2=this.propDecorators={position:[{type:core.Input,args:["position"]}],tooltipContent:[{type:core.Input,args:["tooltipContent"]}]}};TooltipConfigurableComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"sds-tooltip-configurable",template:'<div style="margin: 2rem">\n  <button class="usa-button usa-button--base" sdsTooltip="tooltipContent" [position]="position ? position : \'top\'">\n    Hover to Show Tooltip\n  </button>\n</div>\n'})],TooltipConfigurableComponent);var src=__webpack_require__("./libs/packages/components/src/index.ts");let TooltipConfigurableModule=class TooltipConfigurableModule{};TooltipConfigurableModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule,src.cm],declarations:[TooltipConfigurableComponent],exports:[TooltipConfigurableComponent],bootstrap:[TooltipConfigurableComponent]})],TooltipConfigurableModule);let TooltipIntroductionComponent=class TooltipIntroductionComponent{constructor(){}static#_=this.ctorParameters=()=>[]};TooltipIntroductionComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"sds-tooltip-introduction",template:'<p>\n  Tooltip allows additional information to be displayed when a user "focuses" on an element that this directive is\n  applied to.\n</p>\n\n<h2>17.0.7 Migration</h2>\n<p>\n  With version 17.0.7 of SAM Design System the tooltip was updated to match the latest design mockups and to address a\n  number of long-standing issues that had been raised with the existing tooltip.\n</p>\n<h3>Changes</h3>\n<h4>Positioning</h4>\n<p>\n  With this update tooltips can now reposition if their content will spill out of view. The position input can now take\n  multiple direction tokens as input. If the first token in the list would place the tooltip off the user\'s screen, the\n  next token in the list will be tested. The first token in the list that does not overflow will be the token that is\n  used. If all of the provided tokens would result in the tooltip going off the screen, the first token in the list will\n  be used. Take a look at the position demo for this dynamic positioning in action.\n</p>\n<h3>Breaking Changes</h3>\n<h4>HTML Embedding</h4>\n<p>\n  The way that HTML elements are passed to the tooltip are being update with this updated. Previously a tag such as\n  #tooltip-content would have been applied to the element to be embedded, this tag would then be passed into the\n  <code>sdsTooltip</code> input. Going forward the HTML element to be embedded will need to be wrapped in an ng-template\n  element which is tagged with the original tooltip-tag. See below for an example of the changes needed.\n</p>\n<h5>Pre-17.0.7</h5>\n<code>\n  &#60;p #tipContent&#62;Hello, &#60;b&#62;World&#60;/b&#62;!&#60;/p&#62;<br />\n  &#60;button [sdsTooltip]="tipContent" [position]="\'bottom\'" class="usa-button\n  usa-button--base"&#62;&#60;/button&#62;<br />\n</code>\n\n<h5>Post-17.0.7</h5>\n<code>\n  &#60;ng-template #tipContent&#62;<br />\n  &emsp;&#60;p&#62;Hello, &#60;b&#62;World&#60;/b&#62;!&#60;/p&#62;<br />\n  &#60;/ng-template&#62;<br />\n  &#60;button [sdsTooltip]="tipContent" [position]="\'bottom\'" class="usa-button usa-button--base"&#62;&#60;/button&#62;\n</code>\n',preserveWhitespaces:!0})],TooltipIntroductionComponent);let TooltipIntroductionModule=class TooltipIntroductionModule{};TooltipIntroductionModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule],declarations:[TooltipIntroductionComponent],exports:[TooltipIntroductionComponent],bootstrap:[TooltipIntroductionComponent]})],TooltipIntroductionModule);let TooltipPositionComponent=class TooltipPositionComponent{constructor(){}static#_=this.ctorParameters=()=>[]};TooltipPositionComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"sds-tooltip-position",template:'<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<div style="margin: 1rem; margin-left: 15rem">\n  <button class="usa-button usa-button--base" [sdsTooltip]="\'Tooltip on left\'" [position]="\'left\'">\n    Tooltip on left\n  </button>\n  <button class="usa-button usa-button--base" [sdsTooltip]="\'Tooltip on top\'" [position]="\'top bottom\'">\n    Tooltip on top\n  </button>\n  <button class="usa-button usa-button--base" [sdsTooltip]="\'Tooltip on bottom\'" [position]="\'bottom top\'">\n    Tooltip on bottom\n  </button>\n  <button class="usa-button usa-button--base" [sdsTooltip]="\'Tooltip on right\'" [position]="\'right\'">\n    Tooltip on right\n  </button>\n</div>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n'})],TooltipPositionComponent);let TooltipPositionModule=class TooltipPositionModule{};TooltipPositionModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule,src.cm],declarations:[TooltipPositionComponent],exports:[TooltipPositionComponent],bootstrap:[TooltipPositionComponent]})],TooltipPositionModule);let TooltipSdsTooltipComponent=class TooltipSdsTooltipComponent{constructor(){}static#_=this.ctorParameters=()=>[]};TooltipSdsTooltipComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"sds-tooltip-sdsTooltip",template:'<p>Content displayed in a tooltip can be a string.</p>\n<button [sdsTooltip]="\'Content\'" [position]="\'bottom\'" class="usa-button usa-button--base" tabindex="0">\n  String binding\n</button>\n\n<p>Content displayed in a tooltip can also be HTML elements</p>\n\n<ng-template #tipContent\n  ><p>Hello, <b>World</b>!</p></ng-template\n>\n<button [sdsTooltip]="tipContent" [position]="\'bottom\'" class="usa-button usa-button--base">HTML binding</button>\n'})],TooltipSdsTooltipComponent);let TooltipSdsTooltipModule=class TooltipSdsTooltipModule{};TooltipSdsTooltipModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule,src.cm],declarations:[TooltipSdsTooltipComponent],exports:[TooltipSdsTooltipComponent],bootstrap:[TooltipSdsTooltipComponent]})],TooltipSdsTooltipModule);const disable={table:{disable:!0}},tooltip_stories={title:"Components/Tooltip",decorators:[(0,dist.moduleMetadata)({imports:[common.CommonModule,TooltipIntroductionModule,TooltipConfigurableModule,TooltipSdsTooltipModule,TooltipPositionModule]})],argTypes:{_sdsTooltip:disable,_tooltipShowing:disable,sdsTooltipDiv:disable,hideTooltip:disable,ngAfterViewInit:disable,onBlur:disable,onFocus:disable,onKeyUp:disable,onMouseEnter:disable,onMouseLeave:disable,showTooltip:disable,clearAndReplacePosition:disable,clearAndReplaceTooltipContent:disable,ngOnChanges:disable,position:{options:["top","bottom","left","right"],control:{type:"select"}}}},Introduction=args=>({template:"<sds-tooltip-introduction></sds-tooltip-introduction>",props:args});Introduction.parameters={controls:{disable:!0},actions:{disable:!0},sdsCodePreview:{disable:!0}};const Configurable=args=>({template:"<sds-tooltip-configurable [position]=position [tooltipContent]=sdsTooltip></sds-tooltip-configurable>",props:args});Configurable.args={sdsTooltip:"tooltip content"},Configurable.parameters={actions:{disable:!0},sdsCodePreview:{disable:!0}};const Position=args=>({template:"<sds-tooltip-position></sds-tooltip-position>",props:args});Position.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.CC)("storybook/tooltip/tooltip-position","TooltipPositionModule","sds-tooltip-position"),stackblitzLink:(0,sandbox_utils.ft)("tooltip","position")};const SdsTooltip=args=>({template:"<sds-tooltip-sdsTooltip></sds-tooltip-sdsTooltip>",props:args});SdsTooltip.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.CC)("storybook/tooltip/tooltip-sdsTooltip","TooltipSdsTooltipModule","sds-tooltip-sdsTooltip"),stackblitzLink:(0,sandbox_utils.ft)("tooltip","sdsTooltip")},Introduction.parameters={...Introduction.parameters,docs:{...Introduction.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-tooltip-introduction></sds-tooltip-introduction>',\n  props: args\n})",...Introduction.parameters?.docs?.source}}},Configurable.parameters={...Configurable.parameters,docs:{...Configurable.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-tooltip-configurable [position]=position [tooltipContent]=sdsTooltip></sds-tooltip-configurable>',\n  props: args\n})",...Configurable.parameters?.docs?.source}}},Position.parameters={...Position.parameters,docs:{...Position.parameters?.docs,source:{originalSource:"args => ({\n  template: `<sds-tooltip-position></sds-tooltip-position>`,\n  props: args\n})",...Position.parameters?.docs?.source}}},SdsTooltip.parameters={...SdsTooltip.parameters,docs:{...SdsTooltip.parameters?.docs,source:{originalSource:"args => ({\n  template: `<sds-tooltip-sdsTooltip></sds-tooltip-sdsTooltip>`,\n  props: args\n})",...SdsTooltip.parameters?.docs?.source}}};const __namedExportsOrder=["Introduction","Configurable","Position","SdsTooltip"]}}]);