const FORMLY = {
    "pipes": [],
    "interfaces": [
        {
            "name": "ReadonlyDataType",
            "id": "interface-ReadonlyDataType-4b5138495a934df4e8a8a3942e66d1b676212c992a400290553c91f9f5165f3157d0e4b437035c0fbdd46b3b53641d79de1f6dddd49a1cfa2f0afa41d3055e53",
            "file": "libs/packages/sam-formly/src/lib/formly/services/formly-utils.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { SdsFormlyTypes, SdsReadonlyTypes } from '../models/formly-types';\nimport { ReadonlyOptions } from '../readonly/readonly-options.model';\n\nexport interface ReadonlyDataType {\n  formlyType: SdsFormlyTypes;\n  label: string;\n  value: any;\n  readonlyOptions: ReadonlyOptions;\n  formlyKey: string;\n}\n@Injectable()\nexport class FormlyUtilsService {\n  /**\n   * Set readonly mode of a formly field config list. Toggles all field config with defined\n   * props property's readonlyMode to given value\n   * @param readonlyMode - if true, readonly mode will be turned on, if false, readonly mode will be turned off\n   * @param fields - The list of fields to toggle readonly mode on\n   */\n  public static setReadonlyMode(readonlyMode: boolean, fields: FormlyFieldConfig[]) {\n    fields.forEach((field) => {\n      this._setReadonlyMode(readonlyMode, field);\n    });\n  }\n\n  /**\n   * Parses a formly field config and returns a list of items that readonly container component would accept.\n   * This is used when you have field configs and the model, but would like to use components for readonly display\n   * rather than formly. props must be defined for the field in order to convert.\n   * @param fields - The list of fields to parse\n   * @param model - Contains the values for given fields\n   * @param options - Additional cofiguration options\n   * options:\n   *  convertAll - By default any fields with a type not in SdsFormlyType will be ignored.\n   *               Turn this on to include fields with no type or type not in SdsFormlyType.\n   */\n  public static formlyConfigToReadonlyData(\n    fields: FormlyFieldConfig[],\n    model: any,\n    options = { convertAll: false }\n  ): ReadonlyDataType[] {\n    const readonlyData = [];\n    fields.forEach((field) => {\n      this, this._formlyConfigToReadonlyData(field, model, readonlyData, options);\n    });\n\n    return readonlyData;\n  }\n\n  private static _setReadonlyMode(readonlyMode: boolean, field: FormlyFieldConfig) {\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((innerField) => {\n        this._setReadonlyMode(readonlyMode, innerField);\n      });\n    }\n\n    if (field.props && field.type && Object.values(SdsFormlyTypes).includes(field.type as any)) {\n      field.props.readonlyMode = readonlyMode;\n    }\n  }\n\n  private static _formlyConfigToReadonlyData(\n    field: FormlyFieldConfig,\n    model: any,\n    readonlyData: any[],\n    options: { convertAll: boolean }\n  ) {\n    if (field.props && (options.convertAll || Object.values(SdsReadonlyTypes).includes(field.type as any))) {\n      const label = field.props.label;\n      const value = model[field.key as string];\n      const readonlyOptions: ReadonlyOptions = {\n        providedOptions: field.props.options as any,\n        autocompleteOptions: field.props.configuration,\n      };\n\n      readonlyData.push({\n        formlyType: field.type,\n        label,\n        value,\n        readonlyOptions,\n        formlyKey: field.key,\n      });\n\n      if (field.type === SdsFormlyTypes.DATERANGEPICKER || field.type === SdsFormlyTypes.DATERANGEPICKERV2) {\n        readonlyOptions.daterangepickerOptions = {\n          fromDateKey: field.fieldGroup[0].key as string,\n          toDateKey: field.fieldGroup[1].key as string,\n        };\n        return;\n      }\n    }\n\n    if (field.fieldGroup) {\n      const innerModel = field.key ? model[field.key as string] : model;\n      field.fieldGroup.forEach((innerField) => {\n        this._formlyConfigToReadonlyData(innerField, innerModel, readonlyData, options);\n      });\n    }\n  }\n}\n",
            "properties": [
                {
                    "name": "formlyKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "formlyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsFormlyTypes",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "readonlyOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReadonlyOptions",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ReadonlyOptions",
            "id": "interface-ReadonlyOptions-38f6cf3f153037e2f933fe9c34d827f1febcef14faa41a884901350e597d68412f885c1cd863fbcdc6859faec7dc17ad81c292b2f403ee2af58753b65d7ddec3",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-options.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ReadonlyOptions {\n  // List of options provided to users to choose from\n  providedOptions?: { key: string; value: string } | { label: string; value: string }[];\n\n  // Autocomplete setting used to define primary text field\n  autocompleteOptions?: {\n    primaryTextField: string;\n  };\n\n  // Key value that maps to start / end dates of the date range model.\n  // By default, these values are set to 'fromDate' and 'toDate'\n  daterangepickerOptions?: {\n    fromDateKey: string;\n    toDateKey: string;\n  };\n}\n",
            "properties": [
                {
                    "name": "autocompleteOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "daterangepickerOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "providedOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Contains additional options needed to properly render some formly types. In some cases,\njust label and value might not be enough, and will require additional information.\nFor example, autocomplete values tend to be complex objects, with some primaryTextField\nthat defines which property of the value is shown to the user. To properly display in\nreadonly format, it is also necessary to pass in that primaryTextField property. Hence,\nif the formly type to display in readonly format is autocomplete, then we expect the\nautocompleteOptions&#39; primaryTextField property to be defined</p>\n<p>If the additional information is not passed in, then the value is still displayed to the user,\neither as json string if the value is some object, or just as it is otherwise.</p>\n",
            "rawdescription": "\n\nContains additional options needed to properly render some formly types. In some cases,\njust label and value might not be enough, and will require additional information.\nFor example, autocomplete values tend to be complex objects, with some primaryTextField\nthat defines which property of the value is shown to the user. To properly display in\nreadonly format, it is also necessary to pass in that primaryTextField property. Hence,\nif the formly type to display in readonly format is autocomplete, then we expect the\nautocompleteOptions' primaryTextField property to be defined\n\nIf the additional information is not passed in, then the value is still displayed to the user,\neither as json string if the value is some object, or just as it is otherwise.\n",
            "methods": []
        },
        {
            "name": "SdsFormlyDialogData",
            "id": "interface-SdsFormlyDialogData-f713ce86a3013418acc07e27b3cdefdc79298e6e74ddf06354d48ed47b088a1e485e3624681021df36c52fa45b55dc7daa39be7ae24cd44044dbdfc08682a62f",
            "file": "libs/packages/sam-formly/src/lib/formly-dialog/formly-dialog-data.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport { UntypedFormGroup } from '@angular/forms';\n\nexport interface SdsFormlyDialogData {\n  fields: FormlyFieldConfig[];\n  cancel?: string;\n  form?: UntypedFormGroup;\n  model?: object;\n  options?: FormlyFormOptions;\n  submit?: string;\n  subtitle?: string;\n  title?: string;\n  disableSubmitButtonEnabled?: boolean;\n}\n",
            "properties": [
                {
                    "name": "cancel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disableSubmitButtonEnabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFieldConfig[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFormOptions",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "submit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SdsTableColumn",
            "id": "interface-SdsTableColumn-a332c4f3ad33859253f83c8d3386493f33555d33fdd97278b524f4832fad11baaa4204cc93a2ccf15b07bad003836476f9a15be9247777daa6511fa9596f685c",
            "file": "libs/packages/sam-formly/src/lib/formly/types/table.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FieldType, FormlyFieldConfig } from '@ngx-formly/core';\n\n/**\n * Data model for table formly types' tableColumns template option\n */\nexport interface SdsTableColumn {\n  /**\n   * used as column header\n   */\n  label: string;\n\n  /**\n   * used internally to reference the column\n   */\n  columnName: string;\n\n  /**\n   * refers to which property of the data to render for the given column\n   */\n  property?: string;\n\n  /**\n   * refers to static text to render for the column\n   */\n  text?: string;\n\n  /**\n   * refers to a function that should return a string to render for the column.\n   * The function takes in a single data element of the table\n   */\n  textFn?: (data: any) => string;\n\n  /**\n   * If the displayed value should be clickable, provide an onClick method\n   */\n  onClick?: (data: any, field: FormlyFieldConfig) => void;\n}\n\n@Component({\n  selector: `sds-formly-field-table`,\n  templateUrl: './table.html',\n})\nexport class FormlyFieldTableComponent extends FieldType implements OnInit {\n  // Referenced in html\n  parentFieldConfig: FormlyFieldConfig;\n\n  displayedColumns: string[] = [];\n\n  ngOnInit() {\n    this.displayedColumns = this.to.tableColumns.map((column) => column.columnName);\n    this.parentFieldConfig = this.field.parent;\n  }\n}\n",
            "properties": [
                {
                    "name": "columnName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>used internally to reference the column</p>\n",
                    "line": 16,
                    "rawdescription": "\n\nused internally to reference the column\n"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>used as column header</p>\n",
                    "line": 11,
                    "rawdescription": "\n\nused as column header\n"
                },
                {
                    "name": "onClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>If the displayed value should be clickable, provide an onClick method</p>\n",
                    "line": 37,
                    "rawdescription": "\n\nIf the displayed value should be clickable, provide an onClick method\n"
                },
                {
                    "name": "property",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>refers to which property of the data to render for the given column</p>\n",
                    "line": 21,
                    "rawdescription": "\n\nrefers to which property of the data to render for the given column\n"
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>refers to static text to render for the column</p>\n",
                    "line": 26,
                    "rawdescription": "\n\nrefers to static text to render for the column\n"
                },
                {
                    "name": "textFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>refers to a function that should return a string to render for the column.\nThe function takes in a single data element of the table</p>\n",
                    "line": 32,
                    "rawdescription": "\n\nrefers to a function that should return a string to render for the column.\nThe function takes in a single data element of the table\n"
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "description": "<p>Data model for table formly types&#39; tableColumns template option</p>\n",
            "rawdescription": "\n\nData model for table formly types' tableColumns template option\n",
            "methods": []
        },
        {
            "name": "StepModel",
            "id": "interface-StepModel-f6c80f81a991298f95f4bce60a908a9b2e292ae592c3ff6febd808c507ed23b7d0d6532c02ade8c0987fdcfd29bdc2c620826c478913fd9de09266a5c6283db6",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/stepper.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TemplateRef } from '@angular/core';\nimport { NavigationMode } from '@gsa-sam/components';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\n\nexport interface StepModel {\n  children: StepModel[];\n\n  /**\n   * Template reference to display for the step if using custom template\n   */\n  stepTemplate: TemplateRef<any>;\n\n  /**\n   * Required when stepTemplate is defined - provides ways to check\n   * if the custom template step is valid\n   */\n  stepValidationFn: (model) => boolean;\n\n  /**\n   * Label for step to display in side navigation\n   */\n  text: string;\n\n  /**\n   * unique Id of step - required.\n   * This will be used during validity mapping along with url navgation\n   */\n  id: string;\n\n  /**\n   * Whether this step is the active step in the UI. Only\n   * one step may be selected in a stepper at a time\n   */\n  selected: boolean;\n\n  /**\n   * The formly field config to display for the step. Alternatively\n   * a template ref may also be used by defining the stepTemplate property\n   */\n  fieldConfig?: FormlyFieldConfig;\n\n  /**\n   * Each step gets it's own options by default if not provided to determine whether to show error or not\n   */\n  options?: FormlyFormOptions;\n\n  /**\n   * If the model for the step should be separated from global model, then users may define\n   * the model reference here. If not defined, then form values will be added to global\n   * stepper model\n   */\n  model?: any;\n\n  /**\n   * Whether this step is valid or not. Invalid steps will be indeicated through a\n   * cross icon in the side navigation\n   */\n  valid?: boolean;\n\n  /**\n   * Funcation to describe whether this step should be hidden - this method\n   * is re-evaluted any time users save or move to another step\n   */\n  hideFn?: (model: any, field?: FormlyFieldConfig) => boolean;\n\n  /**\n   * Whether this step is hidden from view\n   */\n  hide?: boolean;\n\n  /**\n   * Whether this step is a review step - Review steps are disabled until all other steps\n   * are valid\n   */\n  isReview?: boolean;\n\n  /**\n   * Users have two options for NavigationMode\n   * INTERNAL - allow the step to be clicked and navigated into\n   * LABEL - display bold text for step and treat the step as a label\n   */\n  mode: NavigationMode;\n\n  /**\n   * If users would like clicking on the step to navigate to another route, they may define\n   * the route here\n   */\n  route?: string;\n\n  /**\n   * Whether users should be allowed to navigate to this step or not\n   */\n  disabled?: boolean;\n}\n",
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepModel[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Whether users should be allowed to navigate to this step or not</p>\n",
                    "line": 93,
                    "rawdescription": "\n\nWhether users should be allowed to navigate to this step or not\n"
                },
                {
                    "name": "fieldConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFieldConfig",
                    "optional": true,
                    "description": "<p>The formly field config to display for the step. Alternatively\na template ref may also be used by defining the stepTemplate property</p>\n",
                    "line": 40,
                    "rawdescription": "\n\nThe formly field config to display for the step. Alternatively\na template ref may also be used by defining the stepTemplate property\n"
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Whether this step is hidden from view</p>\n",
                    "line": 69,
                    "rawdescription": "\n\nWhether this step is hidden from view\n"
                },
                {
                    "name": "hideFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>Funcation to describe whether this step should be hidden - this method\nis re-evaluted any time users save or move to another step</p>\n",
                    "line": 64,
                    "rawdescription": "\n\nFuncation to describe whether this step should be hidden - this method\nis re-evaluted any time users save or move to another step\n"
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>unique Id of step - required.\nThis will be used during validity mapping along with url navgation</p>\n",
                    "line": 28,
                    "rawdescription": "\n\nunique Id of step - required.\nThis will be used during validity mapping along with url navgation\n"
                },
                {
                    "name": "isReview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Whether this step is a review step - Review steps are disabled until all other steps\nare valid</p>\n",
                    "line": 75,
                    "rawdescription": "\n\nWhether this step is a review step - Review steps are disabled until all other steps\nare valid\n"
                },
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavigationMode",
                    "optional": false,
                    "description": "<p>Users have two options for NavigationMode\nINTERNAL - allow the step to be clicked and navigated into\nLABEL - display bold text for step and treat the step as a label</p>\n",
                    "line": 82,
                    "rawdescription": "\n\nUsers have two options for NavigationMode\nINTERNAL - allow the step to be clicked and navigated into\nLABEL - display bold text for step and treat the step as a label\n"
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "<p>If the model for the step should be separated from global model, then users may define\nthe model reference here. If not defined, then form values will be added to global\nstepper model</p>\n",
                    "line": 52,
                    "rawdescription": "\n\nIf the model for the step should be separated from global model, then users may define\nthe model reference here. If not defined, then form values will be added to global\nstepper model\n"
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFormOptions",
                    "optional": true,
                    "description": "<p>Each step gets it&#39;s own options by default if not provided to determine whether to show error or not</p>\n",
                    "line": 45,
                    "rawdescription": "\n\nEach step gets it's own options by default if not provided to determine whether to show error or not\n"
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>If users would like clicking on the step to navigate to another route, they may define\nthe route here</p>\n",
                    "line": 88,
                    "rawdescription": "\n\nIf users would like clicking on the step to navigate to another route, they may define\nthe route here\n"
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>Whether this step is the active step in the UI. Only\none step may be selected in a stepper at a time</p>\n",
                    "line": 34,
                    "rawdescription": "\n\nWhether this step is the active step in the UI. Only\none step may be selected in a stepper at a time\n"
                },
                {
                    "name": "stepTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "<p>Template reference to display for the step if using custom template</p>\n",
                    "line": 11,
                    "rawdescription": "\n\nTemplate reference to display for the step if using custom template\n"
                },
                {
                    "name": "stepValidationFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "<p>Required when stepTemplate is defined - provides ways to check\nif the custom template step is valid</p>\n",
                    "line": 17,
                    "rawdescription": "\n\nRequired when stepTemplate is defined - provides ways to check\nif the custom template step is valid\n"
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>Label for step to display in side navigation</p>\n",
                    "line": 22,
                    "rawdescription": "\n\nLabel for step to display in side navigation\n"
                },
                {
                    "name": "valid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Whether this step is valid or not. Invalid steps will be indeicated through a\ncross icon in the side navigation</p>\n",
                    "line": 58,
                    "rawdescription": "\n\nWhether this step is valid or not. Invalid steps will be indeicated through a\ncross icon in the side navigation\n"
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AutocompleteSampleDataService",
            "id": "injectable-AutocompleteSampleDataService-f172d1a3881cbe8b4ca3206d9ac11c573cff0323e7606c77cd45f77de6a69241b86512d298eb63ad5e5ab77b50e8a45d2136f8450c128b282919c10ef1747231",
            "file": "libs/packages/sam-formly/src/lib/formly/services/autocomplete-sample.service.ts",
            "properties": [
                {
                    "name": "loadedData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getDataByText",
                    "args": [
                        {
                            "name": "currentItems",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "searchValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SDSHiercarchicalServiceResult>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentItems",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "searchValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { SDSAutocompleteServiceInterface, SDSHiercarchicalServiceResult } from '@gsa-sam/components';\nimport { map } from 'rxjs/operators';\n\nimport { SampleAutocompleteData } from './autocomplete-sample.data';\n\n@Injectable()\nexport class AutocompleteSampleDataService implements SDSAutocompleteServiceInterface {\n  private loadedData;\n  constructor() {\n    const data = SampleAutocompleteData;\n    for (let i = 0; i < data.length; i++) {\n      let item = data[i];\n      let results = data.filter((it) => it.parentId === item.id);\n      item['childCount'] = results.length;\n    }\n    this.loadedData = data;\n  }\n\n  getDataByText(currentItems: number, searchValue?: string): Observable<SDSHiercarchicalServiceResult> {\n    let itemIncrease = 25;\n    let data = of(this.loadedData);\n    let itemsOb: Observable<Object[]>;\n\n    if (searchValue) {\n      itemsOb = data.pipe(\n        map((items) =>\n          items.filter((itm) => itm.name.indexOf(searchValue) !== -1 || itm.subtext.indexOf(searchValue) !== -1)\n        )\n      );\n    } else {\n      itemsOb = data;\n    }\n\n    let items: object[];\n    itemsOb.subscribe((result) => {\n      items = result;\n    });\n    let totalItemCount = items.length;\n\n    let maxSectionPosition = currentItems + itemIncrease;\n    if (maxSectionPosition > totalItemCount) {\n      maxSectionPosition = totalItemCount;\n    }\n    let subItemsitems = items.slice(currentItems, maxSectionPosition);\n\n    let returnItem = {\n      items: subItemsitems,\n      totalItems: totalItemCount,\n    };\n    return of(returnItem);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "FormlyUtilsService",
            "id": "injectable-FormlyUtilsService-4b5138495a934df4e8a8a3942e66d1b676212c992a400290553c91f9f5165f3157d0e4b437035c0fbdd46b3b53641d79de1f6dddd49a1cfa2f0afa41d3055e53",
            "file": "libs/packages/sam-formly/src/lib/formly/services/formly-utils.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "_formlyConfigToReadonlyData",
                    "args": [
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "readonlyData",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "readonlyData",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "_setReadonlyMode",
                    "args": [
                        {
                            "name": "readonlyMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "readonlyMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formlyConfigToReadonlyData",
                    "args": [
                        {
                            "name": "fields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ convertAll: false }"
                        }
                    ],
                    "optional": false,
                    "returnType": "ReadonlyDataType[]",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nParses a formly field config and returns a list of items that readonly container component would accept.\nThis is used when you have field configs and the model, but would like to use components for readonly display\nrather than formly. props must be defined for the field in order to convert.\noptions:\n convertAll - By default any fields with a type not in SdsFormlyType will be ignored.\n              Turn this on to include fields with no type or type not in SdsFormlyType.\n",
                    "description": "<p>Parses a formly field config and returns a list of items that readonly container component would accept.\nThis is used when you have field configs and the model, but would like to use components for readonly display\nrather than formly. props must be defined for the field in order to convert.\noptions:\n convertAll - By default any fields with a type not in SdsFormlyType will be ignored.\n              Turn this on to include fields with no type or type not in SdsFormlyType.</p>\n",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1307,
                                "end": 1313,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "fields"
                            },
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1301,
                                "end": 1306,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The list of fields to parse</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1356,
                                "end": 1361,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "model"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1350,
                                "end": 1355,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Contains the values for given fields</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 1413,
                                "end": 1420,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "options"
                            },
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{ convertAll: false }",
                            "tagName": {
                                "pos": 1407,
                                "end": 1412,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Additional cofiguration options\noptions:\nconvertAll - By default any fields with a type not in SdsFormlyType will be ignored.\nTurn this on to include fields with no type or type not in SdsFormlyType.</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "setReadonlyMode",
                    "args": [
                        {
                            "name": "readonlyMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSet readonly mode of a formly field config list. Toggles all field config with defined\nprops property's readonlyMode to given value\n",
                    "description": "<p>Set readonly mode of a formly field config list. Toggles all field config with defined\nprops property&#39;s readonlyMode to given value</p>\n",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 618,
                                "end": 630,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "readonlyMode"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 612,
                                "end": 617,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>if true, readonly mode will be turned on, if false, readonly mode will be turned off</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 730,
                                "end": 736,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "fields"
                            },
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 724,
                                "end": 729,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The list of fields to toggle readonly mode on</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { SdsFormlyTypes, SdsReadonlyTypes } from '../models/formly-types';\nimport { ReadonlyOptions } from '../readonly/readonly-options.model';\n\nexport interface ReadonlyDataType {\n  formlyType: SdsFormlyTypes;\n  label: string;\n  value: any;\n  readonlyOptions: ReadonlyOptions;\n  formlyKey: string;\n}\n@Injectable()\nexport class FormlyUtilsService {\n  /**\n   * Set readonly mode of a formly field config list. Toggles all field config with defined\n   * props property's readonlyMode to given value\n   * @param readonlyMode - if true, readonly mode will be turned on, if false, readonly mode will be turned off\n   * @param fields - The list of fields to toggle readonly mode on\n   */\n  public static setReadonlyMode(readonlyMode: boolean, fields: FormlyFieldConfig[]) {\n    fields.forEach((field) => {\n      this._setReadonlyMode(readonlyMode, field);\n    });\n  }\n\n  /**\n   * Parses a formly field config and returns a list of items that readonly container component would accept.\n   * This is used when you have field configs and the model, but would like to use components for readonly display\n   * rather than formly. props must be defined for the field in order to convert.\n   * @param fields - The list of fields to parse\n   * @param model - Contains the values for given fields\n   * @param options - Additional cofiguration options\n   * options:\n   *  convertAll - By default any fields with a type not in SdsFormlyType will be ignored.\n   *               Turn this on to include fields with no type or type not in SdsFormlyType.\n   */\n  public static formlyConfigToReadonlyData(\n    fields: FormlyFieldConfig[],\n    model: any,\n    options = { convertAll: false }\n  ): ReadonlyDataType[] {\n    const readonlyData = [];\n    fields.forEach((field) => {\n      this, this._formlyConfigToReadonlyData(field, model, readonlyData, options);\n    });\n\n    return readonlyData;\n  }\n\n  private static _setReadonlyMode(readonlyMode: boolean, field: FormlyFieldConfig) {\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((innerField) => {\n        this._setReadonlyMode(readonlyMode, innerField);\n      });\n    }\n\n    if (field.props && field.type && Object.values(SdsFormlyTypes).includes(field.type as any)) {\n      field.props.readonlyMode = readonlyMode;\n    }\n  }\n\n  private static _formlyConfigToReadonlyData(\n    field: FormlyFieldConfig,\n    model: any,\n    readonlyData: any[],\n    options: { convertAll: boolean }\n  ) {\n    if (field.props && (options.convertAll || Object.values(SdsReadonlyTypes).includes(field.type as any))) {\n      const label = field.props.label;\n      const value = model[field.key as string];\n      const readonlyOptions: ReadonlyOptions = {\n        providedOptions: field.props.options as any,\n        autocompleteOptions: field.props.configuration,\n      };\n\n      readonlyData.push({\n        formlyType: field.type,\n        label,\n        value,\n        readonlyOptions,\n        formlyKey: field.key,\n      });\n\n      if (field.type === SdsFormlyTypes.DATERANGEPICKER || field.type === SdsFormlyTypes.DATERANGEPICKERV2) {\n        readonlyOptions.daterangepickerOptions = {\n          fromDateKey: field.fieldGroup[0].key as string,\n          toDateKey: field.fieldGroup[1].key as string,\n        };\n        return;\n      }\n    }\n\n    if (field.fieldGroup) {\n      const innerModel = field.key ? model[field.key as string] : model;\n      field.fieldGroup.forEach((innerField) => {\n        this._formlyConfigToReadonlyData(innerField, innerModel, readonlyData, options);\n      });\n    }\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "SdsAdvancedFiltersService",
            "id": "injectable-SdsAdvancedFiltersService-6d948bcc87c0d7b808bfdebbb16c1b0899e2d37b2df1f7ab59a2eee26b9140040bc9a57ce7f3ac88002855ad5c02cfe40f7aa916ba4359e1b2cf0350927c6044",
            "file": "libs/packages/sam-formly/src/lib/formly-filters/advanced-filters/sds-advanced-filters.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "convertToCheckboxes",
                    "args": [
                        {
                            "name": "origFields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hideChildrenGroups",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "FormlyFieldConfig[]",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "origFields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hideChildrenGroups",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createMulticheckbox",
                    "args": [
                        {
                            "name": "origField",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "defaultValue",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormlyFieldConfig",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "origField",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "defaultValue",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFieldGroup",
                    "args": [
                        {
                            "name": "parentField",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selectedFields",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "parentField",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedFields",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFields",
                    "args": [
                        {
                            "name": "selectedFields",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ fields: {}; model: any; }",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedFields",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateSingleField",
                    "args": [
                        {
                            "name": "field",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fieldSelected",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fieldSelected",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SdsAdvancedFiltersService {\n  constructor() {}\n\n  convertToCheckboxes(origFields: FormlyFieldConfig[], hideChildrenGroups = false): FormlyFieldConfig[] {\n    const fields: FormlyFieldConfig[] = [];\n    const defaultValue = [];\n    origFields.forEach((origField) => {\n      if (origField.fieldGroup?.length && !hideChildrenGroups) {\n        const field = this.createMulticheckbox(origField, defaultValue);\n        fields.push(field);\n        // this.convertToCheckboxes(origField.fieldGroup, hideChildrenGroups);\n      } else {\n        if (origField.key) {\n          const field: FormlyFieldConfig = {\n            type: 'checkbox',\n            key: origField.key,\n            defaultValue: !origField.hide,\n            props: {\n              hideOptional: true,\n            },\n          };\n\n          if (origField.props && origField.props.label) {\n            field.props.label = origField.props.label;\n          }\n          fields.push(field);\n        }\n      }\n    });\n    return fields;\n  }\n\n  // TODO: Should be changed so option has label field instead of key but multicheckbox field type must be updated so default value still works\n  createMulticheckbox(origField: FormlyFieldConfig, defaultValue: any[]): FormlyFieldConfig {\n    const options = [];\n    if (origField.fieldGroup?.length) {\n      origField.fieldGroup.forEach((field) => {\n        if (field.fieldGroup?.length) {\n          options.push(this.createMulticheckbox(field, defaultValue));\n        } else {\n          const label = field.props && field.props.label ? field.props.label : null;\n          const option = {\n            key: field.key,\n            value: label,\n            tagText: field.props.tagText,\n            tagClass: field.props.tagClass,\n          };\n          options.push(option);\n          if (!origField.hide && !field.hide) {\n            defaultValue.push(field.key);\n            defaultValue.push(origField.key);\n          }\n        }\n      });\n    }\n\n    const field: FormlyFieldConfig = {\n      key: origField.key,\n      type: 'multicheckbox',\n      props: {\n        hideOptional: true,\n        selectAllOption: true,\n        type: 'array',\n        options: options,\n      },\n    };\n\n    if (origField.props && origField.props.label) {\n      field.props.label = origField.props.label;\n    }\n\n    if (!origField.hide) {\n      field.defaultValue = defaultValue;\n    }\n    return field;\n  }\n\n  updateFields(selectedFields: any, fields: FormlyFieldConfig[], model: any) {\n    fields.forEach((field) => {\n      const key = field.key as string;\n      const selectedField = selectedFields['filterToggle']['filters'][key];\n      if (field.fieldGroup && field.fieldGroup.length > 1) {\n        const fieldModel = model[key];\n        this.updateFieldGroup(field, selectedField, fieldModel);\n      } else {\n        this.updateSingleField(field, selectedField, model);\n      }\n    });\n    return {\n      fields: fields,\n      model: model,\n    };\n  }\n\n  updateFieldGroup(parentField: FormlyFieldConfig, selectedFields: any, model: object) {\n    if (selectedFields && (selectedFields.length || typeof selectedFields === 'boolean')) {\n      parentField.hide = false;\n      if (selectedFields === true || selectedFields.length) {\n        parentField.fieldGroup.forEach((field) => {\n          const key = field.key;\n          const fieldSelected = selectedFields.length ? selectedFields.includes(key) : field;\n          this.updateSingleField(field, fieldSelected, model);\n          if (field.fieldGroup && field.fieldGroup.length > 1) {\n            this.updateFieldGroup(field, selectedFields, model);\n          }\n        });\n      }\n    } else {\n      parentField.hide = true;\n      parentField.fieldGroup.forEach((field) => {\n        this.updateSingleField(field, false, model);\n      });\n    }\n  }\n\n  updateSingleField(field: any, fieldSelected: boolean, model: any) {\n    if (fieldSelected) {\n      field.hide = false;\n    } else {\n      field.hide = true;\n      field.props['required'] = false;\n      if (field.formControl) {\n        field.formControl.reset();\n      } else {\n        model[field.key] = null;\n      }\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "SDSFormlyUpdateComunicationService",
            "id": "injectable-SDSFormlyUpdateComunicationService-88970f7bdb02d7bd61d8bed0d75dd71528a74a9300333e7c680fc6cef81db5d226a44db111b5c6bc122b48ff382305d3891712a0e62f77a03ea2c59ca1947433",
            "file": "libs/packages/sam-formly/src/lib/formly-filters/service/sds-filters-comunication.service.ts",
            "properties": [
                {
                    "name": "filterUpdate",
                    "defaultValue": "this.updateFilterSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Observable to subscribe to for get updates of the filter</p>\n",
                    "line": 11,
                    "rawdescription": "\n\nObservable to subscribe to for get updates of the filter\n"
                },
                {
                    "name": "updateFilterSource",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "updateFilter",
                    "args": [
                        {
                            "name": "filterData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate the filter\n",
                    "description": "<p>Update the filter</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 366,
                                "end": 376,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "filterData"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 360,
                                "end": 365,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SDSFormlyUpdateComunicationService {\n  private updateFilterSource = new Subject<any>();\n\n  /**\n   * Observable to subscribe to for get updates of the filter\n   */\n  filterUpdate = this.updateFilterSource.asObservable();\n\n  /**\n   * Update the filter\n   * @param filterData\n   */\n  updateFilter(filterData: any) {\n    this.updateFilterSource.next(filterData);\n  }\n}\n",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "SDSFormlyUpdateModelService",
            "id": "class-SDSFormlyUpdateModelService-ad8765e4a1bb3fbec3062630cc99e54e62e1ed76260ba2fe7841322a2e5b87e2bcb7d5f3281df2a297aab18c962baf2b1a73e0b809341343b2a1bebf9788b738",
            "file": "libs/packages/sam-formly/src/lib/formly-filters/service/sds-filter-model-update.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { BehaviorSubject, Subject } from 'rxjs';\nexport class SDSFormlyUpdateModelService {\n  /**\n   * Filter update subject - This is a BehaviorSubject in case layout\n   * component initializes and fires a filter model event before\n   * sds-filters subscribes.\n   */\n  private updateFilterModel = new BehaviorSubject<any>(null);\n\n  /**\n   * Observable to subscribe to for get updates of the filter\n   */\n  filterModel = this.updateFilterModel.asObservable();\n\n  /**\n   * Update the filter\n   * @param filterData\n   */\n  updateModel(filterData: any) {\n    this.updateFilterModel.next(filterData);\n  }\n}\n",
            "properties": [
                {
                    "name": "filterModel",
                    "defaultValue": "this.updateFilterModel.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Observable to subscribe to for get updates of the filter</p>\n",
                    "line": 13,
                    "rawdescription": "\n\nObservable to subscribe to for get updates of the filter\n"
                },
                {
                    "name": "updateFilterModel",
                    "defaultValue": "new BehaviorSubject<any>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Filter update subject - This is a BehaviorSubject in case layout\ncomponent initializes and fires a filter model event before\nsds-filters subscribes.</p>\n",
                    "line": 8,
                    "rawdescription": "\n\nFilter update subject - This is a BehaviorSubject in case layout\ncomponent initializes and fires a filter model event before\nsds-filters subscribes.\n",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "updateModel",
                    "args": [
                        {
                            "name": "filterData",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdate the filter\n",
                    "description": "<p>Update the filter</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 502,
                                "end": 512,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "filterData"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 496,
                                "end": 501,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AbstractSdsFormly",
            "id": "directive-AbstractSdsFormly-6ded9da52f547ccf59e3e2dc170df704552cc94001a0592177be70de27cd11eb6894dccb038eca3b246b6c46df17878491b07169bcc4d38ef60ed68be37acfbc",
            "file": "libs/packages/sam-formly/src/lib/formly/sds-formly.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ChangeDetectorRef, Directive, OnInit } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Directive()\nexport abstract class AbstractSdsFormly extends FieldType implements OnInit {\n  public cdr: ChangeDetectorRef;\n  public template: any;\n\n  public ngOnInit() {\n    this.setProperties(this.template, (<any>this).field.props);\n  }\n\n  public setProperties(component: any, configuration: any) {\n    Object.keys(configuration).map(function (key) {\n      component[key] = configuration[key];\n    });\n\n    if ((<any>this).template.control) {\n      (<any>this).template.control = (<any>this).formControl;\n    }\n  }\n}\n",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "extends": "FieldType",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ReadonlyLabelDirective",
            "id": "directive-ReadonlyLabelDirective-884aa51d58542613e1a2fc9225d24613e062831e9ffa33a18aa7bec95f31aeba34eb558cd7a52e51dc6efa29e0da8e7589e11b396ded0ce9c1860d2d357c9a24",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-container.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterContentInit, Component, ContentChild, Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { SdsFormlyTypes } from '../models/formly-types';\nimport { ReadonlyOptions } from './readonly-options.model';\n\n@Directive({\n  selector: '[sdsReadonlyLabel]',\n})\nexport class ReadonlyLabelDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({\n  selector: '[sdsReadonlyValue]',\n})\nexport class ReadonlyValueDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * Wrapper level component for displaying readonly format for each formly types\n */\n@Component({\n  selector: `sds-readonly-container`,\n  templateUrl: './readonly-container.component.html',\n})\nexport class ReadonlyContainerComponent implements OnInit {\n  @ContentChild(ReadonlyLabelDirective) labelTemplate: ReadonlyLabelDirective;\n  @ContentChild(ReadonlyValueDirective) valueTemplate: ReadonlyValueDirective;\n\n  /**\n   * Formlyfieldconfig that is used to generate the formlyform. If this value\n   * is provided, the necessary information will be extracted from the given\n   * field configuration, and all other inputs will be ignored.\n   */\n  @Input() formlyFieldConfig: FormlyFieldConfig;\n\n  /**\n   * Type of formly to display value for - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() formlyType: string;\n\n  /**\n   * Label for the given value - will be ignored if formlyFieldConfig input is defined\n   * */\n  @Input() label: string;\n\n  /**\n   * Value of corresponding label - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() value: any;\n\n  /**\n   * Additional information useful for displaying the value - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() additionalConfig: ReadonlyOptions = {};\n\n  sdsFormlyTypes = SdsFormlyTypes;\n\n  ngOnInit() {\n    if (this.formlyFieldConfig) {\n      this.label = this.formlyFieldConfig.props.label;\n      this.value = this.formlyFieldConfig.formControl.value;\n      this.formlyType = this.formlyFieldConfig.type;\n      this.assignAdditionalConfig();\n    }\n  }\n\n  private assignAdditionalConfig() {\n    const options = this.formlyFieldConfig.props.options as any;\n    this.additionalConfig = {\n      providedOptions: options,\n    };\n\n    if (this.formlyFieldConfig.type === this.sdsFormlyTypes.AUTOCOMPLETE) {\n      this.additionalConfig.autocompleteOptions = this.formlyFieldConfig.props.configuration;\n    }\n\n    // We do array access from field config for daterangepicker, which can be undefined for other types,\n    // hence this is sectioned off in a conditional\n    if (this.formlyFieldConfig.type === this.sdsFormlyTypes.DATERANGEPICKER) {\n      this.additionalConfig.daterangepickerOptions = {\n        fromDateKey: this.formlyFieldConfig.fieldGroup[0].key as any,\n        toDateKey: this.formlyFieldConfig.fieldGroup[1].key as any,\n      };\n    }\n  }\n}\n",
            "selector": "[sdsReadonlyLabel]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "ReadonlyValueDirective",
            "id": "directive-ReadonlyValueDirective-884aa51d58542613e1a2fc9225d24613e062831e9ffa33a18aa7bec95f31aeba34eb558cd7a52e51dc6efa29e0da8e7589e11b396ded0ce9c1860d2d357c9a24",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-container.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterContentInit, Component, ContentChild, Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { SdsFormlyTypes } from '../models/formly-types';\nimport { ReadonlyOptions } from './readonly-options.model';\n\n@Directive({\n  selector: '[sdsReadonlyLabel]',\n})\nexport class ReadonlyLabelDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({\n  selector: '[sdsReadonlyValue]',\n})\nexport class ReadonlyValueDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * Wrapper level component for displaying readonly format for each formly types\n */\n@Component({\n  selector: `sds-readonly-container`,\n  templateUrl: './readonly-container.component.html',\n})\nexport class ReadonlyContainerComponent implements OnInit {\n  @ContentChild(ReadonlyLabelDirective) labelTemplate: ReadonlyLabelDirective;\n  @ContentChild(ReadonlyValueDirective) valueTemplate: ReadonlyValueDirective;\n\n  /**\n   * Formlyfieldconfig that is used to generate the formlyform. If this value\n   * is provided, the necessary information will be extracted from the given\n   * field configuration, and all other inputs will be ignored.\n   */\n  @Input() formlyFieldConfig: FormlyFieldConfig;\n\n  /**\n   * Type of formly to display value for - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() formlyType: string;\n\n  /**\n   * Label for the given value - will be ignored if formlyFieldConfig input is defined\n   * */\n  @Input() label: string;\n\n  /**\n   * Value of corresponding label - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() value: any;\n\n  /**\n   * Additional information useful for displaying the value - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() additionalConfig: ReadonlyOptions = {};\n\n  sdsFormlyTypes = SdsFormlyTypes;\n\n  ngOnInit() {\n    if (this.formlyFieldConfig) {\n      this.label = this.formlyFieldConfig.props.label;\n      this.value = this.formlyFieldConfig.formControl.value;\n      this.formlyType = this.formlyFieldConfig.type;\n      this.assignAdditionalConfig();\n    }\n  }\n\n  private assignAdditionalConfig() {\n    const options = this.formlyFieldConfig.props.options as any;\n    this.additionalConfig = {\n      providedOptions: options,\n    };\n\n    if (this.formlyFieldConfig.type === this.sdsFormlyTypes.AUTOCOMPLETE) {\n      this.additionalConfig.autocompleteOptions = this.formlyFieldConfig.props.configuration;\n    }\n\n    // We do array access from field config for daterangepicker, which can be undefined for other types,\n    // hence this is sectioned off in a conditional\n    if (this.formlyFieldConfig.type === this.sdsFormlyTypes.DATERANGEPICKER) {\n      this.additionalConfig.daterangepickerOptions = {\n        fromDateKey: this.formlyFieldConfig.fieldGroup[0].key as any,\n        toDateKey: this.formlyFieldConfig.fieldGroup[1].key as any,\n      };\n    }\n  }\n}\n",
            "selector": "[sdsReadonlyValue]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "templateRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SdsStepper",
            "id": "directive-SdsStepper-189facd87932cb07c937e1d43472c5c1754a4941c0be44eb23599c0f8fa7b1de35c4b91c80b07d77189d7c8d5c647c419d8624f3ba217ede24232fa803aa49f7",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport * as _ from 'lodash-es';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: `[sdsStepHeader]`,\n  template: `<ng-content></ng-content>`,\n})\nexport class SdsStepHeaderComponent {}\n\n@Component({\n  selector: `[sdsStepFooter]`,\n  template: '<ng-content></ng-content>',\n})\nexport class SdsStepFooterComponent {}\n\nlet nextId = 0;\n\n@Component({\n  selector: `sds-step`,\n  exportAs: `sdsStep`,\n  templateUrl: `./sds-step.component.html`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SdsStepComponent {\n  /**\n   * References to Any children this step might contain\n   */\n  @ContentChildren(SdsStepComponent) children: QueryList<SdsStepComponent>;\n\n  /**\n   * Content of step - either a formly field or custome template\n   */\n  @ViewChild('mainContent', { static: true }) content: TemplateRef<any>;\n\n  /**\n   * Custom template reference for this step. If both custom template and field\n   * config are provided, then only the custom template will be displayed\n   */\n  @Input() stepTemplate: TemplateRef<any>;\n\n  /**\n   * Required when stepTemplate is defined - provides ways to check\n   * if the custom template step is valid\n   */\n  @Input() stepValidationFn: (model: any, field?: FormlyFieldConfig) => boolean | Observable<boolean> | void;\n\n  /**\n   * Human readable label text for this step\n   */\n  @Input() text: string;\n\n  /**\n   * Id for step - auto generated if none is provided\n   */\n  @Input() id: string = `sds-step-${nextId++}`;\n\n  /**\n   * Whether the step is selected or not\n   */\n  @Input() selected = false;\n\n  /**\n   * Formly fields to display for this step\n   */\n  @Input() fieldConfig?: FormlyFieldConfig;\n\n  /**\n   * Each step gets it's own options by default if not provided to determine whether to show error or not\n   */\n  @Input() options?: FormlyFormOptions;\n\n  /**\n   * Reference to data model to store any user input if the input. If not defined,\n   * then user input data will be stored in a stepper level global model\n   */\n  @Input() model?: any;\n\n  /**\n   * Defines whether the step has validation issues or not\n   */\n  @Input() valid?: boolean | void;\n\n  /**\n   * Function for whether or not the step is hidden from users or not\n   */\n  @Input() hideFn?: (model: any, field?: FormlyFieldConfig) => boolean;\n\n  @Input() hide?: boolean;\n\n  /**\n   * Defines whether current step is review step. Review steps are generally the last\n   * step and contain culmination of user input throughout the steps in a readable format\n   */\n  @Input() isReview?: boolean;\n\n  /**\n   * Defines whether the step is an editable form or simply a label\n   * @default true\n   */\n  @Input() editable = true;\n\n  /**\n   * Route to navigate to when the step is clicked. If none provided, then\n   * navigation will only modify query parameter to clicked step's ID when clicked\n   */\n  @Input() route?: string;\n\n  /**\n   * Whether users should be allowed to navigate to this step or not\n   */\n  @Input() disabled?: boolean;\n\n  /**\n   * Emitted anytime user input changes in the step - only applicable if\n   * step is a formly field config\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: ElementRef,\n    @Inject(DOCUMENT) private _document\n  ) {}\n\n  /**\n   * Dispatch a custom event for parent stepper component to listen for on model change\n   * as well as an output binded event emitter for application level components to listen\n   * for if they wanted to listen at individual step level\n   * @param $event - the updated model\n   */\n  onModelChange($event) {\n    let event: CustomEvent;\n    if (typeof Event === 'function') {\n      event = new CustomEvent('stepModelChange', { bubbles: true, detail: $event });\n    } else {\n      // IE11 support\n      event = this._document.createEvent('CustomEvent');\n      event.initCustomEvent('sort', true, true, $event);\n    }\n\n    this._el.nativeElement.dispatchEvent(event);\n\n    this.modelChange.emit($event);\n  }\n}\n\n@Directive({\n  selector: `[sdsStepper]`,\n  exportAs: 'sdsStepper',\n})\nexport class SdsStepper {\n  @ContentChildren(SdsStepComponent) stepTemplates: QueryList<SdsStepComponent>;\n\n  /**\n   * Singular global model to store user input for all steps. Alternatively,\n   * users may pass in a model specifically to each sds-step and manage the data\n   * modal separately\n   */\n  @Input() model: any = {};\n\n  /**\n   * Id of the step currently shown to users\n   */\n  @Input() currentStepId: string;\n\n  /**\n   * Mapping of step validity. This maps each step's id to a boolean value indicating\n   * whether the step is valid or invalid. This maps defines valid/invalid icons\n   * displayed in side nav\n   */\n  @Input() stepValidityMap: { [key: string]: boolean | undefined } = {};\n\n  /**\n   * Toggle custom error handling from user side. By default, errors are displayed\n   * only on save click or when loading a pre-saved form with defined validity.\n   * @default false\n   */\n  @Input() customErrorHandling = false;\n\n  /** Whether the validity of previous steps should prevent navigating to next steps.\n   * @default false\n   */\n  @Input() linear = false;\n\n  /**\n   * Unique identifier for the stepper. If none provided a default id will be used\n   */\n  @Input() id = `sds-stepper-${nextId++}`;\n\n  /**\n   * Configurable query parameter to use when keeping track of which\n   * step the user is on from the URL. Useful when we'd want multiple\n   * steppers in one page but don't want the query params to conflict\n   * @default - sdsStepId\n   */\n  @Input() queryParamKey = 'sdsStepId';\n\n  /**\n   * This is used to disable/enable the routing for the stepper\n   * @default - true\n   */\n  @Input() isRouteEnabled = true;\n\n  @Input() validateStepsOnInit = true;\n\n  /**\n   * Output event - emitted when save button is clicked\n   */\n  @Output() saveData = new EventEmitter<{ model: any; metadata: any }>();\n\n  /**\n   * Output event - emitted when a step is changed, either through the\n   *  navigation buttons at the bottom of the step or by clicking on a\n   *  step in side panel\n   */\n  @Output() stepChange = new EventEmitter<SdsStepComponent>();\n\n  /**\n   * Output event - emitted if the current step is a formly config.\n   *  Outputs whenever a model change occurs from the formly field\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  /**\n   * Reference to step currently selected and displayed to the user\n   */\n  selectedStep: SdsStepComponent;\n\n  /**\n   * Index of currently selected step in the flatSteps array\n   */\n  selectedStepIndex: number;\n\n  /**\n   * A flattened list of steps - steps with children are placed after their parent\n   * in the list\n   */\n  flatSteps: SdsStepComponent[] = [];\n\n  /**\n   * Switch that toggles on if and only if all steps in the flattned list of steps\n   * are seen as valid in the validity map\n   */\n  _isReviewAndSubmitDisabled = true;\n\n  /**\n   * Event emitted by sds-step component whenever a model change\n   * occurs. Emits the modelChange event. This can be useful if\n   * users want to attach a listener for any model change in overall\n   * steps rather than listening for model change in each individual step\n   * @param $event\n   */\n  @HostListener('stepModelChange', ['$event'])\n  onModelChange($event: CustomEvent) {\n    $event.stopImmediatePropagation();\n    this.modelChange.emit($event.detail);\n  }\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, public cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.selectedStep) {\n      return;\n    }\n\n    if (changes.currentStepId && this.selectedStep.id != changes.currentStepId.currentValue) {\n      this.changeStep(changes.currentStepId.currentValue);\n    }\n\n    if (changes.stepValidityMap && changes.stepValidityMap.currentValue) {\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n\n    /**\n     * Handling toggling between linear and non-linear modes.\n     * On switch to linear, disable incomplete forms.\n     * On switch to non-linear, enable all steps except review step\n     */\n    if (changes.linear) {\n      if (changes.linear.currentValue) {\n        const lastValidStepIndex = this.evaluateIncompleteForms();\n        this.changeStep(this.flatSteps[lastValidStepIndex].id);\n      } else {\n        this.flatSteps.forEach((step) => {\n          if (!step.isReview) {\n            step.disabled = false;\n          } else if (!this._isReviewAndSubmitDisabled) {\n            step.disabled = false;\n          }\n        });\n      }\n\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n  }\n  ngAfterViewInit() {\n    if (this.validateStepsOnInit) {\n      const currentStep = this.selectedStep;\n      if (!this.linear) {\n        const isRouteEnabled = this.isRouteEnabled;\n        this.flatSteps = this.getFlatSteps(this.stepTemplates);\n        this.isRouteEnabled = false;\n\n        this.flatSteps.forEach((step) => {\n          setTimeout(() => {\n            this.changeStep(step.id);\n          }, 0);\n        });\n\n        setTimeout(() => {\n          this.changeStep(currentStep.id);\n          this.isRouteEnabled = isRouteEnabled;\n        }, 0);\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.flatSteps.forEach((step) => {\n      step.model = step.model ? step.model : this.model;\n    });\n\n    if (this.activatedRoute.snapshot.queryParams[this.queryParamKey] && !this.linear && this.isRouteEnabled) {\n      this.currentStepId = this.activatedRoute.snapshot.queryParams[this.queryParamKey];\n    } else if (!this.currentStepId) {\n      this.currentStepId = this.flatSteps[0].id;\n      this.selectedStepIndex = 0;\n      this.selectedStep = this.flatSteps[this.selectedStepIndex];\n    }\n\n    if (this.stepValidityMap) {\n      this.updateValidity(this.stepValidityMap, this.stepTemplates);\n      this.checkReviewAndSubmit();\n    } else {\n      this.stepValidityMap = {};\n    }\n\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    this.changeStep(this.currentStepId).finally(() => {\n      if (this.isRouteEnabled) {\n        this.activatedRoute.queryParams.subscribe((queryParam) => {\n          if (queryParam[this.queryParamKey] && queryParam[this.queryParamKey] != this.currentStepId) {\n            this.changeStep(queryParam[this.queryParamKey]);\n          }\n        });\n      }\n    });\n  }\n\n  getFlatSteps(stepTemplates: QueryList<SdsStepComponent>): SdsStepComponent[] {\n    let flat: SdsStepComponent[] = [];\n    stepTemplates.forEach((step) => {\n      if (step.hideFn && step.hideFn(step.model ? step.model : this.model, step.fieldConfig)) {\n        step.hide = true;\n        return;\n      }\n      step.hide = false;\n      if (step.editable) {\n        flat.push(step);\n      }\n\n      if (step.children && step.children.length) {\n        const childSteps = this.getFlatSteps(step.children);\n        flat = flat.concat(childSteps);\n      }\n    });\n\n    return flat;\n  }\n\n  /**\n   * Change currently selected step\n   * @param stepId - The id of step to change to\n   * @param incrementor - Optional input - Either a 1 or -1. When a value of 1\n   *  is provided, then the step to change to will be the next step from the input step\n   *  given. When a value of -1 is provided, then the selected step will be the step\n   *  previous to the provided step\n   */\n  async changeStep(stepId: string, incrementor?: number) {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    let stepIndex = this.flatSteps.findIndex((step) => step.id === stepId);\n    stepIndex = stepIndex === -1 ? 0 : stepIndex;\n\n    if (incrementor) {\n      stepIndex = stepIndex + incrementor;\n      if (stepIndex > this.flatSteps.length) {\n        throw Error(\n          `StepIndex of ${stepIndex} is greater than the number of steps. Check that you are passing in a sensible incrementor.)`\n        );\n      }\n    }\n\n    const step = this.flatSteps[stepIndex];\n\n    /** Already on desired step, nothing to do */\n    if (step === this.selectedStep) {\n      return;\n    }\n    /**\n     * On non-linear mode, do not allow step change if step we are moving to is disabled or is review step.\n     * In linear mode, we will run validations first, then decide whether or not to move to next step\n     */\n    if (!this.linear && (step.disabled || (step.isReview && this._isReviewAndSubmitDisabled))) {\n      return;\n    }\n\n    // Update current step's validity before moving to next step\n    if (this.selectedStep) {\n      await this.updateValidation(this.selectedStep);\n      this.checkReviewAndSubmit();\n      if (this.linear) {\n        this.evaluateIncompleteForms();\n      }\n      this.selectedStep.selected = false;\n    }\n\n    /**\n     * In linear mode and moving to next step.\n     * Disable changing step if current step is invalid or has empty data, and display errors\n     * */\n    if (this.linear && stepIndex > this.selectedStepIndex && !this.stepValidityMap[this.selectedStep.id]) {\n      this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n      return;\n    }\n\n    this.selectedStepIndex = stepIndex;\n    this.selectedStep = this.flatSteps[stepIndex];\n\n    this.selectedStep.selected = true;\n    this.currentStepId = this.selectedStep.id;\n\n    this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n\n    if (this.selectedStep.editable && this.isRouteEnabled) {\n      this.router.navigate(this.selectedStep.route ? [this.selectedStep.route] : [], {\n        queryParams: {\n          [this.queryParamKey]: this.currentStepId,\n        },\n        queryParamsHandling: 'merge',\n      });\n    }\n\n    this.stepChange.emit(this.selectedStep);\n  }\n\n  /**\n   * Enables validation error display for a given step\n   * @param step\n   */\n  private toggleOnValidationForStep(\n    step: SdsStepComponent,\n    validityMap: { [key: string]: boolean | undefined },\n    customErrorHandling?: boolean\n  ) {\n    if (!step.options && !customErrorHandling) {\n      this.selectedStep.options = {};\n    }\n\n    if (!step.options.showError && !customErrorHandling) {\n      this.selectedStep.options.showError = () => false;\n    }\n\n    if (validityMap[step.id] === false) {\n      step.options.showError = (field) => field.formControl.invalid;\n    }\n  }\n\n  onNextStep() {\n    this.changeStep(this.selectedStep.id, 1);\n  }\n\n  onPreviousStep() {\n    this.changeStep(this.selectedStep.id, -1);\n  }\n\n  /**\n   * Called through sdsStepperSave button - updates validity of the current step\n   * and toggles error display. Emits saveData event.\n   */\n  async onSaveClicked() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.selectedStepIndex = this.flatSteps.findIndex((step) => step.id === this.selectedStep.id);\n\n    await this.updateValidation(this.selectedStep);\n    this.checkReviewAndSubmit();\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    if (!this.customErrorHandling && this.stepValidityMap[this.currentStepId] === false) {\n      this.selectedStep.options.showError = (field) => !field.formControl.valid;\n    }\n\n    this.saveData.emit({\n      model: this.model,\n      metadata: {\n        stepId: this.selectedStep.id,\n        stepValidityMap: this.stepValidityMap,\n      },\n    });\n  }\n\n  /**\n   * Gets all steps that are not hidden\n   * @param steps\n   */\n  getDisplayedSteps(steps: QueryList<SdsStepComponent>) {\n    if (!steps) {\n      return [];\n    }\n    return steps.filter((step) => !step.hide);\n  }\n\n  /**\n   * Used while in linear mode. All steps that are in the step validity and are valid\n   * map should be enabled until we find the first step that is invalid.\n   * Then all steps from that point on should be disabled\n   *\n   * @returns the index of the last valid step\n   */\n  private evaluateIncompleteForms() {\n    let startIndex = 0;\n    this.flatSteps.some((step, index) => {\n      step.disabled = false;\n\n      if (!this.stepValidityMap[step.id]) {\n        startIndex = index;\n        return true;\n      }\n    });\n\n    for (let i = startIndex + 1; i < this.flatSteps.length; i++) {\n      this.flatSteps[i].disabled = true;\n    }\n\n    return startIndex;\n  }\n\n  private checkReviewAndSubmit() {\n    this._isReviewAndSubmitDisabled = this.flatSteps.some((step) => {\n      if (step.isReview) {\n        return false;\n      }\n\n      if (!this.stepValidityMap[step.id]) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  private updateValidity(validityMap: any, stepTemplates: QueryList<SdsStepComponent>) {\n    stepTemplates.forEach((step) => {\n      if (!step) {\n        return;\n      }\n\n      step.valid = validityMap[step.id];\n      if (step.children) {\n        this.updateValidity(validityMap, step.children);\n      }\n    });\n  }\n\n  /**\n   * Updates validity of a given step. If a synchronous stepValidationFn is provided\n   * for the step, then that method is given priority over the step's formly form.\n   * If a forceValidationValue is given, then the step's validation value will be set\n   * to the value provided\n   * @param currentStep - step to update validation for\n   * @param forceValidationValue - true or false -\n   *  if true, step's validity will be force set to true\n   *  if false, step's validity will be force set to false\n   * @returns\n   */\n  async updateValidation(currentStep: SdsStepComponent, forceValidationValue?: boolean) {\n    if (!currentStep) {\n      return;\n    }\n\n    if (forceValidationValue === true || forceValidationValue === false) {\n      currentStep.valid = forceValidationValue;\n      this.stepValidityMap[currentStep.id] = forceValidationValue;\n      return;\n    }\n\n    // Custom validation function was provided, use provided custom validation\n    if (currentStep.stepValidationFn) {\n      const isValid = currentStep.stepValidationFn(currentStep.model ? currentStep.model : this.model);\n      if (typeof isValid === 'boolean') {\n        currentStep.valid = isValid;\n        this.stepValidityMap[currentStep.id] = isValid;\n      } else if (typeof isValid === 'object') {\n        const res = await isValid.toPromise();\n        currentStep.valid = res;\n        this.stepValidityMap[currentStep.id] = res;\n      }\n\n      return;\n    }\n\n    const currentStepFieldConfig = currentStep.fieldConfig;\n    if (\n      !currentStepFieldConfig ||\n      this.isFormEmpty(currentStepFieldConfig.formControl, currentStepFieldConfig.defaultValue)\n    ) {\n      return;\n    }\n\n    const isValid = currentStep.fieldConfig.formControl.valid;\n    currentStep.valid = isValid;\n    this.stepValidityMap[currentStep.id] = isValid;\n  }\n\n  private isFormEmpty(form: AbstractControl, defaultValue?: any) {\n    if (!form) {\n      return true;\n    }\n\n    if (form.value === false) {\n      return false;\n    }\n\n    if (!form.value || form.value.length === 0) {\n      return true;\n    }\n\n    if (typeof form.value != 'object') {\n      return false;\n    }\n\n    const cleanModel = this.getCleanObject(form.value);\n    return Object.keys(cleanModel).length === 0 || _.isEqual(cleanModel, defaultValue);\n  }\n\n  private getCleanObject(input: any, output?: any) {\n    output = output || {};\n    for (var key in input) {\n      var value = input[key];\n      if (value) {\n        if (typeof value === 'object' && value !== null) {\n          this.getCleanObject(value, output);\n        } else {\n          // Treat true string as boolean value & ignore value of string 'false'\n          if (value === 'true') {\n            output[key] = true;\n          } else if (value != 'false') {\n            output[key] = value;\n          }\n        }\n      }\n    }\n    return output;\n  }\n}\n",
            "selector": "[sdsStepper]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "currentStepId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nId of the step currently shown to users\n",
                    "description": "<p>Id of the step currently shown to users</p>\n",
                    "line": 186,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customErrorHandling",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 5445,
                            "end": 5463,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 5446,
                                "end": 5453,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<p>false</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nToggle custom error handling from user side. By default, errors are displayed\nonly on save click or when loading a pre-saved form with defined validity.\n",
                    "description": "<p>Toggle custom error handling from user side. By default, errors are displayed\nonly on save click or when loading a pre-saved form with defined validity.</p>\n",
                    "line": 200,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "`sds-stepper-${nextId++}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUnique identifier for the stepper. If none provided a default id will be used\n",
                    "description": "<p>Unique identifier for the stepper. If none provided a default id will be used</p>\n",
                    "line": 210,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isRouteEnabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 6149,
                            "end": 6168,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 6150,
                                "end": 6157,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<ul>\n<li>true</li>\n</ul>\n"
                        }
                    ],
                    "rawdescription": "\n\nThis is used to disable/enable the routing for the stepper\n",
                    "description": "<p>This is used to disable/enable the routing for the stepper</p>\n",
                    "line": 224,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "linear",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 5598,
                            "end": 5616,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 5599,
                                "end": 5606,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<p>false</p>\n"
                        }
                    ],
                    "rawdescription": "\nWhether the validity of previous steps should prevent navigating to next steps.\n",
                    "description": "<p>Whether the validity of previous steps should prevent navigating to next steps.</p>\n",
                    "line": 205,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "model",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSingular global model to store user input for all steps. Alternatively,\nusers may pass in a model specifically to each sds-step and manage the data\nmodal separately\n",
                    "description": "<p>Singular global model to store user input for all steps. Alternatively,\nusers may pass in a model specifically to each sds-step and manage the data\nmodal separately</p>\n",
                    "line": 181,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "queryParamKey",
                    "defaultValue": "'sdsStepId'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 6006,
                            "end": 6030,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 6007,
                                "end": 6014,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<ul>\n<li>sdsStepId</li>\n</ul>\n"
                        }
                    ],
                    "rawdescription": "\n\nConfigurable query parameter to use when keeping track of which\nstep the user is on from the URL. Useful when we'd want multiple\nsteppers in one page but don't want the query params to conflict\n",
                    "description": "<p>Configurable query parameter to use when keeping track of which\nstep the user is on from the URL. Useful when we&#39;d want multiple\nsteppers in one page but don&#39;t want the query params to conflict</p>\n",
                    "line": 218,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "stepValidityMap",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nMapping of step validity. This maps each step's id to a boolean value indicating\nwhether the step is valid or invalid. This maps defines valid/invalid icons\ndisplayed in side nav\n",
                    "description": "<p>Mapping of step validity. This maps each step&#39;s id to a boolean value indicating\nwhether the step is valid or invalid. This maps defines valid/invalid icons\ndisplayed in side nav</p>\n",
                    "line": 193,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "validateStepsOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 226,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOutput event - emitted if the current step is a formly config.\n Outputs whenever a model change occurs from the formly field\n",
                    "description": "<p>Output event - emitted if the current step is a formly config.\n Outputs whenever a model change occurs from the formly field</p>\n",
                    "line": 244,
                    "type": "EventEmitter"
                },
                {
                    "name": "saveData",
                    "defaultValue": "new EventEmitter<{ model: any; metadata: any }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOutput event - emitted when save button is clicked\n",
                    "description": "<p>Output event - emitted when save button is clicked</p>\n",
                    "line": 231,
                    "type": "EventEmitter"
                },
                {
                    "name": "stepChange",
                    "defaultValue": "new EventEmitter<SdsStepComponent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOutput event - emitted when a step is changed, either through the\n navigation buttons at the bottom of the step or by clicking on a\n step in side panel\n",
                    "description": "<p>Output event - emitted when a step is changed, either through the\n navigation buttons at the bottom of the step or by clicking on a\n step in side panel</p>\n",
                    "line": 238,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "stepModelChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted by sds-step component whenever a model change\noccurs. Emits the modelChange event. This can be useful if\nusers want to attach a listener for any model change in overall\nsteps rather than listening for model change in each individual step\n",
                    "description": "<p>Event emitted by sds-step component whenever a model change\noccurs. Emits the modelChange event. This can be useful if\nusers want to attach a listener for any model change in overall\nsteps rather than listening for model change in each individual step</p>\n",
                    "jsdoctags": [
                        {
                            "pos": 7659,
                            "end": 7676,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 338,
                            "tagName": {
                                "pos": 7660,
                                "end": 7665,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "",
                            "name": {
                                "pos": 7666,
                                "end": 7672,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "$event"
                            },
                            "isNameFirst": true,
                            "isBracketed": false
                        }
                    ],
                    "line": 276
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isReviewAndSubmitDisabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Switch that toggles on if and only if all steps in the flattned list of steps\nare seen as valid in the validity map</p>\n",
                    "line": 266,
                    "rawdescription": "\n\nSwitch that toggles on if and only if all steps in the flattned list of steps\nare seen as valid in the validity map\n"
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 281,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "flatSteps",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepComponent[]",
                    "optional": false,
                    "description": "<p>A flattened list of steps - steps with children are placed after their parent\nin the list</p>\n",
                    "line": 260,
                    "rawdescription": "\n\nA flattened list of steps - steps with children are placed after their parent\nin the list\n"
                },
                {
                    "name": "selectedStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepComponent",
                    "optional": false,
                    "description": "<p>Reference to step currently selected and displayed to the user</p>\n",
                    "line": 249,
                    "rawdescription": "\n\nReference to step currently selected and displayed to the user\n"
                },
                {
                    "name": "selectedStepIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "<p>Index of currently selected step in the flatSteps array</p>\n",
                    "line": 254,
                    "rawdescription": "\n\nIndex of currently selected step in the flatSteps array\n"
                },
                {
                    "name": "stepTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<SdsStepComponent>",
                    "optional": false,
                    "description": "",
                    "line": 174,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SdsStepComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeStep",
                    "args": [
                        {
                            "name": "stepId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "incrementor",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 409,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChange currently selected step\n is provided, then the step to change to will be the next step from the input step\n given. When a value of -1 is provided, then the selected step will be the step\n previous to the provided step\n",
                    "description": "<p>Change currently selected step\n is provided, then the step to change to will be the next step from the input step\n given. When a value of -1 is provided, then the selected step will be the step\n previous to the provided step</p>\n",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11580,
                                "end": 11586,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "stepId"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11574,
                                "end": 11579,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The id of step to change to</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 11629,
                                "end": 11640,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "incrementor"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 11623,
                                "end": 11628,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>Optional input - Either a 1 or -1. When a value of 1\nis provided, then the step to change to will be the next step from the input step\ngiven. When a value of -1 is provided, then the selected step will be the step\nprevious to the provided step</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "checkReviewAndSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 569,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "evaluateIncompleteForms",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 551,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUsed while in linear mode. All steps that are in the step validity and are valid\nmap should be enabled until we find the first step that is invalid.\nThen all steps from that point on should be disabled\n\n",
                    "description": "<p>Used while in linear mode. All steps that are in the step validity and are valid\nmap should be enabled until we find the first step that is invalid.\nThen all steps from that point on should be disabled</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 16285,
                                "end": 16292,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the index of the last valid step</p>\n"
                        }
                    ]
                },
                {
                    "name": "getCleanObject",
                    "args": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "output",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 667,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "output",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDisplayedSteps",
                    "args": [
                        {
                            "name": "steps",
                            "type": "QueryList<SdsStepComponent>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 537,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets all steps that are not hidden\n",
                    "description": "<p>Gets all steps that are not hidden</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 15888,
                                "end": 15893,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "steps"
                            },
                            "type": "QueryList<SdsStepComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 15882,
                                "end": 15887,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getFlatSteps",
                    "args": [
                        {
                            "name": "stepTemplates",
                            "type": "QueryList<SdsStepComponent>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "SdsStepComponent[]",
                    "typeParameters": [],
                    "line": 380,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "stepTemplates",
                            "type": "QueryList<SdsStepComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isFormEmpty",
                    "args": [
                        {
                            "name": "form",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "defaultValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 646,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "defaultValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 344,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onModelChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 276,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEvent emitted by sds-step component whenever a model change\noccurs. Emits the modelChange event. This can be useful if\nusers want to attach a listener for any model change in overall\nsteps rather than listening for model change in each individual step\n",
                    "description": "<p>Event emitted by sds-step component whenever a model change\noccurs. Emits the modelChange event. This can be useful if\nusers want to attach a listener for any model change in overall\nsteps rather than listening for model change in each individual step</p>\n",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'stepModelChange', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 7666,
                                "end": 7672,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "$event"
                            },
                            "type": "CustomEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 7660,
                                "end": 7665,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "onNextStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 498,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPreviousStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 502,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 510,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCalled through sdsStepperSave button - updates validity of the current step\nand toggles error display. Emits saveData event.\n",
                    "description": "<p>Called through sdsStepperSave button - updates validity of the current step\nand toggles error display. Emits saveData event.</p>\n",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "toggleOnValidationForStep",
                    "args": [
                        {
                            "name": "step",
                            "type": "SdsStepComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validityMap",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "customErrorHandling",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 480,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEnables validation error display for a given step\n",
                    "description": "<p>Enables validation error display for a given step</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 14337,
                                "end": 14341,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "step"
                            },
                            "type": "SdsStepComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 14331,
                                "end": 14336,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": "validityMap",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "customErrorHandling",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateValidation",
                    "args": [
                        {
                            "name": "currentStep",
                            "type": "SdsStepComponent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "forceValidationValue",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 607,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates validity of a given step. If a synchronous stepValidationFn is provided\nfor the step, then that method is given priority over the step's formly form.\nIf a forceValidationValue is given, then the step's validation value will be set\nto the value provided\n if true, step's validity will be force set to true\n if false, step's validity will be force set to false\n",
                    "description": "<p>Updates validity of a given step. If a synchronous stepValidationFn is provided\nfor the step, then that method is given priority over the step&#39;s formly form.\nIf a forceValidationValue is given, then the step&#39;s validation value will be set\nto the value provided\n if true, step&#39;s validity will be force set to true\n if false, step&#39;s validity will be force set to false</p>\n",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 17606,
                                "end": 17617,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "currentStep"
                            },
                            "type": "SdsStepComponent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 17600,
                                "end": 17605,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>step to update validation for</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 17662,
                                "end": 17682,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "forceValidationValue"
                            },
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 17656,
                                "end": 17661,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>true or false -\nif true, step&#39;s validity will be force set to true\nif false, step&#39;s validity will be force set to false</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 17823,
                                "end": 17830,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateValidity",
                    "args": [
                        {
                            "name": "validityMap",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "stepTemplates",
                            "type": "QueryList<SdsStepComponent>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 583,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "validityMap",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "stepTemplates",
                            "type": "QueryList<SdsStepComponent>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 279,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SdsStepperNavDirective",
            "id": "directive-SdsStepperNavDirective-12f1644311461bdd2dcf85abfbb6c5f0145355a2c9f3bea90952f8987a6315a0f79384d4de3ae255477c41dea6f0f4d45a8b3fd059e5c3cc26f4a89097b55014",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-step-buttons.ts",
            "type": "directive",
            "description": "<p>Button that moves to the next step in a stepper workflow.</p>\n",
            "rawdescription": "\nButton that moves to the next step in a stepper workflow.",
            "sourceCode": "import { Directive, forwardRef, HostListener, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { UsaStepIndicatorComponent } from '@gsa-sam/ngx-uswds';\nimport { Subscription } from 'rxjs';\nimport { SdsStepComponent, SdsStepper } from './sds-stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNext]`,\n  host: {\n    '[attr.disabled]': '_disabled()',\n  },\n})\nexport class SdsStepperNextDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onNextStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const nextIndex = this._stepper.selectedStepIndex + 1;\n\n    // Handle edge case - no steps or no selected step\n    if (!flatSteps || this._stepper.selectedStepIndex == undefined) {\n      return true;\n    }\n\n    /** Handle case where current step is last step */\n    if (this._stepper.selectedStepIndex >= flatSteps.length - 1) {\n      return true;\n    }\n\n    /**\n     * For linear mode, enable the next step, on click, current step will be validated,\n     * and if valid, user will automatically progress to next step\n     */\n    if (this._stepper.linear) {\n      return;\n    }\n\n    /** Otherwise, if next step is disabled or next step is review step and review step is disabled, disable next step */\n    if (flatSteps[nextIndex].disabled || (flatSteps[nextIndex].isReview && this._stepper._isReviewAndSubmitDisabled)) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperPrevious]`,\n  host: {\n    '[attr.disabled]': '_stepper.selectedStepIndex === 0 ? true : undefined',\n  },\n})\nexport class SdsStepperPreviousDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onPreviousStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const previousStep = this._stepper.selectedStepIndex - 1;\n\n    if (!flatSteps || !this._stepper.selectedStepIndex) {\n      return true;\n    }\n\n    if (this._stepper.selectedStepIndex === 0) {\n      return true;\n    }\n\n    if (\n      flatSteps[previousStep].disabled ||\n      (flatSteps[previousStep].isReview && this._stepper._isReviewAndSubmitDisabled)\n    ) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperSave]`,\n})\nexport class SdsStepperSaveDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onSaveClicked();\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNav]`,\n  host: {\n    '[attr.disabled]': 'sdsStepperNav.disabled',\n  },\n})\nexport class SdsStepperNavDirective {\n  @Input() sdsStepperNav: SdsStepComponent;\n\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.changeStep(this.sdsStepperNav.id);\n  }\n}\n\n/**\n * Directive designed for when using ngx-uswds' step indicator component\n * with sds stepper. This directive manages internal sync of usa-step-indicator\n * and sds stepper steps such that when a step changes in one component, it is\n * accurately reflected on the other\n *\n * usage example:\n * Inside the template of a component that extends SdsStepper -\n *  <usa-step-indicator sdsStepperUSWDSNav> </usa-step-indicator>\n */\n@Directive({\n  selector: `usa-step-indicator [sdsStepperUSWDSNav]`,\n})\nexport class SdsStepperUSWDSNavDirective implements OnInit, OnDestroy {\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: UsaStepIndicatorComponent\n  ) {}\n\n  stepChangeSubscriptions: Subscription = new Subscription();\n\n  ngOnInit() {\n    const usaStepChange = this._el.currentStepChange.subscribe((stepIndex) => {\n      const step = this._el.steps[stepIndex];\n      const nextStep = this._stepper.flatSteps.find((flatStep) => flatStep.text === step.label);\n      this._stepper.changeStep(nextStep.id);\n    });\n\n    this.stepChangeSubscriptions.add(usaStepChange);\n  }\n\n  ngOnDestroy() {\n    this.stepChangeSubscriptions.unsubscribe();\n  }\n}\n",
            "selector": "[sdsStepperNav]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "sdsStepperNav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 126,
                    "type": "SdsStepComponent",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 136
                }
            ],
            "propertiesClass": [
                {
                    "name": "_stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepper",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 126,
                "jsdoctags": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SdsStepperNextDirective",
            "id": "directive-SdsStepperNextDirective-12f1644311461bdd2dcf85abfbb6c5f0145355a2c9f3bea90952f8987a6315a0f79384d4de3ae255477c41dea6f0f4d45a8b3fd059e5c3cc26f4a89097b55014",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-step-buttons.ts",
            "type": "directive",
            "description": "<p>Button that moves to the next step in a stepper workflow.</p>\n",
            "rawdescription": "\nButton that moves to the next step in a stepper workflow.",
            "sourceCode": "import { Directive, forwardRef, HostListener, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { UsaStepIndicatorComponent } from '@gsa-sam/ngx-uswds';\nimport { Subscription } from 'rxjs';\nimport { SdsStepComponent, SdsStepper } from './sds-stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNext]`,\n  host: {\n    '[attr.disabled]': '_disabled()',\n  },\n})\nexport class SdsStepperNextDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onNextStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const nextIndex = this._stepper.selectedStepIndex + 1;\n\n    // Handle edge case - no steps or no selected step\n    if (!flatSteps || this._stepper.selectedStepIndex == undefined) {\n      return true;\n    }\n\n    /** Handle case where current step is last step */\n    if (this._stepper.selectedStepIndex >= flatSteps.length - 1) {\n      return true;\n    }\n\n    /**\n     * For linear mode, enable the next step, on click, current step will be validated,\n     * and if valid, user will automatically progress to next step\n     */\n    if (this._stepper.linear) {\n      return;\n    }\n\n    /** Otherwise, if next step is disabled or next step is review step and review step is disabled, disable next step */\n    if (flatSteps[nextIndex].disabled || (flatSteps[nextIndex].isReview && this._stepper._isReviewAndSubmitDisabled)) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperPrevious]`,\n  host: {\n    '[attr.disabled]': '_stepper.selectedStepIndex === 0 ? true : undefined',\n  },\n})\nexport class SdsStepperPreviousDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onPreviousStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const previousStep = this._stepper.selectedStepIndex - 1;\n\n    if (!flatSteps || !this._stepper.selectedStepIndex) {\n      return true;\n    }\n\n    if (this._stepper.selectedStepIndex === 0) {\n      return true;\n    }\n\n    if (\n      flatSteps[previousStep].disabled ||\n      (flatSteps[previousStep].isReview && this._stepper._isReviewAndSubmitDisabled)\n    ) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperSave]`,\n})\nexport class SdsStepperSaveDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onSaveClicked();\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNav]`,\n  host: {\n    '[attr.disabled]': 'sdsStepperNav.disabled',\n  },\n})\nexport class SdsStepperNavDirective {\n  @Input() sdsStepperNav: SdsStepComponent;\n\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.changeStep(this.sdsStepperNav.id);\n  }\n}\n\n/**\n * Directive designed for when using ngx-uswds' step indicator component\n * with sds stepper. This directive manages internal sync of usa-step-indicator\n * and sds stepper steps such that when a step changes in one component, it is\n * accurately reflected on the other\n *\n * usage example:\n * Inside the template of a component that extends SdsStepper -\n *  <usa-step-indicator sdsStepperUSWDSNav> </usa-step-indicator>\n */\n@Directive({\n  selector: `usa-step-indicator [sdsStepperUSWDSNav]`,\n})\nexport class SdsStepperUSWDSNavDirective implements OnInit, OnDestroy {\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: UsaStepIndicatorComponent\n  ) {}\n\n  stepChangeSubscriptions: Subscription = new Subscription();\n\n  ngOnInit() {\n    const usaStepChange = this._el.currentStepChange.subscribe((stepIndex) => {\n      const step = this._el.steps[stepIndex];\n      const nextStep = this._stepper.flatSteps.find((flatStep) => flatStep.text === step.label);\n      this._stepper.changeStep(nextStep.id);\n    });\n\n    this.stepChangeSubscriptions.add(usaStepChange);\n  }\n\n  ngOnDestroy() {\n    this.stepChangeSubscriptions.unsubscribe();\n  }\n}\n",
            "selector": "[sdsStepperNext]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                }
            ],
            "propertiesClass": [
                {
                    "name": "_stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepper",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_disabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SdsStepperPreviousDirective",
            "id": "directive-SdsStepperPreviousDirective-12f1644311461bdd2dcf85abfbb6c5f0145355a2c9f3bea90952f8987a6315a0f79384d4de3ae255477c41dea6f0f4d45a8b3fd059e5c3cc26f4a89097b55014",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-step-buttons.ts",
            "type": "directive",
            "description": "<p>Button that moves to the next step in a stepper workflow.</p>\n",
            "rawdescription": "\nButton that moves to the next step in a stepper workflow.",
            "sourceCode": "import { Directive, forwardRef, HostListener, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { UsaStepIndicatorComponent } from '@gsa-sam/ngx-uswds';\nimport { Subscription } from 'rxjs';\nimport { SdsStepComponent, SdsStepper } from './sds-stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNext]`,\n  host: {\n    '[attr.disabled]': '_disabled()',\n  },\n})\nexport class SdsStepperNextDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onNextStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const nextIndex = this._stepper.selectedStepIndex + 1;\n\n    // Handle edge case - no steps or no selected step\n    if (!flatSteps || this._stepper.selectedStepIndex == undefined) {\n      return true;\n    }\n\n    /** Handle case where current step is last step */\n    if (this._stepper.selectedStepIndex >= flatSteps.length - 1) {\n      return true;\n    }\n\n    /**\n     * For linear mode, enable the next step, on click, current step will be validated,\n     * and if valid, user will automatically progress to next step\n     */\n    if (this._stepper.linear) {\n      return;\n    }\n\n    /** Otherwise, if next step is disabled or next step is review step and review step is disabled, disable next step */\n    if (flatSteps[nextIndex].disabled || (flatSteps[nextIndex].isReview && this._stepper._isReviewAndSubmitDisabled)) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperPrevious]`,\n  host: {\n    '[attr.disabled]': '_stepper.selectedStepIndex === 0 ? true : undefined',\n  },\n})\nexport class SdsStepperPreviousDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onPreviousStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const previousStep = this._stepper.selectedStepIndex - 1;\n\n    if (!flatSteps || !this._stepper.selectedStepIndex) {\n      return true;\n    }\n\n    if (this._stepper.selectedStepIndex === 0) {\n      return true;\n    }\n\n    if (\n      flatSteps[previousStep].disabled ||\n      (flatSteps[previousStep].isReview && this._stepper._isReviewAndSubmitDisabled)\n    ) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperSave]`,\n})\nexport class SdsStepperSaveDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onSaveClicked();\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNav]`,\n  host: {\n    '[attr.disabled]': 'sdsStepperNav.disabled',\n  },\n})\nexport class SdsStepperNavDirective {\n  @Input() sdsStepperNav: SdsStepComponent;\n\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.changeStep(this.sdsStepperNav.id);\n  }\n}\n\n/**\n * Directive designed for when using ngx-uswds' step indicator component\n * with sds stepper. This directive manages internal sync of usa-step-indicator\n * and sds stepper steps such that when a step changes in one component, it is\n * accurately reflected on the other\n *\n * usage example:\n * Inside the template of a component that extends SdsStepper -\n *  <usa-step-indicator sdsStepperUSWDSNav> </usa-step-indicator>\n */\n@Directive({\n  selector: `usa-step-indicator [sdsStepperUSWDSNav]`,\n})\nexport class SdsStepperUSWDSNavDirective implements OnInit, OnDestroy {\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: UsaStepIndicatorComponent\n  ) {}\n\n  stepChangeSubscriptions: Subscription = new Subscription();\n\n  ngOnInit() {\n    const usaStepChange = this._el.currentStepChange.subscribe((stepIndex) => {\n      const step = this._el.steps[stepIndex];\n      const nextStep = this._stepper.flatSteps.find((flatStep) => flatStep.text === step.label);\n      this._stepper.changeStep(nextStep.id);\n    });\n\n    this.stepChangeSubscriptions.add(usaStepChange);\n  }\n\n  ngOnDestroy() {\n    this.stepChangeSubscriptions.unsubscribe();\n  }\n}\n",
            "selector": "[sdsStepperPrevious]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73
                }
            ],
            "propertiesClass": [
                {
                    "name": "_stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepper",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_disabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "_handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 64,
                "jsdoctags": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SdsStepperSaveDirective",
            "id": "directive-SdsStepperSaveDirective-12f1644311461bdd2dcf85abfbb6c5f0145355a2c9f3bea90952f8987a6315a0f79384d4de3ae255477c41dea6f0f4d45a8b3fd059e5c3cc26f4a89097b55014",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-step-buttons.ts",
            "type": "directive",
            "description": "<p>Button that moves to the next step in a stepper workflow.</p>\n",
            "rawdescription": "\nButton that moves to the next step in a stepper workflow.",
            "sourceCode": "import { Directive, forwardRef, HostListener, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { UsaStepIndicatorComponent } from '@gsa-sam/ngx-uswds';\nimport { Subscription } from 'rxjs';\nimport { SdsStepComponent, SdsStepper } from './sds-stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNext]`,\n  host: {\n    '[attr.disabled]': '_disabled()',\n  },\n})\nexport class SdsStepperNextDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onNextStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const nextIndex = this._stepper.selectedStepIndex + 1;\n\n    // Handle edge case - no steps or no selected step\n    if (!flatSteps || this._stepper.selectedStepIndex == undefined) {\n      return true;\n    }\n\n    /** Handle case where current step is last step */\n    if (this._stepper.selectedStepIndex >= flatSteps.length - 1) {\n      return true;\n    }\n\n    /**\n     * For linear mode, enable the next step, on click, current step will be validated,\n     * and if valid, user will automatically progress to next step\n     */\n    if (this._stepper.linear) {\n      return;\n    }\n\n    /** Otherwise, if next step is disabled or next step is review step and review step is disabled, disable next step */\n    if (flatSteps[nextIndex].disabled || (flatSteps[nextIndex].isReview && this._stepper._isReviewAndSubmitDisabled)) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperPrevious]`,\n  host: {\n    '[attr.disabled]': '_stepper.selectedStepIndex === 0 ? true : undefined',\n  },\n})\nexport class SdsStepperPreviousDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onPreviousStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const previousStep = this._stepper.selectedStepIndex - 1;\n\n    if (!flatSteps || !this._stepper.selectedStepIndex) {\n      return true;\n    }\n\n    if (this._stepper.selectedStepIndex === 0) {\n      return true;\n    }\n\n    if (\n      flatSteps[previousStep].disabled ||\n      (flatSteps[previousStep].isReview && this._stepper._isReviewAndSubmitDisabled)\n    ) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperSave]`,\n})\nexport class SdsStepperSaveDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onSaveClicked();\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNav]`,\n  host: {\n    '[attr.disabled]': 'sdsStepperNav.disabled',\n  },\n})\nexport class SdsStepperNavDirective {\n  @Input() sdsStepperNav: SdsStepComponent;\n\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.changeStep(this.sdsStepperNav.id);\n  }\n}\n\n/**\n * Directive designed for when using ngx-uswds' step indicator component\n * with sds stepper. This directive manages internal sync of usa-step-indicator\n * and sds stepper steps such that when a step changes in one component, it is\n * accurately reflected on the other\n *\n * usage example:\n * Inside the template of a component that extends SdsStepper -\n *  <usa-step-indicator sdsStepperUSWDSNav> </usa-step-indicator>\n */\n@Directive({\n  selector: `usa-step-indicator [sdsStepperUSWDSNav]`,\n})\nexport class SdsStepperUSWDSNavDirective implements OnInit, OnDestroy {\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: UsaStepIndicatorComponent\n  ) {}\n\n  stepChangeSubscriptions: Subscription = new Subscription();\n\n  ngOnInit() {\n    const usaStepChange = this._el.currentStepChange.subscribe((stepIndex) => {\n      const step = this._el.steps[stepIndex];\n      const nextStep = this._stepper.flatSteps.find((flatStep) => flatStep.text === step.label);\n      this._stepper.changeStep(nextStep.id);\n    });\n\n    this.stepChangeSubscriptions.add(usaStepChange);\n  }\n\n  ngOnDestroy() {\n    this.stepChangeSubscriptions.unsubscribe();\n  }\n}\n",
            "selector": "[sdsStepperSave]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113
                }
            ],
            "propertiesClass": [
                {
                    "name": "_stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepper",
                    "optional": false,
                    "description": "",
                    "line": 105,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 104,
                "jsdoctags": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "SdsStepperUSWDSNavDirective",
            "id": "directive-SdsStepperUSWDSNavDirective-12f1644311461bdd2dcf85abfbb6c5f0145355a2c9f3bea90952f8987a6315a0f79384d4de3ae255477c41dea6f0f4d45a8b3fd059e5c3cc26f4a89097b55014",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-step-buttons.ts",
            "type": "directive",
            "description": "<p>Directive designed for when using ngx-uswds&#39; step indicator component\nwith sds stepper. This directive manages internal sync of usa-step-indicator\nand sds stepper steps such that when a step changes in one component, it is\naccurately reflected on the other</p>\n<p>usage example:\nInside the template of a component that extends SdsStepper -\n <usa-step-indicator sdsStepperUSWDSNav> </usa-step-indicator></p>\n",
            "rawdescription": "\n\nDirective designed for when using ngx-uswds' step indicator component\nwith sds stepper. This directive manages internal sync of usa-step-indicator\nand sds stepper steps such that when a step changes in one component, it is\naccurately reflected on the other\n\nusage example:\nInside the template of a component that extends SdsStepper -\n <usa-step-indicator sdsStepperUSWDSNav> </usa-step-indicator>\n",
            "sourceCode": "import { Directive, forwardRef, HostListener, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { UsaStepIndicatorComponent } from '@gsa-sam/ngx-uswds';\nimport { Subscription } from 'rxjs';\nimport { SdsStepComponent, SdsStepper } from './sds-stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNext]`,\n  host: {\n    '[attr.disabled]': '_disabled()',\n  },\n})\nexport class SdsStepperNextDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onNextStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const nextIndex = this._stepper.selectedStepIndex + 1;\n\n    // Handle edge case - no steps or no selected step\n    if (!flatSteps || this._stepper.selectedStepIndex == undefined) {\n      return true;\n    }\n\n    /** Handle case where current step is last step */\n    if (this._stepper.selectedStepIndex >= flatSteps.length - 1) {\n      return true;\n    }\n\n    /**\n     * For linear mode, enable the next step, on click, current step will be validated,\n     * and if valid, user will automatically progress to next step\n     */\n    if (this._stepper.linear) {\n      return;\n    }\n\n    /** Otherwise, if next step is disabled or next step is review step and review step is disabled, disable next step */\n    if (flatSteps[nextIndex].disabled || (flatSteps[nextIndex].isReview && this._stepper._isReviewAndSubmitDisabled)) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperPrevious]`,\n  host: {\n    '[attr.disabled]': '_stepper.selectedStepIndex === 0 ? true : undefined',\n  },\n})\nexport class SdsStepperPreviousDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onPreviousStep();\n  }\n\n  _disabled() {\n    const flatSteps = this._stepper.flatSteps;\n    const previousStep = this._stepper.selectedStepIndex - 1;\n\n    if (!flatSteps || !this._stepper.selectedStepIndex) {\n      return true;\n    }\n\n    if (this._stepper.selectedStepIndex === 0) {\n      return true;\n    }\n\n    if (\n      flatSteps[previousStep].disabled ||\n      (flatSteps[previousStep].isReview && this._stepper._isReviewAndSubmitDisabled)\n    ) {\n      return true;\n    }\n\n    return;\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperSave]`,\n})\nexport class SdsStepperSaveDirective {\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.onSaveClicked();\n  }\n}\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: `[sdsStepperNav]`,\n  host: {\n    '[attr.disabled]': 'sdsStepperNav.disabled',\n  },\n})\nexport class SdsStepperNavDirective {\n  @Input() sdsStepperNav: SdsStepComponent;\n\n  constructor(public _stepper: SdsStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.changeStep(this.sdsStepperNav.id);\n  }\n}\n\n/**\n * Directive designed for when using ngx-uswds' step indicator component\n * with sds stepper. This directive manages internal sync of usa-step-indicator\n * and sds stepper steps such that when a step changes in one component, it is\n * accurately reflected on the other\n *\n * usage example:\n * Inside the template of a component that extends SdsStepper -\n *  <usa-step-indicator sdsStepperUSWDSNav> </usa-step-indicator>\n */\n@Directive({\n  selector: `usa-step-indicator [sdsStepperUSWDSNav]`,\n})\nexport class SdsStepperUSWDSNavDirective implements OnInit, OnDestroy {\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: UsaStepIndicatorComponent\n  ) {}\n\n  stepChangeSubscriptions: Subscription = new Subscription();\n\n  ngOnInit() {\n    const usaStepChange = this._el.currentStepChange.subscribe((stepIndex) => {\n      const step = this._el.steps[stepIndex];\n      const nextStep = this._stepper.flatSteps.find((flatStep) => flatStep.text === step.label);\n      this._stepper.changeStep(nextStep.id);\n    });\n\n    this.stepChangeSubscriptions.add(usaStepChange);\n  }\n\n  ngOnDestroy() {\n    this.stepChangeSubscriptions.unsubscribe();\n  }\n}\n",
            "selector": "usa-step-indicator [sdsStepperUSWDSNav]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "_stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepper",
                    "optional": false,
                    "description": "",
                    "line": 156,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepChangeSubscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 160
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_el",
                        "type": "UsaStepIndicatorComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 154,
                "jsdoctags": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_el",
                        "type": "UsaStepIndicatorComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AdvancedFiltersComponent",
            "id": "component-AdvancedFiltersComponent-da1b4b12d40c56a266ded90faff0bad6738ce1de34ec16dbc86d49ab8760fffbb04be1a8fa0aa5d35f1e7e5317c78fc186335af4e32d790c89659da3d40ecec7",
            "file": "libs/packages/sam-formly/src/lib/formly-filters/advanced-filters/advanced-filters.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-advanced-filters",
            "styleUrls": [
                "./advanced-filters.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./advanced-filters.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "enablePopover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines whether additional filters should be displayed through a popover or\na modal\n",
                    "description": "<p>Defines whether additional filters should be displayed through a popover or\na modal</p>\n",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Fields are used to configure the UI components\n",
                    "description": "<p> Fields are used to configure the UI components</p>\n",
                    "line": 25,
                    "type": "FormlyFieldConfig[]",
                    "decorators": []
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPass in a Form Group for ReactiveForms Support\n",
                    "description": "<p>Pass in a Form Group for ReactiveForms Support</p>\n",
                    "line": 20,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "isInactiveValueFieldShown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow option to include inactive filter values\n",
                    "description": "<p>Show option to include inactive filter values</p>\n",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Model used to display the filter values.\n",
                    "description": "<p> Model used to display the filter values.</p>\n",
                    "line": 30,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n   Options for the form.\n",
                    "description": "<p>   Options for the form.</p>\n",
                    "line": 35,
                    "type": "FormlyFormOptions",
                    "decorators": []
                },
                {
                    "name": "sortMoreFilterBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the filters by alphabetical order\n",
                    "description": "<p>Sort the filters by alphabetical order</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "showInactiveFiltersChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsDialogService",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filtersFieldGroupKey",
                    "defaultValue": "'filters'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "popoverContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFieldConfig[]",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "selectAll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "showInactive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "showInactiveOnOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methodsClass": [
                {
                    "name": "getCheckboxFieldConfigs",
                    "args": [
                        {
                            "name": "hideChildrenGroups",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hideChildrenGroups",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectAllChange",
                    "args": [
                        {
                            "name": "selectAllValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selectedform",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isOnload",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selectAllField",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectAllValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedform",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isOnload",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectAllField",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShowInactiveChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateSelectedFields",
                    "args": [
                        {
                            "name": "result",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "result",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ChangeDetectorRef, Output, EventEmitter, OnInit } from '@angular/core';\nimport { UntypedFormGroup } from '@angular/forms';\nimport { SdsDialogService } from '@gsa-sam/components';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\n\nimport { SdsAdvancedFiltersService } from './sds-advanced-filters.service';\nimport { SdsFormlyDialogData } from '../../formly-dialog/formly-dialog-data.model';\nimport { SdsFormlyDialogComponent } from '../../formly-dialog/formly-dialog.component';\nimport { tap, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'sds-advanced-filters',\n  templateUrl: './advanced-filters.component.html',\n  styleUrls: ['./advanced-filters.component.scss'],\n})\nexport class AdvancedFiltersComponent implements OnInit {\n  /**\n   * Pass in a Form Group for ReactiveForms Support\n   */\n  @Input() public form: UntypedFormGroup;\n\n  /**\n   *  Fields are used to configure the UI components\n   */\n  @Input() public fields: FormlyFieldConfig[];\n\n  /**\n   *  Model used to display the filter values.\n   */\n  @Input() public model: any;\n\n  /**\n   *    Options for the form.\n   */\n  @Input() public options: FormlyFormOptions = {};\n\n  /**\n   * Sort the filters by alphabetical order\n   */\n  @Input() public sortMoreFilterBy = '';\n\n  /**\n   * Show option to include inactive filter values\n   */\n  @Input() isInactiveValueFieldShown: boolean = false;\n\n  /**\n   * Defines whether additional filters should be displayed through a popover or\n   * a modal\n   */\n  @Input() enablePopover = false;\n\n  @Output() showInactiveFiltersChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  selectAll = false;\n  showInactiveOnOpen = false;\n  showInactive = false;\n  popoverContent: FormlyFieldConfig[];\n\n  readonly filtersFieldGroupKey = 'filters';\n\n  constructor(\n    public dialog: SdsDialogService,\n    private advancedFiltersService: SdsAdvancedFiltersService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    if (!this.enablePopover) {\n      return;\n    }\n    this.popoverContent = this.getCheckboxFieldConfigs(true);\n  }\n\n  onSelectAllChange(selectAllValue, selectedform, isOnload, selectAllField) {\n    const modalFields: FormlyFieldConfig[] = this.advancedFiltersService.convertToCheckboxes(this.fields);\n    const keys = Object.keys(selectedform.get(this.filtersFieldGroupKey).controls);\n    if (!isOnload) {\n      this.selectAll = selectAllValue;\n      keys.forEach((key) => {\n        if (key !== 'selectAll' && key !== 'showInactive') {\n          let currentField = modalFields.find((item) => item.key === key);\n          if (currentField.key === key && currentField.type === 'checkbox') {\n            selectedform.get(this.filtersFieldGroupKey).get(key).setValue(this.selectAll);\n          } else if (currentField.type === 'multicheckbox') {\n            const array = [];\n            if (this.selectAll) {\n              currentField.props.options.forEach((option: any) => {\n                array.push(option.key);\n                if (option.type === 'multicheckbox') {\n                  option.props.options.forEach((option: any) => {\n                    array.push(option.key);\n                  });\n                }\n              });\n              selectedform.get(this.filtersFieldGroupKey).get(key).setValue(array);\n\n              this.cdr.detectChanges();\n            } else {\n              if (this.enablePopover) {\n                selectedform.get(this.filtersFieldGroupKey).get(key).setValue(false);\n              } else {\n                selectedform.get(this.filtersFieldGroupKey).get(key).setValue([]);\n              }\n            }\n          }\n        }\n      });\n    } else {\n      const allValues = [];\n      keys.forEach((key) => {\n        if (key !== 'selectAll') {\n          let currentField = modalFields.find((item) => item.key === key);\n          let val;\n          if (Array.isArray(selectedform.get(this.filtersFieldGroupKey).get(key).value)) {\n            val = selectedform.get(this.filtersFieldGroupKey).get(key).value.length > 0 ? true : false;\n          } else {\n            val = selectedform.get(this.filtersFieldGroupKey).get(key).value;\n          }\n          if (!allValues.includes(val)) {\n            allValues.push(val);\n          }\n        }\n      });\n\n      allValues.length === 1\n        ? selectedform.get('selectAll').setValue(allValues[0])\n        : selectedform.get('selectAll').setValue(false);\n      this.cdr.detectChanges();\n    }\n  }\n\n  onShowInactiveChange(value) {\n    this.showInactiveFiltersChange.emit(value);\n  }\n\n  openDialog(): void {\n    const checkboxFieldConfigs = this.getCheckboxFieldConfigs();\n    const data: SdsFormlyDialogData = {\n      fields: checkboxFieldConfigs,\n      submit: 'Update',\n      title: 'More Filters',\n    };\n\n    const dialogRef: any = this.dialog.open(SdsFormlyDialogComponent, {\n      width: 'medium',\n      data: data,\n    });\n\n    dialogRef.componentInstance.submitFn.subscribe((result) => {\n      if (result) {\n        this.updateSelectedFields(result);\n      }\n      dialogRef.close();\n    });\n\n    dialogRef.componentInstance.cancelFn.subscribe(() => {\n      dialogRef.close();\n    });\n  }\n\n  updateSelectedFields(result: any) {\n    if (this.showInactiveOnOpen !== this.showInactive) {\n      this.onShowInactiveChange(this.showInactive);\n      this.showInactiveOnOpen = this.showInactive;\n    }\n\n    const response = this.advancedFiltersService.updateFields(result, this.fields, this.model);\n\n    this.fields = response.fields;\n    this.model = response.model;\n  }\n\n  getCheckboxFieldConfigs(hideChildrenGroups = false) {\n    const modalFields: FormlyFieldConfig[] = this.advancedFiltersService.convertToCheckboxes(\n      this.fields,\n      hideChildrenGroups\n    );\n    if (this.sortMoreFilterBy) {\n      modalFields.sort((a: FormlyFieldConfig, b: FormlyFieldConfig) =>\n        a.props && b.props\n          ? a.props[this.sortMoreFilterBy].localeCompare(b.props[this.sortMoreFilterBy])\n          : 0\n      );\n    }\n    const filedGroup: FormlyFieldConfig[] = this.filedGroup;\n    const showInactiveGroup: FormlyFieldConfig[] = this.showInactiveGroup;\n\n    let updateField: FormlyFieldConfig[] = [\n      {\n        key: 'filterToggle',\n        fieldGroup: [\n          ...filedGroup,\n          {\n            key: this.filtersFieldGroupKey,\n            fieldGroup: [...modalFields],\n          },\n        ],\n      },\n    ];\n    if (this.isInactiveValueFieldShown) {\n      updateField.push(...showInactiveGroup);\n    }\n\n    return updateField;\n  }\n\n  get filedGroup(): FormlyFieldConfig[] {\n    return [\n      {\n        props: { label: 'test' },\n        fieldGroup: [\n          {\n            key: 'selectAll',\n            type: 'checkbox',\n            props: {\n              label: 'Select All',\n              hideOptional: true,\n              id: 'moreFilterSelectAll',\n            },\n            hooks: {\n              onInit: (field) => {\n                let isOnload = true;\n                const form = field.parent.formControl;\n                form\n                  .get('selectAll')\n                  .valueChanges.pipe(\n                    startWith(form.get('selectAll').value),\n                    tap((selectAllValue) => {\n                      this.onSelectAllChange(selectAllValue, form, isOnload, field);\n                      isOnload = false;\n                    })\n                  )\n                  .subscribe();\n              },\n            },\n          },\n          {\n            template: '<hr/>',\n          },\n        ],\n      },\n    ];\n  }\n\n  get showInactiveGroup(): FormlyFieldConfig[] {\n    return [\n      {\n        template: '<hr/>',\n      },\n      {\n        fieldGroup: [\n          {\n            key: 'showInactive',\n            type: 'checkbox',\n            defaultValue: this.showInactive,\n            props: {\n              label: 'Show Inactive Filter Values (Indicated by *)',\n              hideOptional: true,\n              id: 'moreFilterSelectAll',\n              textAlignEnd: true,\n            },\n            hooks: {\n              onInit: (field) => {\n                let isOnload = true;\n                const form = field.parent.formControl;\n                form\n                  .get('showInactive')\n                  .valueChanges.pipe(\n                    startWith(form.get('showInactive').value),\n                    tap((showInactiveValue) => {\n                      this.showInactive = showInactiveValue;\n                      isOnload = false;\n                    })\n                  )\n                  .subscribe();\n              },\n            },\n          },\n        ],\n      },\n    ];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".usa-button--unstyled {\n  padding-left: 0;\n  width: initial;\n  text-decoration: none;\n  font-weight: 600;\n\n  &:hover,\n  &:active {\n    background: transparent;\n    background: initial;\n    color: initial;\n    text-decoration: underline;\n  }\n}\n\n.icon-filter {\n  font-size: 20px;\n}\n",
                    "styleUrl": "./advanced-filters.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "SdsDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "advancedFiltersService",
                        "type": "SdsAdvancedFiltersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "SdsDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "advancedFiltersService",
                        "type": "SdsAdvancedFiltersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "filedGroup": {
                    "name": "filedGroup",
                    "getSignature": {
                        "name": "filedGroup",
                        "type": "[]",
                        "returnType": "FormlyFieldConfig[]",
                        "line": 208
                    }
                },
                "showInactiveGroup": {
                    "name": "showInactiveGroup",
                    "getSignature": {
                        "name": "showInactiveGroup",
                        "type": "[]",
                        "returnType": "FormlyFieldConfig[]",
                        "line": 246
                    }
                }
            },
            "templateData": "<button *ngIf=\"!enablePopover\" type=\"button\" (click)=\"openDialog()\" class=\"usa-button usa-button--unstyled\">\n  More Filters\n  <usa-icon [icon]=\"'filter'\" class=\"icon-filter\" [size]=\"'sm'\"></usa-icon>\n</button>\n\n<div\n  *ngIf=\"enablePopover\"\n  [sdsPopover]=\"content\"\n  [position]=\"'bottom'\"\n  [closeOnContentClick]=\"false\"\n  [closeOnClickOutside]=\"true\"\n  tabindex=\"0\"\n  aria-label=\"More Filters\"\n>\n  More Filters\n  <usa-icon [icon]=\"'chevron-down'\" [size]=\"'sm'\"></usa-icon>\n  <p #content class=\"padding-2 text-left minw-card-lg\">\n    <formly-form [fields]=\"popoverContent\" (modelChange)=\"updateSelectedFields($event)\"></formly-form>\n  </p>\n</div>\n"
        },
        {
            "name": "AnimationWrapperComponent",
            "id": "component-AnimationWrapperComponent-f04294d146456f436b99d4cc3e0949982284c3bb06e1917077540964353895cb325bbf755a52a86e3dbc9adb00aa542b8bb0d54a7574e58f99ffa811f6d14709",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/form-field.animation.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sam-formly-wrapper-animation",
            "styleUrls": [],
            "styles": [],
            "template": "<div [@slideInOut]=\"field.hide ? 'out' : 'in'\">\n  <ng-container #fieldComponent></ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\nimport { trigger, state, style, transition, animate, group } from '@angular/animations';\n\nconst SlideInOutAnimation = [\n  trigger('slideInOut', [\n    state(\n      'in',\n      style({\n        'max-height': 'auto',\n        opacity: '1',\n        visibility: 'visible',\n      })\n    ),\n    state(\n      'out',\n      style({\n        'max-height': '0px',\n        opacity: '0',\n        visibility: 'hidden',\n      })\n    ),\n    transition('in => out', [\n      group([\n        animate(\n          '400ms ease-in-out',\n          style({\n            opacity: '0',\n          })\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '0px',\n          })\n        ),\n        animate(\n          '700ms ease-in-out',\n          style({\n            visibility: 'hidden',\n          })\n        ),\n      ]),\n    ]),\n    transition('out => in', [\n      group([\n        animate(\n          '1ms ease-in-out',\n          style({\n            visibility: 'visible',\n          })\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '500px',\n          })\n        ),\n        animate(\n          '800ms ease-in-out',\n          style({\n            opacity: '1',\n          })\n        ),\n      ]),\n    ]),\n  ]),\n];\n\n@Component({\n  selector: 'sam-formly-wrapper-animation',\n  template: `\n    <div [@slideInOut]=\"field.hide ? 'out' : 'in'\">\n      <ng-container #fieldComponent></ng-container>\n    </div>\n  `,\n  // styles: [`\n  //   ::ng-deep formly-field {\n  //     display: block !important;\n  //   }\n  // `],\n  animations: [SlideInOutAnimation],\n})\nexport class AnimationWrapperComponent extends FieldWrapper {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper"
        },
        {
            "name": "FormlyAccordianFormFieldComponent",
            "id": "component-FormlyAccordianFormFieldComponent-4c142d4199c0eefae44d03e75dbe971556aa7ee75dab614206694dc815508ce816e1dd39b4bdd4210370d4aab82c17ece9fcaef75d658d8d986547c6b7294c80",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/form-field.accordian.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sam-formly-accordian-form-field",
            "styleUrls": [],
            "styles": [],
            "template": "<usa-accordion #groupAccordion [singleSelect]=\"!multi\" class=\"sds-accordion--filters\">\n  <usa-accordion-item [expanded]=\"modelHasValue()\" ]>\n    <ng-template UsaAccordionHeader>\n      <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n    </ng-template>\n    <ng-template UsaAccordionContent>\n      <ng-container #fieldComponent></ng-container>\n    </ng-template>\n  </usa-accordion-item>\n</usa-accordion>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsaAccordionComponent",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'groupAccordion'"
                        }
                    ]
                },
                {
                    "name": "accordionItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsaAccordionItem",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "UsaAccordionItem"
                        }
                    ]
                },
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                },
                {
                    "name": "multi",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "resetAllSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "modelHasValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\nimport * as qs from 'qs';\nimport { Subscription } from 'rxjs';\nimport { UsaAccordionComponent, UsaAccordionItem } from '@gsa-sam/ngx-uswds';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @param string [to.expand] to expand the accordion\n *\n */\n\n@Component({\n  selector: 'sam-formly-accordian-form-field',\n  template: `\n    <usa-accordion #groupAccordion [singleSelect]=\"!multi\" class=\"sds-accordion--filters\">\n      <usa-accordion-item [expanded]=\"modelHasValue()\" ]>\n        <ng-template UsaAccordionHeader>\n          <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n        </ng-template>\n        <ng-template UsaAccordionContent>\n          <ng-container #fieldComponent></ng-container>\n        </ng-template>\n      </usa-accordion-item>\n    </usa-accordion>\n  `,\n})\nexport class FormlyAccordianFormFieldComponent extends FieldWrapper implements AfterViewInit, OnDestroy {\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n\n  @ViewChild('groupAccordion') accordion: UsaAccordionComponent;\n  @ViewChild(UsaAccordionItem) accordionItem: UsaAccordionItem;\n\n  multi = true;\n\n  resetAllSubscription: Subscription;\n\n  constructor() {\n    super();\n  }\n\n  ngAfterViewInit() {\n    if (this.to.group != 'accordion' || !this.accordion) {\n      return;\n    }\n\n    this.resetAllSubscription = this.field.options.fieldChanges\n      .pipe(filter(({ type }) => type === 'resetAll' && this.accordionItem.expanded))\n      .subscribe(() => {\n        if (!this.modelHasValue()) {\n          this.accordion.collapse(this.accordionItem.id);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.resetAllSubscription) {\n      this.resetAllSubscription.unsubscribe();\n    }\n  }\n  modelHasValue() {\n    if (this.to.hasOwnProperty('expand')) {\n      return this.to.expand;\n    } else {\n      const hasValue =\n        this.formControl.value instanceof Object\n          ? qs.stringify(this.formControl.value, { skipNulls: true })\n          : this.formControl.value;\n      return hasValue || this.formControl.dirty ? true : false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "extends": "FieldWrapper",
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ]
        },
        {
            "name": "FormlyDescriptionWrapperComponent",
            "id": "component-FormlyDescriptionWrapperComponent-d351e55fcb03dab9d991393c879902f3ee1accbaad45339eaa12fa5007416c6516ea21448bda0469cc37a34a5444e10698fda26332ae7528dc7e3886820f4439",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/description.wrapper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <ng-container *ngIf=\"to.descriptionTemplate\" [ngTemplateOutlet]=\"to.descriptionTemplate\"> </ng-container>\n  <ng-container *ngIf=\"!to.descriptionTemplate\">\n    <div\n      *ngIf=\"to.description\"\n      [attr.aria-label]=\"to.description ? to.description : undefined\"\n      class=\"usa-label--description\"\n      [attr.aria-label]=\"to.description\"\n      [id]=\"id + '-description'\"\n      [innerHtml]=\"to.description\"\n    ></div>\n  </ng-container>\n  <ng-container #fieldComponent></ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n/**\n * @param string [to.description] Add a description below the label\n *\n */\n@Component({\n  template: `\n    <div>\n      <ng-container *ngIf=\"to.descriptionTemplate\" [ngTemplateOutlet]=\"to.descriptionTemplate\"> </ng-container>\n      <ng-container *ngIf=\"!to.descriptionTemplate\">\n        <div\n          *ngIf=\"to.description\"\n          [attr.aria-label]=\"to.description ? to.description : undefined\"\n          class=\"usa-label--description\"\n          [attr.aria-label]=\"to.description\"\n          [id]=\"id + '-description'\"\n          [innerHtml]=\"to.description\"\n        ></div>\n      </ng-container>\n      <ng-container #fieldComponent></ng-container>\n    </div>\n  `,\n})\nexport class FormlyDescriptionWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef })\n  fieldComponent: ViewContainerRef;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper"
        },
        {
            "name": "FormlyFieldAutoCompleteComponent",
            "id": "component-FormlyFieldAutoCompleteComponent-20d3f6d1135075637404db8fa8d8c0a4908d47f05e356c6a0d760190cfc7c95552711a652c5bc8a42d3ac39d3e5e6828532afabb3355da1425e944f4517b8b7d",
            "file": "libs/packages/sam-formly/src/lib/formly/types/autocomplete.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-autocomplete",
            "styleUrls": [],
            "styles": [],
            "template": "<sds-autocomplete [formControl]=\"formControl\"></sds-autocomplete>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{\n    props: {\n      essentialModelFields: true,\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SDSAutocompleteComponent",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SDSAutocompleteComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { AbstractSdsFormly } from '../sds-formly';\nimport { SDSAutocompleteComponent } from '@gsa-sam/components';\n\n@Component({\n  selector: 'sds-formly-field-autocomplete',\n  template: ` <sds-autocomplete [formControl]=\"formControl\"></sds-autocomplete> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldAutoCompleteComponent extends AbstractSdsFormly {\n  @ViewChild(SDSAutocompleteComponent, { static: true }) public template: SDSAutocompleteComponent;\n  defaultOptions = {\n    props: {\n      essentialModelFields: true,\n    },\n  };\n  constructor(_cdr: ChangeDetectorRef) {\n    super(); /* istanbul ignore next */\n    this.cdr = _cdr;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AbstractSdsFormly"
        },
        {
            "name": "FormlyFieldButtonComponent",
            "id": "component-FormlyFieldButtonComponent-0f5688718fc30753c9d30868e6d053fe13b7ab877f4f703c9a59a1de8d3d7e4be09cb2e21ac40873ebe2a711a81c697b64c1112a1e27de2973758266f27fc6be",
            "file": "libs/packages/sam-formly/src/lib/formly/types/button.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-button",
            "styleUrls": [],
            "styles": [],
            "template": "<button [type]=\"to.type\" [ngClass]=\"'btn btn-' + to.btnType\" (click)=\"onClick($event)\" class=\"usa-button--unstyled\">\n  {{ to.text }}\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-button',\n  template: `\n    <button [type]=\"to.type\" [ngClass]=\"'btn btn-' + to.btnType\" (click)=\"onClick($event)\" class=\"usa-button--unstyled\">\n      {{ to.text }}\n    </button>\n  `,\n})\nexport class FormlyFieldButtonComponent extends FieldType {\n  onClick($event) {\n    if (this.to.onClick) {\n      this.to.onClick($event);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldType"
        },
        {
            "name": "FormlyFieldCheckboxComponent",
            "id": "component-FormlyFieldCheckboxComponent-e9520b964b79946713338e2ec1181c8a83ed6a5c18f7304a159d56e328723e1e4e096e2ac70e3f9a06ed2201c849483e46377e77f89e23ae716eaba66fc1b9c1",
            "file": "libs/packages/sam-formly/src/lib/formly/types/checkbox.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{\n    props: {\n      indeterminate: true,\n      hideLabel: true,\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "defaultTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'defaultTemplate'"
                        }
                    ]
                },
                {
                    "name": "displayedTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, TemplateRef, ViewChild } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-checkbox',\n  templateUrl: './checkbox.html',\n})\nexport class FormlyFieldCheckboxComponent extends FieldType implements AfterViewInit {\n  @ViewChild('defaultTemplate') defaultTemplate: TemplateRef<any>;\n  public displayedTemplate = null;\n\n  defaultOptions = {\n    props: {\n      indeterminate: true,\n      hideLabel: true,\n    },\n  };\n\n  ngAfterViewInit() {\n    const passedIn = this.to.template;\n    setTimeout(() => {\n      this.displayedTemplate = passedIn ? passedIn : this.defaultTemplate;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldType",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"grid-row\">\n  <ng-container *ngIf=\"to.template; else defaultTemplate\">\n    <div class=\"grid-row\">\n      <ng-container\n        [ngTemplateOutlet]=\"(to.template)\"\n        [ngTemplateOutletContext]=\"{\n        $implicit: to,\n        showError: showError,\n        formControl: formControl,\n        field: field,\n        id: id\n      }\"\n      >\n      </ng-container>\n    </div>\n  </ng-container>\n</div>\n\n<ng-template #defaultTemplate>\n  <div class=\"usa-checkbox\" [class.text-align-end]=\"to.textAlignEnd\">\n    <input\n      class=\"usa-checkbox__input\"\n      type=\"checkbox\"\n      [class.is-invalid]=\"showError\"\n      [indeterminate]=\"to.indeterminate && formControl.value === null\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n    />\n    <label class=\"usa-checkbox__label\" [for]=\"id\">\n      <span [innerHtml]=\"to.label\"></span>\n      <span *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n    </label>\n  </div>\n\n  <div *ngIf=\"to.tooltipText\" class=\"padding-top-105 margin-left-1\">\n    <p #tipContent [ngClass]=\"to.tooltipClass\" class=\"margin-1\" [innerHTML]=\"to.tooltipText\"></p>\n    <usa-icon\n      [position]=\"to.tooltipPosition ? to.tooltipPosition :'right'\"\n      [sdsTooltip]=\"tipContent\"\n      [size]=\"'lg'\"\n      [icon]=\"'info-circle'\"\n    ></usa-icon>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "FormlyFieldDatePickerComponent",
            "id": "component-FormlyFieldDatePickerComponent-c956897766e9f95776814b467e3410b5b9f6d66311bd7950c919c6a538fec2a20cac4f74b1cd7674045cc577b1ec229954c64d8f949efa5bd25ced504082cdaa",
            "file": "libs/packages/sam-formly/src/lib/formly/types/datepicker.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-datepicker",
            "styleUrls": [],
            "styles": [
                "table.mat-calendar-table td, table.mat-calendar-table th {border-style: none; background-color: unset; }"
            ],
            "template": "<div class=\"display-flex\">\n  <input\n    [id]=\"id\"\n    class=\"usa-input display-inline-block margin-top-3\"\n    [class.usa-input--error]=\"showError\"\n    [formControl]=\"formControl\"\n    [formlyAttributes]=\"field\"\n    matInput\n    [min]=\"to.minDate\"\n    [max]=\"to.maxDate\"\n    [matDatepicker]=\"picker\"\n    [placeholder]=\"to.placeholder ? to.placeholder : ''\"\n    (ngModelChange)=\"to.change ? to.change(field) : ''\"\n  />\n  <mat-datepicker-toggle class=\"padding-top-1\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-datepicker [startAt]=\"to.startDate\" #picker></mat-datepicker>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-datepicker',\n  template: `\n    <div class=\"display-flex\">\n      <input\n        [id]=\"id\"\n        class=\"usa-input display-inline-block margin-top-3\"\n        [class.usa-input--error]=\"showError\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n        matInput\n        [min]=\"to.minDate\"\n        [max]=\"to.maxDate\"\n        [matDatepicker]=\"picker\"\n        [placeholder]=\"to.placeholder ? to.placeholder : ''\"\n        (ngModelChange)=\"to.change ? to.change(field) : ''\"\n      />\n      <mat-datepicker-toggle class=\"padding-top-1\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker [startAt]=\"to.startDate\" #picker></mat-datepicker>\n    </div>\n  `,\n  styles: ['table.mat-calendar-table td, table.mat-calendar-table th {border-style: none; background-color: unset; }'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FormlyFieldDatePickerComponent extends FieldType {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "table.mat-calendar-table td, table.mat-calendar-table th {border-style: none; background-color: unset; }\n",
            "extends": "FieldType"
        },
        {
            "name": "FormlyFieldDateRangePickerComponent",
            "id": "component-FormlyFieldDateRangePickerComponent-f124f2bd20ef105288c34c2772f809e39e69df74c8bddbbd273eae15ec724fc25eb5c503f88a682a3bbac8a87bdbad6bf5eea6b4ba7b3279d82e97e477feacc1",
            "file": "libs/packages/sam-formly/src/lib/formly/types/daterangepicker.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-daterangepicker",
            "styleUrls": [],
            "styles": [
                ".mat-date-range-input-start-wrapper {overflow: unset !important; }",
                ".mat-date-range-input-end-wrapper {flex-grow: unset !important; }",
                "table.mat-calendar-table td, table.mat-calendar-table th {border-style: none; background-color: unset; }"
            ],
            "template": "<div *ngIf=\"!field.hide\" class=\"display-flex\">\n  <mat-date-range-input\n    [formGroup]=\"formControl\"\n    [rangePicker]=\"picker\"\n    [min]=\"to.minDate\"\n    [max]=\"to.maxDate\"\n    [id]=\"id\"\n    class=\"usa-input display-inline-block margin-top-3\"\n    [formlyAttributes]=\"field\"\n    [class.usa-input--error]=\"showError\"\n  >\n    <input\n      matStartDate\n      [attr.aria-label]=\"field.fieldGroup[0]?.props?.placeholder || 'Start Date'\"\n      [formlyAttributes]=\"field.fieldGroup[0]\"\n      [placeholder]=\"field.fieldGroup[0]?.props?.placeholder || 'mmm-dd-yyyy'\"\n      [formControlName]=\"field.fieldGroup[0].key\"\n      (ngModelChange)=\"\n        field.fieldGroup[0]?.props?.change\n          ? field.fieldGroup[0].props.change(field.fieldGroup[0])\n          : ''\n      \"\n    />\n    <input\n      matEndDate\n      [attr.aria-label]=\"field.fieldGroup[1]?.props?.placeholder || 'End Date'\"\n      [formlyAttributes]=\"field.fieldGroup[1]\"\n      [placeholder]=\"field.fieldGroup[1]?.props?.placeholder || 'mmm-dd-yyyy'\"\n      [formControlName]=\"field.fieldGroup[1].key\"\n      (ngModelChange)=\"\n        field.fieldGroup[1]?.props?.change\n          ? field.fieldGroup[1].props.change(field.fieldGroup[1])\n          : ''\n      \"\n    />\n  </mat-date-range-input>\n  <mat-datepicker-toggle class=\"padding-top-3\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n  <mat-date-range-picker [startAt]=\"to.startDate\" #picker></mat-date-range-picker>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewEncapsulation } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-daterangepicker',\n  template: `\n    <div *ngIf=\"!field.hide\" class=\"display-flex\">\n      <mat-date-range-input\n        [formGroup]=\"formControl\"\n        [rangePicker]=\"picker\"\n        [min]=\"to.minDate\"\n        [max]=\"to.maxDate\"\n        [id]=\"id\"\n        class=\"usa-input display-inline-block margin-top-3\"\n        [formlyAttributes]=\"field\"\n        [class.usa-input--error]=\"showError\"\n      >\n        <input\n          matStartDate\n          [attr.aria-label]=\"field.fieldGroup[0]?.props?.placeholder || 'Start Date'\"\n          [formlyAttributes]=\"field.fieldGroup[0]\"\n          [placeholder]=\"field.fieldGroup[0]?.props?.placeholder || 'mmm-dd-yyyy'\"\n          [formControlName]=\"field.fieldGroup[0].key\"\n          (ngModelChange)=\"\n            field.fieldGroup[0]?.props?.change\n              ? field.fieldGroup[0].props.change(field.fieldGroup[0])\n              : ''\n          \"\n        />\n        <input\n          matEndDate\n          [attr.aria-label]=\"field.fieldGroup[1]?.props?.placeholder || 'End Date'\"\n          [formlyAttributes]=\"field.fieldGroup[1]\"\n          [placeholder]=\"field.fieldGroup[1]?.props?.placeholder || 'mmm-dd-yyyy'\"\n          [formControlName]=\"field.fieldGroup[1].key\"\n          (ngModelChange)=\"\n            field.fieldGroup[1]?.props?.change\n              ? field.fieldGroup[1].props.change(field.fieldGroup[1])\n              : ''\n          \"\n        />\n      </mat-date-range-input>\n      <mat-datepicker-toggle class=\"padding-top-3\" matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker [startAt]=\"to.startDate\" #picker></mat-date-range-picker>\n    </div>\n  `,\n  styles: [\n    '.mat-date-range-input-start-wrapper {overflow: unset !important; }',\n    '.mat-date-range-input-end-wrapper {flex-grow: unset !important; }',\n    'table.mat-calendar-table td, table.mat-calendar-table th {border-style: none; background-color: unset; }',\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FormlyFieldDateRangePickerComponent extends FieldType {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ".mat-date-range-input-start-wrapper {overflow: unset !important; }\n.mat-date-range-input-end-wrapper {flex-grow: unset !important; }\ntable.mat-calendar-table td, table.mat-calendar-table th {border-style: none; background-color: unset; }\n",
            "extends": "FieldType"
        },
        {
            "name": "FormlyFieldEditorComponent",
            "id": "component-FormlyFieldEditorComponent-74f84b57136935c82dd8109617169fa73d5b64dc8bbf782bb13b5dfae004065a03ee89007c33b983d9a8982a6c0235d675815a70f59a4ff0fbca8389e7fb632f",
            "file": "libs/packages/sam-formly/src/lib/formly/types/editor.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-editor",
            "styleUrls": [],
            "styles": [],
            "template": "<sds-editor [formControl]=\"formControl\"></sds-editor>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsEditorComponent",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SdsEditorComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { AbstractSdsFormly } from '../sds-formly';\nimport { SdsEditorComponent } from '@gsa-sam/components';\n\n@Component({\n  selector: 'sds-formly-field-editor',\n  template: ` <sds-editor [formControl]=\"formControl\"></sds-editor> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldEditorComponent extends AbstractSdsFormly {\n  @ViewChild(SdsEditorComponent, { static: true }) public template: SdsEditorComponent;\n\n  constructor(_cdr: ChangeDetectorRef) {\n    super(); /* istanbul ignore next */\n    this.cdr = _cdr;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AbstractSdsFormly"
        },
        {
            "name": "FormlyFieldFileInfoComponent",
            "id": "component-FormlyFieldFileInfoComponent-4b67f3c1637205bdc4d379af2ccf10ca05ff90adc8a7c0d9b21226eb41950c5706d8e041efefb6264aee00f7f76173464a815fde327682616c027096a85ef37a",
            "file": "libs/packages/sam-formly/src/lib/formly/types/fileinfo.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-file",
            "styleUrls": [],
            "styles": [
                "\n      .sds-card-selected {\n        border-color: #2672de !important;\n        border-width: 2px !important;\n      }\n    "
            ],
            "template": "<div class=\"grid-row grid-gap margin-top-1\">\n  <div *ngFor=\"let option of to.options | formlySelectOptions: field | async; let i = index\">\n    <div\n      class=\"sds-card mobile-lg:grid-col\"\n      [ngClass]=\"{ 'sds-card-selected': formControl.value == option.value }\"\n      tabindex=\"0\"\n      (keyup.enter)=\"formControl.setValue(option.value)\"\n      [attr.aria-label]=\"option.label + ' ' + option.value\"\n    >\n      <input\n        tabindex=\"-1\"\n        type=\"radio\"\n        [id]=\"id + '_' + i\"\n        class=\"usa-sr-only usa-radio__input\"\n        [name]=\"id\"\n        [class.usa-input--error]=\"showError\"\n        [attr.value]=\"option.value\"\n        [value]=\"option.value\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\"\n      />\n      <label [for]=\"id + '_' + i\">\n        <div class=\"sds-card__header sds-card__header--center\">\n          <h3 class=\"sds-card__title \">{{ option.label }}</h3>\n        </div>\n        <div class=\"sds-card__body sds-card__header--center \">\n          <span class=\"bg-base-light padding-1 padding-left-2 padding-right-2\">{{ option.value }}</span>\n        </div>\n      </label>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{\n    props: {\n      options: [],\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "description",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-file',\n  template: `\n    <div class=\"grid-row grid-gap margin-top-1\">\n      <div *ngFor=\"let option of to.options | formlySelectOptions: field | async; let i = index\">\n        <div\n          class=\"sds-card mobile-lg:grid-col\"\n          [ngClass]=\"{ 'sds-card-selected': formControl.value == option.value }\"\n          tabindex=\"0\"\n          (keyup.enter)=\"formControl.setValue(option.value)\"\n          [attr.aria-label]=\"option.label + ' ' + option.value\"\n        >\n          <input\n            tabindex=\"-1\"\n            type=\"radio\"\n            [id]=\"id + '_' + i\"\n            class=\"usa-sr-only usa-radio__input\"\n            [name]=\"id\"\n            [class.usa-input--error]=\"showError\"\n            [attr.value]=\"option.value\"\n            [value]=\"option.value\"\n            [formControl]=\"formControl\"\n            [formlyAttributes]=\"field\"\n          />\n          <label [for]=\"id + '_' + i\">\n            <div class=\"sds-card__header sds-card__header--center\">\n              <h3 class=\"sds-card__title \">{{ option.label }}</h3>\n            </div>\n            <div class=\"sds-card__body sds-card__header--center \">\n              <span class=\"bg-base-light padding-1 padding-left-2 padding-right-2\">{{ option.value }}</span>\n            </div>\n          </label>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .sds-card-selected {\n        border-color: #2672de !important;\n        border-width: 2px !important;\n      }\n    `,\n  ],\n})\nexport class FormlyFieldFileInfoComponent extends FieldType {\n  isSelected: boolean = false;\n  description: string = '';\n  defaultOptions = {\n    props: {\n      options: [],\n    },\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .sds-card-selected {\n        border-color: #2672de !important;\n        border-width: 2px !important;\n      }\n    \n",
            "extends": "FieldType"
        },
        {
            "name": "FormlyFieldFileInputComponent",
            "id": "component-FormlyFieldFileInputComponent-3eb39b3caf030cdc468551a76c8f25cbf504de4d8cd062600134570f6d1db2200dca82d8da19da9896b6a85a9f8c40814cae672732e51c4a5fbb934e255e0468",
            "file": "libs/packages/sam-formly/src/lib/formly/types/file-input.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-file-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./file-input.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'defaultTemplate'"
                        }
                    ]
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "displayedTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "parentFieldConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsaFileInputComponent",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "UsaFileInputComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectorRef,\n  Component,\n  ViewChild,\n  OnInit,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  AfterViewInit,\n} from '@angular/core';\nimport { AbstractSdsFormly } from '../sds-formly';\nimport { UsaFileInputComponent } from '@gsa-sam/ngx-uswds';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\n@Component({\n  selector: `sds-formly-field-file-input`,\n  templateUrl: './file-input.html',\n})\nexport class FormlyFieldFileInputComponent extends AbstractSdsFormly implements OnInit {\n  @ViewChild(UsaFileInputComponent, { static: true }) public template: UsaFileInputComponent;\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('defaultTemplate') defaultTemplate: TemplateRef<any>;\n  public displayedTemplate = null;\n\n  parentFieldConfig: FormlyFieldConfig;\n\n  displayedColumns: string[] = [];\n\n  constructor(_cdr: ChangeDetectorRef) {\n    super();\n    this.cdr = _cdr;\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.field && this.field.fieldArray) {\n      this.displayedColumns = this.field.fieldArray.props.tableColumns.map((column) => column.columnName);\n      this.parentFieldConfig = this.field.parent;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AbstractSdsFormly",
            "implements": [
                "OnInit"
            ],
            "templateData": "<usa-file-input #fileInput [formControl]=\"formControl\" [id]=\"id\"> </usa-file-input>\n\n<ng-container\n  *ngIf=\"field.fieldArray\"\n  [ngTemplateOutlet]=\"(to.template ? to.template : defaultTemplate)\"\n  [ngTemplateOutletContext]=\"{\n        fields: [field.fieldArray],\n        form: formControl,\n        model: model,\n        modelChange: modelChange\n      }\"\n>\n</ng-container>\n\n<ng-template let-fields=\"fields[0]\" let-form=\"form\" let-model=\"model\" let-modelChange=\"modelChange\" #defaultTemplate>\n  <div class=\"margin-top-2\"></div>\n  <sds-table [data]=\"form.value\" [tableName]=\"fields.props.name\" #fileTable>\n    <sds-table-column *ngFor=\"let column of fields.props.tableColumns\" [sdsColumnName]=\"column.columnName\">\n      <ng-template #sdsHeaderCell>{{column.label}}</ng-template>\n      <ng-template #sdsCell let-element=\"element\">\n        <button\n          class=\"usa-button usa-button--unstyled text-secondary-dark\"\n          *ngIf=\"column.onClick; else noClick\"\n          (click)=\"column.onClick(element, parentFieldConfig)\"\n        >\n          <ng-container\n            [ngTemplateOutlet]=\"tableCellTemplates\"\n            [ngTemplateOutletContext]=\"{$implicit: element, column: column}\"\n          ></ng-container>\n        </button>\n        <ng-template #noClick>\n          <ng-container\n            [ngTemplateOutlet]=\"tableCellTemplates\"\n            [ngTemplateOutletContext]=\"{$implicit: element, column: column}\"\n          ></ng-container>\n        </ng-template>\n      </ng-template>\n    </sds-table-column>\n    <sds-header-row [displayedColumns]=\"displayedColumns\"></sds-header-row>\n    <sds-row [displayedColumns]=\"displayedColumns\"></sds-row>\n  </sds-table>\n  <div *ngIf=\"!form.value || !form.value.length\" class=\"border border-base-light text-center padding-1\">\n    {{fields.props.noDataText}}\n  </div>\n\n  <ng-template #tableCellTemplates let-element let-column=\"column\">\n    <span *ngIf=\"column.property\">{{element[column.property]}}</span>\n    <span *ngIf=\"column.text\">{{column.text}}</span>\n    <span *ngIf=\"column.textFn\">{{column.textFn(element)}}</span>\n  </ng-template>\n</ng-template>\n"
        },
        {
            "name": "FormlyFieldInputComponent",
            "id": "component-FormlyFieldInputComponent-cdc438d987ab6edcffc7995c6693f57a9836f3e6cc47f041fdcb67931e950dfc420abecd29289e3daf3fc21bca1f28873b99d78f495fd2f1b051187bcf440658",
            "file": "libs/packages/sam-formly/src/lib/formly/types/input.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-input",
            "styleUrls": [],
            "styles": [],
            "template": "<input\n  [ngClass]=\"{\n    'usa-input--disabled': to.disabled,\n    'usa-input--error': showError\n  }\"\n  class=\"usa-input\"\n  [placeholder]=\"to.placeholder\"\n  name=\"input-success\"\n  [formlyAttributes]=\"field\"\n  [type]=\"to.inputType ? to.inputType : 'text'\"\n  [formControl]=\"formControl\"\n/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-input',\n  template: `\n    <input\n      [ngClass]=\"{\n        'usa-input--disabled': to.disabled,\n        'usa-input--error': showError\n      }\"\n      class=\"usa-input\"\n      [placeholder]=\"to.placeholder\"\n      name=\"input-success\"\n      [formlyAttributes]=\"field\"\n      [type]=\"to.inputType ? to.inputType : 'text'\"\n      [formControl]=\"formControl\"\n    />\n  `,\n})\nexport class FormlyFieldInputComponent extends FieldType {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldType"
        },
        {
            "name": "FormlyFieldMultiCheckboxComponent",
            "id": "component-FormlyFieldMultiCheckboxComponent-e4010a5485c32fa38088e2aadd348b1d1e3dfdc1c10bae28fac1744d0e331be958400b074666874ed45f8b10b8620d12abdf2a22c032c94b23e2585f3685f09f",
            "file": "libs/packages/sam-formly/src/lib/formly/types/multicheckbox.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-multicheckbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./multicheckbox.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allComplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "ariaChecked",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "defaultOptions",
                    "defaultValue": "{\n    props: {\n      options: [],\n      expandableOptions: false,\n      expandedOptions: false,\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "mainOptionAriaChecked",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "subOptionAriaChecked",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "_getAriaChecked",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkMainOption",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "allSubOptions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "allSubOptions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkSubOption",
                    "args": [
                        {
                            "name": "allSubOptions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "allSubOptions",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getIndex",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isChecked",
                    "args": [
                        {
                            "name": "option",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMainOptionChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "mainOptions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "mainOptions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubOptionChange",
                    "args": [
                        {
                            "name": "subOption",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "allSubOptions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subOption",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "checked",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "allSubOptions",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAll",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAllSubList",
                    "args": [
                        {
                            "name": "checked",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "subList",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "checked",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "subList",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-multicheckbox',\n  templateUrl: './multicheckbox.html',\n})\nexport class FormlyFieldMultiCheckboxComponent extends FieldType implements OnInit {\n  defaultOptions = {\n    props: {\n      options: [],\n      expandableOptions: false,\n      expandedOptions: false,\n    },\n  };\n  allComplete: boolean;\n  ariaChecked = '';\n  mainOptionAriaChecked: string[] = [];\n  subOptionAriaChecked: string[] = [];\n\n  constructor(private cdr: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.subOptionAriaChecked.fill('false');\n    this.mainOptionAriaChecked.fill('false');\n  }\n\n  checkSubOption(allSubOptions, index) {\n    let allKeys = allSubOptions.map((opt) => opt.key);\n    const uniqValues = {};\n    if (this.formControl.value) {\n      this.formControl.value.forEach((i) => (uniqValues[i] = true));\n      if (allKeys.every((val) => uniqValues[val])) {\n        this.subOptionAriaChecked[index] = 'true';\n        return true;\n      } else if (allKeys.some((val) => uniqValues[val])) {\n        this.subOptionAriaChecked[index] = 'mixed';\n        return true;\n      } else {\n        this.subOptionAriaChecked[index] = 'false';\n        return false;\n      }\n    }\n  }\n\n  checkMainOption(id, allSubOptions) {\n    let index = this.getIndex(id);\n    let allKeys: string[] = [];\n    allSubOptions.map((opt) => {\n      allKeys.push(opt.key);\n      if (opt.props && opt.props.options) {\n        opt.props.options.map((subOpt) => allKeys.push(subOpt.key));\n      }\n    });\n    let uniqValues = {};\n    if (this.formControl.value && Array.isArray(this.formControl.value)) {\n      this.formControl.value.forEach((i) => (uniqValues[i] = true));\n    } else if (this.formControl.value && typeof this.formControl.value === 'object') {\n      uniqValues = this.formControl.value;\n    }\n    if (allKeys.every((val) => uniqValues[val])) {\n      this.mainOptionAriaChecked[index] = 'true';\n      return true;\n    } else if (allKeys.some((val) => uniqValues[val])) {\n      this.mainOptionAriaChecked[index] = 'mixed';\n      return true;\n    } else {\n      this.mainOptionAriaChecked[index] = 'false';\n      return false;\n    }\n  }\n\n  onSubOptionChange(subOption: any, checked: boolean, allSubOptions: any, index: number) {\n    this.onChange(subOption.key, checked);\n    let checkedValues = [];\n    allSubOptions.forEach((subOpt) => {\n      checkedValues.push(this.isChecked(subOpt));\n    });\n    if (checkedValues.every((val, i, arr) => val === arr[0])) {\n      this.subOptionAriaChecked[index] = checkedValues[0] ? 'true' : 'false';\n    } else {\n      this.subOptionAriaChecked[index] = 'mixed';\n    }\n  }\n\n  onMainOptionChange(value: any, checked: boolean, mainOptions: any, id: string) {\n    this.onChange(value, checked);\n    let checkedValues = [];\n    let i = this.getIndex(id);\n    mainOptions.forEach((mainOpt) => {\n      checkedValues.push(this.isChecked(mainOpt));\n      if (mainOpt.props) {\n        mainOpt.props.options.forEach((subOpt) => {\n          checkedValues.push(this.isChecked(subOpt));\n        });\n        if (mainOpt.key === value) this.setAllSubList(checked, mainOpt, i);\n      }\n    });\n    if (checkedValues.every((val, _i, arr) => val === arr[0])) {\n      this.mainOptionAriaChecked[i] = checkedValues[0] ? 'true' : 'false';\n    } else {\n      this.mainOptionAriaChecked[i] = 'mixed';\n    }\n  }\n\n  onChange(value: any, checked: boolean) {\n    if (this.to.type === 'array') {\n      this.formControl.patchValue(\n        checked\n          ? [...(this.formControl.value || []), value]\n          : [...(this.formControl.value || [])].filter((o) => o !== value)\n      );\n    } else {\n      this.formControl.patchValue({\n        ...this.formControl.value,\n        [value]: checked,\n      });\n    }\n\n    this.formControl.markAsTouched();\n    this.cdr.detectChanges();\n  }\n\n  isChecked(option) {\n    if (!this.formControl.value) {\n      return false;\n    }\n\n    if (this.to.type === 'array') {\n      return this.formControl.value.includes(option.key) && option.value != 'false';\n    } else if (this.to.groupOptions && this.formControl.value[option.value]) {\n      return this.formControl.value[option.value] && this.formControl.value[option.value] != 'false';\n    } else if (this.formControl.value[option.key]) {\n      return this.formControl.value[option.key] && this.formControl.value[option.key] != 'false';\n    }\n  }\n\n  setAllSubList(checked, subList, index) {\n    this.subOptionAriaChecked[index] = checked ? 'true' : 'false';\n    if (Array.isArray(subList.props.options)) {\n      this.field.props.options.forEach((subOption) => {\n        if (subOption['key'] === subList.key) {\n          subOption['props'].options.map((item) => {\n            this.onChange(item.key, checked);\n          });\n        }\n      });\n    }\n  }\n\n  getIndex(id) {\n    return id.substring(id.length - 1);\n  }\n\n  setAll(ev) {\n    let id = ev.target.id;\n    let i = this.getIndex(id);\n    this.mainOptionAriaChecked[i] = ev.target.checked;\n    if (Array.isArray(this.field.props.options)) {\n      this.formControl.setValue([]);\n      this.field.props.options.map((option, index) => {\n        this.onChange(option.key, ev.target.checked);\n        if (option.props) {\n          this.setAllSubList(ev.target.checked, option, index);\n        }\n      });\n    }\n  }\n\n  _getAriaChecked(value) {\n    let i = this.getIndex(this.id);\n    if (Array.isArray(this.field.props.options)) {\n      this.allComplete = value === this.field.props.options.length ? true : false;\n    }\n    if (value === 0) {\n      this.mainOptionAriaChecked[i] = 'false';\n    } else {\n      this.mainOptionAriaChecked[i] = value > 0 && !this.allComplete ? 'mixed' : 'true';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "FieldType",
            "implements": [
                "OnInit"
            ],
            "templateData": "<fieldset class=\"usa-fieldset\" [ngClass]=\"{ 'margin-top-1': to.description }\">\n  <legend class=\"usa-sr-only\">{{ to.label }}</legend>\n\n  <fieldset *ngIf=\"to.groupOptions\" class=\"usa-fieldset\">\n    <ul class=\"sds-list sds-list--no-bullets margin-y-0\">\n      <li class=\"grid-row\" *ngFor=\" let option of (to.groupOptions | keyvalue); let i=index\">\n        <div>\n          <legend>\n            <span class=\"text-bold display-block\">{{option.key}}</span>\n          </legend>\n          <li\n            class=\"grid-row margin-bottom-0\"\n            *ngFor=\"let opt of option.value | formlySelectOptions: field | async; let j = index\"\n          >\n            <div class=\"usa-checkbox\" [class.text-align-end]=\"to.textAlignEnd\">\n              <input\n                class=\"usa-checkbox__input\"\n                [id]=\"id + '_' + i + j\"\n                type=\"checkbox\"\n                [name]=\"id + '_name_' + i + j\"\n                [disabled]=\"opt.disabled\"\n                [value]=\"opt.value\"\n                [formlyAttributes]=\"field\"\n                (change)=\"onChange(opt.value, $event.target.checked)\"\n                [checked]=\"isChecked(opt)\"\n              />\n              <label class=\"usa-checkbox__label\" [for]=\"id + '_' + i + j\">\n                <span\n                  *ngIf=\"option.value[j].tagText\"\n                  class=\"usa-tag\"\n                  [ngClass]=\"option.value[j].tagClass ? option.value[j].tagClass : 'sds-tag--info-white'\"\n                >\n                  {{option.value[j].tagText}}\n                </span>\n                <span [innerHtml]=\"opt.label\"></span>\n              </label>\n            </div>\n            <div *ngIf=\"option.value[j].tooltipText\" class=\"margin-left-1\">\n              <p\n                #tipContent\n                [ngClass]=\"option.value[j].tooltipClass\"\n                class=\"margin-1\"\n                [innerHTML]=\"option.value[j].tooltipText\"\n              ></p>\n              <usa-icon\n                [position]=\"option.value[j].tooltipPosition ? option.value[j].tooltipPosition :'right'\"\n                [sdsTooltip]=\"tipContent\"\n                [size]=\"'sm'\"\n                [icon]=\"'info-circle'\"\n              ></usa-icon>\n            </div>\n          </li>\n        </div>\n      </li>\n    </ul>\n  </fieldset>\n\n  <ul *ngIf=\"to.options\" class=\"sds-list sds-list--no-bullets margin-y-0\">\n    <li class=\"grid-row\" *ngIf=\"to.selectAllOption\">\n      <div class=\"usa-checkbox\" [class.text-align-end]=\"to.textAlignEnd\">\n        <input\n          [id]=\"id\"\n          type=\"checkbox\"\n          class=\"usa-checkbox__input\"\n          [name]=\"id + '_name_' + 'Select'\"\n          [value]=\"to.label\"\n          [checked]=\"checkMainOption(id, to.options)\"\n          [attr.aria-checked]=\"mainOptionAriaChecked[getIndex(id)]\"\n          (change)=\"setAll($event)\"\n        />\n        <label class=\"usa-checkbox__label\" [for]=\"id\">\n          <span [innerHtml]=\"to.label\"></span>\n        </label>\n      </div>\n      <div *ngIf=\"to.selectTooltipText\">\n        <p #tipContent1 [ngClass]=\"to.tooltipClass\" class=\"margin-1\" [innerHTML]=\"to.selectTooltipText\"></p>\n        <usa-icon\n          class=\"margin-left-1\"\n          [position]=\"to.selecttooltipPosition ? to.selecttooltipPosition :'right'\"\n          [sdsTooltip]=\"tipContent1\"\n          [size]=\"'sm'\"\n          [icon]=\"'info-circle'\"\n        ></usa-icon>\n      </div>\n\n      <div *ngIf=\"to.expandableOptions\">\n        <button\n          type=\"button\"\n          class=\"sds-button padding-top-0\"\n          [attr.aria-expanded]=\"!to.expandedOptions\"\n          [attr.aria-controls]=\"id + 'collapseID'\"\n          (click)=\"to.expandedOptions = !to.expandedOptions\"\n        >\n          <span class=\"usa-sr-only\">expand/collapsed</span>\n          <usa-icon [icon]=\"to.expandedOptions ?'caret-down-fill': 'caret-up-fill'\" [size]=\"'1x'\"> </usa-icon>\n        </button>\n      </div>\n    </li>\n    <ng-container *ngFor=\"let option of to.options; let i = index\">\n      <li\n        *ngIf=\"!option.props\"\n        class=\"margin-y-0 grid-row\"\n        [ngClass]=\"{'margin-left-4 ': to.selectAllOption}\"\n      >\n        <div class=\"usa-checkbox\" [class.text-align-end]=\"to.textAlignEnd\">\n          <input\n            class=\"usa-checkbox__input\"\n            [id]=\"id + '_' + i\"\n            type=\"checkbox\"\n            [name]=\"id + '_name_' + i\"\n            [disabled]=\"option.disabled\"\n            [value]=\"option.value\"\n            [formlyAttributes]=\"field\"\n            (change)=\"onMainOptionChange(option.key, $event.target.checked, to.options, id)\"\n            [checked]=\"isChecked(option)\"\n          />\n          <label class=\"usa-checkbox__label\" [ngClass]=\"{'margin-top-0': i==0}\" [for]=\"id + '_' + i\">\n            <span\n              *ngIf=\"option.tagText\"\n              class=\"usa-tag\"\n              [ngClass]=\"option.tagClass ? option.tagClass : 'sds-tag--info-white'\"\n            >\n              {{option.tagText}}\n            </span>\n            <span [innerHtml]=\"option.value\"></span>\n          </label>\n        </div>\n        <div *ngIf=\"option.tooltipText\" class=\"margin-left-1\">\n          <p #tipContent [ngClass]=\"option.tooltipClass\" class=\"margin-1\" [innerHTML]=\"option.tooltipText\"></p>\n          <usa-icon\n            [position]=\"option.tooltipPosition ? option.tooltipPosition :'right'\"\n            [sdsTooltip]=\"tipContent\"\n            [size]=\"'sm'\"\n            [icon]=\"'info-circle'\"\n          ></usa-icon>\n        </div>\n      </li>\n\n      <ng-container *ngIf=\"option.props\">\n        <li class=\"grid-row\" class=\"margin-left-4\">\n          <div class=\"usa-checkbox\" [class.text-align-end]=\"to.textAlignEnd\">\n            <input\n              [id]=\"id + '_' + i\"\n              type=\"checkbox\"\n              class=\"usa-checkbox__input\"\n              [name]=\"id + '_name_' + i\"\n              [value]=\"option.props.label\"\n              [checked]=\"checkSubOption(option.props.options, i)\"\n              [attr.aria-checked]=\"subOptionAriaChecked[i]\"\n              (change)=\"onMainOptionChange(option.key, $event.target.checked, to.options, id)\"\n            />\n            <!-- setAllSubList($event, option, i)\" /> -->\n            <label class=\"usa-checkbox__label\" [for]=\"id + '_' + i\">\n              <span [innerHtml]=\"option.props.label\"></span>\n            </label>\n          </div>\n        </li>\n        <ul [id]=\"'collapseID'\" [sdsCollapse]=\"to.expandedOptions\" [ngClass]=\"{'margin-left-6 ': to.selectAllOption}\">\n          <li class=\"grid-row\" *ngFor=\"let subOption of (option.props.options); let j = index\">\n            <div class=\"usa-checkbox\" [class.text-align-end]=\"to.textAlignEnd\">\n              <input\n                class=\"usa-checkbox__input\"\n                [id]=\"id + '_' + i + '_' + j\"\n                type=\"checkbox\"\n                [name]=\"id + '_' + i + '_name_' + j\"\n                [disabled]=\"subOption.disabled\"\n                [value]=\"subOption.value\"\n                [formlyAttributes]=\"field\"\n                (change)=\"onSubOptionChange(subOption, $event.target.checked, option.props.options, i)\"\n                [checked]=\"isChecked(subOption)\"\n              />\n              <label class=\"usa-checkbox__label\" [for]=\"id + '_' + i + '_' + j\">\n                <span\n                  *ngIf=\"subOption.tagText\"\n                  class=\"usa-tag\"\n                  [ngClass]=\"subOption.tagClass ? subOption.tagClass : 'sds-tag--info-white'\"\n                >\n                  {{option.tagText}}\n                </span>\n                <span [innerHtml]=\"subOption.value\"></span>\n              </label>\n            </div>\n            <div *ngIf=\"subOption.tooltipText\" class=\"margin-left-1\">\n              <p\n                #tipContent\n                [ngClass]=\"subOption.tooltipClass\"\n                class=\"margin-1\"\n                [innerHTML]=\"subOption.tooltipText\"\n              ></p>\n              <usa-icon\n                [position]=\"subOption.tooltipPosition ? subOption.tooltipPosition :'right'\"\n                [sdsTooltip]=\"tipContent\"\n                [size]=\"'sm'\"\n                [icon]=\"'info-circle'\"\n              ></usa-icon>\n            </div>\n          </li>\n        </ul>\n      </ng-container>\n    </ng-container>\n  </ul>\n</fieldset>\n"
        },
        {
            "name": "FormlyFieldRadioComponent",
            "id": "component-FormlyFieldRadioComponent-f6879748bd6ab66723751ca82d5575104da632f8e516698a48aca3bb9735a853af9b1148db54a8d26e669f40fedd2d61f1801f96ebb4d435fc1ff2cf587188c5",
            "file": "libs/packages/sam-formly/src/lib/formly/types/radio.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-radio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{\n    props: {\n      options: [],\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "defaultTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'defaultTemplate'"
                        }
                    ]
                },
                {
                    "name": "displayedTemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, TemplateRef, ViewChild } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-radio',\n  templateUrl: './radio.html',\n})\nexport class FormlyFieldRadioComponent extends FieldType implements AfterViewInit {\n  @ViewChild('defaultTemplate') defaultTemplate: TemplateRef<any>;\n  public displayedTemplate = null;\n\n  defaultOptions = {\n    props: {\n      options: [],\n    },\n  };\n  ngAfterViewInit() {\n    const passedIn = this.to.template;\n    setTimeout(() => {\n      this.displayedTemplate = passedIn ? passedIn : this.defaultTemplate;\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldType",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<form\n  class=\"usa-radio\"\n  [id]=\"id\"\n  [attr.aria-label]=\"to.ariaLabel? to.ariaLabel : to.label\"\n  [attr.aria-describedby]=\"to.description ? id + '_description' : undefined\"\n  [ngClass]=\"{'horizontal': to.horizontal, 'grid-row': to.horizontal}\"\n>\n  <div *ngIf=\"to.options\">\n    <ng-container\n      *ngFor=\"\n  let option of to.options | formlySelectOptions: field | async;\n  let i = index\"\n      [ngTemplateOutlet]=\"(to.template ? to.template : defaultTemplate)\"\n      [ngTemplateOutletContext]=\"{\n    $implicit: option,\n    i: i,\n    to:to,\n    field: field,\n    id: id,\n    showError: showError,\n    formControl: formControl\n  }\"\n    >\n    </ng-container>\n  </div>\n\n  <div *ngIf=\"to.groupOptions\">\n    <fieldset class=\"usa-fieldset\">\n      <ng-container class=\"grid-row\" *ngFor=\"let option of (to.groupOptions | keyvalue); let i = index\">\n        <div>\n          <legend>\n            <span class=\"text-bold display-block margin-top-1 margin-bottom-05\">{{option.key}}</span>\n          </legend>\n\n          <ng-container\n            class=\"grid-row\"\n            *ngFor=\"let opt of option.value | formlySelectOptions: field | async; let j = index\"\n          >\n            <div class=\"grid-row\" [ngClass]=\"{'horizontal-option': to.horizontal}\">\n              <div>\n                <input\n                  class=\"usa-radio__input\"\n                  [ngClass]=\"{'usa-radio__input--tile': to.tile, 'usa-input--error': !showError}\"\n                  [formlyAttributes]=\"field\"\n                  [id]=\"id + '_' + i+ '_'+ j\"\n                  type=\"radio\"\n                  [name]=\"option.key\"\n                  checked=\"checked\"\n                  [formControl]=\"formControl\"\n                  [value]=\"opt.value\"\n                />\n\n                <label\n                  class=\"usa-radio__label\"\n                  [ngClass]=\"{\n              'margin-top-0': j==0 ,\n'{{to.optionsClass}}': to.optionsClass}\"\n                  [for]=\"id + '_' + i+ '_'+ j\"\n                >\n                  <span [innerHtml]=\"opt.label\"></span>\n                  <ng-container *ngIf=\"option.value[j].description && option.value[j].description.length\">\n                    <div class=\"usa-checkbox__label-description\">\n                      <span\n                        class=\"display-block\"\n                        *ngFor=\"let description of option.value[j].description\"\n                        [innerHtml]=\"description\"\n                      ></span>\n                    </div>\n                  </ng-container>\n                </label>\n              </div>\n\n              <div class=\"margin-left-1\" *ngIf=\"option.value[j].tooltipText\">\n                <p\n                  #tipContent\n                  [ngClass]=\"option.value[j].tooltipClass\"\n                  class=\"margin-1\"\n                  [innerHTML]=\"option.value[j].tooltipText\"\n                ></p>\n                <usa-icon\n                  [position]=\"option.value[j].tooltipPosition ? option.value[j].tooltipPosition :'right'\"\n                  [sdsTooltip]=\"tipContent\"\n                  [size]=\"'lg'\"\n                  [icon]=\"'info-circle'\"\n                ></usa-icon>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </fieldset>\n  </div>\n</form>\n\n<ng-template let-option let-i=\"i\" let-to=\"to\" #defaultTemplate>\n  <div class=\"grid-row\" [ngClass]=\"{'horizontal-option': to.horizontal ,'margin-top-1': to.description && i==0 }\">\n    <div>\n      <input\n        class=\"usa-radio__input\"\n        [ngClass]=\"{'usa-radio__input--tile': to.tile, 'usa-input--error': !showError}\"\n        [formlyAttributes]=\"field\"\n        [id]=\"id + '_' + i\"\n        type=\"radio\"\n        [name]=\"id\"\n        checked=\"checked\"\n        [formControl]=\"formControl\"\n        [value]=\"option.value\"\n      />\n\n      <label\n        class=\"usa-radio__label\"\n        [ngClass]=\"{\n              'margin-top-0': i==0 ,\n'{{to.optionsClass}}': to.optionsClass}\"\n        [for]=\"id + '_' + i\"\n      >\n        <span [innerHtml]=\"option.label\"></span>\n        <ng-container *ngIf=\"to.options[i].description && to.options[i].description.length\">\n          <div class=\"usa-checkbox__label-description\">\n            <span\n              class=\"display-block\"\n              *ngFor=\"let description of to.options[i].description\"\n              [innerHtml]=\"description\"\n            ></span>\n          </div>\n        </ng-container>\n      </label>\n    </div>\n\n    <div class=\"margin-left-1\" *ngIf=\"to.options[i].tooltipText\">\n      <p\n        #tipContent\n        [ngClass]=\"to.options[i].tooltipClass\"\n        class=\"margin-1\"\n        [innerHTML]=\"to.options[i].tooltipText\"\n      ></p>\n      <usa-icon\n        [position]=\"to.options[i].tooltipPosition ? to.options[i].tooltipPosition :'right'\"\n        [sdsTooltip]=\"tipContent\"\n        [size]=\"'lg'\"\n        [icon]=\"'info-circle'\"\n      ></usa-icon>\n    </div>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "FormlyFieldRichTextEditorComponent",
            "id": "component-FormlyFieldRichTextEditorComponent-bd0813a7d1879ab9fb97d9603bcd43f7560884b54b86e8788db125f5b1b6bac479ee1432f34094703ff2d8fc40d3592b5c59fb34e34b2e9191154f5c8fb73f8a",
            "file": "libs/packages/sam-formly/src/lib/formly/types/rich-text.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-rich-text-editor",
            "styleUrls": [],
            "styles": [],
            "template": "<sds-rich-text [formControl]=\"formControl\"> </sds-rich-text>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsRichTextComponent",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SdsRichTextComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { AbstractSdsFormly } from '../sds-formly';\nimport { SdsRichTextComponent } from '@gsa-sam/components';\n\n@Component({\n  selector: 'sds-formly-rich-text-editor',\n  template: ` <sds-rich-text [formControl]=\"formControl\"> </sds-rich-text> `,\n})\nexport class FormlyFieldRichTextEditorComponent extends AbstractSdsFormly {\n  @ViewChild(SdsRichTextComponent, { static: true }) public template: SdsRichTextComponent;\n\n  constructor(_cdr: ChangeDetectorRef) {\n    super();\n    this.cdr = _cdr;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AbstractSdsFormly"
        },
        {
            "name": "FormlyFieldSearchComponent",
            "id": "component-FormlyFieldSearchComponent-3db11d66523e62ad16a60bb7f4e14c37ba45d5408775bec3560f003b689eb3c29c8040bebdb2d9f02c224aa098a6a4182da04844cd1ef91c981541bf4d8a1620",
            "file": "libs/packages/sam-formly/src/lib/formly/types/search.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-search",
            "styleUrls": [],
            "styles": [],
            "template": "<sds-search [formControl]=\"formControl\" (submit)=\"to.submitHandler && to.submitHandler($event)\"></sds-search>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsSearchComponent",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SdsSearchComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { AbstractSdsFormly } from '../sds-formly';\nimport { SdsSearchComponent } from '@gsa-sam/components';\n\n@Component({\n  selector: 'sds-formly-field-search',\n  template: `\n    <sds-search [formControl]=\"formControl\" (submit)=\"to.submitHandler && to.submitHandler($event)\"></sds-search>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldSearchComponent extends AbstractSdsFormly {\n  @ViewChild(SdsSearchComponent, { static: true }) public template: SdsSearchComponent;\n\n  constructor(_cdr: ChangeDetectorRef) {\n    super();\n    this.cdr = _cdr;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AbstractSdsFormly"
        },
        {
            "name": "FormlyFieldSelectComponent",
            "id": "component-FormlyFieldSelectComponent-d9d76e4da13deddadc04be9ca014814989af38af62767e8e8bc5c9cf41467c19100ff7598c21d286bfcaaf86ee6646c65cd8c4f732600dbd4d88c703d0842b75",
            "file": "libs/packages/sam-formly/src/lib/formly/types/select.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-select",
            "styleUrls": [],
            "styles": [],
            "template": "<select\n  *ngIf=\"to.multiple; else singleSelect\"\n  multiple\n  [class.custom-select]=\"to.customSelect\"\n  [formControl]=\"formControl\"\n  [class.is-invalid]=\"showError\"\n  [formlyAttributes]=\"field\"\n>\n  <ng-container *ngFor=\"let item of to.options | formlySelectOptions: field | async\">\n    <optgroup *ngIf=\"item.group\" label=\"{{ item.label }}\">\n      <option *ngFor=\"let child of item.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n        {{ child.label }}\n      </option>\n    </optgroup>\n    <option *ngIf=\"!item.group\" [ngValue]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</option>\n  </ng-container>\n</select>\n<ng-template #singleSelect>\n  <select\n    class=\"usa-select\"\n    [formControl]=\"formControl\"\n    [class.custom-select]=\"to.customSelect\"\n    [class.is-invalid]=\"showError\"\n    [formlyAttributes]=\"field\"\n  >\n    <option *ngIf=\"to.placeholder\" [ngValue]=\"null\">{{ to.placeholder }}</option>\n    <ng-container *ngFor=\"let item of to.options | formlySelectOptions: field | async\">\n      <optgroup *ngIf=\"item.group\" label=\"{{ item.label }}\">\n        <option *ngFor=\"let child of item.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n          {{ child.label }}\n        </option>\n      </optgroup>\n      <option *ngIf=\"!item.group\" [ngValue]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</option>\n    </ng-container>\n  </select>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultOptions",
                    "defaultValue": "{\n    props: { options: [] },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-select',\n  template: `\n    <select\n      *ngIf=\"to.multiple; else singleSelect\"\n      multiple\n      [class.custom-select]=\"to.customSelect\"\n      [formControl]=\"formControl\"\n      [class.is-invalid]=\"showError\"\n      [formlyAttributes]=\"field\"\n    >\n      <ng-container *ngFor=\"let item of to.options | formlySelectOptions: field | async\">\n        <optgroup *ngIf=\"item.group\" label=\"{{ item.label }}\">\n          <option *ngFor=\"let child of item.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n            {{ child.label }}\n          </option>\n        </optgroup>\n        <option *ngIf=\"!item.group\" [ngValue]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</option>\n      </ng-container>\n    </select>\n    <ng-template #singleSelect>\n      <select\n        class=\"usa-select\"\n        [formControl]=\"formControl\"\n        [class.custom-select]=\"to.customSelect\"\n        [class.is-invalid]=\"showError\"\n        [formlyAttributes]=\"field\"\n      >\n        <option *ngIf=\"to.placeholder\" [ngValue]=\"null\">{{ to.placeholder }}</option>\n        <ng-container *ngFor=\"let item of to.options | formlySelectOptions: field | async\">\n          <optgroup *ngIf=\"item.group\" label=\"{{ item.label }}\">\n            <option *ngFor=\"let child of item.group\" [ngValue]=\"child.value\" [disabled]=\"child.disabled\">\n              {{ child.label }}\n            </option>\n          </optgroup>\n          <option *ngIf=\"!item.group\" [ngValue]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</option>\n        </ng-container>\n      </select>\n    </ng-template>\n  `,\n})\nexport class FormlyFieldSelectComponent extends FieldType {\n  defaultOptions = {\n    props: { options: [] },\n  };\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldType"
        },
        {
            "name": "FormlyFieldStepArrowComponent",
            "id": "component-FormlyFieldStepArrowComponent-eb8c6dec75abdd605e46bfb56259cfbaf178bc3eb5888924cc917aaa4613ce897e361bfc8e3d53a15d180d7cfaf4d12abceadc49ef04eac88bfe697e88cfa015",
            "file": "libs/packages/sam-formly/src/lib/formly/types/step-arrow.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-autocomplete",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"grid-row\">\n  <sds-step-arrow [number]=\"to.number\" [status]=\"to.status\"></sds-step-arrow>\n  <h3 class=\"margin-top-1\">{{ to.stepTitle }}</h3>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepArrowComponent",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SdsStepArrowComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { AbstractSdsFormly } from '../sds-formly';\nimport { SdsStepArrowComponent } from '@gsa-sam/components';\n\n@Component({\n  selector: 'sds-formly-field-autocomplete',\n  template: `\n    <div class=\"grid-row\">\n      <sds-step-arrow [number]=\"to.number\" [status]=\"to.status\"></sds-step-arrow>\n      <h3 class=\"margin-top-1\">{{ to.stepTitle }}</h3>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldStepArrowComponent extends AbstractSdsFormly {\n  @ViewChild(SdsStepArrowComponent, { static: true }) public template: SdsStepArrowComponent;\n\n  constructor(_cdr: ChangeDetectorRef) {\n    super(); /* istanbul ignore next */\n    this.cdr = _cdr;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AbstractSdsFormly"
        },
        {
            "name": "FormlyFieldTableComponent",
            "id": "component-FormlyFieldTableComponent-a332c4f3ad33859253f83c8d3386493f33555d33fdd97278b524f4832fad11baaa4204cc93a2ccf15b07bad003836476f9a15be9247777daa6511fa9596f685c",
            "file": "libs/packages/sam-formly/src/lib/formly/types/table.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-table",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./table.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "parentFieldConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFieldConfig",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FieldType, FormlyFieldConfig } from '@ngx-formly/core';\n\n/**\n * Data model for table formly types' tableColumns template option\n */\nexport interface SdsTableColumn {\n  /**\n   * used as column header\n   */\n  label: string;\n\n  /**\n   * used internally to reference the column\n   */\n  columnName: string;\n\n  /**\n   * refers to which property of the data to render for the given column\n   */\n  property?: string;\n\n  /**\n   * refers to static text to render for the column\n   */\n  text?: string;\n\n  /**\n   * refers to a function that should return a string to render for the column.\n   * The function takes in a single data element of the table\n   */\n  textFn?: (data: any) => string;\n\n  /**\n   * If the displayed value should be clickable, provide an onClick method\n   */\n  onClick?: (data: any, field: FormlyFieldConfig) => void;\n}\n\n@Component({\n  selector: `sds-formly-field-table`,\n  templateUrl: './table.html',\n})\nexport class FormlyFieldTableComponent extends FieldType implements OnInit {\n  // Referenced in html\n  parentFieldConfig: FormlyFieldConfig;\n\n  displayedColumns: string[] = [];\n\n  ngOnInit() {\n    this.displayedColumns = this.to.tableColumns.map((column) => column.columnName);\n    this.parentFieldConfig = this.field.parent;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldType",
            "implements": [
                "OnInit"
            ],
            "templateData": "<sds-table [data]=\"form.value\" [tableName]=\"to.name\" #fileTable>\n  <sds-table-column *ngFor=\"let column of to.tableColumns\" [sdsColumnName]=\"column.columnName\">\n    <ng-template #sdsHeaderCell>{{column.label}}</ng-template>\n    <ng-template #sdsCell let-element=\"element\">\n      <button\n        class=\"usa-button usa-button--unstyled text-secondary-dark\"\n        *ngIf=\"column.onClick; else noClick\"\n        (click)=\"column.onClick(element, parentFieldConfig)\"\n      >\n        <ng-container\n          [ngTemplateOutlet]=\"tableCellTemplates\"\n          [ngTemplateOutletContext]=\"{$implicit: element, column: column}\"\n        ></ng-container>\n      </button>\n      <ng-template #noClick>\n        <ng-container\n          [ngTemplateOutlet]=\"tableCellTemplates\"\n          [ngTemplateOutletContext]=\"{$implicit: element, column: column}\"\n        ></ng-container>\n      </ng-template>\n    </ng-template>\n  </sds-table-column>\n  <sds-header-row [displayedColumns]=\"displayedColumns\"></sds-header-row>\n  <sds-row [displayedColumns]=\"displayedColumns\"></sds-row>\n</sds-table>\n<div *ngIf=\"!form.value || !form.value.length\" class=\"border border-base-light text-center padding-1\">\n  {{to.noDataText}}\n</div>\n\n<ng-template #tableCellTemplates let-element let-column=\"column\">\n  <span *ngIf=\"column.property\">{{element[column.property]}}</span>\n  <span *ngIf=\"column.text\">{{column.text}}</span>\n  <span *ngIf=\"column.textFn\">{{column.textFn(element)}}</span>\n</ng-template>\n"
        },
        {
            "name": "FormlyFieldTextAreaComponent",
            "id": "component-FormlyFieldTextAreaComponent-88383a350d8c3bdb5f0e92a86d7daae00759cf330d68e1a8ae299d2ca91283274680c65b2c278907110ce6e0d48a58546408410438537275799db5284ac977a0",
            "file": "libs/packages/sam-formly/src/lib/formly/types/textarea.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-textarea",
            "styleUrls": [],
            "styles": [],
            "template": "<div [ngClass]=\"{ 'usa-character-count': to.maxlength }\">\n  <textarea\n    [formControl]=\"formControl\"\n    [cols]=\"to.cols\"\n    [rows]=\"to.rows\"\n    class=\"usa-textarea minw-15\"\n    [class.usa-input--error]=\"showError\"\n    [placeholder]=\"to.placeholder\"\n    [formlyAttributes]=\"field\"\n    [maxlength]=\"to.maxlength\"\n    (ngModelChange)=\"valueChange($event)\"\n  >\n  </textarea>\n  <span [attr.id]=\"id + '-character-count'\" class=\"usa-hint\" aria-live=\"polite\">\n    <span *ngIf=\"to.maxlength\">\n      {{ charactersRemaining }}\n      {{ charactersRemaining === 1 ? 'character' : 'characters' }}\n      {{ charactersRemaining === to.maxlength ? 'allowed' : 'left' }}\n    </span>\n  </span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "charactersRemaining",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "defaultOptions",
                    "defaultValue": "{\n    props: {\n      cols: 1,\n      rows: 1,\n    },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "valueChange",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-field-textarea',\n  template: `\n    <div [ngClass]=\"{ 'usa-character-count': to.maxlength }\">\n      <textarea\n        [formControl]=\"formControl\"\n        [cols]=\"to.cols\"\n        [rows]=\"to.rows\"\n        class=\"usa-textarea minw-15\"\n        [class.usa-input--error]=\"showError\"\n        [placeholder]=\"to.placeholder\"\n        [formlyAttributes]=\"field\"\n        [maxlength]=\"to.maxlength\"\n        (ngModelChange)=\"valueChange($event)\"\n      >\n      </textarea>\n      <span [attr.id]=\"id + '-character-count'\" class=\"usa-hint\" aria-live=\"polite\">\n        <span *ngIf=\"to.maxlength\">\n          {{ charactersRemaining }}\n          {{ charactersRemaining === 1 ? 'character' : 'characters' }}\n          {{ charactersRemaining === to.maxlength ? 'allowed' : 'left' }}\n        </span>\n      </span>\n    </div>\n  `,\n})\nexport class FormlyFieldTextAreaComponent extends FieldType implements OnInit {\n  defaultOptions = {\n    props: {\n      cols: 1,\n      rows: 1,\n    },\n  };\n\n  charactersRemaining: number;\n\n  ngOnInit() {\n    if (!this.to.maxlength) {\n      return;\n    }\n    const initialValue: string = this.field.formControl.value;\n\n    if (!initialValue) {\n      this.charactersRemaining = this.to.maxlength;\n      return;\n    }\n\n    if (initialValue && initialValue.length <= this.to.maxlength) {\n      this.charactersRemaining = this.to.maxlength - initialValue.length;\n      return;\n    }\n\n    // Contains initial value that is over max length limit, so we truncate text to be at max length\n    const truncatedValue = initialValue.substring(0, this.to.maxlength);\n    this.formControl.setValue(truncatedValue);\n    this.charactersRemaining = this.to.maxlength - truncatedValue.length;\n  }\n\n  valueChange(value: string) {\n    if (!this.to.maxlength) {\n      return;\n    }\n\n    if (value.length > this.to.maxlength) {\n      const newValue = value.substring(0, this.to.maxlength);\n      this.formControl.setValue(newValue);\n    } else {\n      this.charactersRemaining = Math.max(0, this.to.maxlength - value.length);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldType",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "FormlyFieldTextComponent",
            "id": "component-FormlyFieldTextComponent-0ae22aa7e4cadc7e300f097ca8e64707d6854985225894658f2f4e25fa1fd07f7b9a128a1d1eea7e8f729baca68705c2851ed558b37436aaeac9c6e323b08160",
            "file": "libs/packages/sam-formly/src/lib/formly/types/text.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-field-text",
            "styleUrls": [],
            "styles": [],
            "template": "<sds-text [formControl]=\"formControl\"></sds-text>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "template",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsTextComponent",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SdsTextComponent, {static: true}"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "cdr",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChangeDetectorRef",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                },
                {
                    "name": "setProperties",
                    "args": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configuration",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractSdsFormly"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\nimport { AbstractSdsFormly } from '../sds-formly';\nimport { SdsTextComponent } from '@gsa-sam/components';\n\n@Component({\n  selector: 'sds-formly-field-text',\n  template: ` <sds-text [formControl]=\"formControl\"></sds-text> `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldTextComponent extends AbstractSdsFormly {\n  @ViewChild(SdsTextComponent, { static: true }) public template: SdsTextComponent;\n\n  constructor(_cdr: ChangeDetectorRef) {\n    super(); /* istanbul ignore next */\n    this.cdr = _cdr;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "AbstractSdsFormly"
        },
        {
            "name": "FormlyFormFieldFilterWrapperComponent",
            "id": "component-FormlyFormFieldFilterWrapperComponent-4040c6bdb8e60404a799016468ae91f9ccc0d842356f9856ade5fc11d332660c1dd7b9d4ba493bf84436f3f30d005a196eab47e24821c5d5398ba16f31558c37",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/form-field.filterwrapper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sam-formly-filter-wrapper-form-field",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"wrapper-body\">\n  <div class=\"sds-accordion__trigger header-label\" [attr.aria-hidden]=\"to.ariaHidden ? 'false' : 'true'\">\n    {{ to.label }}\n  </div>\n  <ng-container #fieldComponent></ng-container>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n/**\n * @param string [to.ariaHidden] Hide the label\n * @param string [to.label] Text to be shown for the label\n */\n@Component({\n  selector: 'sam-formly-filter-wrapper-form-field',\n  template: `\n    <div class=\"wrapper-body\">\n      <div class=\"sds-accordion__trigger header-label\" [attr.aria-hidden]=\"to.ariaHidden ? 'false' : 'true'\">\n        {{ to.label }}\n      </div>\n      <ng-container #fieldComponent></ng-container>\n    </div>\n  `,\n})\nexport class FormlyFormFieldFilterWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef })\n  fieldComponent: ViewContainerRef;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper"
        },
        {
            "name": "FormlyGroupWrapperComponent",
            "id": "component-FormlyGroupWrapperComponent-9f7d84ee19e493335da2cf2300eaeaeb8b06a0941fc1d6bcdd5976fa9bebde8dc7c94b7bf18e7e77508b0c2df33afeebb68d12580b3e91b19bb65fdce1e1f52b",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/group.wrapper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container *ngIf=\"!to.readonlyMode; else defaultTemplate\">\n  <ng-container [ngSwitch]=\"to.group\">\n    <ng-container *ngSwitchCase=\"'accordion'\">\n      <usa-accordion #groupAccordion [singleSelect]=\"!multi\" class=\"sds-accordion--filters\">\n        <usa-accordion-item [expanded]=\"modelHasValue()\">\n          <ng-template UsaAccordionHeader>\n            <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n          </ng-template>\n          <ng-template UsaAccordionContent>\n            <ng-container #fieldComponent></ng-container>\n          </ng-template>\n        </usa-accordion-item>\n      </usa-accordion>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'panel'\">\n      <div class=\"sds-panel\" [ngClass]=\"{ 'sds-panel--multiple': field?.fieldGroup?.length }\">\n        <div\n          class=\"sds-panel__header padding-top-1\"\n          *ngIf=\"!to.hideLabel\"\n          [attr.aria-hidden]=\"!to.announceLabel ? undefined : 'true'\"\n        >\n          <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n        </div>\n        <div class=\"sds-panel__body\">\n          <ng-container #fieldComponent></ng-container>\n        </div>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'popover'\">\n      <div #popoverContent class=\"padding-1 text-left sds-width-max-content\">\n        <ng-container #fieldComponent></ng-container>\n      </div>\n      <div\n        [sdsPopover]=\"popoverContent\"\n        [position]=\"'bottom'\"\n        [closeOnContentClick]=\"to.closeOnContentClick != undefined ? to.closeOnContentClick : false\"\n        [closeOnClickOutside]=\"to.closeOnClickOutside != undefined ? to.closeOnClickOutside : true\"\n        tabindex=\"0\"\n        [attr.aria-label]=\"to.label\"\n      >\n        {{ to.label }}\n        <usa-icon [icon]=\"'chevron-down'\" [size]=\"'sm'\"></usa-icon>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <ng-container #fieldComponent></ng-container>\n    </ng-container>\n  </ng-container>\n</ng-container>\n<ng-template #defaultTemplate>\n  <ng-container #fieldComponent></ng-container>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accordion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsaAccordionComponent",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'groupAccordion'"
                        }
                    ]
                },
                {
                    "name": "accordionItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsaAccordionItem",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "UsaAccordionItem"
                        }
                    ]
                },
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                },
                {
                    "name": "multi",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "resetAllSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "methodsClass": [
                {
                    "name": "modelHasValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\nimport * as qs from 'qs';\nimport { Subscription } from 'rxjs';\nimport { UsaAccordionComponent, UsaAccordionItem } from '@gsa-sam/ngx-uswds';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @param string [to.group] used to set the wrapper tupe\n * @param string [to.announceLabel] For screenreader\n * @param string [to.label] Text to be shown for the label\n * @param string [to.hideLabel] Hide the label\n *\n */\n@Component({\n  template: `\n    <ng-container *ngIf=\"!to.readonlyMode; else defaultTemplate\">\n      <ng-container [ngSwitch]=\"to.group\">\n        <ng-container *ngSwitchCase=\"'accordion'\">\n          <usa-accordion #groupAccordion [singleSelect]=\"!multi\" class=\"sds-accordion--filters\">\n            <usa-accordion-item [expanded]=\"modelHasValue()\">\n              <ng-template UsaAccordionHeader>\n                <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n              </ng-template>\n              <ng-template UsaAccordionContent>\n                <ng-container #fieldComponent></ng-container>\n              </ng-template>\n            </usa-accordion-item>\n          </usa-accordion>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'panel'\">\n          <div class=\"sds-panel\" [ngClass]=\"{ 'sds-panel--multiple': field?.fieldGroup?.length }\">\n            <div\n              class=\"sds-panel__header padding-top-1\"\n              *ngIf=\"!to.hideLabel\"\n              [attr.aria-hidden]=\"!to.announceLabel ? undefined : 'true'\"\n            >\n              <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n            </div>\n            <div class=\"sds-panel__body\">\n              <ng-container #fieldComponent></ng-container>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'popover'\">\n          <div #popoverContent class=\"padding-1 text-left sds-width-max-content\">\n            <ng-container #fieldComponent></ng-container>\n          </div>\n          <div\n            [sdsPopover]=\"popoverContent\"\n            [position]=\"'bottom'\"\n            [closeOnContentClick]=\"to.closeOnContentClick != undefined ? to.closeOnContentClick : false\"\n            [closeOnClickOutside]=\"to.closeOnClickOutside != undefined ? to.closeOnClickOutside : true\"\n            tabindex=\"0\"\n            [attr.aria-label]=\"to.label\"\n          >\n            {{ to.label }}\n            <usa-icon [icon]=\"'chevron-down'\" [size]=\"'sm'\"></usa-icon>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <ng-container #fieldComponent></ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    <ng-template #defaultTemplate>\n      <ng-container #fieldComponent></ng-container>\n    </ng-template>\n  `,\n})\nexport class FormlyGroupWrapperComponent extends FieldWrapper implements AfterViewInit, OnDestroy {\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n\n  @ViewChild('groupAccordion') accordion: UsaAccordionComponent;\n  @ViewChild(UsaAccordionItem) accordionItem: UsaAccordionItem;\n\n  multi = true;\n\n  resetAllSubscription: Subscription;\n\n  constructor() {\n    super();\n  }\n\n  ngAfterViewInit() {\n    if (this.to.group === 'accordion' || this.to.group === 'panel' || this.field.fieldGroup) {\n      this.field.className = this.field.className ? this.field.className : 'margin-top-0';\n    }\n\n    if (this.to.group != 'accordion' || !this.accordion) {\n      return;\n    }\n\n    this.resetAllSubscription = this.field.options.fieldChanges\n      .pipe(filter(({ type }) => type === 'resetAll' && this.accordionItem.expanded))\n      .subscribe(() => {\n        if (!this.modelHasValue()) {\n          this.accordion.collapse(this.accordionItem.id);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.resetAllSubscription) {\n      this.resetAllSubscription.unsubscribe();\n    }\n  }\n\n  modelHasValue() {\n    if (this.to.hasOwnProperty('expand')) {\n      return this.to.expand;\n    } else {\n      const hasValue =\n        this.formControl.value instanceof Object\n          ? qs.stringify(this.formControl.value, { skipNulls: true })\n          : this.formControl.value;\n      return hasValue || this.formControl.dirty ? true : false;\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 79
            },
            "extends": "FieldWrapper",
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ]
        },
        {
            "name": "FormlyLabelWrapperComponent",
            "id": "component-FormlyLabelWrapperComponent-4a75b9221133b3d22bffd1a2daec14855fa4289da9be71181be5ef7f5c614648ccc0543669df0125b9769864cfa0d8718e1e13441cb0cb2c1aa57ec96516b144",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/label.wrapper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "    <div class=\"usa-form-group\" [class.usa-form-group--error]=\"showError\">\n      <div class=\"grid-row\">\n        <label\n          class=\"usa-label\"\n          *ngIf=\"hasLabel()\"\n          [attr.for]=\"id\"\n          [ngClass]=\"{\n            'margin-bottom-1':\n              this.field?.props?.label &&\n              !this.field?.props?.hideLabel &&\n              this.field?.parent?.fieldGroup?.length === 1,\n            'usa-sr-only':\n              to.hideLabel ||\n              ((to.group === 'panel' || to.group === 'accordion') && field?.parent?.type !== 'formly-group')\n          }\"\n        >\n          <span *ngIf=\"to.tagText\" class=\"usa-tag\" [ngClass]=\"to.tagClass ? to.tagClass : 'sds-tag--info-white'\">{{\n            to.tagText\n          }}</span>\n\n          <ng-container *ngIf=\"to.labelTemplate\" [ngTemplateOutlet]=\"to.labelTemplate\"> </ng-container>\n          <ng-container *ngIf=\"!to.labelTemplate\">\n            <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n          </ng-container>\n\n          <span class=\"text-normal\" *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n        </label>\n\n        <span *ngIf=\"to.tooltipText && field.type !== 'checkbox'\" class=\"margin-left-1\">\n          <p #tipContent [ngClass]=\"to.tooltipClass\" class=\"margin-1\" [innerHTML]=\"to.tooltipText\"></p>\n          <usa-icon\n            [position]=\"to.tooltipPosition ? to.tooltipPosition : 'right'\"\n            [sdsTooltip]=\"tipContent\"\n            [size]=\"'lg'\"\n            [icon]=\"'info-circle'\"\n          ></usa-icon>\n        </span>\n      </div>\n      <div\n        [ngClass]=\"{\n'{{to.labelContentClass}}': to.labelContentClass,\n         'single-form-control':\n              ((to.group === 'panel' || to.group === 'accordion') && field?.parent?.type !== 'formly-group')\n          }\"\n      >\n        <ng-container #fieldComponent></ng-container>\n      </div>\n    </div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "hasLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n/**\n * @param string [to.tagClass] Class to be added to the tag (default: sds-tag--info-white)\n * @param string [to.tagText] Text to be shown inside the tag\n * @param string [to.label] Text to be shown for the label\n * @param string [to.required] Makes the field required\n * @param string [to.hideOptional] Remove the optional text\n *\n */\n@Component({\n  template: `\n    <div class=\"usa-form-group\" [class.usa-form-group--error]=\"showError\">\n      <div class=\"grid-row\">\n        <label\n          class=\"usa-label\"\n          *ngIf=\"hasLabel()\"\n          [attr.for]=\"id\"\n          [ngClass]=\"{\n            'margin-bottom-1':\n              this.field?.props?.label &&\n              !this.field?.props?.hideLabel &&\n              this.field?.parent?.fieldGroup?.length === 1,\n            'usa-sr-only':\n              to.hideLabel ||\n              ((to.group === 'panel' || to.group === 'accordion') && field?.parent?.type !== 'formly-group')\n          }\"\n        >\n          <span *ngIf=\"to.tagText\" class=\"usa-tag\" [ngClass]=\"to.tagClass ? to.tagClass : 'sds-tag--info-white'\">{{\n            to.tagText\n          }}</span>\n\n          <ng-container *ngIf=\"to.labelTemplate\" [ngTemplateOutlet]=\"to.labelTemplate\"> </ng-container>\n          <ng-container *ngIf=\"!to.labelTemplate\">\n            <span [attr.class]=\"to.labelClass\">{{ to.label }}</span>\n          </ng-container>\n\n          <span class=\"text-normal\" *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n        </label>\n\n        <span *ngIf=\"to.tooltipText && field.type !== 'checkbox'\" class=\"margin-left-1\">\n          <p #tipContent [ngClass]=\"to.tooltipClass\" class=\"margin-1\" [innerHTML]=\"to.tooltipText\"></p>\n          <usa-icon\n            [position]=\"to.tooltipPosition ? to.tooltipPosition : 'right'\"\n            [sdsTooltip]=\"tipContent\"\n            [size]=\"'lg'\"\n            [icon]=\"'info-circle'\"\n          ></usa-icon>\n        </span>\n      </div>\n      <div\n        [ngClass]=\"{\n'{{to.labelContentClass}}': to.labelContentClass,\n         'single-form-control':\n              ((to.group === 'panel' || to.group === 'accordion') && field?.parent?.type !== 'formly-group')\n          }\"\n      >\n        <ng-container #fieldComponent></ng-container>\n      </div>\n    </div>\n  `,\n})\nexport class FormlyLabelWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef })\n  fieldComponent: ViewContainerRef;\n  hasLabel() {\n    if (this.to.hideLabel) {\n      return false;\n    }\n\n    if (this.to.label) {\n      if (!(this.field.type === 'checkbox' || this.field.type === 'multicheckbox')) {\n        return true;\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper"
        },
        {
            "name": "FormlyReadonlyWrapperComponent",
            "id": "component-FormlyReadonlyWrapperComponent-90d3b35cf5071da3e45082df37f4bab4e248c3ed9a17d2bc0770da8f21b272b3b6b0a0391a0d75c8123e1e6f7a54fa7b889b09d2184ea213c31d6d51279d9964",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/readonly.wrapper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<div\n  *ngIf=\"field.type === sdsFormlyTypes.READONLY || to.readonlyMode; else passThrough\"\n  [ngClass]=\"to.readonlyClass\"\n>\n  <span *ngIf=\"to.readonlyTemplate; else defaultTemplate\" [innerHTML]=\"to.readonlyTemplate(field)\"></span>\n  <ng-template #defaultTemplate>\n    <sds-readonly-container [formlyFieldConfig]=\"field\"></sds-readonly-container>\n  </ng-template>\n</div>\n<ng-template #passThrough>\n  <ng-container #fieldComponent></ng-container>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                },
                {
                    "name": "sdsFormlyTypes",
                    "defaultValue": "SdsFormlyTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\nimport { SdsFormlyTypes } from '../models/formly-types';\n/**\n * @param string [to.required] Makes the field required\n */\n@Component({\n  template: `\n    <div\n      *ngIf=\"field.type === sdsFormlyTypes.READONLY || to.readonlyMode; else passThrough\"\n      [ngClass]=\"to.readonlyClass\"\n    >\n      <span *ngIf=\"to.readonlyTemplate; else defaultTemplate\" [innerHTML]=\"to.readonlyTemplate(field)\"></span>\n      <ng-template #defaultTemplate>\n        <sds-readonly-container [formlyFieldConfig]=\"field\"></sds-readonly-container>\n      </ng-template>\n    </div>\n    <ng-template #passThrough>\n      <ng-container #fieldComponent></ng-container>\n    </ng-template>\n  `,\n})\nexport class FormlyReadonlyWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef })\n  fieldComponent: ViewContainerRef;\n\n  sdsFormlyTypes = SdsFormlyTypes;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper"
        },
        {
            "name": "FormlyTabsWrapperComponent",
            "id": "component-FormlyTabsWrapperComponent-1496ff40f5e26cd9c4758b2c3f72d17a957e7609ea8de64e11d98d077b06ee19f00f11ae1ba2312deae82935c43eb1c5a4699e24d87e7330222fe4ac3636fa17",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/tabs.wrapper.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<label [attr.for]=\"id\" class=\"usa-label text-bold text-base-dark\">{{ to.label }}</label>\n<p [innerHTML]=\"to.description\"></p>\n<div class=\"sds-filter-keywords\">\n  <ng-container *ngIf=\"field.fieldArray?.fieldGroup?.length > 1; else singleField\">\n    <sds-tabs\n      [tabClass]=\"to.tabClass ? to.tabClass : 'sds-tabs--formly'\"\n      [interceptTabChange]=\"to.interceptTabChange\"\n      (preTabChange)=\"to.preTabChange ? to.preTabChange($event) : null\"\n      [(selectedTab)]=\"to.selectedTab\"\n    >\n      <sds-tab-panel\n        *ngFor=\"let fieldConfig of field.fieldArray.fieldGroup\"\n        [tabHeader]=\"fieldConfig.props?.tabHeader\"\n      >\n        <formly-form [fields]=\"[fieldConfig]\" [model]=\"_initialModel\" (modelChange)=\"onModelChange(fieldConfig)\">\n        </formly-form>\n      </sds-tab-panel>\n    </sds-tabs>\n  </ng-container>\n\n  <ng-template #singleField>\n    <div class=\"padding-left-2 padding-right-2 padding-bottom-1\">\n      <formly-form\n        [fields]=\"field.fieldArray.fieldGroup\"\n        [model]=\"_initialModel\"\n        (modelChange)=\"onModelChange(field.fieldArray.fieldGroup[0])\"\n      ></formly-form>\n    </div>\n  </ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_initialModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "toDestroy",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onModelChange",
                    "args": [
                        {
                            "name": "fieldConfig",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fieldConfig",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFieldConfig",
                    "args": [
                        {
                            "name": "fieldConfig",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nUpdates field configurations for each tab content when a submit button is present.\nIf a submit button id is not defined in the input field's template options, then simply exits\nIf submit button id is defined, then we expect a button of type submit to exist\nin the field config's field group, and attach submit handling logic to\nthe button's click event.\n",
                    "description": "<p>Updates field configurations for each tab content when a submit button is present.\nIf a submit button id is not defined in the input field&#39;s template options, then simply exits\nIf submit button id is defined, then we expect a button of type submit to exist\nin the field config&#39;s field group, and attach submit handling logic to\nthe button&#39;s click event.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2885,
                                "end": 2896,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "fieldConfig"
                            },
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2879,
                                "end": 2884,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>the FormlyFieldConfig to transform into an array</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "updateFieldModel",
                    "args": [
                        {
                            "name": "fieldConfig",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSubmit handling logic for a field config that contains a submit button.\nAngular form keeps a pendingValue internally to keep track of values\nthat exist in the input field, but have not yet been updated as the model\nto to restrictions on when to update (such as onBlur or Submit). Thus we manually\ndo the update by setting the form's value to its pending value, which will\ntrigger a model change event for clients to execute on\n",
                    "description": "<p>Submit handling logic for a field config that contains a submit button.\nAngular form keeps a pendingValue internally to keep track of values\nthat exist in the input field, but have not yet been updated as the model\nto to restrictions on when to update (such as onBlur or Submit). Thus we manually\ndo the update by setting the form&#39;s value to its pending value, which will\ntrigger a model change event for clients to execute on</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4054,
                                "end": 4065,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "fieldConfig"
                            },
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4048,
                                "end": 4053,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The field config whose form control need to be updated</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FieldWrapper, FormlyFieldConfig } from '@ngx-formly/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  template: `\n    <label [attr.for]=\"id\" class=\"usa-label text-bold text-base-dark\">{{ to.label }}</label>\n    <p [innerHTML]=\"to.description\"></p>\n    <div class=\"sds-filter-keywords\">\n      <ng-container *ngIf=\"field.fieldArray?.fieldGroup?.length > 1; else singleField\">\n        <sds-tabs\n          [tabClass]=\"to.tabClass ? to.tabClass : 'sds-tabs--formly'\"\n          [interceptTabChange]=\"to.interceptTabChange\"\n          (preTabChange)=\"to.preTabChange ? to.preTabChange($event) : null\"\n          [(selectedTab)]=\"to.selectedTab\"\n        >\n          <sds-tab-panel\n            *ngFor=\"let fieldConfig of field.fieldArray.fieldGroup\"\n            [tabHeader]=\"fieldConfig.props?.tabHeader\"\n          >\n            <formly-form [fields]=\"[fieldConfig]\" [model]=\"_initialModel\" (modelChange)=\"onModelChange(fieldConfig)\">\n            </formly-form>\n          </sds-tab-panel>\n        </sds-tabs>\n      </ng-container>\n\n      <ng-template #singleField>\n        <div class=\"padding-left-2 padding-right-2 padding-bottom-1\">\n          <formly-form\n            [fields]=\"field.fieldArray.fieldGroup\"\n            [model]=\"_initialModel\"\n            (modelChange)=\"onModelChange(field.fieldArray.fieldGroup[0])\"\n          ></formly-form>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyTabsWrapperComponent extends FieldWrapper implements OnInit, OnDestroy {\n  _initialModel: any;\n\n  toDestroy: Subscription = new Subscription();\n\n  ngOnInit() {\n    if (!this.field.fieldArray || !this.field.fieldArray.fieldGroup) {\n      throw new Error('Please define contents of keywords through a fieldGroup within the fieldArray property');\n    }\n\n    this._initialModel = this.model && this.model[this.key as string] ? { ...this.model[this.key as string] } : {};\n    if (this.field.fieldArray && this.field.fieldArray.fieldGroup) {\n      this.field.fieldArray.fieldGroup.forEach((fieldConfig: FormlyFieldConfig) => {\n        this.updateFieldConfig(fieldConfig);\n      });\n    }\n\n    const valueChangeSub = this.formControl.valueChanges.subscribe((newValue) => {\n      this._initialModel = newValue;\n    });\n    this.toDestroy.add(valueChangeSub);\n  }\n\n  ngOnDestroy() {\n    this.toDestroy.unsubscribe();\n  }\n\n  /**\n   * Updates field configurations for each tab content when a submit button is present.\n   * If a submit button id is not defined in the input field's template options, then simply exits\n   * If submit button id is defined, then we expect a button of type submit to exist\n   * in the field config's field group, and attach submit handling logic to\n   * the button's click event.\n   * @param fieldConfig - the FormlyFieldConfig to transform into an array\n   */\n  updateFieldConfig(fieldConfig: FormlyFieldConfig) {\n    const submitButtonId = fieldConfig.props?.submitButtonId;\n    if (!submitButtonId) {\n      return;\n    }\n\n    // If submit button is present, manually add logic to update the form when the button is clicked\n    fieldConfig.fieldGroup.forEach((field) => {\n      if (field.id === submitButtonId) {\n        field.props = field.props ? field.props : {};\n        field.props.onClick = () => {\n          this.updateFieldModel(fieldConfig);\n        };\n      }\n      field.modelOptions = { updateOn: 'submit' };\n    });\n  }\n\n  /**\n   * Submit handling logic for a field config that contains a submit button.\n   * Angular form keeps a pendingValue internally to keep track of values\n   * that exist in the input field, but have not yet been updated as the model\n   * to to restrictions on when to update (such as onBlur or Submit). Thus we manually\n   * do the update by setting the form's value to its pending value, which will\n   * trigger a model change event for clients to execute on\n   * @param fieldConfig - The field config whose form control need to be updated\n   */\n  updateFieldModel(fieldConfig: FormlyFieldConfig) {\n    // Manual update each form in formly field\n    Object.keys(fieldConfig.form.controls).forEach((field) => {\n      const control: any = fieldConfig.form.get(field);\n      if (control._pendingValue) {\n        control.setValue(control._pendingValue);\n        control.markAsTouched();\n      }\n    });\n  }\n\n  onModelChange(fieldConfig: FormlyFieldConfig) {\n    this.form.get(this.key as string).setValue(fieldConfig.form.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper",
            "implements": [
                "OnInit",
                "OnDestroy"
            ]
        },
        {
            "name": "FormlyValidationWrapperComponent",
            "id": "component-FormlyValidationWrapperComponent-63bcccd3ace286475f5c817196a0fe785234fc4d8e8643ea831109ae235b9405191bbc43f0f8840aa0eaea0f29e95ddac801efa43e78e17a02bcb6fe52e5e2a1",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/validation.wrapper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container #fieldComponent></ng-container>\n<div *ngIf=\"showError\" class=\"usa-error-message\" [style.display]=\"'block'\">\n  <formly-validation-message [field]=\"field\"></formly-validation-message>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n/**\n * @param string [to.required] Makes the field required\n */\n@Component({\n  template: `\n    <ng-container #fieldComponent></ng-container>\n    <div *ngIf=\"showError\" class=\"usa-error-message\" [style.display]=\"'block'\">\n      <formly-validation-message [field]=\"field\"></formly-validation-message>\n    </div>\n  `,\n})\nexport class FormlyValidationWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef })\n  fieldComponent: ViewContainerRef;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper"
        },
        {
            "name": "FormlyWrapperFormFieldComponent",
            "id": "component-FormlyWrapperFormFieldComponent-2e7358ed09b29a6c15c6055b0283fcd0a412a705a685d37e40e6e9bf809b722593f5461ae023367bb5bcc560b61d450fd0d099ffc04dccb6ebdb73c110fa2126",
            "file": "libs/packages/sam-formly/src/lib/formly/wrappers/form-field.wrapper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-wrapper-form-field",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"usa-form-group\" [class.usa-form-group--error]=\"showError\">\n  <label class=\"usa-label\" *ngIf=\"to.label && to.hideLabel !== true\" [attr.for]=\"id\" [ngClass]=\"to.labelClass\">\n    <span *ngIf=\"to.tagText\" class=\"usa-tag\" [ngClass]=\"to.tagClass ? to.tagClass : 'sds-tag--info-white'\">{{\n      to.tagText\n    }}</span>\n    <span>{{ to.label }}</span>\n    <span *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n  </label>\n  <div *ngIf=\"to.description\" class=\"usa-label--description\">\n    {{ to.description }}\n  </div>\n  <ng-template #fieldComponent></ng-template>\n  <div *ngIf=\"showError\" class=\"usa-error-message\" [style.display]=\"'block'\">\n    <formly-validation-message [field]=\"field\"></formly-validation-message>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fieldComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'fieldComponent', {read: ViewContainerRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n\n\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild, ViewContainerRef } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n/**\n * @param string [to.tagClass] Class to be added to the tag (default: sds-tag--info-white)\n * @param string [to.tagText] Text to be shown inside the tag\n * @param string [to.labelClass] Class to be applied to the label\n * @param string [to.label] Text to be shown for the label\n * @param string [to.required] Makes the field required\n * @param string [to.description] Add a description below the label\n * @param string [to.hideOptional] Remove the optional text\n * @param string [to.hideLabel] Hide the label\n *\n */\n\n@Component({\n  selector: 'sds-formly-wrapper-form-field',\n  template: `\n    <div class=\"usa-form-group\" [class.usa-form-group--error]=\"showError\">\n      <label class=\"usa-label\" *ngIf=\"to.label && to.hideLabel !== true\" [attr.for]=\"id\" [ngClass]=\"to.labelClass\">\n        <span *ngIf=\"to.tagText\" class=\"usa-tag\" [ngClass]=\"to.tagClass ? to.tagClass : 'sds-tag--info-white'\">{{\n          to.tagText\n        }}</span>\n        <span>{{ to.label }}</span>\n        <span *ngIf=\"!to.required && !to.hideOptional\"> (Optional)</span>\n      </label>\n      <div *ngIf=\"to.description\" class=\"usa-label--description\">\n        {{ to.description }}\n      </div>\n      <ng-template #fieldComponent></ng-template>\n      <div *ngIf=\"showError\" class=\"usa-error-message\" [style.display]=\"'block'\">\n        <formly-validation-message [field]=\"field\"></formly-validation-message>\n      </div>\n    </div>\n  `,\n})\nexport class FormlyWrapperFormFieldComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef })\n  fieldComponent!: ViewContainerRef;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": "FieldWrapper"
        },
        {
            "name": "ReadonlyAutocompleteComponent",
            "id": "component-ReadonlyAutocompleteComponent-dc693f42aa54b7809e1bf63a3b56340e104e10830f29409681d5b51fef71aca6c0dac50d1b94955f8874f62d198869a0b2651883538cb9701fd1804a967b94c3",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-autocomplete.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-autocomplete",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngIf=\"valueTemplate; else defaultValue\"\n  [ngTemplateOutlet]=\"valueTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: displayValue }\"\n>\n</ng-container>\n<ng-template #defaultValue>\n  <span class=\"text-bold\" [innerHTML]=\"displayValue\"></span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "autocompleteSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "SDSAutocompletelConfiguration",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { SDSAutocompletelConfiguration } from '@gsa-sam/components';\n\n@Component({\n  selector: `sds-readonly-autocomplete`,\n  template: `\n    <ng-container\n      *ngIf=\"valueTemplate; else defaultValue\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: displayValue }\"\n    >\n    </ng-container>\n    <ng-template #defaultValue>\n      <span class=\"text-bold\" [innerHTML]=\"displayValue\"></span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyAutocompleteComponent implements OnInit {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n  @Input() autocompleteSettings: SDSAutocompletelConfiguration;\n\n  displayValue: string;\n\n  ngOnInit() {\n    if (!this.autocompleteSettings || !this.autocompleteSettings.primaryTextField) {\n      throw new Error(`Primary text field missing in autocomplete settings with value of ${this.value}`);\n    }\n\n    if (!this.value || !this.value.length) {\n      this.displayValue = '&mdash;';\n    } else {\n      this.displayValue = this.value.map((value) => value[this.autocompleteSettings.primaryTextField]).join(', ');\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ReadonlyCheckboxComponent",
            "id": "component-ReadonlyCheckboxComponent-971ca19f4dd567e1a622c31b5d17816f1735c977631e3e04002eada07775e8dcf1f9fa9b7d1d0127cdce6496e5598f0915b2875f460d8e24cc19bf60b2bccf2a",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-checkbox.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-checkbox",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngIf=\"valueTemplate; else defaultValue\"\n  [ngTemplateOutlet]=\"valueTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: value }\"\n>\n</ng-container>\n<ng-template #defaultValue>\n  <span class=\"text-bold\">{{ value ? 'Checked' : 'Unchecked' }}</span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: `sds-readonly-checkbox`,\n  template: `\n    <ng-container\n      *ngIf=\"valueTemplate; else defaultValue\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: value }\"\n    >\n    </ng-container>\n    <ng-template #defaultValue>\n      <span class=\"text-bold\">{{ value ? 'Checked' : 'Unchecked' }}</span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyCheckboxComponent {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReadonlyContainerComponent",
            "id": "component-ReadonlyContainerComponent-884aa51d58542613e1a2fc9225d24613e062831e9ffa33a18aa7bec95f31aeba34eb558cd7a52e51dc6efa29e0da8e7589e11b396ded0ce9c1860d2d357c9a24",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./readonly-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "additionalConfig",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdditional information useful for displaying the value - will be ignored if formlyFieldConfig is defined\n",
                    "description": "<p>Additional information useful for displaying the value - will be ignored if formlyFieldConfig is defined</p>\n",
                    "line": 56,
                    "type": "ReadonlyOptions",
                    "decorators": []
                },
                {
                    "name": "formlyFieldConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormlyfieldconfig that is used to generate the formlyform. If this value\nis provided, the necessary information will be extracted from the given\nfield configuration, and all other inputs will be ignored.\n",
                    "description": "<p>Formlyfieldconfig that is used to generate the formlyform. If this value\nis provided, the necessary information will be extracted from the given\nfield configuration, and all other inputs will be ignored.</p>\n",
                    "line": 36,
                    "type": "FormlyFieldConfig",
                    "decorators": []
                },
                {
                    "name": "formlyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nType of formly to display value for - will be ignored if formlyFieldConfig is defined\n",
                    "description": "<p>Type of formly to display value for - will be ignored if formlyFieldConfig is defined</p>\n",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nLabel for the given value - will be ignored if formlyFieldConfig input is defined\n",
                    "description": "<p>Label for the given value - will be ignored if formlyFieldConfig input is defined</p>\n",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nValue of corresponding label - will be ignored if formlyFieldConfig is defined\n",
                    "description": "<p>Value of corresponding label - will be ignored if formlyFieldConfig is defined</p>\n",
                    "line": 51,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "labelTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReadonlyLabelDirective",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "ReadonlyLabelDirective"
                        }
                    ]
                },
                {
                    "name": "sdsFormlyTypes",
                    "defaultValue": "SdsFormlyTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReadonlyValueDirective",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "ReadonlyValueDirective"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "assignAdditionalConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>Wrapper level component for displaying readonly format for each formly types</p>\n",
            "rawdescription": "\n\nWrapper level component for displaying readonly format for each formly types\n",
            "type": "component",
            "sourceCode": "import { AfterContentInit, Component, ContentChild, Directive, Input, OnInit, TemplateRef } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { SdsFormlyTypes } from '../models/formly-types';\nimport { ReadonlyOptions } from './readonly-options.model';\n\n@Directive({\n  selector: '[sdsReadonlyLabel]',\n})\nexport class ReadonlyLabelDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n@Directive({\n  selector: '[sdsReadonlyValue]',\n})\nexport class ReadonlyValueDirective {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n\n/**\n * Wrapper level component for displaying readonly format for each formly types\n */\n@Component({\n  selector: `sds-readonly-container`,\n  templateUrl: './readonly-container.component.html',\n})\nexport class ReadonlyContainerComponent implements OnInit {\n  @ContentChild(ReadonlyLabelDirective) labelTemplate: ReadonlyLabelDirective;\n  @ContentChild(ReadonlyValueDirective) valueTemplate: ReadonlyValueDirective;\n\n  /**\n   * Formlyfieldconfig that is used to generate the formlyform. If this value\n   * is provided, the necessary information will be extracted from the given\n   * field configuration, and all other inputs will be ignored.\n   */\n  @Input() formlyFieldConfig: FormlyFieldConfig;\n\n  /**\n   * Type of formly to display value for - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() formlyType: string;\n\n  /**\n   * Label for the given value - will be ignored if formlyFieldConfig input is defined\n   * */\n  @Input() label: string;\n\n  /**\n   * Value of corresponding label - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() value: any;\n\n  /**\n   * Additional information useful for displaying the value - will be ignored if formlyFieldConfig is defined\n   */\n  @Input() additionalConfig: ReadonlyOptions = {};\n\n  sdsFormlyTypes = SdsFormlyTypes;\n\n  ngOnInit() {\n    if (this.formlyFieldConfig) {\n      this.label = this.formlyFieldConfig.props.label;\n      this.value = this.formlyFieldConfig.formControl.value;\n      this.formlyType = this.formlyFieldConfig.type;\n      this.assignAdditionalConfig();\n    }\n  }\n\n  private assignAdditionalConfig() {\n    const options = this.formlyFieldConfig.props.options as any;\n    this.additionalConfig = {\n      providedOptions: options,\n    };\n\n    if (this.formlyFieldConfig.type === this.sdsFormlyTypes.AUTOCOMPLETE) {\n      this.additionalConfig.autocompleteOptions = this.formlyFieldConfig.props.configuration;\n    }\n\n    // We do array access from field config for daterangepicker, which can be undefined for other types,\n    // hence this is sectioned off in a conditional\n    if (this.formlyFieldConfig.type === this.sdsFormlyTypes.DATERANGEPICKER) {\n      this.additionalConfig.daterangepickerOptions = {\n        fromDateKey: this.formlyFieldConfig.fieldGroup[0].key as any,\n        toDateKey: this.formlyFieldConfig.fieldGroup[1].key as any,\n      };\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container\n  *ngIf=\"labelTemplate; else defaultLabel\"\n  [ngTemplateOutlet]=\"labelTemplate.templateRef\"\n  [ngTemplateOutletContext]=\"{ $implicit: formlyFieldConfig?.props }\"\n>\n</ng-container>\n\n<ng-template #defaultLabel>\n  <label class=\"usa-label\">\n    <span\n      *ngIf=\"formlyFieldConfig?.props?.tagText\"\n      class=\"usa-tag\"\n      [ngClass]=\"\n        formlyFieldConfig.props.tagClass ? formlyFieldConfig.props.tagClass : 'sds-tag--info-white'\n      \"\n      >{{ formlyFieldConfig.props.tagText }}</span\n    >\n    {{ label }}\n  </label>\n</ng-template>\n\n<span [ngSwitch]=\"formlyType\">\n  <sds-readonly-input *ngSwitchCase=\"sdsFormlyTypes.INPUT\" [value]=\"value\" [valueTemplate]=\"valueTemplate?.templateRef\">\n  </sds-readonly-input>\n\n  <sds-readonly-input\n    *ngSwitchCase=\"sdsFormlyTypes.TEXTAREA\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n  >\n  </sds-readonly-input>\n\n  <sds-readonly-input\n    *ngSwitchCase=\"sdsFormlyTypes.READONLY\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n  >\n  </sds-readonly-input>\n\n  <sds-readonly-input\n    *ngSwitchCase=\"sdsFormlyTypes.SEARCH\"\n    [value]=\"value.searchText\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n  >\n  </sds-readonly-input>\n\n  <sds-readonly-datepicker\n    *ngSwitchCase=\"sdsFormlyTypes.DATEPICKER\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n  >\n  </sds-readonly-datepicker>\n\n  <sds-readonly-select\n    *ngSwitchCase=\"sdsFormlyTypes.SELECT\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n    [selectOptions]=\"additionalConfig.providedOptions\"\n  >\n  </sds-readonly-select>\n\n  <sds-readonly-radio\n    *ngSwitchCase=\"sdsFormlyTypes.RADIO\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n    [radioOptions]=\"additionalConfig.providedOptions\"\n  >\n  </sds-readonly-radio>\n\n  <sds-readonly-fileinfo\n    *ngSwitchCase=\"sdsFormlyTypes.FILEINFO\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n    [fileInfoOptions]=\"additionalConfig.providedOptions\"\n  >\n  </sds-readonly-fileinfo>\n\n  <sds-readonly-autocomplete\n    *ngSwitchCase=\"sdsFormlyTypes.AUTOCOMPLETE\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n    [autocompleteSettings]=\"additionalConfig.autocompleteOptions\"\n  >\n  </sds-readonly-autocomplete>\n\n  <sds-readonly-checkbox\n    *ngSwitchCase=\"sdsFormlyTypes.CHECKBOX\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n  >\n  </sds-readonly-checkbox>\n\n  <sds-readonly-multicheckbox\n    *ngSwitchCase=\"sdsFormlyTypes.MULTICHECKBOX\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n    [multicheckboxOptions]=\"additionalConfig.providedOptions\"\n  ></sds-readonly-multicheckbox>\n\n  <sds-readonly-daterange\n    *ngSwitchCase=\"sdsFormlyTypes.DATERANGEPICKER\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n    [daterangepickerOptions]=\"additionalConfig.daterangepickerOptions\"\n  >\n  </sds-readonly-daterange>\n\n  <sds-readonly-daterange\n    *ngSwitchCase=\"sdsFormlyTypes.DATERANGEPICKERV2\"\n    [value]=\"value\"\n    [valueTemplate]=\"valueTemplate?.templateRef\"\n    [daterangepickerOptions]=\"additionalConfig.daterangepickerOptions\"\n  >\n  </sds-readonly-daterange>\n</span>\n"
        },
        {
            "name": "ReadonlyDatepickerComponent",
            "id": "component-ReadonlyDatepickerComponent-4f7c53ee507a375bf15f77c4c326930d2176d6e592c8ec84f37e901b06f9c89b11d49f414477fba1964d062d63b9f19fd975f8d8b460a2e447a2a91b05bd0598",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-datepicker.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-datepicker",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngIf=\"valueTemplate; else defaultValue\"\n  [ngTemplateOutlet]=\"valueTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: value }\"\n>\n</ng-container>\n<ng-template #defaultValue>\n  <span class=\"text-bold\"> {{ value ? (value | date: 'mediumDate') : '&mdash;' }}</span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common';\nimport { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'sds-readonly-datepicker',\n  template: `\n    <ng-container\n      *ngIf=\"valueTemplate; else defaultValue\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: value }\"\n    >\n    </ng-container>\n    <ng-template #defaultValue>\n      <span class=\"text-bold\"> {{ value ? (value | date: 'mediumDate') : '&mdash;' }}</span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyDatepickerComponent {\n  @Input() value: Date;\n  @Input() valueTemplate: TemplateRef<any>;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReadonlyDaterangeComponent",
            "id": "component-ReadonlyDaterangeComponent-98b1be1fad6b9f06242cce83b7034390e50ea657a074ff1e6164f531b5483775685f2a48c1001813d683ee5e6fe796b47fbbc95f659de9d37900bef23a2d45c3",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-daterange.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-daterange",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngIf=\"valueTemplate; else defaultValue\"\n  [ngTemplateOutlet]=\"valueTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: displayValue }\"\n>\n</ng-container>\n<ng-template #defaultValue>\n  <span class=\"text-bold\">\n    {{ displayValue }}\n  </span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "daterangepickerOptions",
                    "defaultValue": "{\n    fromDateKey: 'fromDate',\n    toDateKey: 'toDate',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "{ fromDateKey: string; toDateKey: string; }",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common';\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: `sds-readonly-daterange`,\n  template: `\n    <ng-container\n      *ngIf=\"valueTemplate; else defaultValue\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: displayValue }\"\n    >\n    </ng-container>\n    <ng-template #defaultValue>\n      <span class=\"text-bold\">\n        {{ displayValue }}\n      </span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyDaterangeComponent implements OnInit {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n  @Input() daterangepickerOptions = {\n    fromDateKey: 'fromDate',\n    toDateKey: 'toDate',\n  };\n\n  displayValue: string;\n  constructor(private datePipe: DatePipe) {}\n\n  ngOnInit() {\n    let fromDate = this.datePipe.transform(this.value[this.daterangepickerOptions.fromDateKey], 'mediumDate');\n    let toDate = this.datePipe.transform(this.value[this.daterangepickerOptions.toDateKey], 'mediumDate');\n    this.displayValue = `${fromDate ? fromDate : '--'} ${toDate ? ' - ' + toDate : ''}`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "datePipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "datePipe",
                        "type": "DatePipe",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ReadonlyFileinfoComponent",
            "id": "component-ReadonlyFileinfoComponent-fa6e82f0a68371395dd846d8cf2504dbc61a9def1afed5b3a865bded0f2e85900253f657aaa50c4de17353bb05f5cf3e352518ab05426b285d49d64914921491",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-fileinfo.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-fileinfo",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngIf=\"valueTemplate; else defaultValue\"\n  [ngTemplateOutlet]=\"valueTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: displayValue }\"\n>\n</ng-container>\n<ng-template #defaultValue>\n  <span class=\"text-bold\">{{ displayValue }}</span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fileInfoOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: `sds-readonly-fileinfo`,\n  template: `\n    <ng-container\n      *ngIf=\"valueTemplate; else defaultValue\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: displayValue }\"\n    >\n    </ng-container>\n    <ng-template #defaultValue>\n      <span class=\"text-bold\">{{ displayValue }}</span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyFileinfoComponent implements OnInit, OnChanges {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n  @Input() fileInfoOptions: any[];\n\n  displayValue: string;\n\n  ngOnInit() {\n    if (!this.fileInfoOptions || !this.fileInfoOptions.length) {\n      throw new Error(`No option list provided for readonly mode of fileinfo type with value of ${this.value}`);\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.fileInfoOptions) {\n      return;\n    }\n\n    const selectedOption = this.fileInfoOptions.find((option) => option.value === this.value);\n    if (!selectedOption) {\n      this.displayValue = '&mdash;';\n    }\n    this.displayValue = selectedOption.label + ' - ' + selectedOption.value;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit",
                "OnChanges"
            ]
        },
        {
            "name": "ReadonlyInputComponent",
            "id": "component-ReadonlyInputComponent-3cc7cedd54dce990c040bc6718352c02a0d10b6ad5f347fad557cc93b2320b6e92fce9ed147f88e331a39f3ac99c58af6c9a4f11253d99e7d1b49c448db56bf0",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-input.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-input",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngIf=\"valueTemplate; else defaultValue\"\n  [ngTemplateOutlet]=\"valueTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: value }\"\n>\n</ng-container>\n<ng-template #defaultValue>\n  <span class=\"text-bold\">{{ value ? value : '&mdash;' }}</span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: `sds-readonly-input`,\n  template: `\n    <ng-container\n      *ngIf=\"valueTemplate; else defaultValue\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: value }\"\n    >\n    </ng-container>\n    <ng-template #defaultValue>\n      <span class=\"text-bold\">{{ value ? value : '&mdash;' }}</span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyInputComponent {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReadonlyMulticheckboxComponent",
            "id": "component-ReadonlyMulticheckboxComponent-66322faa3b24ee99d23b1a6f809b0f5b0a8bb8eed14b857037241e81999a2cbe4b5dc37e087d4efcb701cfd3ee7530926eecdd18f1553d4ae92024e166b534d3",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-multicheckbox.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-multicheckbox",
            "styleUrls": [],
            "styles": [],
            "template": "<span *ngIf=\"!value; else definedValues\" class=\"text-bold\">&mdash;</span>\n\n<ng-template #definedValues>\n  <span *ngFor=\"let option of multicheckboxOptions | formlySelectOptions | async\">\n    <span *ngIf=\"value[option.value]\">\n      <ng-container\n        *ngIf=\"valueTemplate; else defaultValue\"\n        [ngTemplateOutlet]=\"valueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: option.label }\"\n      >\n      </ng-container>\n      <ng-template #defaultValue>\n        <span class=\"text-bold display-block\">{{ option.label }}</span>\n      </ng-template>\n    </span>\n  </span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "multicheckboxOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: `sds-readonly-multicheckbox`,\n  template: `\n    <span *ngIf=\"!value; else definedValues\" class=\"text-bold\">&mdash;</span>\n\n    <ng-template #definedValues>\n      <span *ngFor=\"let option of multicheckboxOptions | formlySelectOptions | async\">\n        <span *ngIf=\"value[option.value]\">\n          <ng-container\n            *ngIf=\"valueTemplate; else defaultValue\"\n            [ngTemplateOutlet]=\"valueTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: option.label }\"\n          >\n          </ng-container>\n          <ng-template #defaultValue>\n            <span class=\"text-bold display-block\">{{ option.label }}</span>\n          </ng-template>\n        </span>\n      </span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyMulticheckboxComponent implements OnInit {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n  @Input() multicheckboxOptions: any[];\n\n  ngOnInit() {\n    if (!this.multicheckboxOptions || !this.multicheckboxOptions.length) {\n      throw new Error(`No option list provided for readonly mode of multicheckbox type with value of ${this.value}`);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ReadonlyRadioComponent",
            "id": "component-ReadonlyRadioComponent-23b784445987870641696206672e4b81af3bba044db591419e11f45c640c769222010faa4fddb361bd9a8053bfdfe6943fcea405b3b6e3cc13b3cef9254a73d7",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-radio.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-radio",
            "styleUrls": [],
            "styles": [],
            "template": "<span *ngIf=\"!value; else definedValues\" class=\"text-bold\">&mdash;</span>\n\n<ng-template #definedValues>\n  <span *ngFor=\"let option of radioOptions | formlySelectOptions | async\">\n    <span *ngIf=\"option.value === value\">\n      <ng-container\n        *ngIf=\"valueTemplate; else defaultValue\"\n        [ngTemplateOutlet]=\"valueTemplate\"\n        [ngTemplateOutletContext]=\"{ $implicit: option.label }\"\n      >\n      </ng-container>\n      <ng-template #defaultValue>\n        <span class=\"text-bold display-block\">{{ option.label }}</span>\n      </ng-template>\n    </span>\n  </span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "radioOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: `sds-readonly-radio`,\n  template: `\n    <span *ngIf=\"!value; else definedValues\" class=\"text-bold\">&mdash;</span>\n\n    <ng-template #definedValues>\n      <span *ngFor=\"let option of radioOptions | formlySelectOptions | async\">\n        <span *ngIf=\"option.value === value\">\n          <ng-container\n            *ngIf=\"valueTemplate; else defaultValue\"\n            [ngTemplateOutlet]=\"valueTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: option.label }\"\n          >\n          </ng-container>\n          <ng-template #defaultValue>\n            <span class=\"text-bold display-block\">{{ option.label }}</span>\n          </ng-template>\n        </span>\n      </span>\n    </ng-template>\n  `,\n})\nexport class ReadonlyRadioComponent implements OnInit {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n  @Input() radioOptions: any[];\n\n  ngOnInit() {\n    if (!this.radioOptions || !this.radioOptions.length) {\n      throw new Error(`No option list provided for readonly mode of radio type with value of ${this.value}`);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ReadonlySelectComponent",
            "id": "component-ReadonlySelectComponent-cbdb0a7cc7f02ea9d782f1221b6bfa322332a0a901ba09108287bb74f28f6f7b36e0922f9f1352346fb384cf1c94fa08f0f5b18cf34d516c773fc9f01c841727",
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly-types/readonly-select.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-readonly-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container\n  *ngIf=\"valueTemplate; else defaultValue\"\n  [ngTemplateOutlet]=\"valueTemplate\"\n  [ngTemplateOutletContext]=\"{ $implicit: displayValue.label }\"\n>\n</ng-container>\n<ng-template #defaultValue>\n  <span [innerHTML]=\"displayValue.label\" class=\"text-bold\"></span>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selectOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "valueTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "TemplateRef<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: `sds-readonly-select`,\n  template: `\n    <ng-container\n      *ngIf=\"valueTemplate; else defaultValue\"\n      [ngTemplateOutlet]=\"valueTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: displayValue.label }\"\n    >\n    </ng-container>\n    <ng-template #defaultValue>\n      <span [innerHTML]=\"displayValue.label\" class=\"text-bold\"></span>\n    </ng-template>\n  `,\n})\nexport class ReadonlySelectComponent implements OnInit {\n  @Input() value: any;\n  @Input() valueTemplate: TemplateRef<any>;\n  @Input() selectOptions: any[];\n\n  displayValue: { label: string; value: string };\n\n  ngOnInit() {\n    if (!this.selectOptions || !this.selectOptions.length) {\n      throw new Error(`No option list provided for readonly mode of select type with value of ${this.value}`);\n    }\n\n    if (!this.value) {\n      this.displayValue = { label: '&mdash;', value: this.value };\n    } else {\n      this.displayValue = this.selectOptions.find((option) => option.value === this.value);\n\n      if (!this.displayValue) {\n        this.displayValue = { label: '&mdash;', value: this.value };\n      }\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SdsFiltersComponent",
            "id": "component-SdsFiltersComponent-78cdaa9d4a5c7de99af6e8e61444d26dd82c667cdc13f22538f2b92c1f8269c1ed009fb6f9fd19623d58d97198ae339e14b7e340a259934c715eb766e85f05d2",
            "file": "libs/packages/sam-formly/src/lib/formly-filters/sds-filters.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-filters",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sds-filters.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "advancedFilters",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Emit results when model updated\nTo enable History Tracking\n If advanced filters dialog should be displayed -- defaults to false\n",
                    "description": "<p> Emit results when model updated\nTo enable History Tracking\n If advanced filters dialog should be displayed -- defaults to false</p>\n",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "defaultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefault values to reset form to when reset is done\nIf not passed in, then default values will be values\nassigned to the model input during component init\nor defaultValue provided in formly config\n",
                    "description": "<p>Default values to reset form to when reset is done\nIf not passed in, then default values will be values\nassigned to the model input during component init\nor defaultValue provided in formly config</p>\n",
                    "line": 89,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "displayChips",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle displaying chips for selected filter values. By default this is toggled off\nin normal situations. When horizontal setting is turned on, then chip display is\nalso toggled on by default\n",
                    "description": "<p>Toggle displaying chips for selected filter values. By default this is toggled off\nin normal situations. When horizontal setting is turned on, then chip display is\nalso toggled on by default</p>\n",
                    "line": 102,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Fields are used to configure the UI components\n",
                    "description": "<p> Fields are used to configure the UI components</p>\n",
                    "line": 44,
                    "type": "FormlyFieldConfig[]",
                    "decorators": []
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPass in a Form Group for ReactiveForms Support\n",
                    "description": "<p>Pass in a Form Group for ReactiveForms Support</p>\n",
                    "line": 39,
                    "type": "UntypedFormGroup",
                    "decorators": []
                },
                {
                    "name": "getCleanModel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTo get clean model without null and empty\n",
                    "description": "<p>To get clean model without null and empty</p>\n",
                    "line": 81,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "horizontal",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nToggle layout for filters - when horizontal is toggled,\nthe reset and more filters are placed in top right corner\n",
                    "description": "<p>Toggle layout for filters - when horizontal is toggled,\nthe reset and more filters are placed in top right corner</p>\n",
                    "line": 95,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isHistoryEnable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTimer id for the timer awaiting the service call for more typeing\n",
                    "description": "<p>Timer id for the timer awaiting the service call for more typeing</p>\n",
                    "line": 76,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isInactiveValueFieldShown",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShow option to include inactive filter values\n",
                    "description": "<p>Show option to include inactive filter values</p>\n",
                    "line": 71,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Model used to display the filter values.\n",
                    "description": "<p> Model used to display the filter values.</p>\n",
                    "line": 49,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n   Options for the form.\n",
                    "description": "<p>   Options for the form.</p>\n",
                    "line": 54,
                    "type": "FormlyFormOptions",
                    "decorators": []
                },
                {
                    "name": "showReset",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 3023,
                            "end": 3040,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 3024,
                                "end": 3031,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<p>true</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nSwitch to show/hide the reset all button\n",
                    "description": "<p>Switch to show/hide the reset all button</p>\n",
                    "line": 108,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "sortMoreFilterBy",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSort the filters by alphabetical order\n",
                    "description": "<p>Sort the filters by alphabetical order</p>\n",
                    "line": 66,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filterChange",
                    "defaultValue": "new EventEmitter<object>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\n Emit results when model updated\n",
                    "description": "<p> Emit results when model updated</p>\n",
                    "line": 113,
                    "type": "EventEmitter"
                },
                {
                    "name": "resetClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "EventEmitter"
                },
                {
                    "name": "showInactiveFiltersChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isEmpty",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "_isObj",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "_modelSnapshot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "chips",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ReadonlyDataType[]",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsDialogRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "formlyUpdateComunicationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SDSFormlyUpdateComunicationService",
                    "optional": false,
                    "description": "",
                    "line": 145,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "horizontalFiltersDialogTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'horizontalFiltersDialog'"
                        }
                    ]
                },
                {
                    "name": "overwrite",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "unsubscribe$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                }
            ],
            "methodsClass": [
                {
                    "name": "applyDialogFilters",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 354,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "checkForHide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis is for getting the model which has a value.\n",
                    "description": "<p>This is for getting the model which has a value.</p>\n"
                },
                {
                    "name": "cleanModelParser",
                    "args": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decoder",
                            "type": "qs.defaultDecoder",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "charset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "type",
                            "type": "\"key\" | \"value\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 303,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nParser for qs.parse - if input string is true / false,\nconvert to boolean value, otherwise use default decoder\n",
                    "description": "<p>Parser for qs.parse - if input string is true / false,\nconvert to boolean value, otherwise use default decoder</p>\n",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decoder",
                            "type": "qs.defaultDecoder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "charset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "type",
                            "type": "\"key\" | \"value\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 350,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "convertToModel",
                    "args": [
                        {
                            "name": "filters",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 289,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filters",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertToParam",
                    "args": [
                        {
                            "name": "filters",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "filters",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findFieldInFieldGroup",
                    "args": [
                        {
                            "name": "fields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormlyFieldConfig",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRecursively iterate over each field as well as potential field groups of the field\nto find a field with the given key. Returns the field if found, otherwise returns null.\n",
                    "description": "<p>Recursively iterate over each field as well as potential field groups of the field\nto find a field with the given key. Returns the field if found, otherwise returns null.</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 6633,
                                "end": 6639,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "fields"
                            },
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6627,
                                "end": 6632,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The list of formly fields to search for the given key</li>\n</ul>\n"
                        },
                        {
                            "name": {
                                "pos": 6708,
                                "end": 6711,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "key"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 6702,
                                "end": 6707,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>The key of the formly field config to search for</li>\n</ul>\n"
                        }
                    ]
                },
                {
                    "name": "generateChips",
                    "args": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 388,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCreate chips to display for horizontal filters based on current model\nand formly field config\n",
                    "description": "<p>Create chips to display for horizontal filters based on current model\nand formly field config</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 11204,
                                "end": 11209,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "model"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11198,
                                "end": 11203,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 11222,
                                "end": 11228,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "fields"
                            },
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 11216,
                                "end": 11221,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "getUrlParams",
                    "args": [
                        {
                            "name": "queryString",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 278,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "queryString",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleInactiveFilterChange",
                    "args": [
                        {
                            "name": "inactiveFilterValue",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 315,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "inactiveFilterValue",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onModelChange",
                    "args": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 238,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResetClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 322,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeChip",
                    "args": [
                        {
                            "name": "chip",
                            "type": "ReadonlyDataType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 441,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRemoving a certain chip from UI is the same as applying a change to the form, so\nthis should update the form control. We can find the field to update based on the chip's\nformly key and what values to update to based on values of existing chips with the same key\n",
                    "description": "<p>Removing a certain chip from UI is the same as applying a change to the form, so\nthis should update the form control. We can find the field to update based on the chip&#39;s\nformly key and what values to update to based on values of existing chips with the same key</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 13028,
                                "end": 13032,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "chip"
                            },
                            "type": "ReadonlyDataType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 13022,
                                "end": 13027,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "tagName": {
                                "pos": 13039,
                                "end": 13046,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "removePopoverGroup",
                    "args": [
                        {
                            "name": "fields",
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nConverts all popover type fields to accordion and unhides any hidden fields\nso that they can be displayed in filter dialog during resposive mode for\nhorizontal filters\n",
                    "description": "<p>Converts all popover type fields to accordion and unhides any hidden fields\nso that they can be displayed in filter dialog during resposive mode for\nhorizontal filters</p>\n",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 10616,
                                "end": 10622,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "fields"
                            },
                            "type": "FormlyFieldConfig[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 10610,
                                "end": 10615,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "updateChange",
                    "args": [
                        {
                            "name": "change",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 253,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Optional,\n  OnInit,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges,\n  ViewChild,\n  TemplateRef,\n} from '@angular/core';\n\nimport { UntypedFormGroup } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport * as qs from 'qs';\nimport { SDSFormlyUpdateComunicationService } from './service/sds-filters-comunication.service';\nimport { SDSFormlyUpdateModelService } from './service/sds-filter-model-update.service';\n\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { FormlyUtilsService, ReadonlyDataType } from '../formly/services/formly-utils.service';\nimport { SdsFormlyTypes } from '../formly/models/formly-types';\nimport { SdsDialogRef, SdsDialogService, SDS_DIALOG_DATA } from '@gsa-sam/components';\nimport { cloneDeep } from 'lodash-es';\nimport { FormlyValueChangeEvent } from '@ngx-formly/core/lib/components/formly.field.config';\n@Component({\n  selector: 'sds-filters',\n  templateUrl: './sds-filters.component.html',\n})\nexport class SdsFiltersComponent implements OnInit, OnChanges {\n  @ViewChild('horizontalFiltersDialog')\n  horizontalFiltersDialogTemplate: TemplateRef<any>;\n\n  /**\n   * Pass in a Form Group for ReactiveForms Support\n   */\n  @Input() public form: UntypedFormGroup;\n\n  /**\n   *  Fields are used to configure the UI components\n   */\n  @Input() public fields: FormlyFieldConfig[];\n\n  /**\n   *  Model used to display the filter values.\n   */\n  @Input() public model: any;\n\n  /**\n   *    Options for the form.\n   */\n  @Input() public options: FormlyFormOptions = {};\n\n  /**\n   *  Emit results when model updated\n   * To enable History Tracking\n   *  If advanced filters dialog should be displayed -- defaults to false\n   */\n  @Input() advancedFilters: boolean = false;\n\n  /**\n   * Sort the filters by alphabetical order\n   */\n  @Input() sortMoreFilterBy = '';\n\n  /**\n   * Show option to include inactive filter values\n   */\n  @Input() isInactiveValueFieldShown: boolean = false;\n\n  /**\n   * Timer id for the timer awaiting the service call for more typeing\n   */\n  @Input() public isHistoryEnable: boolean = false;\n\n  /**\n   * To get clean model without null and empty\n   */\n  @Input() public getCleanModel: boolean = false;\n\n  /**\n   * Default values to reset form to when reset is done\n   * If not passed in, then default values will be values\n   * assigned to the model input during component init\n   * or defaultValue provided in formly config\n   */\n  @Input() defaultModel: any;\n\n  /**\n   * Toggle layout for filters - when horizontal is toggled,\n   * the reset and more filters are placed in top right corner\n   */\n  @Input() horizontal = false;\n\n  /**\n   * Toggle displaying chips for selected filter values. By default this is toggled off\n   * in normal situations. When horizontal setting is turned on, then chip display is\n   * also toggled on by default\n   */\n  @Input() displayChips: boolean;\n\n  /**\n   * Switch to show/hide the reset all button\n   * @default true\n   */\n  @Input() showReset: boolean = true;\n  /**\n   *  Emit results when model updated\n   */\n  // TODO: check type -- Formly models are typically objects\n  @Output() filterChange = new EventEmitter<object>();\n  @Output() showInactiveFiltersChange = new EventEmitter<boolean>();\n  @Output() resetClicked = new EventEmitter();\n\n  chips: ReadonlyDataType[] = [];\n  dialogRef: SdsDialogRef<any>;\n\n  // Snapshot of model before filter dialog opens during horizontal responsive format\n  _modelSnapshot: any;\n\n  unsubscribe$ = new Subject<void>();\n  _isObj = (obj: any): boolean => typeof obj === 'object' && obj !== null;\n  _isEmpty = (obj: any): boolean => Object.keys(obj).length === 0;\n  overwrite = (baseObj: any, newObj: any) => {\n    const result = {};\n    const mergedObj = { ...baseObj, ...newObj };\n    for (const key in mergedObj) {\n      if (Array.isArray(baseObj[key])) {\n        result[key] = newObj[key] || null;\n      } else if (baseObj[key] instanceof Date) {\n        result[key] = newObj[key] === undefined ? null : new Date(newObj[key]);\n      } else if (this._isObj(baseObj[key])) {\n        result[key] = this.overwrite(baseObj[key], newObj[key] || {});\n      } else {\n        result[key] = newObj[key] || null;\n      }\n    }\n    return result;\n  };\n\n  constructor(\n    @Optional()\n    public formlyUpdateComunicationService: SDSFormlyUpdateComunicationService,\n    private formlyDialogService: SdsDialogService,\n    private cdr: ChangeDetectorRef,\n    @Optional()\n    private filterUpdateModelService: SDSFormlyUpdateModelService\n  ) {}\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  ngOnInit(): void {\n    // keep display chips to defined value if defined, otherwise, default to false, unless hoirzontal is turned on\n    this.displayChips = this.displayChips != undefined ? this.displayChips : this.horizontal;\n\n    if (this.filterUpdateModelService) {\n      this.filterUpdateModelService.filterModel.pipe(takeUntil(this.unsubscribe$)).subscribe((filter) => {\n        if (filter) {\n          const updatedFormValue = this.overwrite(this.form.getRawValue(), filter);\n          // Shallow copy to not trigger onChanges from formly side\n          Object.keys(updatedFormValue).forEach((key) => {\n            this.model[key] = updatedFormValue[key];\n          });\n\n          this.form.patchValue(updatedFormValue);\n          this.checkForHide();\n        }\n      });\n      this.cdr.detectChanges();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.model && changes.model.currentValue != changes.model.previousValue) {\n      this.checkForHide();\n    }\n  }\n\n  /**\n   * This is for getting the model which has a value.\n   */\n  checkForHide() {\n    let fieldWithValue = this.convertToParam(this.model);\n    let keys = [];\n    Object.keys(fieldWithValue).map((key) => {\n      keys.push(key.replace(/\\[/g, '.').replace(/\\]/g, ''));\n    });\n    keys.forEach((key) => {\n      const [lastKey] = key.split('.').slice(-1);\n      this.fields.forEach((field) => {\n        if (key.includes(field.key)) {\n          if (field.fieldGroup) {\n            const fieldExists = this.findFieldInFieldGroup(field.fieldGroup, lastKey);\n            if (fieldExists) {\n              field.hide = false;\n              fieldExists.hide = false;\n            }\n          } else {\n            field.hide = false;\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Recursively iterate over each field as well as potential field groups of the field\n   * to find a field with the given key. Returns the field if found, otherwise returns null.\n   * @param fields - The list of formly fields to search for the given key\n   * @param key - The key of the formly field config to search for\n   */\n  private findFieldInFieldGroup(fields: FormlyFieldConfig[], key: any) {\n    let matchingField: FormlyFieldConfig = null;\n\n    for (let i = 0; i < fields.length; i++) {\n      const field = fields[i];\n\n      if (field.key === key) {\n        matchingField = field;\n      } else if (field.fieldGroup) {\n        matchingField = this.findFieldInFieldGroup(field.fieldGroup, key);\n      } else if (field.fieldArray) {\n        matchingField = this.findFieldInFieldGroup([field.fieldArray], key);\n      }\n\n      if (matchingField) {\n        break;\n      }\n    }\n\n    return matchingField;\n  }\n\n  onModelChange(change: any) {\n    this.updateChange(change);\n  }\n\n  onResetClicked() {\n    const fieldChangeEvent: FormlyValueChangeEvent = {\n      field: undefined,\n      type: 'resetAll',\n      value: undefined,\n    };\n\n    this.options.fieldChanges.next(fieldChangeEvent);\n    this.resetClicked.emit();\n  }\n\n  updateChange(change) {\n    const updatedModel = this.getCleanModel ? this.convertToModel(change) : change;\n    this.filterChange.emit(updatedModel);\n    if (this.formlyUpdateComunicationService) {\n      this.formlyUpdateComunicationService.updateFilter(updatedModel);\n    }\n\n    if (this.displayChips) {\n      this.generateChips(change, this.fields);\n    }\n\n    this.cdr.detectChanges();\n  }\n\n  convertToParam(filters) {\n    const encodedValues = qs.stringify(filters, {\n      skipNulls: true,\n      encode: false,\n    });\n    if (encodedValues) {\n      return this.getUrlParams(encodedValues);\n    } else {\n      return '';\n    }\n  }\n  getUrlParams(queryString) {\n    const target = {};\n    queryString.split('&').forEach((pair) => {\n      if (pair !== '') {\n        const splitpair = pair.split('=');\n        target[splitpair[0]] = splitpair[1] === '' || splitpair[1] === 'false' ? null : splitpair[1];\n      }\n    });\n    return target;\n  }\n\n  convertToModel(filters) {\n    let obj = {};\n    const encodedValues = qs.stringify(filters, {\n      skipNulls: true,\n      encode: false,\n    });\n    obj = qs.parse(encodedValues, { decoder: this.cleanModelParser });\n    return obj;\n  }\n\n  /**\n   * Parser for qs.parse - if input string is true / false,\n   * convert to boolean value, otherwise use default decoder\n   */\n  cleanModelParser(str: string, decoder: qs.defaultDecoder, charset: string, type: 'key' | 'value') {\n    if (type === 'key') {\n      return decoder(str, decoder, charset);\n    }\n\n    if (str === 'true' || str === 'false') {\n      return str === 'true' ? true : false;\n    }\n\n    return decoder(str, decoder, charset);\n  }\n\n  handleInactiveFilterChange(inactiveFilterValue: boolean) {\n    if (this.displayChips) {\n      this.generateChips(this.model, this.fields);\n    }\n    this.showInactiveFiltersChange.emit(inactiveFilterValue);\n  }\n\n  openDialog() {\n    const clonedFields = cloneDeep(this.fields);\n    this._modelSnapshot = cloneDeep(this.model);\n    this.removePopoverGroup(clonedFields);\n    this.dialogRef = this.formlyDialogService.open(this.horizontalFiltersDialogTemplate, {\n      data: { fields: clonedFields, options: {} },\n      height: '100vh',\n      width: '100vw',\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      hasBackdrop: false,\n      displayCloseBtn: false,\n      panelClass: ['sds-dialog--full'],\n    });\n\n    this.dialogRef\n      .afterClosed()\n      .toPromise()\n      .then((result) => {\n        if (result) {\n          this.onModelChange(result);\n        } else {\n          Object.assign(this.model, this._modelSnapshot);\n        }\n        this.dialogRef = null;\n      });\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  applyDialogFilters() {\n    this.dialogRef.close(this.model);\n  }\n\n  /**\n   * Converts all popover type fields to accordion and unhides any hidden fields\n   * so that they can be displayed in filter dialog during resposive mode for\n   * horizontal filters\n   * @param fields\n   */\n  private removePopoverGroup(fields: FormlyFieldConfig[]) {\n    fields.forEach((field) => {\n      if (field.props && field.props.group === 'popover') {\n        field.props.group = 'accordion';\n      }\n\n      if (field.fieldGroup) {\n        this.removePopoverGroup(field.fieldGroup);\n      }\n\n      if (field.fieldArray) {\n        this.removePopoverGroup([field.fieldArray]);\n      }\n\n      field.hide = false;\n    });\n  }\n\n  /**\n   * Create chips to display for horizontal filters based on current model\n   * and formly field config\n   * @param model\n   * @param fields\n   */\n  private generateChips(model: any, fields: FormlyFieldConfig[]) {\n    const readonlyData = FormlyUtilsService.formlyConfigToReadonlyData(fields, model);\n    const chipsWithValue = readonlyData.filter((data) => data.value);\n    let allChips = [];\n    chipsWithValue.forEach((chip) => {\n      if (typeof chip.value != 'object') {\n        chip['srValue'] = chip.value;\n        allChips.push(chip);\n        return;\n      }\n\n      if (Array.isArray(chip.value)) {\n        const newChips = chip.value.map((chipValue) => {\n          return { ...chip, value: [chipValue], srValue: chipValue };\n        });\n        allChips = allChips.concat(newChips);\n        return;\n      }\n\n      if (chip.formlyType === SdsFormlyTypes.DATERANGEPICKER || chip.formlyType === SdsFormlyTypes.DATERANGEPICKERV2) {\n        const fromDateValue = chip.value[chip.readonlyOptions.daterangepickerOptions.fromDateKey];\n        const toDateValue = chip.value[chip.readonlyOptions.daterangepickerOptions.toDateKey];\n\n        if (fromDateValue || toDateValue) {\n          allChips.push(chip);\n        }\n\n        return;\n      }\n\n      Object.keys(chip.value).forEach((key) => {\n        const value = chip.value[key];\n\n        // Ignore falsey or empty string values\n        if (!value || (typeof value.length === 'string' && !value.length)) {\n          return;\n        }\n\n        const newChip = { ...chip, value: { [key]: value }, srValue: key };\n        allChips.push(newChip);\n      });\n    });\n\n    this.chips = allChips;\n  }\n\n  /**\n   * Removing a certain chip from UI is the same as applying a change to the form, so\n   * this should update the form control. We can find the field to update based on the chip's\n   * formly key and what values to update to based on values of existing chips with the same key\n   * @param chip\n   * @returns\n   */\n  removeChip(chip: ReadonlyDataType) {\n    const field = this.findFieldInFieldGroup(this.fields, chip.formlyKey);\n\n    if (!field) {\n      throw new Error('Error: unable to find field to remove chip');\n    }\n\n    // If the form control is not complex, then we can simply reset\n    if (typeof field.formControl.value != 'object') {\n      field.formControl.reset();\n      return;\n    }\n\n    if (chip.formlyType === SdsFormlyTypes.DATERANGEPICKER || chip.formlyType === SdsFormlyTypes.DATERANGEPICKERV2) {\n      const fromDateControl = field.fieldGroup[0].formControl;\n      const toDateControl = field.fieldGroup[1].formControl;\n      fromDateControl.reset();\n      toDateControl.reset();\n      return;\n    }\n\n    // If the form control contains complex values, such as an object or array, we need to determine what the new\n    // value of the form will be after this chip has been removed, and update the form control accordingly\n    const chipsWithSameKey = this.chips.filter(\n      (exisingChip) => chip != exisingChip && chip.formlyKey === exisingChip.formlyKey\n    );\n    const existingValues = chipsWithSameKey.map((chipWithSameKey) => chipWithSameKey.value);\n\n    if (Array.isArray(field.formControl.value)) {\n      let updatedValue = [];\n      existingValues.forEach((value) => {\n        updatedValue = updatedValue.concat(value);\n      });\n      field.formControl.setValue(updatedValue);\n      return;\n    }\n\n    const objectValue = {};\n    Object.assign(objectValue, ...existingValues);\n    field.formControl.setValue(objectValue);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formlyUpdateComunicationService",
                        "type": "SDSFormlyUpdateComunicationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formlyDialogService",
                        "type": "SdsDialogService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "filterUpdateModelService",
                        "type": "SDSFormlyUpdateModelService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 141,
                "jsdoctags": [
                    {
                        "name": "formlyUpdateComunicationService",
                        "type": "SDSFormlyUpdateComunicationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formlyDialogService",
                        "type": "SdsDialogService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "filterUpdateModelService",
                        "type": "SDSFormlyUpdateModelService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<!-- Vertical Filters -->\n<div *ngIf=\"!horizontal\">\n  <formly-form\n    [form]=\"form\"\n    [fields]=\"fields\"\n    [options]=\"options\"\n    [model]=\"model\"\n    (modelChange)=\"onModelChange($event)\"\n  >\n  </formly-form>\n  <div class=\"grid-row margin-top-2\">\n    <div *ngIf=\"advancedFilters\" class=\"grid-col\">\n      <sds-advanced-filters\n        [form]=\"form\"\n        [sortMoreFilterBy]=\"sortMoreFilterBy\"\n        [fields]=\"fields\"\n        [options]=\"options\"\n        [model]=\"model\"\n        (showInactiveFiltersChange)=\"showInactiveFiltersChange.next($event)\"\n        [isInactiveValueFieldShown]=\"isInactiveValueFieldShown\"\n      >\n      </sds-advanced-filters>\n    </div>\n    <div class=\"grid-col text-right\">\n      <sds-formly-reset [options]=\"options\" [defaultModel]=\"defaultModel\" (resetClicked)=\"onResetClicked()\">\n      </sds-formly-reset>\n    </div>\n  </div>\n</div>\n\n<!-- Horizontal Filters -->\n<div *ngIf=\"horizontal\" class=\"sds-filters--horizontal\">\n  <div class=\"horizontal-filters grid-row\">\n    <formly-form\n      *ngIf=\"!dialogRef\"\n      [form]=\"form\"\n      [fields]=\"fields\"\n      [options]=\"options\"\n      [model]=\"model\"\n      (modelChange)=\"onModelChange($event)\"\n    >\n    </formly-form>\n    <div *ngIf=\"advancedFilters\">\n      <sds-advanced-filters\n        [form]=\"form\"\n        [sortMoreFilterBy]=\"sortMoreFilterBy\"\n        [fields]=\"fields\"\n        [options]=\"options\"\n        [model]=\"model\"\n        [isInactiveValueFieldShown]=\"isInactiveValueFieldShown\"\n        [enablePopover]=\"horizontal\"\n        (showInactiveFiltersChange)=\"handleInactiveFilterChange($event)\"\n      >\n      </sds-advanced-filters>\n    </div>\n  </div>\n\n  <div class=\"search-input\">\n    <ng-content select=\"sds-search\"></ng-content>\n  </div>\n\n  <div class=\"filters-modal margin-left-2\">\n    <button type=\"button\" (click)=\"openDialog()\" class=\"usa-button usa-button--unstyled\">\n      Filter By\n      <usa-icon [icon]=\"'filter'\" class=\"icon-filter\" [size]=\"'sm'\"></usa-icon>\n    </button>\n  </div>\n\n  <div *ngIf=\"showReset\" class=\"horizontal-reset margin-left-2 text-right\">\n    <sds-formly-reset [options]=\"options\" [defaultModel]=\"{}\" (resetClicked)=\"resetClicked.emit()\"></sds-formly-reset>\n  </div>\n</div>\n\n<!-- Chip Display -->\n<ng-container *ngIf=\"displayChips\">\n  <div *ngFor=\"let chip of chips\" class=\"width-auto sds-tag sds-tag--chip sds-tag--input margin-right-2\">\n    <div class=\"sds--tag__item\">\n      <sds-readonly-container\n        [label]=\"chip.label\"\n        [value]=\"chip.value\"\n        [additionalConfig]=\"chip.readonlyOptions\"\n        [formlyType]=\"chip.formlyType\"\n      >\n        <ng-container *sdsReadonlyLabel\n          ><span class=\"margin-right-1 text-bold\" [attr.aria-label]=\"chip.label\">{{ chip.label }}:</span></ng-container\n        >\n        <ng-container *sdsReadonlyValue=\"let value\"\n          ><span class=\"margin-right-1\" [attr.aria-label]=\"chip.srValue\">{{ value }}</span></ng-container\n        >\n      </sds-readonly-container>\n    </div>\n\n    <button\n      [attr.aria-label]=\"'Remove Item ' + chip.label + ' ' + chip.srValue\"\n      aria-hidden=\"false\"\n      class=\"sds-tag__close position-static\"\n      (click)=\"removeChip(chip)\"\n      (keyup.enter)=\"removeChip(chip)\"\n    >\n      <usa-icon [icon]=\"'x'\" size=\"lg\"></usa-icon>\n    </button>\n  </div>\n</ng-container>\n\n<ng-template #horizontalFiltersDialog let-data>\n  <div class=\"bg-accent-cool-lighter height-full\">\n    <div class=\"grid-row shadow-4 padding-1\">\n      <button\n        id=\"cancelButton\"\n        class=\"sds-button sds-button--circular sds-button--white\"\n        (click)=\"close()\"\n        aria-label=\"Cancel Filter By\"\n      >\n        <usa-icon [icon]=\"'chevron-left'\"></usa-icon>\n      </button>\n      <div class=\"margin-x-auto\">\n        <h2 class=\"usa-card__heading margin-top-1 margin-left-neg-2\">Filter By</h2>\n      </div>\n    </div>\n\n    <div class=\"padding-1\">\n      <formly-form [fields]=\"data.fields\" [options]=\"data.options\" [model]=\"model\"> </formly-form>\n      <div class=\"grid-row margin-top-2\">\n        <div class=\"grid-col text-right\">\n          <sds-formly-reset [options]=\"data.options\" [defaultModel]=\"{}\" (resetClicked)=\"resetClicked.emit()\">\n          </sds-formly-reset>\n        </div>\n      </div>\n    </div>\n    <div class=\"padding-1 shadow-4\">\n      <button class=\"usa-button width-full\" (click)=\"applyDialogFilters()\">Apply</button>\n    </div>\n  </div>\n</ng-template>\n"
        },
        {
            "name": "SdsFormlyDialogComponent",
            "id": "component-SdsFormlyDialogComponent-4e7429892af0cceb87b9f4cd65a8f610b6bfc2d4a350176f4ca210050f2194de7360ffeeca2533a5c2bc2e46da5fb5e9a59db1ebad9e2ebf50ff6c1e619bb8f3",
            "file": "libs/packages/sam-formly/src/lib/formly-dialog/formly-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-dialog",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./formly-dialog.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "cancelFn",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter<any>"
                },
                {
                    "name": "submitFn",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "advancedFiltersService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsAdvancedFiltersService",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cancel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsFormlyDialogData",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "SDS_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsDialogRef<SdsFormlyDialogComponent>",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "disableSubmitButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFieldConfig[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormlyFormOptions",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "submit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormlyFormOptions, FormlyFieldConfig } from '@ngx-formly/core';\nimport { UntypedFormGroup } from '@angular/forms';\nimport { SdsDialogRef, SDS_DIALOG_DATA } from '@gsa-sam/components';\n\nimport { SdsFormlyDialogData } from './formly-dialog-data.model';\nimport { SdsAdvancedFiltersService } from '../formly-filters/advanced-filters/sds-advanced-filters.service';\n\n@Component({\n  selector: 'sds-formly-dialog',\n  templateUrl: './formly-dialog.component.html',\n})\nexport class SdsFormlyDialogComponent implements OnInit {\n  form: UntypedFormGroup;\n  model: any;\n  options: FormlyFormOptions;\n  fields: FormlyFieldConfig[];\n  cancel: string;\n  submit: string;\n  disableSubmitButton: boolean;\n\n  @Output() submitFn: EventEmitter<any> = new EventEmitter();\n\n  @Output() cancelFn: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    public advancedFiltersService: SdsAdvancedFiltersService,\n    public dialogRef: SdsDialogRef<SdsFormlyDialogComponent>,\n    @Inject(SDS_DIALOG_DATA) public data: SdsFormlyDialogData\n  ) {}\n\n  public ngOnInit() {\n    this.fields = this.data.fields;\n    this.form = this.data.form ? this.data.form : new UntypedFormGroup({});\n    this.model = this.data.model ? this.data.model : {};\n    this.options = this.data.options ? this.data.options : {};\n    this.cancel = this.data.cancel ? this.data.cancel : 'Cancel';\n    this.submit = this.data.submit ? this.data.submit : 'Submit';\n    this.disableSubmitButton = this.data.disableSubmitButtonEnabled ? this.data.disableSubmitButtonEnabled : false;\n  }\n\n  onSubmit() {\n    this.submitFn.emit(this.model);\n  }\n\n  onCancel() {\n    this.options.resetModel();\n    this.cancelFn.emit(this.model);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "advancedFiltersService",
                        "type": "SdsAdvancedFiltersService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "SdsDialogRef<SdsFormlyDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "SdsFormlyDialogData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "advancedFiltersService",
                        "type": "SdsAdvancedFiltersService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "SdsDialogRef<SdsFormlyDialogComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "SdsFormlyDialogData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <div *ngIf=\"data.title\" sds-dialog-title>{{ data.title }}</div>\n  <div *ngIf=\"data.subtitle\" sds-dialog-subtitle>{{ data.subtitle }}</div>\n  <div sds-dialog-content class=\"padding-bottom-1\">\n    <formly-form [form]=\"form\" [fields]=\"fields\" [options]=\"options\" [model]=\"model\"></formly-form>\n  </div>\n  <div sds-dialog-actions>\n    <button class=\"usa-button usa-button--base\" (click)=\"onCancel()\" type=\"button\">\n      {{ cancel }}\n    </button>\n    <button class=\"usa-button\" [disabled]=\"disableSubmitButton ? !form.valid : disableSubmitButton\" type=\"submit\">\n      {{ submit }}\n    </button>\n  </div>\n</form>\n"
        },
        {
            "name": "SdsFormlyResetComponent",
            "id": "component-SdsFormlyResetComponent-e01665fdffa592c715efba5f97afc0bf611b75c40e51ae288d8c8c97230da9705e39d0ea2677a6e82b38e4d0d22f5adc1d368ef6080d0f5df8e675abb6ea3235",
            "file": "libs/packages/sam-formly/src/lib/formly-reset/formly-reset.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-formly-reset",
            "styleUrls": [
                "./formly-reset.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./formly-reset.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "classes",
                    "defaultValue": "['usa-button', 'usa-button--unstyled']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPass in classes for reset button -- default .usa-button .usa-button--unstyled\n",
                    "description": "<p>Pass in classes for reset button -- default .usa-button .usa-button--unstyled</p>\n",
                    "line": 20,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "defaultModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormly form options\n",
                    "description": "<p>Formly form options</p>\n",
                    "line": 13,
                    "type": "FormlyFormOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "resetClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "resetAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormlyFormOptions } from '@ngx-formly/core';\n\n@Component({\n  selector: 'sds-formly-reset',\n  templateUrl: './formly-reset.component.html',\n  styleUrls: ['./formly-reset.component.scss'],\n})\nexport class SdsFormlyResetComponent {\n  /**\n   * Formly form options\n   */\n  @Input() options: FormlyFormOptions;\n\n  @Input() defaultModel: any;\n\n  /**\n   * Pass in classes for reset button -- default .usa-button .usa-button--unstyled\n   */\n  @Input() classes: string[] = ['usa-button', 'usa-button--unstyled'];\n\n  @Output() resetClicked = new EventEmitter();\n\n  resetAll() {\n    if (this.defaultModel) {\n      this.options.resetModel(this.defaultModel);\n    } else {\n      this.options.resetModel();\n    }\n    this.resetClicked.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".usa-button--unstyled {\n  padding-right: 0;\n  width: initial;\n  text-decoration: none;\n  font-weight: 600;\n\n  &:hover,\n  &:active {\n    background: transparent;\n    background: initial;\n    color: initial;\n    text-decoration: underline;\n  }\n}\n\n.icon-reset {\n  font-size: 20px;\n}\n\nbutton {\n  display: inline-flex;\n}\n",
                    "styleUrl": "./formly-reset.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button (click)=\"resetAll()\" [ngClass]=\"classes\">\n  Reset\n  <usa-icon [icon]=\"'arrow-clockwise'\" class=\"icon-reset\" [size]=\"'sm'\"></usa-icon>\n</button>\n"
        },
        {
            "name": "SdsStepComponent",
            "id": "component-SdsStepComponent-189facd87932cb07c937e1d43472c5c1754a4941c0be44eb23599c0f8fa7b1de35c4b91c80b07d77189d7c8d5c647c419d8624f3ba217ede24232fa803aa49f7",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "exportAs": "sdsStep",
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "sds-step",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sds-step.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether users should be allowed to navigate to this step or not\n",
                    "description": "<p>Whether users should be allowed to navigate to this step or not</p>\n",
                    "line": 133,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "editable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 3091,
                            "end": 3108,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 3092,
                                "end": 3099,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 88,
                                "escapedText": "default"
                            },
                            "comment": "<p>true</p>\n"
                        }
                    ],
                    "rawdescription": "\n\nDefines whether the step is an editable form or simply a label\n",
                    "description": "<p>Defines whether the step is an editable form or simply a label</p>\n",
                    "line": 122,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fieldConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormly fields to display for this step\n",
                    "description": "<p>Formly fields to display for this step</p>\n",
                    "line": 87,
                    "type": "FormlyFieldConfig",
                    "decorators": []
                },
                {
                    "name": "hide",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFunction for whether or not the step is hidden from users or not\n",
                    "description": "<p>Function for whether or not the step is hidden from users or not</p>\n",
                    "line": 108,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "`sds-step-${nextId++}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nId for step - auto generated if none is provided\n",
                    "description": "<p>Id for step - auto generated if none is provided</p>\n",
                    "line": 77,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isReview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines whether current step is review step. Review steps are generally the last\nstep and contain culmination of user input throughout the steps in a readable format\n",
                    "description": "<p>Defines whether current step is review step. Review steps are generally the last\nstep and contain culmination of user input throughout the steps in a readable format</p>\n",
                    "line": 116,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nReference to data model to store any user input if the input. If not defined,\nthen user input data will be stored in a stepper level global model\n",
                    "description": "<p>Reference to data model to store any user input if the input. If not defined,\nthen user input data will be stored in a stepper level global model</p>\n",
                    "line": 98,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEach step gets it's own options by default if not provided to determine whether to show error or not\n",
                    "description": "<p>Each step gets it&#39;s own options by default if not provided to determine whether to show error or not</p>\n",
                    "line": 92,
                    "type": "FormlyFormOptions",
                    "decorators": []
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRoute to navigate to when the step is clicked. If none provided, then\nnavigation will only modify query parameter to clicked step's ID when clicked\n",
                    "description": "<p>Route to navigate to when the step is clicked. If none provided, then\nnavigation will only modify query parameter to clicked step&#39;s ID when clicked</p>\n",
                    "line": 128,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether the step is selected or not\n",
                    "description": "<p>Whether the step is selected or not</p>\n",
                    "line": 82,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "stepTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nCustom template reference for this step. If both custom template and field\nconfig are provided, then only the custom template will be displayed\n",
                    "description": "<p>Custom template reference for this step. If both custom template and field\nconfig are provided, then only the custom template will be displayed</p>\n",
                    "line": 61,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "stepValidationFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRequired when stepTemplate is defined - provides ways to check\nif the custom template step is valid\n",
                    "description": "<p>Required when stepTemplate is defined - provides ways to check\nif the custom template step is valid</p>\n",
                    "line": 67,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHuman readable label text for this step\n",
                    "description": "<p>Human readable label text for this step</p>\n",
                    "line": 72,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "valid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDefines whether the step has validation issues or not\n",
                    "description": "<p>Defines whether the step has validation issues or not</p>\n",
                    "line": 103,
                    "type": "boolean | void",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmitted anytime user input changes in the step - only applicable if\nstep is a formly field config\n",
                    "description": "<p>Emitted anytime user input changes in the step - only applicable if\nstep is a formly field config</p>\n",
                    "line": 139,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SdsStepper",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "undefined"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<SdsStepComponent>",
                    "optional": false,
                    "description": "<p>References to Any children this step might contain</p>\n",
                    "line": 50,
                    "rawdescription": "\n\nReferences to Any children this step might contain\n",
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "SdsStepComponent"
                        }
                    ]
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<any>",
                    "optional": false,
                    "description": "<p>Content of step - either a formly field or custome template</p>\n",
                    "line": 55,
                    "rawdescription": "\n\nContent of step - either a formly field or custome template\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'mainContent', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onModelChange",
                    "args": [
                        {
                            "name": "$event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDispatch a custom event for parent stepper component to listen for on model change\nas well as an output binded event emitter for application level components to listen\nfor if they wanted to listen at individual step level\n",
                    "description": "<p>Dispatch a custom event for parent stepper component to listen for on model change\nas well as an output binded event emitter for application level components to listen\nfor if they wanted to listen at individual step level</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 4041,
                                "end": 4047,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "$event"
                            },
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 4035,
                                "end": 4040,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>the updated model</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport * as _ from 'lodash-es';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: `[sdsStepHeader]`,\n  template: `<ng-content></ng-content>`,\n})\nexport class SdsStepHeaderComponent {}\n\n@Component({\n  selector: `[sdsStepFooter]`,\n  template: '<ng-content></ng-content>',\n})\nexport class SdsStepFooterComponent {}\n\nlet nextId = 0;\n\n@Component({\n  selector: `sds-step`,\n  exportAs: `sdsStep`,\n  templateUrl: `./sds-step.component.html`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SdsStepComponent {\n  /**\n   * References to Any children this step might contain\n   */\n  @ContentChildren(SdsStepComponent) children: QueryList<SdsStepComponent>;\n\n  /**\n   * Content of step - either a formly field or custome template\n   */\n  @ViewChild('mainContent', { static: true }) content: TemplateRef<any>;\n\n  /**\n   * Custom template reference for this step. If both custom template and field\n   * config are provided, then only the custom template will be displayed\n   */\n  @Input() stepTemplate: TemplateRef<any>;\n\n  /**\n   * Required when stepTemplate is defined - provides ways to check\n   * if the custom template step is valid\n   */\n  @Input() stepValidationFn: (model: any, field?: FormlyFieldConfig) => boolean | Observable<boolean> | void;\n\n  /**\n   * Human readable label text for this step\n   */\n  @Input() text: string;\n\n  /**\n   * Id for step - auto generated if none is provided\n   */\n  @Input() id: string = `sds-step-${nextId++}`;\n\n  /**\n   * Whether the step is selected or not\n   */\n  @Input() selected = false;\n\n  /**\n   * Formly fields to display for this step\n   */\n  @Input() fieldConfig?: FormlyFieldConfig;\n\n  /**\n   * Each step gets it's own options by default if not provided to determine whether to show error or not\n   */\n  @Input() options?: FormlyFormOptions;\n\n  /**\n   * Reference to data model to store any user input if the input. If not defined,\n   * then user input data will be stored in a stepper level global model\n   */\n  @Input() model?: any;\n\n  /**\n   * Defines whether the step has validation issues or not\n   */\n  @Input() valid?: boolean | void;\n\n  /**\n   * Function for whether or not the step is hidden from users or not\n   */\n  @Input() hideFn?: (model: any, field?: FormlyFieldConfig) => boolean;\n\n  @Input() hide?: boolean;\n\n  /**\n   * Defines whether current step is review step. Review steps are generally the last\n   * step and contain culmination of user input throughout the steps in a readable format\n   */\n  @Input() isReview?: boolean;\n\n  /**\n   * Defines whether the step is an editable form or simply a label\n   * @default true\n   */\n  @Input() editable = true;\n\n  /**\n   * Route to navigate to when the step is clicked. If none provided, then\n   * navigation will only modify query parameter to clicked step's ID when clicked\n   */\n  @Input() route?: string;\n\n  /**\n   * Whether users should be allowed to navigate to this step or not\n   */\n  @Input() disabled?: boolean;\n\n  /**\n   * Emitted anytime user input changes in the step - only applicable if\n   * step is a formly field config\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: ElementRef,\n    @Inject(DOCUMENT) private _document\n  ) {}\n\n  /**\n   * Dispatch a custom event for parent stepper component to listen for on model change\n   * as well as an output binded event emitter for application level components to listen\n   * for if they wanted to listen at individual step level\n   * @param $event - the updated model\n   */\n  onModelChange($event) {\n    let event: CustomEvent;\n    if (typeof Event === 'function') {\n      event = new CustomEvent('stepModelChange', { bubbles: true, detail: $event });\n    } else {\n      // IE11 support\n      event = this._document.createEvent('CustomEvent');\n      event.initCustomEvent('sort', true, true, $event);\n    }\n\n    this._el.nativeElement.dispatchEvent(event);\n\n    this.modelChange.emit($event);\n  }\n}\n\n@Directive({\n  selector: `[sdsStepper]`,\n  exportAs: 'sdsStepper',\n})\nexport class SdsStepper {\n  @ContentChildren(SdsStepComponent) stepTemplates: QueryList<SdsStepComponent>;\n\n  /**\n   * Singular global model to store user input for all steps. Alternatively,\n   * users may pass in a model specifically to each sds-step and manage the data\n   * modal separately\n   */\n  @Input() model: any = {};\n\n  /**\n   * Id of the step currently shown to users\n   */\n  @Input() currentStepId: string;\n\n  /**\n   * Mapping of step validity. This maps each step's id to a boolean value indicating\n   * whether the step is valid or invalid. This maps defines valid/invalid icons\n   * displayed in side nav\n   */\n  @Input() stepValidityMap: { [key: string]: boolean | undefined } = {};\n\n  /**\n   * Toggle custom error handling from user side. By default, errors are displayed\n   * only on save click or when loading a pre-saved form with defined validity.\n   * @default false\n   */\n  @Input() customErrorHandling = false;\n\n  /** Whether the validity of previous steps should prevent navigating to next steps.\n   * @default false\n   */\n  @Input() linear = false;\n\n  /**\n   * Unique identifier for the stepper. If none provided a default id will be used\n   */\n  @Input() id = `sds-stepper-${nextId++}`;\n\n  /**\n   * Configurable query parameter to use when keeping track of which\n   * step the user is on from the URL. Useful when we'd want multiple\n   * steppers in one page but don't want the query params to conflict\n   * @default - sdsStepId\n   */\n  @Input() queryParamKey = 'sdsStepId';\n\n  /**\n   * This is used to disable/enable the routing for the stepper\n   * @default - true\n   */\n  @Input() isRouteEnabled = true;\n\n  @Input() validateStepsOnInit = true;\n\n  /**\n   * Output event - emitted when save button is clicked\n   */\n  @Output() saveData = new EventEmitter<{ model: any; metadata: any }>();\n\n  /**\n   * Output event - emitted when a step is changed, either through the\n   *  navigation buttons at the bottom of the step or by clicking on a\n   *  step in side panel\n   */\n  @Output() stepChange = new EventEmitter<SdsStepComponent>();\n\n  /**\n   * Output event - emitted if the current step is a formly config.\n   *  Outputs whenever a model change occurs from the formly field\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  /**\n   * Reference to step currently selected and displayed to the user\n   */\n  selectedStep: SdsStepComponent;\n\n  /**\n   * Index of currently selected step in the flatSteps array\n   */\n  selectedStepIndex: number;\n\n  /**\n   * A flattened list of steps - steps with children are placed after their parent\n   * in the list\n   */\n  flatSteps: SdsStepComponent[] = [];\n\n  /**\n   * Switch that toggles on if and only if all steps in the flattned list of steps\n   * are seen as valid in the validity map\n   */\n  _isReviewAndSubmitDisabled = true;\n\n  /**\n   * Event emitted by sds-step component whenever a model change\n   * occurs. Emits the modelChange event. This can be useful if\n   * users want to attach a listener for any model change in overall\n   * steps rather than listening for model change in each individual step\n   * @param $event\n   */\n  @HostListener('stepModelChange', ['$event'])\n  onModelChange($event: CustomEvent) {\n    $event.stopImmediatePropagation();\n    this.modelChange.emit($event.detail);\n  }\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, public cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.selectedStep) {\n      return;\n    }\n\n    if (changes.currentStepId && this.selectedStep.id != changes.currentStepId.currentValue) {\n      this.changeStep(changes.currentStepId.currentValue);\n    }\n\n    if (changes.stepValidityMap && changes.stepValidityMap.currentValue) {\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n\n    /**\n     * Handling toggling between linear and non-linear modes.\n     * On switch to linear, disable incomplete forms.\n     * On switch to non-linear, enable all steps except review step\n     */\n    if (changes.linear) {\n      if (changes.linear.currentValue) {\n        const lastValidStepIndex = this.evaluateIncompleteForms();\n        this.changeStep(this.flatSteps[lastValidStepIndex].id);\n      } else {\n        this.flatSteps.forEach((step) => {\n          if (!step.isReview) {\n            step.disabled = false;\n          } else if (!this._isReviewAndSubmitDisabled) {\n            step.disabled = false;\n          }\n        });\n      }\n\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n  }\n  ngAfterViewInit() {\n    if (this.validateStepsOnInit) {\n      const currentStep = this.selectedStep;\n      if (!this.linear) {\n        const isRouteEnabled = this.isRouteEnabled;\n        this.flatSteps = this.getFlatSteps(this.stepTemplates);\n        this.isRouteEnabled = false;\n\n        this.flatSteps.forEach((step) => {\n          setTimeout(() => {\n            this.changeStep(step.id);\n          }, 0);\n        });\n\n        setTimeout(() => {\n          this.changeStep(currentStep.id);\n          this.isRouteEnabled = isRouteEnabled;\n        }, 0);\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.flatSteps.forEach((step) => {\n      step.model = step.model ? step.model : this.model;\n    });\n\n    if (this.activatedRoute.snapshot.queryParams[this.queryParamKey] && !this.linear && this.isRouteEnabled) {\n      this.currentStepId = this.activatedRoute.snapshot.queryParams[this.queryParamKey];\n    } else if (!this.currentStepId) {\n      this.currentStepId = this.flatSteps[0].id;\n      this.selectedStepIndex = 0;\n      this.selectedStep = this.flatSteps[this.selectedStepIndex];\n    }\n\n    if (this.stepValidityMap) {\n      this.updateValidity(this.stepValidityMap, this.stepTemplates);\n      this.checkReviewAndSubmit();\n    } else {\n      this.stepValidityMap = {};\n    }\n\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    this.changeStep(this.currentStepId).finally(() => {\n      if (this.isRouteEnabled) {\n        this.activatedRoute.queryParams.subscribe((queryParam) => {\n          if (queryParam[this.queryParamKey] && queryParam[this.queryParamKey] != this.currentStepId) {\n            this.changeStep(queryParam[this.queryParamKey]);\n          }\n        });\n      }\n    });\n  }\n\n  getFlatSteps(stepTemplates: QueryList<SdsStepComponent>): SdsStepComponent[] {\n    let flat: SdsStepComponent[] = [];\n    stepTemplates.forEach((step) => {\n      if (step.hideFn && step.hideFn(step.model ? step.model : this.model, step.fieldConfig)) {\n        step.hide = true;\n        return;\n      }\n      step.hide = false;\n      if (step.editable) {\n        flat.push(step);\n      }\n\n      if (step.children && step.children.length) {\n        const childSteps = this.getFlatSteps(step.children);\n        flat = flat.concat(childSteps);\n      }\n    });\n\n    return flat;\n  }\n\n  /**\n   * Change currently selected step\n   * @param stepId - The id of step to change to\n   * @param incrementor - Optional input - Either a 1 or -1. When a value of 1\n   *  is provided, then the step to change to will be the next step from the input step\n   *  given. When a value of -1 is provided, then the selected step will be the step\n   *  previous to the provided step\n   */\n  async changeStep(stepId: string, incrementor?: number) {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    let stepIndex = this.flatSteps.findIndex((step) => step.id === stepId);\n    stepIndex = stepIndex === -1 ? 0 : stepIndex;\n\n    if (incrementor) {\n      stepIndex = stepIndex + incrementor;\n      if (stepIndex > this.flatSteps.length) {\n        throw Error(\n          `StepIndex of ${stepIndex} is greater than the number of steps. Check that you are passing in a sensible incrementor.)`\n        );\n      }\n    }\n\n    const step = this.flatSteps[stepIndex];\n\n    /** Already on desired step, nothing to do */\n    if (step === this.selectedStep) {\n      return;\n    }\n    /**\n     * On non-linear mode, do not allow step change if step we are moving to is disabled or is review step.\n     * In linear mode, we will run validations first, then decide whether or not to move to next step\n     */\n    if (!this.linear && (step.disabled || (step.isReview && this._isReviewAndSubmitDisabled))) {\n      return;\n    }\n\n    // Update current step's validity before moving to next step\n    if (this.selectedStep) {\n      await this.updateValidation(this.selectedStep);\n      this.checkReviewAndSubmit();\n      if (this.linear) {\n        this.evaluateIncompleteForms();\n      }\n      this.selectedStep.selected = false;\n    }\n\n    /**\n     * In linear mode and moving to next step.\n     * Disable changing step if current step is invalid or has empty data, and display errors\n     * */\n    if (this.linear && stepIndex > this.selectedStepIndex && !this.stepValidityMap[this.selectedStep.id]) {\n      this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n      return;\n    }\n\n    this.selectedStepIndex = stepIndex;\n    this.selectedStep = this.flatSteps[stepIndex];\n\n    this.selectedStep.selected = true;\n    this.currentStepId = this.selectedStep.id;\n\n    this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n\n    if (this.selectedStep.editable && this.isRouteEnabled) {\n      this.router.navigate(this.selectedStep.route ? [this.selectedStep.route] : [], {\n        queryParams: {\n          [this.queryParamKey]: this.currentStepId,\n        },\n        queryParamsHandling: 'merge',\n      });\n    }\n\n    this.stepChange.emit(this.selectedStep);\n  }\n\n  /**\n   * Enables validation error display for a given step\n   * @param step\n   */\n  private toggleOnValidationForStep(\n    step: SdsStepComponent,\n    validityMap: { [key: string]: boolean | undefined },\n    customErrorHandling?: boolean\n  ) {\n    if (!step.options && !customErrorHandling) {\n      this.selectedStep.options = {};\n    }\n\n    if (!step.options.showError && !customErrorHandling) {\n      this.selectedStep.options.showError = () => false;\n    }\n\n    if (validityMap[step.id] === false) {\n      step.options.showError = (field) => field.formControl.invalid;\n    }\n  }\n\n  onNextStep() {\n    this.changeStep(this.selectedStep.id, 1);\n  }\n\n  onPreviousStep() {\n    this.changeStep(this.selectedStep.id, -1);\n  }\n\n  /**\n   * Called through sdsStepperSave button - updates validity of the current step\n   * and toggles error display. Emits saveData event.\n   */\n  async onSaveClicked() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.selectedStepIndex = this.flatSteps.findIndex((step) => step.id === this.selectedStep.id);\n\n    await this.updateValidation(this.selectedStep);\n    this.checkReviewAndSubmit();\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    if (!this.customErrorHandling && this.stepValidityMap[this.currentStepId] === false) {\n      this.selectedStep.options.showError = (field) => !field.formControl.valid;\n    }\n\n    this.saveData.emit({\n      model: this.model,\n      metadata: {\n        stepId: this.selectedStep.id,\n        stepValidityMap: this.stepValidityMap,\n      },\n    });\n  }\n\n  /**\n   * Gets all steps that are not hidden\n   * @param steps\n   */\n  getDisplayedSteps(steps: QueryList<SdsStepComponent>) {\n    if (!steps) {\n      return [];\n    }\n    return steps.filter((step) => !step.hide);\n  }\n\n  /**\n   * Used while in linear mode. All steps that are in the step validity and are valid\n   * map should be enabled until we find the first step that is invalid.\n   * Then all steps from that point on should be disabled\n   *\n   * @returns the index of the last valid step\n   */\n  private evaluateIncompleteForms() {\n    let startIndex = 0;\n    this.flatSteps.some((step, index) => {\n      step.disabled = false;\n\n      if (!this.stepValidityMap[step.id]) {\n        startIndex = index;\n        return true;\n      }\n    });\n\n    for (let i = startIndex + 1; i < this.flatSteps.length; i++) {\n      this.flatSteps[i].disabled = true;\n    }\n\n    return startIndex;\n  }\n\n  private checkReviewAndSubmit() {\n    this._isReviewAndSubmitDisabled = this.flatSteps.some((step) => {\n      if (step.isReview) {\n        return false;\n      }\n\n      if (!this.stepValidityMap[step.id]) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  private updateValidity(validityMap: any, stepTemplates: QueryList<SdsStepComponent>) {\n    stepTemplates.forEach((step) => {\n      if (!step) {\n        return;\n      }\n\n      step.valid = validityMap[step.id];\n      if (step.children) {\n        this.updateValidity(validityMap, step.children);\n      }\n    });\n  }\n\n  /**\n   * Updates validity of a given step. If a synchronous stepValidationFn is provided\n   * for the step, then that method is given priority over the step's formly form.\n   * If a forceValidationValue is given, then the step's validation value will be set\n   * to the value provided\n   * @param currentStep - step to update validation for\n   * @param forceValidationValue - true or false -\n   *  if true, step's validity will be force set to true\n   *  if false, step's validity will be force set to false\n   * @returns\n   */\n  async updateValidation(currentStep: SdsStepComponent, forceValidationValue?: boolean) {\n    if (!currentStep) {\n      return;\n    }\n\n    if (forceValidationValue === true || forceValidationValue === false) {\n      currentStep.valid = forceValidationValue;\n      this.stepValidityMap[currentStep.id] = forceValidationValue;\n      return;\n    }\n\n    // Custom validation function was provided, use provided custom validation\n    if (currentStep.stepValidationFn) {\n      const isValid = currentStep.stepValidationFn(currentStep.model ? currentStep.model : this.model);\n      if (typeof isValid === 'boolean') {\n        currentStep.valid = isValid;\n        this.stepValidityMap[currentStep.id] = isValid;\n      } else if (typeof isValid === 'object') {\n        const res = await isValid.toPromise();\n        currentStep.valid = res;\n        this.stepValidityMap[currentStep.id] = res;\n      }\n\n      return;\n    }\n\n    const currentStepFieldConfig = currentStep.fieldConfig;\n    if (\n      !currentStepFieldConfig ||\n      this.isFormEmpty(currentStepFieldConfig.formControl, currentStepFieldConfig.defaultValue)\n    ) {\n      return;\n    }\n\n    const isValid = currentStep.fieldConfig.formControl.valid;\n    currentStep.valid = isValid;\n    this.stepValidityMap[currentStep.id] = isValid;\n  }\n\n  private isFormEmpty(form: AbstractControl, defaultValue?: any) {\n    if (!form) {\n      return true;\n    }\n\n    if (form.value === false) {\n      return false;\n    }\n\n    if (!form.value || form.value.length === 0) {\n      return true;\n    }\n\n    if (typeof form.value != 'object') {\n      return false;\n    }\n\n    const cleanModel = this.getCleanObject(form.value);\n    return Object.keys(cleanModel).length === 0 || _.isEqual(cleanModel, defaultValue);\n  }\n\n  private getCleanObject(input: any, output?: any) {\n    output = output || {};\n    for (var key in input) {\n      var value = input[key];\n      if (value) {\n        if (typeof value === 'object' && value !== null) {\n          this.getCleanObject(value, output);\n        } else {\n          // Treat true string as boolean value & ignore value of string 'false'\n          if (value === 'true') {\n            output[key] = true;\n          } else if (value != 'false') {\n            output[key] = value;\n          }\n        }\n      }\n    }\n    return output;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_document",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 139,
                "jsdoctags": [
                    {
                        "name": "_stepper",
                        "type": "SdsStepper",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_document",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-template #mainContent>\n  <ng-container *ngIf=\"stepTemplate; else formlyField\" [ngTemplateOutlet]=\"stepTemplate\"></ng-container>\n  <ng-template #formlyField>\n    <ng-content select=\"[sdsStepHeader]\"></ng-content>\n    <formly-form\n      *ngIf=\"fieldConfig\"\n      [model]=\"model\"\n      [fields]=\"[fieldConfig]\"\n      [options]=\"options\"\n      (modelChange)=\"onModelChange($event)\"\n    >\n    </formly-form>\n    <ng-content select=\"[sdsStepFooter]\"></ng-content>\n  </ng-template>\n\n  <ng-content select=\"sds-step\"></ng-content>\n</ng-template>\n"
        },
        {
            "name": "SdsStepFooterComponent",
            "id": "component-SdsStepFooterComponent-189facd87932cb07c937e1d43472c5c1754a4941c0be44eb23599c0f8fa7b1de35c4b91c80b07d77189d7c8d5c647c419d8624f3ba217ede24232fa803aa49f7",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[sdsStepFooter]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport * as _ from 'lodash-es';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: `[sdsStepHeader]`,\n  template: `<ng-content></ng-content>`,\n})\nexport class SdsStepHeaderComponent {}\n\n@Component({\n  selector: `[sdsStepFooter]`,\n  template: '<ng-content></ng-content>',\n})\nexport class SdsStepFooterComponent {}\n\nlet nextId = 0;\n\n@Component({\n  selector: `sds-step`,\n  exportAs: `sdsStep`,\n  templateUrl: `./sds-step.component.html`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SdsStepComponent {\n  /**\n   * References to Any children this step might contain\n   */\n  @ContentChildren(SdsStepComponent) children: QueryList<SdsStepComponent>;\n\n  /**\n   * Content of step - either a formly field or custome template\n   */\n  @ViewChild('mainContent', { static: true }) content: TemplateRef<any>;\n\n  /**\n   * Custom template reference for this step. If both custom template and field\n   * config are provided, then only the custom template will be displayed\n   */\n  @Input() stepTemplate: TemplateRef<any>;\n\n  /**\n   * Required when stepTemplate is defined - provides ways to check\n   * if the custom template step is valid\n   */\n  @Input() stepValidationFn: (model: any, field?: FormlyFieldConfig) => boolean | Observable<boolean> | void;\n\n  /**\n   * Human readable label text for this step\n   */\n  @Input() text: string;\n\n  /**\n   * Id for step - auto generated if none is provided\n   */\n  @Input() id: string = `sds-step-${nextId++}`;\n\n  /**\n   * Whether the step is selected or not\n   */\n  @Input() selected = false;\n\n  /**\n   * Formly fields to display for this step\n   */\n  @Input() fieldConfig?: FormlyFieldConfig;\n\n  /**\n   * Each step gets it's own options by default if not provided to determine whether to show error or not\n   */\n  @Input() options?: FormlyFormOptions;\n\n  /**\n   * Reference to data model to store any user input if the input. If not defined,\n   * then user input data will be stored in a stepper level global model\n   */\n  @Input() model?: any;\n\n  /**\n   * Defines whether the step has validation issues or not\n   */\n  @Input() valid?: boolean | void;\n\n  /**\n   * Function for whether or not the step is hidden from users or not\n   */\n  @Input() hideFn?: (model: any, field?: FormlyFieldConfig) => boolean;\n\n  @Input() hide?: boolean;\n\n  /**\n   * Defines whether current step is review step. Review steps are generally the last\n   * step and contain culmination of user input throughout the steps in a readable format\n   */\n  @Input() isReview?: boolean;\n\n  /**\n   * Defines whether the step is an editable form or simply a label\n   * @default true\n   */\n  @Input() editable = true;\n\n  /**\n   * Route to navigate to when the step is clicked. If none provided, then\n   * navigation will only modify query parameter to clicked step's ID when clicked\n   */\n  @Input() route?: string;\n\n  /**\n   * Whether users should be allowed to navigate to this step or not\n   */\n  @Input() disabled?: boolean;\n\n  /**\n   * Emitted anytime user input changes in the step - only applicable if\n   * step is a formly field config\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: ElementRef,\n    @Inject(DOCUMENT) private _document\n  ) {}\n\n  /**\n   * Dispatch a custom event for parent stepper component to listen for on model change\n   * as well as an output binded event emitter for application level components to listen\n   * for if they wanted to listen at individual step level\n   * @param $event - the updated model\n   */\n  onModelChange($event) {\n    let event: CustomEvent;\n    if (typeof Event === 'function') {\n      event = new CustomEvent('stepModelChange', { bubbles: true, detail: $event });\n    } else {\n      // IE11 support\n      event = this._document.createEvent('CustomEvent');\n      event.initCustomEvent('sort', true, true, $event);\n    }\n\n    this._el.nativeElement.dispatchEvent(event);\n\n    this.modelChange.emit($event);\n  }\n}\n\n@Directive({\n  selector: `[sdsStepper]`,\n  exportAs: 'sdsStepper',\n})\nexport class SdsStepper {\n  @ContentChildren(SdsStepComponent) stepTemplates: QueryList<SdsStepComponent>;\n\n  /**\n   * Singular global model to store user input for all steps. Alternatively,\n   * users may pass in a model specifically to each sds-step and manage the data\n   * modal separately\n   */\n  @Input() model: any = {};\n\n  /**\n   * Id of the step currently shown to users\n   */\n  @Input() currentStepId: string;\n\n  /**\n   * Mapping of step validity. This maps each step's id to a boolean value indicating\n   * whether the step is valid or invalid. This maps defines valid/invalid icons\n   * displayed in side nav\n   */\n  @Input() stepValidityMap: { [key: string]: boolean | undefined } = {};\n\n  /**\n   * Toggle custom error handling from user side. By default, errors are displayed\n   * only on save click or when loading a pre-saved form with defined validity.\n   * @default false\n   */\n  @Input() customErrorHandling = false;\n\n  /** Whether the validity of previous steps should prevent navigating to next steps.\n   * @default false\n   */\n  @Input() linear = false;\n\n  /**\n   * Unique identifier for the stepper. If none provided a default id will be used\n   */\n  @Input() id = `sds-stepper-${nextId++}`;\n\n  /**\n   * Configurable query parameter to use when keeping track of which\n   * step the user is on from the URL. Useful when we'd want multiple\n   * steppers in one page but don't want the query params to conflict\n   * @default - sdsStepId\n   */\n  @Input() queryParamKey = 'sdsStepId';\n\n  /**\n   * This is used to disable/enable the routing for the stepper\n   * @default - true\n   */\n  @Input() isRouteEnabled = true;\n\n  @Input() validateStepsOnInit = true;\n\n  /**\n   * Output event - emitted when save button is clicked\n   */\n  @Output() saveData = new EventEmitter<{ model: any; metadata: any }>();\n\n  /**\n   * Output event - emitted when a step is changed, either through the\n   *  navigation buttons at the bottom of the step or by clicking on a\n   *  step in side panel\n   */\n  @Output() stepChange = new EventEmitter<SdsStepComponent>();\n\n  /**\n   * Output event - emitted if the current step is a formly config.\n   *  Outputs whenever a model change occurs from the formly field\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  /**\n   * Reference to step currently selected and displayed to the user\n   */\n  selectedStep: SdsStepComponent;\n\n  /**\n   * Index of currently selected step in the flatSteps array\n   */\n  selectedStepIndex: number;\n\n  /**\n   * A flattened list of steps - steps with children are placed after their parent\n   * in the list\n   */\n  flatSteps: SdsStepComponent[] = [];\n\n  /**\n   * Switch that toggles on if and only if all steps in the flattned list of steps\n   * are seen as valid in the validity map\n   */\n  _isReviewAndSubmitDisabled = true;\n\n  /**\n   * Event emitted by sds-step component whenever a model change\n   * occurs. Emits the modelChange event. This can be useful if\n   * users want to attach a listener for any model change in overall\n   * steps rather than listening for model change in each individual step\n   * @param $event\n   */\n  @HostListener('stepModelChange', ['$event'])\n  onModelChange($event: CustomEvent) {\n    $event.stopImmediatePropagation();\n    this.modelChange.emit($event.detail);\n  }\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, public cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.selectedStep) {\n      return;\n    }\n\n    if (changes.currentStepId && this.selectedStep.id != changes.currentStepId.currentValue) {\n      this.changeStep(changes.currentStepId.currentValue);\n    }\n\n    if (changes.stepValidityMap && changes.stepValidityMap.currentValue) {\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n\n    /**\n     * Handling toggling between linear and non-linear modes.\n     * On switch to linear, disable incomplete forms.\n     * On switch to non-linear, enable all steps except review step\n     */\n    if (changes.linear) {\n      if (changes.linear.currentValue) {\n        const lastValidStepIndex = this.evaluateIncompleteForms();\n        this.changeStep(this.flatSteps[lastValidStepIndex].id);\n      } else {\n        this.flatSteps.forEach((step) => {\n          if (!step.isReview) {\n            step.disabled = false;\n          } else if (!this._isReviewAndSubmitDisabled) {\n            step.disabled = false;\n          }\n        });\n      }\n\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n  }\n  ngAfterViewInit() {\n    if (this.validateStepsOnInit) {\n      const currentStep = this.selectedStep;\n      if (!this.linear) {\n        const isRouteEnabled = this.isRouteEnabled;\n        this.flatSteps = this.getFlatSteps(this.stepTemplates);\n        this.isRouteEnabled = false;\n\n        this.flatSteps.forEach((step) => {\n          setTimeout(() => {\n            this.changeStep(step.id);\n          }, 0);\n        });\n\n        setTimeout(() => {\n          this.changeStep(currentStep.id);\n          this.isRouteEnabled = isRouteEnabled;\n        }, 0);\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.flatSteps.forEach((step) => {\n      step.model = step.model ? step.model : this.model;\n    });\n\n    if (this.activatedRoute.snapshot.queryParams[this.queryParamKey] && !this.linear && this.isRouteEnabled) {\n      this.currentStepId = this.activatedRoute.snapshot.queryParams[this.queryParamKey];\n    } else if (!this.currentStepId) {\n      this.currentStepId = this.flatSteps[0].id;\n      this.selectedStepIndex = 0;\n      this.selectedStep = this.flatSteps[this.selectedStepIndex];\n    }\n\n    if (this.stepValidityMap) {\n      this.updateValidity(this.stepValidityMap, this.stepTemplates);\n      this.checkReviewAndSubmit();\n    } else {\n      this.stepValidityMap = {};\n    }\n\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    this.changeStep(this.currentStepId).finally(() => {\n      if (this.isRouteEnabled) {\n        this.activatedRoute.queryParams.subscribe((queryParam) => {\n          if (queryParam[this.queryParamKey] && queryParam[this.queryParamKey] != this.currentStepId) {\n            this.changeStep(queryParam[this.queryParamKey]);\n          }\n        });\n      }\n    });\n  }\n\n  getFlatSteps(stepTemplates: QueryList<SdsStepComponent>): SdsStepComponent[] {\n    let flat: SdsStepComponent[] = [];\n    stepTemplates.forEach((step) => {\n      if (step.hideFn && step.hideFn(step.model ? step.model : this.model, step.fieldConfig)) {\n        step.hide = true;\n        return;\n      }\n      step.hide = false;\n      if (step.editable) {\n        flat.push(step);\n      }\n\n      if (step.children && step.children.length) {\n        const childSteps = this.getFlatSteps(step.children);\n        flat = flat.concat(childSteps);\n      }\n    });\n\n    return flat;\n  }\n\n  /**\n   * Change currently selected step\n   * @param stepId - The id of step to change to\n   * @param incrementor - Optional input - Either a 1 or -1. When a value of 1\n   *  is provided, then the step to change to will be the next step from the input step\n   *  given. When a value of -1 is provided, then the selected step will be the step\n   *  previous to the provided step\n   */\n  async changeStep(stepId: string, incrementor?: number) {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    let stepIndex = this.flatSteps.findIndex((step) => step.id === stepId);\n    stepIndex = stepIndex === -1 ? 0 : stepIndex;\n\n    if (incrementor) {\n      stepIndex = stepIndex + incrementor;\n      if (stepIndex > this.flatSteps.length) {\n        throw Error(\n          `StepIndex of ${stepIndex} is greater than the number of steps. Check that you are passing in a sensible incrementor.)`\n        );\n      }\n    }\n\n    const step = this.flatSteps[stepIndex];\n\n    /** Already on desired step, nothing to do */\n    if (step === this.selectedStep) {\n      return;\n    }\n    /**\n     * On non-linear mode, do not allow step change if step we are moving to is disabled or is review step.\n     * In linear mode, we will run validations first, then decide whether or not to move to next step\n     */\n    if (!this.linear && (step.disabled || (step.isReview && this._isReviewAndSubmitDisabled))) {\n      return;\n    }\n\n    // Update current step's validity before moving to next step\n    if (this.selectedStep) {\n      await this.updateValidation(this.selectedStep);\n      this.checkReviewAndSubmit();\n      if (this.linear) {\n        this.evaluateIncompleteForms();\n      }\n      this.selectedStep.selected = false;\n    }\n\n    /**\n     * In linear mode and moving to next step.\n     * Disable changing step if current step is invalid or has empty data, and display errors\n     * */\n    if (this.linear && stepIndex > this.selectedStepIndex && !this.stepValidityMap[this.selectedStep.id]) {\n      this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n      return;\n    }\n\n    this.selectedStepIndex = stepIndex;\n    this.selectedStep = this.flatSteps[stepIndex];\n\n    this.selectedStep.selected = true;\n    this.currentStepId = this.selectedStep.id;\n\n    this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n\n    if (this.selectedStep.editable && this.isRouteEnabled) {\n      this.router.navigate(this.selectedStep.route ? [this.selectedStep.route] : [], {\n        queryParams: {\n          [this.queryParamKey]: this.currentStepId,\n        },\n        queryParamsHandling: 'merge',\n      });\n    }\n\n    this.stepChange.emit(this.selectedStep);\n  }\n\n  /**\n   * Enables validation error display for a given step\n   * @param step\n   */\n  private toggleOnValidationForStep(\n    step: SdsStepComponent,\n    validityMap: { [key: string]: boolean | undefined },\n    customErrorHandling?: boolean\n  ) {\n    if (!step.options && !customErrorHandling) {\n      this.selectedStep.options = {};\n    }\n\n    if (!step.options.showError && !customErrorHandling) {\n      this.selectedStep.options.showError = () => false;\n    }\n\n    if (validityMap[step.id] === false) {\n      step.options.showError = (field) => field.formControl.invalid;\n    }\n  }\n\n  onNextStep() {\n    this.changeStep(this.selectedStep.id, 1);\n  }\n\n  onPreviousStep() {\n    this.changeStep(this.selectedStep.id, -1);\n  }\n\n  /**\n   * Called through sdsStepperSave button - updates validity of the current step\n   * and toggles error display. Emits saveData event.\n   */\n  async onSaveClicked() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.selectedStepIndex = this.flatSteps.findIndex((step) => step.id === this.selectedStep.id);\n\n    await this.updateValidation(this.selectedStep);\n    this.checkReviewAndSubmit();\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    if (!this.customErrorHandling && this.stepValidityMap[this.currentStepId] === false) {\n      this.selectedStep.options.showError = (field) => !field.formControl.valid;\n    }\n\n    this.saveData.emit({\n      model: this.model,\n      metadata: {\n        stepId: this.selectedStep.id,\n        stepValidityMap: this.stepValidityMap,\n      },\n    });\n  }\n\n  /**\n   * Gets all steps that are not hidden\n   * @param steps\n   */\n  getDisplayedSteps(steps: QueryList<SdsStepComponent>) {\n    if (!steps) {\n      return [];\n    }\n    return steps.filter((step) => !step.hide);\n  }\n\n  /**\n   * Used while in linear mode. All steps that are in the step validity and are valid\n   * map should be enabled until we find the first step that is invalid.\n   * Then all steps from that point on should be disabled\n   *\n   * @returns the index of the last valid step\n   */\n  private evaluateIncompleteForms() {\n    let startIndex = 0;\n    this.flatSteps.some((step, index) => {\n      step.disabled = false;\n\n      if (!this.stepValidityMap[step.id]) {\n        startIndex = index;\n        return true;\n      }\n    });\n\n    for (let i = startIndex + 1; i < this.flatSteps.length; i++) {\n      this.flatSteps[i].disabled = true;\n    }\n\n    return startIndex;\n  }\n\n  private checkReviewAndSubmit() {\n    this._isReviewAndSubmitDisabled = this.flatSteps.some((step) => {\n      if (step.isReview) {\n        return false;\n      }\n\n      if (!this.stepValidityMap[step.id]) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  private updateValidity(validityMap: any, stepTemplates: QueryList<SdsStepComponent>) {\n    stepTemplates.forEach((step) => {\n      if (!step) {\n        return;\n      }\n\n      step.valid = validityMap[step.id];\n      if (step.children) {\n        this.updateValidity(validityMap, step.children);\n      }\n    });\n  }\n\n  /**\n   * Updates validity of a given step. If a synchronous stepValidationFn is provided\n   * for the step, then that method is given priority over the step's formly form.\n   * If a forceValidationValue is given, then the step's validation value will be set\n   * to the value provided\n   * @param currentStep - step to update validation for\n   * @param forceValidationValue - true or false -\n   *  if true, step's validity will be force set to true\n   *  if false, step's validity will be force set to false\n   * @returns\n   */\n  async updateValidation(currentStep: SdsStepComponent, forceValidationValue?: boolean) {\n    if (!currentStep) {\n      return;\n    }\n\n    if (forceValidationValue === true || forceValidationValue === false) {\n      currentStep.valid = forceValidationValue;\n      this.stepValidityMap[currentStep.id] = forceValidationValue;\n      return;\n    }\n\n    // Custom validation function was provided, use provided custom validation\n    if (currentStep.stepValidationFn) {\n      const isValid = currentStep.stepValidationFn(currentStep.model ? currentStep.model : this.model);\n      if (typeof isValid === 'boolean') {\n        currentStep.valid = isValid;\n        this.stepValidityMap[currentStep.id] = isValid;\n      } else if (typeof isValid === 'object') {\n        const res = await isValid.toPromise();\n        currentStep.valid = res;\n        this.stepValidityMap[currentStep.id] = res;\n      }\n\n      return;\n    }\n\n    const currentStepFieldConfig = currentStep.fieldConfig;\n    if (\n      !currentStepFieldConfig ||\n      this.isFormEmpty(currentStepFieldConfig.formControl, currentStepFieldConfig.defaultValue)\n    ) {\n      return;\n    }\n\n    const isValid = currentStep.fieldConfig.formControl.valid;\n    currentStep.valid = isValid;\n    this.stepValidityMap[currentStep.id] = isValid;\n  }\n\n  private isFormEmpty(form: AbstractControl, defaultValue?: any) {\n    if (!form) {\n      return true;\n    }\n\n    if (form.value === false) {\n      return false;\n    }\n\n    if (!form.value || form.value.length === 0) {\n      return true;\n    }\n\n    if (typeof form.value != 'object') {\n      return false;\n    }\n\n    const cleanModel = this.getCleanObject(form.value);\n    return Object.keys(cleanModel).length === 0 || _.isEqual(cleanModel, defaultValue);\n  }\n\n  private getCleanObject(input: any, output?: any) {\n    output = output || {};\n    for (var key in input) {\n      var value = input[key];\n      if (value) {\n        if (typeof value === 'object' && value !== null) {\n          this.getCleanObject(value, output);\n        } else {\n          // Treat true string as boolean value & ignore value of string 'false'\n          if (value === 'true') {\n            output[key] = true;\n          } else if (value != 'false') {\n            output[key] = value;\n          }\n        }\n      }\n    }\n    return output;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SdsStepHeaderComponent",
            "id": "component-SdsStepHeaderComponent-189facd87932cb07c937e1d43472c5c1754a4941c0be44eb23599c0f8fa7b1de35c4b91c80b07d77189d7c8d5c647c419d8624f3ba217ede24232fa803aa49f7",
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[sdsStepHeader]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostListener,\n  Inject,\n  Input,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport * as _ from 'lodash-es';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: `[sdsStepHeader]`,\n  template: `<ng-content></ng-content>`,\n})\nexport class SdsStepHeaderComponent {}\n\n@Component({\n  selector: `[sdsStepFooter]`,\n  template: '<ng-content></ng-content>',\n})\nexport class SdsStepFooterComponent {}\n\nlet nextId = 0;\n\n@Component({\n  selector: `sds-step`,\n  exportAs: `sdsStep`,\n  templateUrl: `./sds-step.component.html`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SdsStepComponent {\n  /**\n   * References to Any children this step might contain\n   */\n  @ContentChildren(SdsStepComponent) children: QueryList<SdsStepComponent>;\n\n  /**\n   * Content of step - either a formly field or custome template\n   */\n  @ViewChild('mainContent', { static: true }) content: TemplateRef<any>;\n\n  /**\n   * Custom template reference for this step. If both custom template and field\n   * config are provided, then only the custom template will be displayed\n   */\n  @Input() stepTemplate: TemplateRef<any>;\n\n  /**\n   * Required when stepTemplate is defined - provides ways to check\n   * if the custom template step is valid\n   */\n  @Input() stepValidationFn: (model: any, field?: FormlyFieldConfig) => boolean | Observable<boolean> | void;\n\n  /**\n   * Human readable label text for this step\n   */\n  @Input() text: string;\n\n  /**\n   * Id for step - auto generated if none is provided\n   */\n  @Input() id: string = `sds-step-${nextId++}`;\n\n  /**\n   * Whether the step is selected or not\n   */\n  @Input() selected = false;\n\n  /**\n   * Formly fields to display for this step\n   */\n  @Input() fieldConfig?: FormlyFieldConfig;\n\n  /**\n   * Each step gets it's own options by default if not provided to determine whether to show error or not\n   */\n  @Input() options?: FormlyFormOptions;\n\n  /**\n   * Reference to data model to store any user input if the input. If not defined,\n   * then user input data will be stored in a stepper level global model\n   */\n  @Input() model?: any;\n\n  /**\n   * Defines whether the step has validation issues or not\n   */\n  @Input() valid?: boolean | void;\n\n  /**\n   * Function for whether or not the step is hidden from users or not\n   */\n  @Input() hideFn?: (model: any, field?: FormlyFieldConfig) => boolean;\n\n  @Input() hide?: boolean;\n\n  /**\n   * Defines whether current step is review step. Review steps are generally the last\n   * step and contain culmination of user input throughout the steps in a readable format\n   */\n  @Input() isReview?: boolean;\n\n  /**\n   * Defines whether the step is an editable form or simply a label\n   * @default true\n   */\n  @Input() editable = true;\n\n  /**\n   * Route to navigate to when the step is clicked. If none provided, then\n   * navigation will only modify query parameter to clicked step's ID when clicked\n   */\n  @Input() route?: string;\n\n  /**\n   * Whether users should be allowed to navigate to this step or not\n   */\n  @Input() disabled?: boolean;\n\n  /**\n   * Emitted anytime user input changes in the step - only applicable if\n   * step is a formly field config\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  constructor(\n    @Inject(forwardRef(() => SdsStepper)) public _stepper: SdsStepper,\n    private _el: ElementRef,\n    @Inject(DOCUMENT) private _document\n  ) {}\n\n  /**\n   * Dispatch a custom event for parent stepper component to listen for on model change\n   * as well as an output binded event emitter for application level components to listen\n   * for if they wanted to listen at individual step level\n   * @param $event - the updated model\n   */\n  onModelChange($event) {\n    let event: CustomEvent;\n    if (typeof Event === 'function') {\n      event = new CustomEvent('stepModelChange', { bubbles: true, detail: $event });\n    } else {\n      // IE11 support\n      event = this._document.createEvent('CustomEvent');\n      event.initCustomEvent('sort', true, true, $event);\n    }\n\n    this._el.nativeElement.dispatchEvent(event);\n\n    this.modelChange.emit($event);\n  }\n}\n\n@Directive({\n  selector: `[sdsStepper]`,\n  exportAs: 'sdsStepper',\n})\nexport class SdsStepper {\n  @ContentChildren(SdsStepComponent) stepTemplates: QueryList<SdsStepComponent>;\n\n  /**\n   * Singular global model to store user input for all steps. Alternatively,\n   * users may pass in a model specifically to each sds-step and manage the data\n   * modal separately\n   */\n  @Input() model: any = {};\n\n  /**\n   * Id of the step currently shown to users\n   */\n  @Input() currentStepId: string;\n\n  /**\n   * Mapping of step validity. This maps each step's id to a boolean value indicating\n   * whether the step is valid or invalid. This maps defines valid/invalid icons\n   * displayed in side nav\n   */\n  @Input() stepValidityMap: { [key: string]: boolean | undefined } = {};\n\n  /**\n   * Toggle custom error handling from user side. By default, errors are displayed\n   * only on save click or when loading a pre-saved form with defined validity.\n   * @default false\n   */\n  @Input() customErrorHandling = false;\n\n  /** Whether the validity of previous steps should prevent navigating to next steps.\n   * @default false\n   */\n  @Input() linear = false;\n\n  /**\n   * Unique identifier for the stepper. If none provided a default id will be used\n   */\n  @Input() id = `sds-stepper-${nextId++}`;\n\n  /**\n   * Configurable query parameter to use when keeping track of which\n   * step the user is on from the URL. Useful when we'd want multiple\n   * steppers in one page but don't want the query params to conflict\n   * @default - sdsStepId\n   */\n  @Input() queryParamKey = 'sdsStepId';\n\n  /**\n   * This is used to disable/enable the routing for the stepper\n   * @default - true\n   */\n  @Input() isRouteEnabled = true;\n\n  @Input() validateStepsOnInit = true;\n\n  /**\n   * Output event - emitted when save button is clicked\n   */\n  @Output() saveData = new EventEmitter<{ model: any; metadata: any }>();\n\n  /**\n   * Output event - emitted when a step is changed, either through the\n   *  navigation buttons at the bottom of the step or by clicking on a\n   *  step in side panel\n   */\n  @Output() stepChange = new EventEmitter<SdsStepComponent>();\n\n  /**\n   * Output event - emitted if the current step is a formly config.\n   *  Outputs whenever a model change occurs from the formly field\n   */\n  @Output() modelChange = new EventEmitter<any>();\n\n  /**\n   * Reference to step currently selected and displayed to the user\n   */\n  selectedStep: SdsStepComponent;\n\n  /**\n   * Index of currently selected step in the flatSteps array\n   */\n  selectedStepIndex: number;\n\n  /**\n   * A flattened list of steps - steps with children are placed after their parent\n   * in the list\n   */\n  flatSteps: SdsStepComponent[] = [];\n\n  /**\n   * Switch that toggles on if and only if all steps in the flattned list of steps\n   * are seen as valid in the validity map\n   */\n  _isReviewAndSubmitDisabled = true;\n\n  /**\n   * Event emitted by sds-step component whenever a model change\n   * occurs. Emits the modelChange event. This can be useful if\n   * users want to attach a listener for any model change in overall\n   * steps rather than listening for model change in each individual step\n   * @param $event\n   */\n  @HostListener('stepModelChange', ['$event'])\n  onModelChange($event: CustomEvent) {\n    $event.stopImmediatePropagation();\n    this.modelChange.emit($event.detail);\n  }\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, public cdr: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.selectedStep) {\n      return;\n    }\n\n    if (changes.currentStepId && this.selectedStep.id != changes.currentStepId.currentValue) {\n      this.changeStep(changes.currentStepId.currentValue);\n    }\n\n    if (changes.stepValidityMap && changes.stepValidityMap.currentValue) {\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n\n    /**\n     * Handling toggling between linear and non-linear modes.\n     * On switch to linear, disable incomplete forms.\n     * On switch to non-linear, enable all steps except review step\n     */\n    if (changes.linear) {\n      if (changes.linear.currentValue) {\n        const lastValidStepIndex = this.evaluateIncompleteForms();\n        this.changeStep(this.flatSteps[lastValidStepIndex].id);\n      } else {\n        this.flatSteps.forEach((step) => {\n          if (!step.isReview) {\n            step.disabled = false;\n          } else if (!this._isReviewAndSubmitDisabled) {\n            step.disabled = false;\n          }\n        });\n      }\n\n      this.flatSteps.forEach((step) => {\n        step.valid = this.stepValidityMap[step.id];\n      });\n    }\n  }\n  ngAfterViewInit() {\n    if (this.validateStepsOnInit) {\n      const currentStep = this.selectedStep;\n      if (!this.linear) {\n        const isRouteEnabled = this.isRouteEnabled;\n        this.flatSteps = this.getFlatSteps(this.stepTemplates);\n        this.isRouteEnabled = false;\n\n        this.flatSteps.forEach((step) => {\n          setTimeout(() => {\n            this.changeStep(step.id);\n          }, 0);\n        });\n\n        setTimeout(() => {\n          this.changeStep(currentStep.id);\n          this.isRouteEnabled = isRouteEnabled;\n        }, 0);\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.flatSteps.forEach((step) => {\n      step.model = step.model ? step.model : this.model;\n    });\n\n    if (this.activatedRoute.snapshot.queryParams[this.queryParamKey] && !this.linear && this.isRouteEnabled) {\n      this.currentStepId = this.activatedRoute.snapshot.queryParams[this.queryParamKey];\n    } else if (!this.currentStepId) {\n      this.currentStepId = this.flatSteps[0].id;\n      this.selectedStepIndex = 0;\n      this.selectedStep = this.flatSteps[this.selectedStepIndex];\n    }\n\n    if (this.stepValidityMap) {\n      this.updateValidity(this.stepValidityMap, this.stepTemplates);\n      this.checkReviewAndSubmit();\n    } else {\n      this.stepValidityMap = {};\n    }\n\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    this.changeStep(this.currentStepId).finally(() => {\n      if (this.isRouteEnabled) {\n        this.activatedRoute.queryParams.subscribe((queryParam) => {\n          if (queryParam[this.queryParamKey] && queryParam[this.queryParamKey] != this.currentStepId) {\n            this.changeStep(queryParam[this.queryParamKey]);\n          }\n        });\n      }\n    });\n  }\n\n  getFlatSteps(stepTemplates: QueryList<SdsStepComponent>): SdsStepComponent[] {\n    let flat: SdsStepComponent[] = [];\n    stepTemplates.forEach((step) => {\n      if (step.hideFn && step.hideFn(step.model ? step.model : this.model, step.fieldConfig)) {\n        step.hide = true;\n        return;\n      }\n      step.hide = false;\n      if (step.editable) {\n        flat.push(step);\n      }\n\n      if (step.children && step.children.length) {\n        const childSteps = this.getFlatSteps(step.children);\n        flat = flat.concat(childSteps);\n      }\n    });\n\n    return flat;\n  }\n\n  /**\n   * Change currently selected step\n   * @param stepId - The id of step to change to\n   * @param incrementor - Optional input - Either a 1 or -1. When a value of 1\n   *  is provided, then the step to change to will be the next step from the input step\n   *  given. When a value of -1 is provided, then the selected step will be the step\n   *  previous to the provided step\n   */\n  async changeStep(stepId: string, incrementor?: number) {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    let stepIndex = this.flatSteps.findIndex((step) => step.id === stepId);\n    stepIndex = stepIndex === -1 ? 0 : stepIndex;\n\n    if (incrementor) {\n      stepIndex = stepIndex + incrementor;\n      if (stepIndex > this.flatSteps.length) {\n        throw Error(\n          `StepIndex of ${stepIndex} is greater than the number of steps. Check that you are passing in a sensible incrementor.)`\n        );\n      }\n    }\n\n    const step = this.flatSteps[stepIndex];\n\n    /** Already on desired step, nothing to do */\n    if (step === this.selectedStep) {\n      return;\n    }\n    /**\n     * On non-linear mode, do not allow step change if step we are moving to is disabled or is review step.\n     * In linear mode, we will run validations first, then decide whether or not to move to next step\n     */\n    if (!this.linear && (step.disabled || (step.isReview && this._isReviewAndSubmitDisabled))) {\n      return;\n    }\n\n    // Update current step's validity before moving to next step\n    if (this.selectedStep) {\n      await this.updateValidation(this.selectedStep);\n      this.checkReviewAndSubmit();\n      if (this.linear) {\n        this.evaluateIncompleteForms();\n      }\n      this.selectedStep.selected = false;\n    }\n\n    /**\n     * In linear mode and moving to next step.\n     * Disable changing step if current step is invalid or has empty data, and display errors\n     * */\n    if (this.linear && stepIndex > this.selectedStepIndex && !this.stepValidityMap[this.selectedStep.id]) {\n      this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n      return;\n    }\n\n    this.selectedStepIndex = stepIndex;\n    this.selectedStep = this.flatSteps[stepIndex];\n\n    this.selectedStep.selected = true;\n    this.currentStepId = this.selectedStep.id;\n\n    this.toggleOnValidationForStep(this.selectedStep, this.stepValidityMap, this.customErrorHandling);\n\n    if (this.selectedStep.editable && this.isRouteEnabled) {\n      this.router.navigate(this.selectedStep.route ? [this.selectedStep.route] : [], {\n        queryParams: {\n          [this.queryParamKey]: this.currentStepId,\n        },\n        queryParamsHandling: 'merge',\n      });\n    }\n\n    this.stepChange.emit(this.selectedStep);\n  }\n\n  /**\n   * Enables validation error display for a given step\n   * @param step\n   */\n  private toggleOnValidationForStep(\n    step: SdsStepComponent,\n    validityMap: { [key: string]: boolean | undefined },\n    customErrorHandling?: boolean\n  ) {\n    if (!step.options && !customErrorHandling) {\n      this.selectedStep.options = {};\n    }\n\n    if (!step.options.showError && !customErrorHandling) {\n      this.selectedStep.options.showError = () => false;\n    }\n\n    if (validityMap[step.id] === false) {\n      step.options.showError = (field) => field.formControl.invalid;\n    }\n  }\n\n  onNextStep() {\n    this.changeStep(this.selectedStep.id, 1);\n  }\n\n  onPreviousStep() {\n    this.changeStep(this.selectedStep.id, -1);\n  }\n\n  /**\n   * Called through sdsStepperSave button - updates validity of the current step\n   * and toggles error display. Emits saveData event.\n   */\n  async onSaveClicked() {\n    this.flatSteps = this.getFlatSteps(this.stepTemplates);\n    this.selectedStepIndex = this.flatSteps.findIndex((step) => step.id === this.selectedStep.id);\n\n    await this.updateValidation(this.selectedStep);\n    this.checkReviewAndSubmit();\n    if (this.linear) {\n      this.evaluateIncompleteForms();\n    }\n\n    if (!this.customErrorHandling && this.stepValidityMap[this.currentStepId] === false) {\n      this.selectedStep.options.showError = (field) => !field.formControl.valid;\n    }\n\n    this.saveData.emit({\n      model: this.model,\n      metadata: {\n        stepId: this.selectedStep.id,\n        stepValidityMap: this.stepValidityMap,\n      },\n    });\n  }\n\n  /**\n   * Gets all steps that are not hidden\n   * @param steps\n   */\n  getDisplayedSteps(steps: QueryList<SdsStepComponent>) {\n    if (!steps) {\n      return [];\n    }\n    return steps.filter((step) => !step.hide);\n  }\n\n  /**\n   * Used while in linear mode. All steps that are in the step validity and are valid\n   * map should be enabled until we find the first step that is invalid.\n   * Then all steps from that point on should be disabled\n   *\n   * @returns the index of the last valid step\n   */\n  private evaluateIncompleteForms() {\n    let startIndex = 0;\n    this.flatSteps.some((step, index) => {\n      step.disabled = false;\n\n      if (!this.stepValidityMap[step.id]) {\n        startIndex = index;\n        return true;\n      }\n    });\n\n    for (let i = startIndex + 1; i < this.flatSteps.length; i++) {\n      this.flatSteps[i].disabled = true;\n    }\n\n    return startIndex;\n  }\n\n  private checkReviewAndSubmit() {\n    this._isReviewAndSubmitDisabled = this.flatSteps.some((step) => {\n      if (step.isReview) {\n        return false;\n      }\n\n      if (!this.stepValidityMap[step.id]) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  private updateValidity(validityMap: any, stepTemplates: QueryList<SdsStepComponent>) {\n    stepTemplates.forEach((step) => {\n      if (!step) {\n        return;\n      }\n\n      step.valid = validityMap[step.id];\n      if (step.children) {\n        this.updateValidity(validityMap, step.children);\n      }\n    });\n  }\n\n  /**\n   * Updates validity of a given step. If a synchronous stepValidationFn is provided\n   * for the step, then that method is given priority over the step's formly form.\n   * If a forceValidationValue is given, then the step's validation value will be set\n   * to the value provided\n   * @param currentStep - step to update validation for\n   * @param forceValidationValue - true or false -\n   *  if true, step's validity will be force set to true\n   *  if false, step's validity will be force set to false\n   * @returns\n   */\n  async updateValidation(currentStep: SdsStepComponent, forceValidationValue?: boolean) {\n    if (!currentStep) {\n      return;\n    }\n\n    if (forceValidationValue === true || forceValidationValue === false) {\n      currentStep.valid = forceValidationValue;\n      this.stepValidityMap[currentStep.id] = forceValidationValue;\n      return;\n    }\n\n    // Custom validation function was provided, use provided custom validation\n    if (currentStep.stepValidationFn) {\n      const isValid = currentStep.stepValidationFn(currentStep.model ? currentStep.model : this.model);\n      if (typeof isValid === 'boolean') {\n        currentStep.valid = isValid;\n        this.stepValidityMap[currentStep.id] = isValid;\n      } else if (typeof isValid === 'object') {\n        const res = await isValid.toPromise();\n        currentStep.valid = res;\n        this.stepValidityMap[currentStep.id] = res;\n      }\n\n      return;\n    }\n\n    const currentStepFieldConfig = currentStep.fieldConfig;\n    if (\n      !currentStepFieldConfig ||\n      this.isFormEmpty(currentStepFieldConfig.formControl, currentStepFieldConfig.defaultValue)\n    ) {\n      return;\n    }\n\n    const isValid = currentStep.fieldConfig.formControl.valid;\n    currentStep.valid = isValid;\n    this.stepValidityMap[currentStep.id] = isValid;\n  }\n\n  private isFormEmpty(form: AbstractControl, defaultValue?: any) {\n    if (!form) {\n      return true;\n    }\n\n    if (form.value === false) {\n      return false;\n    }\n\n    if (!form.value || form.value.length === 0) {\n      return true;\n    }\n\n    if (typeof form.value != 'object') {\n      return false;\n    }\n\n    const cleanModel = this.getCleanObject(form.value);\n    return Object.keys(cleanModel).length === 0 || _.isEqual(cleanModel, defaultValue);\n  }\n\n  private getCleanObject(input: any, output?: any) {\n    output = output || {};\n    for (var key in input) {\n      var value = input[key];\n      if (value) {\n        if (typeof value === 'object' && value !== null) {\n          this.getCleanObject(value, output);\n        } else {\n          // Treat true string as boolean value & ignore value of string 'false'\n          if (value === 'true') {\n            output[key] = true;\n          } else if (value != 'false') {\n            output[key] = value;\n          }\n        }\n      }\n    }\n    return output;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "SdsFiltersModule",
            "id": "module-SdsFiltersModule-4818b23449c6ef954de5569a2069623f9fcfd4c8c43ce92430e4a185163a65696ade0248de453430255a2d2fbfbd27f1ad21af44d31be4c4f655078fb5be9ed1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/packages/sam-formly/src/lib/formly-filters/sds-filters.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { SdsFiltersComponent } from './sds-filters.component';\nimport { SdsFormlyModule } from '../formly/formly.module';\nimport { SdsFormlyResetModule } from '../formly-reset/formly-reset.module';\nimport { AdvancedFiltersComponent } from './advanced-filters/advanced-filters.component';\nimport { SDSFormlyUpdateModelService } from './service/sds-filter-model-update.service';\nimport { IconModule } from '@gsa-sam/ngx-uswds-icons';\nimport { NgxBootstrapIconsModule, filter, x, chevronLeft } from 'ngx-bootstrap-icons';\nimport { SdsReadonlyModule } from '../formly/readonly/readonly.module';\nimport { SdsPopoverModule } from '@gsa-sam/components';\n\n@NgModule({\n  declarations: [SdsFiltersComponent, AdvancedFiltersComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SdsFormlyModule,\n    SdsFormlyResetModule,\n    IconModule,\n    ReactiveFormsModule,\n    FormlySelectModule,\n    FormlyModule,\n    SdsReadonlyModule,\n    SdsPopoverModule,\n    NgxBootstrapIconsModule.pick({ filter, x, chevronLeft }),\n  ],\n  exports: [SdsFiltersComponent],\n  providers: [SDSFormlyUpdateModelService],\n})\nexport class SdsFiltersModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdvancedFiltersComponent"
                        },
                        {
                            "name": "SdsFiltersComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SdsFormlyModule"
                        },
                        {
                            "name": "SdsFormlyResetModule"
                        },
                        {
                            "name": "SdsReadonlyModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SdsFiltersComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SdsFormlyDialogModule",
            "id": "module-SdsFormlyDialogModule-00c6a86955c4e8c9342d2b17f4abb804278eb970cc5da2adb81ede8607b054083a89563f60d3c98848056da487ff49cf43f814b340fcbf1b0756c64455e78fad",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/packages/sam-formly/src/lib/formly-dialog/sds-formly-dialog.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { SdsDialogModule } from '@gsa-sam/components';\n\nimport { SdsFormlyModule } from '../formly/formly.module';\nimport { SdsFormlyDialogComponent } from './formly-dialog.component';\nimport { SdsFiltersModule } from '../formly-filters/sds-filters.module';\n\n@NgModule({\n  declarations: [SdsFormlyDialogComponent],\n  imports: [\n    CommonModule,\n    SdsFiltersModule,\n    SdsDialogModule,\n    ReactiveFormsModule,\n    SdsFormlyModule,\n    FormlyModule,\n    FormsModule,\n  ],\n  exports: [SdsFormlyDialogComponent],\n})\nexport class SdsFormlyDialogModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SdsFormlyDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SdsFiltersModule"
                        },
                        {
                            "name": "SdsFormlyModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SdsFormlyDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SdsFormlyModule",
            "id": "module-SdsFormlyModule-7111c9dddc6af9dd546ff8685936018b49643b5087bd53e409c2fe52e53c15616ae98df0b83ecf7b0ca0a5b694b7834249774b375efba5a17908c06661ef035f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
            "methods": [
                {
                    "name": "forChild",
                    "args": [
                        {
                            "name": "config",
                            "type": "ConfigOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}"
                        }
                    ],
                    "optional": false,
                    "returnType": "ModuleWithProviders<SdsFormlyModule>",
                    "typeParameters": [],
                    "line": 218,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "ConfigOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { FormlyModule, FormlyFieldConfig, ConfigOption } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { MatDateFormats, MatNativeDateModule, MAT_DATE_FORMATS, MAT_NATIVE_DATE_FORMATS } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { SdsTableModule } from '@gsa-sam/sam-material-extensions';\nimport {\n  SdsAutocompleteModule,\n  SdsDialogModule,\n  SdsTextModule,\n  SdsEditorModule,\n  SdsSearchModule,\n  SdsCollapseModule,\n  SdsTooltipModule,\n  SdsTabsModule,\n  SdsPopoverModule,\n  SdsRichTextModule,\n  SdsStepArrowModule,\n} from '@gsa-sam/components';\n\nimport { FIELD_TYPE_COMPONENTS, FORMLY_CONFIG } from './formly.config';\nimport { maxDateValidator, minDateValidator, dateRangeValidator } from './formly.validators';\nimport { AnimationWrapperComponent } from './wrappers/form-field.animation';\nimport { SdsReadonlyModule } from './readonly/readonly.module';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {\n  NgxBootstrapIconsModule,\n  caretDownFill,\n  caretUpFill,\n  filter,\n  arrowClockwise,\n  chevronDown,\n  infoCircleFill,\n} from 'ngx-bootstrap-icons';\nimport { UsaAccordionModule, UsaFileInputModule } from '@gsa-sam/ngx-uswds';\nimport { IconModule } from '@gsa-sam/ngx-uswds-icons';\n\n// Validate the min length of the character\nexport function minlengthValidationMessage(err, field) {\n  return `Should have at least ${field.props.minlength} characters`;\n}\n\n// Validate the max length of the character\nexport function maxlengthValidationMessage(err, field) {\n  return `This value should be less than ${field.props.maxlength} characters`;\n}\n\n// Validate the min value of the character\nexport function minValidationMessage(err, field: FormlyFieldConfig) {\n  return `This value should be more than ${field.props.min}`;\n}\n\nexport function minDateValidationMessage(err, field: FormlyFieldConfig) {\n  const dt = field.props.minDate;\n  const dateFormat = dt.toLocaleString('en-US', { month: 'short' }) + ', ' + dt.getDate() + ', ' + dt.getFullYear();\n  return `Date must be on or after ${dateFormat}`;\n}\n\nexport function maxDateValidationMessage(err, field: FormlyFieldConfig) {\n  const dt = field.props.maxDate;\n  const dateFormat = dt.toLocaleString('en-US', { month: 'short' }) + ' ' + dt.getDate() + ', ' + dt.getFullYear();\n  return `Date must be on or before ${dateFormat}`;\n}\n\nexport function betweenDateValidationMessage(err, field: FormlyFieldConfig) {\n  const dtnmax = field.props.maxDate;\n  const dateMaxFormat =\n    dtnmax.toLocaleString('en-US', { month: 'short' }) + ' ' + dtnmax.getDate() + ', ' + dtnmax.getFullYear();\n  const dtmin = field.props.minDate;\n  const dateMinFormat =\n    dtmin.toLocaleString('en-US', { month: 'short' }) + ' ' + dtmin.getDate() + ', ' + dtmin.getFullYear();\n  return `Date must be between ${dateMinFormat} and ${dateMaxFormat} `;\n}\n\nexport function invalidDateFormatValidationMessage(err, field: FormlyFieldConfig) {\n  return `Valid date format required (ex: MM/DD/YYYY)`;\n}\n\nexport function matDatepickerMinValidationMessage(err, field: FormlyFieldConfig) {\n  const fieldWithMinDate = field.props.minDate ? field : field.parent;\n  if (!fieldWithMinDate) {\n    return `Please enter a valid date`;\n  }\n\n  return minDateValidationMessage(err, fieldWithMinDate);\n}\n\nexport function matDatepickerMaxValidationMessage(err, field: FormlyFieldConfig) {\n  const fieldWithMaxDate = field.props.maxDate ? field : field.parent;\n  if (!fieldWithMaxDate) {\n    return `Please enter a valid date`;\n  }\n\n  return maxDateValidationMessage(err, fieldWithMaxDate);\n}\n\nexport function matDateInBetweenValidationMessage(err, field: FormlyFieldConfig) {\n  const fieldWithMinDate = field.props.minDate ? field : field.parent;\n  const fieldWithMaxDate = field.props.maxDate ? field : field.parent;\n\n  if (fieldWithMinDate && !fieldWithMaxDate) {\n    return minDateValidationMessage(err, fieldWithMinDate);\n  } else if (fieldWithMaxDate && !fieldWithMinDate) {\n    return maxDateValidationMessage(err, fieldWithMaxDate);\n  } else if (fieldWithMaxDate && fieldWithMinDate) {\n    return betweenDateValidationMessage(err, fieldWithMaxDate);\n  }\n\n  return `Please enter a valid date`;\n}\n\n// Validate the max value of the character\nexport function maxValidationMessage(err, field) {\n  return `This value should be less than ${field.props.max}`;\n}\nexport function animationExtension(field: FormlyFieldConfig) {\n  if (field.wrappers && field.wrappers.includes('animation')) {\n    return;\n  }\n\n  field.wrappers = ['animation', ...(field.wrappers || [])];\n}\nexport { maxDateValidator, minDateValidator, dateRangeValidator, multiCheckboxRequired } from './formly.validators';\n\nexport const DATE_FORMAT: MatDateFormats = {\n  ...MAT_NATIVE_DATE_FORMATS,\n  display: {\n    ...MAT_NATIVE_DATE_FORMATS.display,\n    dateInput: {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    } as Intl.DateTimeFormatOptions,\n  },\n};\n\n@NgModule({\n  declarations: [FIELD_TYPE_COMPONENTS, AnimationWrapperComponent],\n  imports: [\n    CommonModule,\n    UsaAccordionModule,\n    MatExpansionModule,\n    SdsAutocompleteModule,\n    SdsDialogModule,\n    SdsSearchModule,\n    SdsTextModule,\n    SdsEditorModule,\n    SdsCollapseModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    SdsTableModule,\n    MatInputModule,\n    IconModule,\n    ReactiveFormsModule,\n    FormlySelectModule,\n    SdsReadonlyModule,\n    FormsModule,\n    UsaFileInputModule,\n    SdsTooltipModule,\n    SdsTableModule,\n    SdsTabsModule,\n    SdsPopoverModule,\n    SdsRichTextModule,\n    SdsStepArrowModule,\n    NgxBootstrapIconsModule.pick({\n      caretDownFill,\n      caretUpFill,\n      filter,\n      arrowClockwise,\n      chevronDown,\n      infoCircleFill,\n    }),\n    FormlyModule.forChild(FORMLY_CONFIG),\n    FormlyModule.forRoot({\n      validationMessages: [\n        { name: 'required', message: 'This field is required' },\n        { name: 'minlength', message: minlengthValidationMessage },\n        { name: 'maxlength', message: maxlengthValidationMessage },\n        { name: 'min', message: minValidationMessage },\n        { name: 'max', message: maxValidationMessage },\n        { name: 'minDate', message: minDateValidationMessage },\n        { name: 'maxDate', message: maxDateValidationMessage },\n        { name: 'betweenDate', message: betweenDateValidationMessage },\n        {\n          name: 'matDatepickerParse',\n          message: invalidDateFormatValidationMessage,\n        }, // Comes from the datepicker\n        {\n          name: 'matDatepickerMin',\n          message: matDatepickerMinValidationMessage,\n        }, // Comes from the datepicker\n        {\n          name: 'matStartDateInvalid',\n          message: matDateInBetweenValidationMessage,\n        }, // Comes from the datepicker\n        {\n          name: 'matDatepickerMax',\n          message: matDatepickerMaxValidationMessage,\n        }, // Comes from the datepicker\n      ],\n      validators: [\n        { name: 'minDate', validation: minDateValidator },\n        { name: 'maxDate', validation: maxDateValidator },\n        { name: 'dateRangeValidator', validation: dateRangeValidator },\n        { name: 'requiredTrue', validation: Validators.requiredTrue },\n      ],\n      wrappers: [{ name: 'animation', component: AnimationWrapperComponent }],\n      extensions: [{ name: 'animation', extension: { onPopulate: animationExtension } }],\n    }),\n  ],\n  providers: [{ provide: MAT_DATE_FORMATS, useValue: DATE_FORMAT }],\n})\nexport class SdsFormlyModule {\n  public static forChild(config: ConfigOption = {}): ModuleWithProviders<SdsFormlyModule> {\n    return {\n      ngModule: SdsFormlyModule,\n      providers: [...FormlyModule.forChild(config).providers],\n    };\n  }\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AnimationWrapperComponent"
                        },
                        {
                            "name": "FormlyAccordianFormFieldComponent"
                        },
                        {
                            "name": "FormlyDescriptionWrapperComponent"
                        },
                        {
                            "name": "FormlyFieldAutoCompleteComponent"
                        },
                        {
                            "name": "FormlyFieldButtonComponent"
                        },
                        {
                            "name": "FormlyFieldCheckboxComponent"
                        },
                        {
                            "name": "FormlyFieldDatePickerComponent"
                        },
                        {
                            "name": "FormlyFieldDateRangePickerComponent"
                        },
                        {
                            "name": "FormlyFieldEditorComponent"
                        },
                        {
                            "name": "FormlyFieldFileInfoComponent"
                        },
                        {
                            "name": "FormlyFieldFileInputComponent"
                        },
                        {
                            "name": "FormlyFieldInputComponent"
                        },
                        {
                            "name": "FormlyFieldMultiCheckboxComponent"
                        },
                        {
                            "name": "FormlyFieldRadioComponent"
                        },
                        {
                            "name": "FormlyFieldRichTextEditorComponent"
                        },
                        {
                            "name": "FormlyFieldSearchComponent"
                        },
                        {
                            "name": "FormlyFieldSelectComponent"
                        },
                        {
                            "name": "FormlyFieldStepArrowComponent"
                        },
                        {
                            "name": "FormlyFieldTableComponent"
                        },
                        {
                            "name": "FormlyFieldTextAreaComponent"
                        },
                        {
                            "name": "FormlyFieldTextComponent"
                        },
                        {
                            "name": "FormlyFormFieldFilterWrapperComponent"
                        },
                        {
                            "name": "FormlyGroupWrapperComponent"
                        },
                        {
                            "name": "FormlyLabelWrapperComponent"
                        },
                        {
                            "name": "FormlyReadonlyWrapperComponent"
                        },
                        {
                            "name": "FormlyTabsWrapperComponent"
                        },
                        {
                            "name": "FormlyValidationWrapperComponent"
                        },
                        {
                            "name": "FormlyWrapperFormFieldComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SdsReadonlyModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SdsFormlyResetModule",
            "id": "module-SdsFormlyResetModule-4cb886f54a4c8186f22c4758a74c1b0113db51905431c58e19ad989dad511579ef33a076e0b48b51a3dc5e5b7b07a3dee3c40466e88fde4cab104b365084b53c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/packages/sam-formly/src/lib/formly-reset/formly-reset.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconModule } from '@gsa-sam/ngx-uswds-icons';\nimport { SdsFormlyResetComponent } from './formly-reset.component';\nimport { NgxBootstrapIconsModule, arrowClockwise } from 'ngx-bootstrap-icons';\n\n@NgModule({\n  declarations: [SdsFormlyResetComponent],\n  imports: [CommonModule, IconModule, NgxBootstrapIconsModule.pick({ arrowClockwise })],\n  exports: [SdsFormlyResetComponent],\n})\nexport class SdsFormlyResetModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SdsFormlyResetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SdsFormlyResetComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SdsReadonlyModule",
            "id": "module-SdsReadonlyModule-404f8f813ba9f5718b043c8a2fcbd282ab71af189cc320710e87d3a9c2e71629f1c4fe21d0eb325f8067601b614a779c9b69d386410879b7f196132b46e847a2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/packages/sam-formly/src/lib/formly/readonly/readonly.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReadonlyInputComponent } from './readonly-types/readonly-input';\nimport { ReadonlyDatepickerComponent } from './readonly-types/readonly-datepicker';\nimport { ReadonlySelectComponent } from './readonly-types/readonly-select';\nimport { ReadonlyRadioComponent } from './readonly-types/readonly-radio';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { ReadonlyAutocompleteComponent } from './readonly-types/readonly-autocomplete';\nimport { ReadonlyCheckboxComponent } from './readonly-types/readonly-checkbox';\nimport { ReadonlyMulticheckboxComponent } from './readonly-types/readonly-multicheckbox';\nimport { ReadonlyDaterangeComponent } from './readonly-types/readonly-daterange';\nimport { ReadonlyFileinfoComponent } from './readonly-types/readonly-fileinfo';\nimport {\n  ReadonlyContainerComponent,\n  ReadonlyLabelDirective,\n  ReadonlyValueDirective,\n} from './readonly-container.component';\n\n@NgModule({\n  imports: [CommonModule, FormlySelectModule],\n  declarations: [\n    ReadonlyInputComponent,\n    ReadonlyDatepickerComponent,\n    ReadonlySelectComponent,\n    ReadonlyRadioComponent,\n    ReadonlyAutocompleteComponent,\n    ReadonlyCheckboxComponent,\n    ReadonlyMulticheckboxComponent,\n    ReadonlyDaterangeComponent,\n    ReadonlyFileinfoComponent,\n    ReadonlyContainerComponent,\n    ReadonlyLabelDirective,\n    ReadonlyValueDirective,\n  ],\n  exports: [\n    ReadonlyInputComponent,\n    ReadonlyDatepickerComponent,\n    ReadonlySelectComponent,\n    ReadonlyRadioComponent,\n    ReadonlyAutocompleteComponent,\n    ReadonlyCheckboxComponent,\n    ReadonlyMulticheckboxComponent,\n    ReadonlyDaterangeComponent,\n    ReadonlyFileinfoComponent,\n    ReadonlyContainerComponent,\n    ReadonlyLabelDirective,\n    ReadonlyValueDirective,\n  ],\n})\nexport class SdsReadonlyModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ReadonlyAutocompleteComponent"
                        },
                        {
                            "name": "ReadonlyCheckboxComponent"
                        },
                        {
                            "name": "ReadonlyContainerComponent"
                        },
                        {
                            "name": "ReadonlyDatepickerComponent"
                        },
                        {
                            "name": "ReadonlyDaterangeComponent"
                        },
                        {
                            "name": "ReadonlyFileinfoComponent"
                        },
                        {
                            "name": "ReadonlyInputComponent"
                        },
                        {
                            "name": "ReadonlyLabelDirective"
                        },
                        {
                            "name": "ReadonlyMulticheckboxComponent"
                        },
                        {
                            "name": "ReadonlyRadioComponent"
                        },
                        {
                            "name": "ReadonlySelectComponent"
                        },
                        {
                            "name": "ReadonlyValueDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ReadonlyAutocompleteComponent"
                        },
                        {
                            "name": "ReadonlyCheckboxComponent"
                        },
                        {
                            "name": "ReadonlyContainerComponent"
                        },
                        {
                            "name": "ReadonlyDatepickerComponent"
                        },
                        {
                            "name": "ReadonlyDaterangeComponent"
                        },
                        {
                            "name": "ReadonlyFileinfoComponent"
                        },
                        {
                            "name": "ReadonlyInputComponent"
                        },
                        {
                            "name": "ReadonlyLabelDirective"
                        },
                        {
                            "name": "ReadonlyMulticheckboxComponent"
                        },
                        {
                            "name": "ReadonlyRadioComponent"
                        },
                        {
                            "name": "ReadonlySelectComponent"
                        },
                        {
                            "name": "ReadonlyValueDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SdsStepperModule",
            "id": "module-SdsStepperModule-035c5c2aefaf744e715e8197143675b9c9887fcb06410a670d3e63cf0d065cbe23639851752112f4d29c65d25bdb843ef90e7da41896291f3e559a91a45638fe",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SdsFormlyModule } from '../formly/formly.module';\nimport { NgxBootstrapIconsModule, chevronLeft, chevronRight, x, check, question, save } from 'ngx-bootstrap-icons';\nimport { RouterModule } from '@angular/router';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { SdsStepper, SdsStepComponent, SdsStepFooterComponent, SdsStepHeaderComponent } from './sds-stepper';\nimport {\n  SdsStepperNavDirective,\n  SdsStepperNextDirective,\n  SdsStepperPreviousDirective,\n  SdsStepperSaveDirective,\n  SdsStepperUSWDSNavDirective,\n} from './sds-step-buttons';\nimport { IconModule } from '@gsa-sam/ngx-uswds-icons';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormlyModule,\n    SdsFormlyModule,\n    IconModule,\n    NgxBootstrapIconsModule.pick({ chevronLeft, chevronRight, x, check, question, save }),\n    RouterModule,\n  ],\n  declarations: [\n    SdsStepComponent,\n    SdsStepHeaderComponent,\n    SdsStepFooterComponent,\n    SdsStepper,\n    SdsStepperNavDirective,\n    SdsStepperNextDirective,\n    SdsStepperPreviousDirective,\n    SdsStepperSaveDirective,\n    SdsStepperUSWDSNavDirective,\n  ],\n  exports: [\n    SdsStepComponent,\n    SdsStepHeaderComponent,\n    SdsStepFooterComponent,\n    SdsStepper,\n    SdsStepperNavDirective,\n    SdsStepperNextDirective,\n    SdsStepperPreviousDirective,\n    SdsStepperSaveDirective,\n    SdsStepperUSWDSNavDirective,\n  ],\n})\nexport class SdsStepperModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SdsStepComponent"
                        },
                        {
                            "name": "SdsStepFooterComponent"
                        },
                        {
                            "name": "SdsStepHeaderComponent"
                        },
                        {
                            "name": "SdsStepper"
                        },
                        {
                            "name": "SdsStepperNavDirective"
                        },
                        {
                            "name": "SdsStepperNextDirective"
                        },
                        {
                            "name": "SdsStepperPreviousDirective"
                        },
                        {
                            "name": "SdsStepperSaveDirective"
                        },
                        {
                            "name": "SdsStepperUSWDSNavDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SdsFormlyModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SdsStepComponent"
                        },
                        {
                            "name": "SdsStepFooterComponent"
                        },
                        {
                            "name": "SdsStepHeaderComponent"
                        },
                        {
                            "name": "SdsStepper"
                        },
                        {
                            "name": "SdsStepperNavDirective"
                        },
                        {
                            "name": "SdsStepperNextDirective"
                        },
                        {
                            "name": "SdsStepperPreviousDirective"
                        },
                        {
                            "name": "SdsStepperSaveDirective"
                        },
                        {
                            "name": "SdsStepperUSWDSNavDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "DATE_FORMAT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MatDateFormats",
                "defaultValue": "{\n  ...MAT_NATIVE_DATE_FORMATS,\n  display: {\n    ...MAT_NATIVE_DATE_FORMATS.display,\n    dateInput: {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    } as Intl.DateTimeFormatOptions,\n  },\n}"
            },
            {
                "name": "FIELD_TYPE_COMPONENTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  FormlyFieldInputComponent,\n  FormlyFieldCheckboxComponent,\n  FormlyFieldFileInfoComponent,\n  FormlyFieldRadioComponent,\n  FormlyFieldSelectComponent,\n  FormlyFieldTextAreaComponent,\n  FormlyFieldMultiCheckboxComponent,\n  FormlyWrapperFormFieldComponent,\n  FormlyAccordianFormFieldComponent,\n  FormlyFieldAutoCompleteComponent,\n  FormlyFieldDatePickerComponent,\n  FormlyFieldDateRangePickerComponent,\n  FormlyFormFieldFilterWrapperComponent,\n  FormlyFieldButtonComponent,\n  FormlyLabelWrapperComponent,\n  FormlyDescriptionWrapperComponent,\n  FormlyValidationWrapperComponent,\n  FormlyFieldTextComponent,\n  FormlyGroupWrapperComponent,\n  FormlyFieldSearchComponent,\n  FormlyReadonlyWrapperComponent,\n  FormlyFieldFileInputComponent,\n  FormlyTabsWrapperComponent,\n  FormlyFieldTableComponent,\n  FormlyFieldEditorComponent,\n  FormlyFieldRichTextEditorComponent,\n  FormlyFieldStepArrowComponent,\n]"
            },
            {
                "name": "FORMLY_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ConfigOption",
                "defaultValue": "{\n  types: [\n    {\n      name: SdsFormlyTypes.FORMLYGROUP,\n      wrappers: sdsGroupWrapper,\n    },\n    {\n      name: SdsFormlyTypes.READONLY,\n      wrappers: sdsGroupWrapper,\n      component: FormlyReadonlyWrapperComponent,\n    },\n    {\n      name: SdsFormlyTypes.BUTTON,\n      component: FormlyFieldButtonComponent,\n    },\n    {\n      name: SdsFormlyTypes.CUSTOMTEXT,\n      component: FormlyFieldTextComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.EDITOR,\n      component: FormlyFieldEditorComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.INPUT,\n      component: FormlyFieldInputComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.CHECKBOX,\n      component: FormlyFieldCheckboxComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.FILEINFO,\n      component: FormlyFieldFileInfoComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.RADIO,\n      component: FormlyFieldRadioComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.SELECT,\n      component: FormlyFieldSelectComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.TEXTAREA,\n      component: FormlyFieldTextAreaComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.MULTICHECKBOX,\n      component: FormlyFieldMultiCheckboxComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.AUTOCOMPLETE,\n      component: FormlyFieldAutoCompleteComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.DATEPICKER,\n      component: FormlyFieldDatePickerComponent,\n      wrappers: sdsWrappers,\n      defaultOptions: {\n        validators: {\n          validation: [maxDateValidator, minDateValidator],\n        },\n      },\n    },\n    {\n      name: SdsFormlyTypes.DATERANGEPICKER,\n      extends: SdsFormlyTypes.FORMLYGROUP,\n      wrappers: sdsWrappers,\n      defaultOptions: {\n        fieldGroup: [\n          {\n            type: SdsFormlyTypes.DATEPICKER,\n            key: 'fromDate',\n            props: {\n              label: 'From',\n              placeholder:\n                'eg: ' +\n                new Date().toLocaleString('en-US', {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                }),\n            },\n            expressionProperties: {\n              'props.minDate': minDateFromDateRangePicker,\n              'props.maxDate': maxDateFromDateRangePicker,\n              'props.hideOptional': getParentHideOptional,\n            },\n          },\n          {\n            type: SdsFormlyTypes.DATEPICKER,\n            key: 'toDate',\n            props: {\n              label: 'To',\n              placeholder:\n                'eg: ' +\n                new Date().toLocaleString('en-US', {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                }),\n            },\n            expressionProperties: {\n              'props.minDate': minDateToDateRangePicker,\n              'props.maxDate': maxDateToDateRangePicker,\n              'props.hideOptional': getParentHideOptional,\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'daterangepickerv2',\n      component: FormlyFieldDateRangePickerComponent,\n      wrappers: sdsWrappers,\n      defaultOptions: {\n        validators: {\n          validation: [dateRangeValidator],\n        },\n        fieldGroup: [\n          {\n            key: 'fromDate',\n            props: {\n              placeholder:\n                'eg: ' +\n                new Date().toLocaleString('en-US', {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                }),\n            },\n          },\n          {\n            key: 'toDate',\n            props: {\n              placeholder: new Date().toLocaleString('en-US', {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n              }),\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: SdsFormlyTypes.SEARCH,\n      component: FormlyFieldSearchComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.FILEINPUT,\n      component: FormlyFieldFileInputComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.TABLE,\n      component: FormlyFieldTableComponent,\n    },\n    {\n      name: SdsFormlyTypes.RICHTEXTEDITOR,\n      component: FormlyFieldRichTextEditorComponent,\n      wrappers: sdsWrappers,\n    },\n    { name: SdsFormlyTypes.STEPARROW, component: FormlyFieldStepArrowComponent, wrappers: sdsWrappers },\n  ],\n  wrappers: [\n    { name: 'label', component: FormlyLabelWrapperComponent },\n    { name: 'description', component: FormlyDescriptionWrapperComponent },\n    { name: 'validation', component: FormlyValidationWrapperComponent },\n    { name: 'group', component: FormlyGroupWrapperComponent },\n    { name: 'form-field', component: FormlyWrapperFormFieldComponent },\n    { name: 'accordionwrapper', component: FormlyAccordianFormFieldComponent },\n    { name: 'filterwrapper', component: FormlyFormFieldFilterWrapperComponent },\n    { name: 'readonly', component: FormlyReadonlyWrapperComponent },\n    { name: 'tabs', component: FormlyTabsWrapperComponent },\n  ],\n}"
            },
            {
                "name": "FORMLY_WRAPPERS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "[\n  {\n    name: 'form-field',\n    component: FormlyWrapperFormFieldComponent,\n    componentName: 'FormlyWrapperFormFieldComponent',\n  },\n  {\n    name: 'accordionwrapper',\n    component: FormlyAccordianFormFieldComponent,\n    componentName: 'FormlyAccordianFormFieldComponent',\n  },\n  {\n    name: 'filterwrapper',\n    component: FormlyFormFieldFilterWrapperComponent,\n    componentName: 'FormlyFormFieldFilterWrapperComponent',\n  },\n\n  {\n    name: 'label',\n    component: FormlyLabelWrapperComponent,\n    componentName: 'FormlyLabelWrapperComponent',\n  },\n  {\n    name: 'description',\n    component: FormlyDescriptionWrapperComponent,\n    componentName: 'FormlyDescriptionWrapperComponent',\n  },\n  {\n    name: 'validation',\n    component: FormlyValidationWrapperComponent,\n    componentName: 'FormlyValidationWrapperComponent',\n  },\n  {\n    name: 'group',\n    component: FormlyGroupWrapperComponent,\n    componentName: 'FormlyGroupWrapperComponent',\n  },\n  {\n    name: 'readonly',\n    component: FormlyReadonlyWrapperComponent,\n    componentName: 'FormlyReadonlyWrapperComponent',\n  },\n  {\n    name: 'tabs',\n    component: FormlyTabsWrapperComponent,\n    componentName: 'FormlyTabsWrapperComponent',\n  },\n]"
            },
            {
                "name": "nextId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "0"
            },
            {
                "name": "SampleAutocompleteData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/services/autocomplete-sample.data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  { id: '1', parentId: null, name: 'Level 1', subtext: 'id 1', type: 'Level 1' },\n  { id: '2', parentId: '1', name: 'Level 2', subtext: 'id 2', type: 'Level 2' },\n  { id: '3', parentId: '2', name: 'Level 3', subtext: 'id 3', type: 'Level 3' },\n  { id: '4', parentId: '3', name: 'Level 4', subtext: 'id 4', type: 'Level 4' },\n  { id: '5', parentId: '4', name: 'Level 5', subtext: 'id 5', type: 'Level 5' },\n  { id: '6', parentId: '5', name: 'Level 6', subtext: 'id 6', type: 'Level 6' },\n  { id: '7', parentId: '6', name: 'Level 7', subtext: 'id 7', type: 'Level 7' },\n  { id: '8', parentId: '5', name: 'Level 6', subtext: 'id 8', type: 'Level 6' },\n  { id: '9', parentId: '8', name: 'Level 7', subtext: 'id 9', type: 'Level 7' },\n  { id: '10', parentId: '8', name: 'Level 7', subtext: 'id 10', type: 'Level 7' },\n  { id: '11', parentId: '5', name: 'Level 6', subtext: 'id 11', type: 'Level 6' },\n  { id: '12', parentId: '11', name: 'Level 7', subtext: 'id 12', type: 'Level 7' },\n  { id: '13', parentId: '11', name: 'Level 7', subtext: 'id 13', type: 'Level 7' },\n  { id: '14', parentId: '11', name: 'Level 7', subtext: 'id 14', type: 'Level 7' },\n  { id: '15', parentId: '11', name: 'Level 7', subtext: 'id 15', type: 'Level 7' },\n  { id: '16', parentId: '5', name: 'Level 6', subtext: 'id 16', type: 'Level 6' },\n  { id: '17', parentId: '16', name: 'Level 7', subtext: 'id 17', type: 'Level 7' },\n  { id: '18', parentId: '16', name: 'Level 7', subtext: 'id 18', type: 'Level 7' },\n  { id: '19', parentId: '16', name: 'Level 7', subtext: 'id 19', type: 'Level 7' },\n  { id: '20', parentId: '3', name: 'Level 4', subtext: 'id 20', type: 'Level 4' },\n  { id: '21', parentId: '20', name: 'Level 5', subtext: 'id 21', type: 'Level 5' },\n  { id: '22', parentId: '21', name: 'Level 6', subtext: 'id 22', type: 'Level 6' },\n  { id: '23', parentId: '22', name: 'Level 7', subtext: 'id 23', type: 'Level 7' },\n  { id: '24', parentId: '21', name: 'Level 6', subtext: 'id 24', type: 'Level 6' },\n  { id: '25', parentId: '24', name: 'Level 7', subtext: 'id 25', type: 'Level 7' },\n  { id: '26', parentId: '24', name: 'Level 7', subtext: 'id 26', type: 'Level 7' },\n  { id: '27', parentId: '21', name: 'Level 6', subtext: 'id 27', type: 'Level 6' },\n  { id: '28', parentId: '27', name: 'Level 7', subtext: 'id 28', type: 'Level 7' },\n  { id: '29', parentId: '27', name: 'Level 7', subtext: 'id 29', type: 'Level 7' },\n  { id: '30', parentId: '27', name: 'Level 7', subtext: 'id 30', type: 'Level 7' },\n  { id: '31', parentId: '27', name: 'Level 7', subtext: 'id 31', type: 'Level 7' },\n  { id: '32', parentId: '20', name: 'Level 5', subtext: 'id 32', type: 'Level 5' },\n  { id: '33', parentId: '32', name: 'Level 6', subtext: 'id 33', type: 'Level 6' },\n  { id: '34', parentId: '33', name: 'Level 7', subtext: 'id 34', type: 'Level 7' },\n  { id: '35', parentId: '33', name: 'Level 7', subtext: 'id 35', type: 'Level 7' },\n  { id: '36', parentId: '33', name: 'Level 7', subtext: 'id 36', type: 'Level 7' },\n  { id: '37', parentId: '32', name: 'Level 6', subtext: 'id 37', type: 'Level 6' },\n  { id: '38', parentId: '37', name: 'Level 7', subtext: 'id 38', type: 'Level 7' },\n  { id: '39', parentId: '37', name: 'Level 7', subtext: 'id 39', type: 'Level 7' },\n  { id: '40', parentId: '37', name: 'Level 7', subtext: 'id 40', type: 'Level 7' },\n  { id: '41', parentId: '20', name: 'Level 5', subtext: 'id 41', type: 'Level 5' },\n  { id: '42', parentId: '41', name: 'Level 6', subtext: 'id 42', type: 'Level 6' },\n  { id: '43', parentId: '42', name: 'Level 7', subtext: 'id 43', type: 'Level 7' },\n  { id: '44', parentId: '42', name: 'Level 7', subtext: 'id 44', type: 'Level 7' },\n  { id: '45', parentId: '42', name: 'Level 7', subtext: 'id 45', type: 'Level 7' },\n  { id: '46', parentId: '41', name: 'Level 6', subtext: 'id 46', type: 'Level 6' },\n  { id: '47', parentId: '46', name: 'Level 7', subtext: 'id 47', type: 'Level 7' },\n  { id: '48', parentId: '46', name: 'Level 7', subtext: 'id 48', type: 'Level 7' },\n  { id: '49', parentId: '46', name: 'Level 7', subtext: 'id 49', type: 'Level 7' },\n  { id: '50', parentId: '41', name: 'Level 6', subtext: 'id 50', type: 'Level 6' },\n  { id: '51', parentId: '50', name: 'Level 7', subtext: 'id 51', type: 'Level 7' },\n  { id: '52', parentId: '50', name: 'Level 7', subtext: 'id 52', type: 'Level 7' },\n  { id: '53', parentId: '2', name: 'Level 3', subtext: 'id 53', type: 'Level 3' },\n  { id: '54', parentId: '53', name: 'Level 4', subtext: 'id 54', type: 'Level 4' },\n  { id: '55', parentId: '54', name: 'Level 5', subtext: 'id 55', type: 'Level 5' },\n  { id: '56', parentId: '55', name: 'Level 6', subtext: 'id 56', type: 'Level 6' },\n  { id: '57', parentId: '56', name: 'Level 7', subtext: 'id 57', type: 'Level 7' },\n  { id: '58', parentId: '55', name: 'Level 6', subtext: 'id 58', type: 'Level 6' },\n  { id: '59', parentId: '58', name: 'Level 7', subtext: 'id 59', type: 'Level 7' },\n  { id: '60', parentId: '55', name: 'Level 6', subtext: 'id 60', type: 'Level 6' },\n  { id: '61', parentId: '60', name: 'Level 7', subtext: 'id 61', type: 'Level 7' },\n  { id: '62', parentId: '60', name: 'Level 7', subtext: 'id 62', type: 'Level 7' },\n  { id: '63', parentId: '55', name: 'Level 6', subtext: 'id 63', type: 'Level 6' },\n  { id: '64', parentId: '63', name: 'Level 7', subtext: 'id 64', type: 'Level 7' },\n  { id: '65', parentId: '63', name: 'Level 7', subtext: 'id 65', type: 'Level 7' },\n  { id: '66', parentId: '54', name: 'Level 5', subtext: 'id 66', type: 'Level 5' },\n  { id: '67', parentId: '66', name: 'Level 6', subtext: 'id 67', type: 'Level 6' },\n  { id: '68', parentId: '67', name: 'Level 7', subtext: 'id 68', type: 'Level 7' },\n  { id: '69', parentId: '67', name: 'Level 7', subtext: 'id 69', type: 'Level 7' },\n  { id: '70', parentId: '67', name: 'Level 7', subtext: 'id 70', type: 'Level 7' },\n  { id: '71', parentId: '67', name: 'Level 7', subtext: 'id 71', type: 'Level 7' },\n  { id: '72', parentId: '66', name: 'Level 6', subtext: 'id 72', type: 'Level 6' },\n  { id: '73', parentId: '72', name: 'Level 7', subtext: 'id 73', type: 'Level 7' },\n  { id: '74', parentId: '72', name: 'Level 7', subtext: 'id 74', type: 'Level 7' },\n  { id: '75', parentId: '72', name: 'Level 7', subtext: 'id 75', type: 'Level 7' },\n  { id: '76', parentId: '72', name: 'Level 7', subtext: 'id 76', type: 'Level 7' },\n  { id: '77', parentId: '72', name: 'Level 7', subtext: 'id 77', type: 'Level 7' },\n  { id: '78', parentId: '66', name: 'Level 6', subtext: 'id 78', type: 'Level 6' },\n  { id: '79', parentId: '78', name: 'Level 7', subtext: 'id 79', type: 'Level 7' },\n  { id: '80', parentId: '78', name: 'Level 7', subtext: 'id 80', type: 'Level 7' },\n  { id: '81', parentId: '78', name: 'Level 7', subtext: 'id 81', type: 'Level 7' },\n  { id: '82', parentId: '54', name: 'Level 5', subtext: 'id 82', type: 'Level 5' },\n  { id: '83', parentId: '82', name: 'Level 6', subtext: 'id 83', type: 'Level 6' },\n  { id: '84', parentId: '83', name: 'Level 7', subtext: 'id 84', type: 'Level 7' },\n  { id: '85', parentId: '83', name: 'Level 7', subtext: 'id 85', type: 'Level 7' },\n  { id: '86', parentId: '82', name: 'Level 6', subtext: 'id 86', type: 'Level 6' },\n  { id: '87', parentId: '86', name: 'Level 7', subtext: 'id 87', type: 'Level 7' },\n  { id: '88', parentId: '86', name: 'Level 7', subtext: 'id 88', type: 'Level 7' },\n  { id: '89', parentId: '86', name: 'Level 7', subtext: 'id 89', type: 'Level 7' },\n  { id: '90', parentId: '86', name: 'Level 7', subtext: 'id 90', type: 'Level 7' },\n  { id: '91', parentId: '86', name: 'Level 7', subtext: 'id 91', type: 'Level 7' },\n  { id: '92', parentId: '82', name: 'Level 6', subtext: 'id 92', type: 'Level 6' },\n  { id: '93', parentId: '92', name: 'Level 7', subtext: 'id 93', type: 'Level 7' },\n  { id: '94', parentId: '92', name: 'Level 7', subtext: 'id 94', type: 'Level 7' },\n  { id: '95', parentId: '53', name: 'Level 4', subtext: 'id 95', type: 'Level 4' },\n  { id: '96', parentId: '95', name: 'Level 5', subtext: 'id 96', type: 'Level 5' },\n  { id: '97', parentId: '96', name: 'Level 6', subtext: 'id 97', type: 'Level 6' },\n  { id: '98', parentId: '97', name: 'Level 7', subtext: 'id 98', type: 'Level 7' },\n  { id: '99', parentId: '97', name: 'Level 7', subtext: 'id 99', type: 'Level 7' },\n  { id: '100', parentId: '96', name: 'Level 6', subtext: 'id 100', type: 'Level 6' },\n  { id: '101', parentId: '100', name: 'Level 7', subtext: 'id 101', type: 'Level 7' },\n  { id: '102', parentId: '100', name: 'Level 7', subtext: 'id 102', type: 'Level 7' },\n  { id: '103', parentId: '100', name: 'Level 7', subtext: 'id 103', type: 'Level 7' },\n  { id: '104', parentId: '100', name: 'Level 7', subtext: 'id 104', type: 'Level 7' },\n  { id: '105', parentId: '100', name: 'Level 7', subtext: 'id 105', type: 'Level 7' },\n  { id: '106', parentId: '96', name: 'Level 6', subtext: 'id 106', type: 'Level 6' },\n  { id: '107', parentId: '106', name: 'Level 7', subtext: 'id 107', type: 'Level 7' },\n  { id: '108', parentId: '95', name: 'Level 5', subtext: 'id 108', type: 'Level 5' },\n  { id: '109', parentId: '108', name: 'Level 6', subtext: 'id 109', type: 'Level 6' },\n  { id: '110', parentId: '109', name: 'Level 7', subtext: 'id 110', type: 'Level 7' },\n  { id: '111', parentId: '108', name: 'Level 6', subtext: 'id 111', type: 'Level 6' },\n  { id: '112', parentId: '111', name: 'Level 7', subtext: 'id 112', type: 'Level 7' },\n  { id: '113', parentId: '111', name: 'Level 7', subtext: 'id 113', type: 'Level 7' },\n  { id: '114', parentId: '111', name: 'Level 7', subtext: 'id 114', type: 'Level 7' },\n  { id: '115', parentId: '108', name: 'Level 6', subtext: 'id 115', type: 'Level 6' },\n  { id: '116', parentId: '115', name: 'Level 7', subtext: 'id 116', type: 'Level 7' },\n  { id: '117', parentId: '115', name: 'Level 7', subtext: 'id 117', type: 'Level 7' },\n  { id: '118', parentId: '115', name: 'Level 7', subtext: 'id 118', type: 'Level 7' },\n  { id: '119', parentId: '115', name: 'Level 7', subtext: 'id 119', type: 'Level 7' },\n  { id: '120', parentId: '108', name: 'Level 6', subtext: 'id 120', type: 'Level 6' },\n  { id: '121', parentId: '120', name: 'Level 7', subtext: 'id 121', type: 'Level 7' },\n  { id: '122', parentId: '95', name: 'Level 5', subtext: 'id 122', type: 'Level 5' },\n  { id: '123', parentId: '122', name: 'Level 6', subtext: 'id 123', type: 'Level 6' },\n  { id: '124', parentId: '123', name: 'Level 7', subtext: 'id 124', type: 'Level 7' },\n  { id: '125', parentId: '123', name: 'Level 7', subtext: 'id 125', type: 'Level 7' },\n  { id: '126', parentId: '123', name: 'Level 7', subtext: 'id 126', type: 'Level 7' },\n  { id: '127', parentId: '123', name: 'Level 7', subtext: 'id 127', type: 'Level 7' },\n  { id: '128', parentId: '123', name: 'Level 7', subtext: 'id 128', type: 'Level 7' },\n  { id: '129', parentId: '122', name: 'Level 6', subtext: 'id 129', type: 'Level 6' },\n  { id: '130', parentId: '129', name: 'Level 7', subtext: 'id 130', type: 'Level 7' },\n  { id: '131', parentId: '129', name: 'Level 7', subtext: 'id 131', type: 'Level 7' },\n  { id: '132', parentId: '129', name: 'Level 7', subtext: 'id 132', type: 'Level 7' },\n  { id: '133', parentId: '129', name: 'Level 7', subtext: 'id 133', type: 'Level 7' },\n  { id: '134', parentId: '122', name: 'Level 6', subtext: 'id 134', type: 'Level 6' },\n  { id: '135', parentId: '134', name: 'Level 7', subtext: 'id 135', type: 'Level 7' },\n  { id: '136', parentId: '134', name: 'Level 7', subtext: 'id 136', type: 'Level 7' },\n  { id: '137', parentId: '95', name: 'Level 5', subtext: 'id 137', type: 'Level 5' },\n  { id: '138', parentId: '137', name: 'Level 6', subtext: 'id 138', type: 'Level 6' },\n  { id: '139', parentId: '138', name: 'Level 7', subtext: 'id 139', type: 'Level 7' },\n  { id: '140', parentId: '138', name: 'Level 7', subtext: 'id 140', type: 'Level 7' },\n  { id: '141', parentId: '138', name: 'Level 7', subtext: 'id 141', type: 'Level 7' },\n  { id: '142', parentId: '138', name: 'Level 7', subtext: 'id 142', type: 'Level 7' },\n  { id: '143', parentId: '137', name: 'Level 6', subtext: 'id 143', type: 'Level 6' },\n  { id: '144', parentId: '143', name: 'Level 7', subtext: 'id 144', type: 'Level 7' },\n  { id: '145', parentId: '143', name: 'Level 7', subtext: 'id 145', type: 'Level 7' },\n  { id: '146', parentId: '137', name: 'Level 6', subtext: 'id 146', type: 'Level 6' },\n  { id: '147', parentId: '146', name: 'Level 7', subtext: 'id 147', type: 'Level 7' },\n  { id: '148', parentId: '146', name: 'Level 7', subtext: 'id 148', type: 'Level 7' },\n  { id: '149', parentId: '146', name: 'Level 7', subtext: 'id 149', type: 'Level 7' },\n  { id: '150', parentId: '137', name: 'Level 6', subtext: 'id 150', type: 'Level 6' },\n  { id: '151', parentId: '150', name: 'Level 7', subtext: 'id 151', type: 'Level 7' },\n  { id: '152', parentId: '150', name: 'Level 7', subtext: 'id 152', type: 'Level 7' },\n  { id: '153', parentId: '137', name: 'Level 6', subtext: 'id 153', type: 'Level 6' },\n  { id: '154', parentId: '153', name: 'Level 7', subtext: 'id 154', type: 'Level 7' },\n  { id: '155', parentId: '153', name: 'Level 7', subtext: 'id 155', type: 'Level 7' },\n  { id: '156', parentId: '153', name: 'Level 7', subtext: 'id 156', type: 'Level 7' },\n  { id: '157', parentId: '95', name: 'Level 5', subtext: 'id 157', type: 'Level 5' },\n  { id: '158', parentId: '157', name: 'Level 6', subtext: 'id 158', type: 'Level 6' },\n  { id: '159', parentId: '158', name: 'Level 7', subtext: 'id 159', type: 'Level 7' },\n  { id: '160', parentId: '157', name: 'Level 6', subtext: 'id 160', type: 'Level 6' },\n  { id: '161', parentId: '160', name: 'Level 7', subtext: 'id 161', type: 'Level 7' },\n  { id: '162', parentId: '160', name: 'Level 7', subtext: 'id 162', type: 'Level 7' },\n  { id: '163', parentId: '160', name: 'Level 7', subtext: 'id 163', type: 'Level 7' },\n  { id: '164', parentId: '53', name: 'Level 4', subtext: 'id 164', type: 'Level 4' },\n  { id: '165', parentId: '164', name: 'Level 5', subtext: 'id 165', type: 'Level 5' },\n  { id: '166', parentId: '165', name: 'Level 6', subtext: 'id 166', type: 'Level 6' },\n  { id: '167', parentId: '166', name: 'Level 7', subtext: 'id 167', type: 'Level 7' },\n  { id: '168', parentId: '166', name: 'Level 7', subtext: 'id 168', type: 'Level 7' },\n  { id: '169', parentId: '166', name: 'Level 7', subtext: 'id 169', type: 'Level 7' },\n  { id: '170', parentId: '166', name: 'Level 7', subtext: 'id 170', type: 'Level 7' },\n  { id: '171', parentId: '166', name: 'Level 7', subtext: 'id 171', type: 'Level 7' },\n  { id: '172', parentId: '164', name: 'Level 5', subtext: 'id 172', type: 'Level 5' },\n  { id: '173', parentId: '172', name: 'Level 6', subtext: 'id 173', type: 'Level 6' },\n  { id: '174', parentId: '173', name: 'Level 7', subtext: 'id 174', type: 'Level 7' },\n  { id: '175', parentId: '173', name: 'Level 7', subtext: 'id 175', type: 'Level 7' },\n  { id: '176', parentId: '173', name: 'Level 7', subtext: 'id 176', type: 'Level 7' },\n  { id: '177', parentId: '173', name: 'Level 7', subtext: 'id 177', type: 'Level 7' },\n  { id: '178', parentId: '173', name: 'Level 7', subtext: 'id 178', type: 'Level 7' },\n  { id: '179', parentId: '172', name: 'Level 6', subtext: 'id 179', type: 'Level 6' },\n  { id: '180', parentId: '179', name: 'Level 7', subtext: 'id 180', type: 'Level 7' },\n  { id: '181', parentId: '179', name: 'Level 7', subtext: 'id 181', type: 'Level 7' },\n  { id: '182', parentId: '179', name: 'Level 7', subtext: 'id 182', type: 'Level 7' },\n  { id: '183', parentId: '179', name: 'Level 7', subtext: 'id 183', type: 'Level 7' },\n  { id: '184', parentId: '164', name: 'Level 5', subtext: 'id 184', type: 'Level 5' },\n  { id: '185', parentId: '184', name: 'Level 6', subtext: 'id 185', type: 'Level 6' },\n  { id: '186', parentId: '185', name: 'Level 7', subtext: 'id 186', type: 'Level 7' },\n  { id: '187', parentId: '185', name: 'Level 7', subtext: 'id 187', type: 'Level 7' },\n  { id: '188', parentId: '185', name: 'Level 7', subtext: 'id 188', type: 'Level 7' },\n  { id: '189', parentId: '185', name: 'Level 7', subtext: 'id 189', type: 'Level 7' },\n  { id: '190', parentId: '185', name: 'Level 7', subtext: 'id 190', type: 'Level 7' },\n  { id: '191', parentId: '184', name: 'Level 6', subtext: 'id 191', type: 'Level 6' },\n  { id: '192', parentId: '191', name: 'Level 7', subtext: 'id 192', type: 'Level 7' },\n  { id: '193', parentId: '191', name: 'Level 7', subtext: 'id 193', type: 'Level 7' },\n  { id: '194', parentId: '191', name: 'Level 7', subtext: 'id 194', type: 'Level 7' },\n  { id: '195', parentId: '191', name: 'Level 7', subtext: 'id 195', type: 'Level 7' },\n  { id: '196', parentId: '184', name: 'Level 6', subtext: 'id 196', type: 'Level 6' },\n  { id: '197', parentId: '196', name: 'Level 7', subtext: 'id 197', type: 'Level 7' },\n  { id: '198', parentId: '196', name: 'Level 7', subtext: 'id 198', type: 'Level 7' },\n  { id: '199', parentId: '196', name: 'Level 7', subtext: 'id 199', type: 'Level 7' },\n  { id: '200', parentId: '196', name: 'Level 7', subtext: 'id 200', type: 'Level 7' },\n  { id: '201', parentId: '196', name: 'Level 7', subtext: 'id 201', type: 'Level 7' },\n  { id: '202', parentId: '164', name: 'Level 5', subtext: 'id 202', type: 'Level 5' },\n  { id: '203', parentId: '202', name: 'Level 6', subtext: 'id 203', type: 'Level 6' },\n  { id: '204', parentId: '203', name: 'Level 7', subtext: 'id 204', type: 'Level 7' },\n  { id: '205', parentId: '203', name: 'Level 7', subtext: 'id 205', type: 'Level 7' },\n  { id: '206', parentId: '203', name: 'Level 7', subtext: 'id 206', type: 'Level 7' },\n  { id: '207', parentId: '203', name: 'Level 7', subtext: 'id 207', type: 'Level 7' },\n  { id: '208', parentId: '202', name: 'Level 6', subtext: 'id 208', type: 'Level 6' },\n  { id: '209', parentId: '208', name: 'Level 7', subtext: 'id 209', type: 'Level 7' },\n  { id: '210', parentId: '208', name: 'Level 7', subtext: 'id 210', type: 'Level 7' },\n  { id: '211', parentId: '53', name: 'Level 4', subtext: 'id 211', type: 'Level 4' },\n  { id: '212', parentId: '211', name: 'Level 5', subtext: 'id 212', type: 'Level 5' },\n  { id: '213', parentId: '212', name: 'Level 6', subtext: 'id 213', type: 'Level 6' },\n  { id: '214', parentId: '213', name: 'Level 7', subtext: 'id 214', type: 'Level 7' },\n  { id: '215', parentId: '212', name: 'Level 6', subtext: 'id 215', type: 'Level 6' },\n  { id: '216', parentId: '215', name: 'Level 7', subtext: 'id 216', type: 'Level 7' },\n  { id: '217', parentId: '215', name: 'Level 7', subtext: 'id 217', type: 'Level 7' },\n  { id: '218', parentId: '215', name: 'Level 7', subtext: 'id 218', type: 'Level 7' },\n  { id: '219', parentId: '215', name: 'Level 7', subtext: 'id 219', type: 'Level 7' },\n  { id: '220', parentId: '215', name: 'Level 7', subtext: 'id 220', type: 'Level 7' },\n  { id: '221', parentId: '212', name: 'Level 6', subtext: 'id 221', type: 'Level 6' },\n  { id: '222', parentId: '221', name: 'Level 7', subtext: 'id 222', type: 'Level 7' },\n  { id: '223', parentId: '221', name: 'Level 7', subtext: 'id 223', type: 'Level 7' },\n  { id: '224', parentId: '221', name: 'Level 7', subtext: 'id 224', type: 'Level 7' },\n  { id: '225', parentId: '221', name: 'Level 7', subtext: 'id 225', type: 'Level 7' },\n  { id: '226', parentId: '221', name: 'Level 7', subtext: 'id 226', type: 'Level 7' },\n  { id: '227', parentId: '212', name: 'Level 6', subtext: 'id 227', type: 'Level 6' },\n  { id: '228', parentId: '227', name: 'Level 7', subtext: 'id 228', type: 'Level 7' },\n  { id: '229', parentId: '227', name: 'Level 7', subtext: 'id 229', type: 'Level 7' },\n  { id: '230', parentId: '227', name: 'Level 7', subtext: 'id 230', type: 'Level 7' },\n  { id: '231', parentId: '227', name: 'Level 7', subtext: 'id 231', type: 'Level 7' },\n  { id: '232', parentId: '212', name: 'Level 6', subtext: 'id 232', type: 'Level 6' },\n  { id: '233', parentId: '232', name: 'Level 7', subtext: 'id 233', type: 'Level 7' },\n  { id: '234', parentId: '232', name: 'Level 7', subtext: 'id 234', type: 'Level 7' },\n  { id: '235', parentId: '232', name: 'Level 7', subtext: 'id 235', type: 'Level 7' },\n  { id: '236', parentId: '232', name: 'Level 7', subtext: 'id 236', type: 'Level 7' },\n  { id: '237', parentId: '1', name: 'Level 2', subtext: 'id 237', type: 'Level 2' },\n  { id: '238', parentId: '237', name: 'Level 3', subtext: 'id 238', type: 'Level 3' },\n  { id: '239', parentId: '238', name: 'Level 4', subtext: 'id 239', type: 'Level 4' },\n  { id: '240', parentId: '239', name: 'Level 5', subtext: 'id 240', type: 'Level 5' },\n  { id: '241', parentId: '240', name: 'Level 6', subtext: 'id 241', type: 'Level 6' },\n  { id: '242', parentId: '241', name: 'Level 7', subtext: 'id 242', type: 'Level 7' },\n  { id: '243', parentId: '241', name: 'Level 7', subtext: 'id 243', type: 'Level 7' },\n  { id: '244', parentId: '241', name: 'Level 7', subtext: 'id 244', type: 'Level 7' },\n  { id: '245', parentId: '241', name: 'Level 7', subtext: 'id 245', type: 'Level 7' },\n  { id: '246', parentId: '240', name: 'Level 6', subtext: 'id 246', type: 'Level 6' },\n  { id: '247', parentId: '246', name: 'Level 7', subtext: 'id 247', type: 'Level 7' },\n  { id: '248', parentId: '246', name: 'Level 7', subtext: 'id 248', type: 'Level 7' },\n  { id: '249', parentId: '246', name: 'Level 7', subtext: 'id 249', type: 'Level 7' },\n  { id: '250', parentId: '246', name: 'Level 7', subtext: 'id 250', type: 'Level 7' },\n  { id: '251', parentId: '239', name: 'Level 5', subtext: 'id 251', type: 'Level 5' },\n  { id: '252', parentId: '251', name: 'Level 6', subtext: 'id 252', type: 'Level 6' },\n  { id: '253', parentId: '252', name: 'Level 7', subtext: 'id 253', type: 'Level 7' },\n  { id: '254', parentId: '252', name: 'Level 7', subtext: 'id 254', type: 'Level 7' },\n  { id: '255', parentId: '252', name: 'Level 7', subtext: 'id 255', type: 'Level 7' },\n  { id: '256', parentId: '252', name: 'Level 7', subtext: 'id 256', type: 'Level 7' },\n  { id: '257', parentId: '252', name: 'Level 7', subtext: 'id 257', type: 'Level 7' },\n  { id: '258', parentId: '251', name: 'Level 6', subtext: 'id 258', type: 'Level 6' },\n  { id: '259', parentId: '258', name: 'Level 7', subtext: 'id 259', type: 'Level 7' },\n  { id: '260', parentId: '258', name: 'Level 7', subtext: 'id 260', type: 'Level 7' },\n  { id: '261', parentId: '258', name: 'Level 7', subtext: 'id 261', type: 'Level 7' },\n  { id: '262', parentId: '258', name: 'Level 7', subtext: 'id 262', type: 'Level 7' },\n  { id: '263', parentId: '258', name: 'Level 7', subtext: 'id 263', type: 'Level 7' },\n  { id: '264', parentId: '251', name: 'Level 6', subtext: 'id 264', type: 'Level 6' },\n  { id: '265', parentId: '264', name: 'Level 7', subtext: 'id 265', type: 'Level 7' },\n  { id: '266', parentId: '264', name: 'Level 7', subtext: 'id 266', type: 'Level 7' },\n  { id: '267', parentId: '251', name: 'Level 6', subtext: 'id 267', type: 'Level 6' },\n  { id: '268', parentId: '267', name: 'Level 7', subtext: 'id 268', type: 'Level 7' },\n  { id: '269', parentId: '267', name: 'Level 7', subtext: 'id 269', type: 'Level 7' },\n  { id: '270', parentId: '267', name: 'Level 7', subtext: 'id 270', type: 'Level 7' },\n  { id: '271', parentId: '267', name: 'Level 7', subtext: 'id 271', type: 'Level 7' },\n  { id: '272', parentId: '251', name: 'Level 6', subtext: 'id 272', type: 'Level 6' },\n  { id: '273', parentId: '272', name: 'Level 7', subtext: 'id 273', type: 'Level 7' },\n  { id: '274', parentId: '239', name: 'Level 5', subtext: 'id 274', type: 'Level 5' },\n  { id: '275', parentId: '274', name: 'Level 6', subtext: 'id 275', type: 'Level 6' },\n  { id: '276', parentId: '275', name: 'Level 7', subtext: 'id 276', type: 'Level 7' },\n  { id: '277', parentId: '275', name: 'Level 7', subtext: 'id 277', type: 'Level 7' },\n  { id: '278', parentId: '275', name: 'Level 7', subtext: 'id 278', type: 'Level 7' },\n  { id: '279', parentId: '275', name: 'Level 7', subtext: 'id 279', type: 'Level 7' },\n  { id: '280', parentId: '274', name: 'Level 6', subtext: 'id 280', type: 'Level 6' },\n  { id: '281', parentId: '280', name: 'Level 7', subtext: 'id 281', type: 'Level 7' },\n  { id: '282', parentId: '280', name: 'Level 7', subtext: 'id 282', type: 'Level 7' },\n  { id: '283', parentId: '280', name: 'Level 7', subtext: 'id 283', type: 'Level 7' },\n  { id: '284', parentId: '280', name: 'Level 7', subtext: 'id 284', type: 'Level 7' },\n  { id: '285', parentId: '274', name: 'Level 6', subtext: 'id 285', type: 'Level 6' },\n  { id: '286', parentId: '285', name: 'Level 7', subtext: 'id 286', type: 'Level 7' },\n  { id: '287', parentId: '285', name: 'Level 7', subtext: 'id 287', type: 'Level 7' },\n  { id: '288', parentId: '285', name: 'Level 7', subtext: 'id 288', type: 'Level 7' },\n  { id: '289', parentId: '285', name: 'Level 7', subtext: 'id 289', type: 'Level 7' },\n  { id: '290', parentId: '285', name: 'Level 7', subtext: 'id 290', type: 'Level 7' },\n  { id: '291', parentId: '238', name: 'Level 4', subtext: 'id 291', type: 'Level 4' },\n  { id: '292', parentId: '291', name: 'Level 5', subtext: 'id 292', type: 'Level 5' },\n  { id: '293', parentId: '292', name: 'Level 6', subtext: 'id 293', type: 'Level 6' },\n  { id: '294', parentId: '293', name: 'Level 7', subtext: 'id 294', type: 'Level 7' },\n  { id: '295', parentId: '293', name: 'Level 7', subtext: 'id 295', type: 'Level 7' },\n  { id: '296', parentId: '293', name: 'Level 7', subtext: 'id 296', type: 'Level 7' },\n  { id: '297', parentId: '291', name: 'Level 5', subtext: 'id 297', type: 'Level 5' },\n  { id: '298', parentId: '297', name: 'Level 6', subtext: 'id 298', type: 'Level 6' },\n  { id: '299', parentId: '298', name: 'Level 7', subtext: 'id 299', type: 'Level 7' },\n  { id: '300', parentId: '298', name: 'Level 7', subtext: 'id 300', type: 'Level 7' },\n  { id: '301', parentId: '297', name: 'Level 6', subtext: 'id 301', type: 'Level 6' },\n  { id: '302', parentId: '301', name: 'Level 7', subtext: 'id 302', type: 'Level 7' },\n  { id: '303', parentId: '301', name: 'Level 7', subtext: 'id 303', type: 'Level 7' },\n  { id: '304', parentId: '297', name: 'Level 6', subtext: 'id 304', type: 'Level 6' },\n  { id: '305', parentId: '304', name: 'Level 7', subtext: 'id 305', type: 'Level 7' },\n  { id: '306', parentId: '291', name: 'Level 5', subtext: 'id 306', type: 'Level 5' },\n  { id: '307', parentId: '306', name: 'Level 6', subtext: 'id 307', type: 'Level 6' },\n  { id: '308', parentId: '307', name: 'Level 7', subtext: 'id 308', type: 'Level 7' },\n  { id: '309', parentId: '307', name: 'Level 7', subtext: 'id 309', type: 'Level 7' },\n  { id: '310', parentId: '307', name: 'Level 7', subtext: 'id 310', type: 'Level 7' },\n  { id: '311', parentId: '307', name: 'Level 7', subtext: 'id 311', type: 'Level 7' },\n  { id: '312', parentId: '238', name: 'Level 4', subtext: 'id 312', type: 'Level 4' },\n  { id: '313', parentId: '312', name: 'Level 5', subtext: 'id 313', type: 'Level 5' },\n  { id: '314', parentId: '313', name: 'Level 6', subtext: 'id 314', type: 'Level 6' },\n  { id: '315', parentId: '314', name: 'Level 7', subtext: 'id 315', type: 'Level 7' },\n  { id: '316', parentId: '314', name: 'Level 7', subtext: 'id 316', type: 'Level 7' },\n  { id: '317', parentId: '314', name: 'Level 7', subtext: 'id 317', type: 'Level 7' },\n  { id: '318', parentId: '313', name: 'Level 6', subtext: 'id 318', type: 'Level 6' },\n  { id: '319', parentId: '318', name: 'Level 7', subtext: 'id 319', type: 'Level 7' },\n  { id: '320', parentId: '312', name: 'Level 5', subtext: 'id 320', type: 'Level 5' },\n  { id: '321', parentId: '320', name: 'Level 6', subtext: 'id 321', type: 'Level 6' },\n  { id: '322', parentId: '321', name: 'Level 7', subtext: 'id 322', type: 'Level 7' },\n  { id: '323', parentId: '321', name: 'Level 7', subtext: 'id 323', type: 'Level 7' },\n  { id: '324', parentId: '321', name: 'Level 7', subtext: 'id 324', type: 'Level 7' },\n  { id: '325', parentId: '321', name: 'Level 7', subtext: 'id 325', type: 'Level 7' },\n  { id: '326', parentId: '321', name: 'Level 7', subtext: 'id 326', type: 'Level 7' },\n  { id: '327', parentId: '312', name: 'Level 5', subtext: 'id 327', type: 'Level 5' },\n  { id: '328', parentId: '327', name: 'Level 6', subtext: 'id 328', type: 'Level 6' },\n  { id: '329', parentId: '328', name: 'Level 7', subtext: 'id 329', type: 'Level 7' },\n  { id: '330', parentId: '328', name: 'Level 7', subtext: 'id 330', type: 'Level 7' },\n  { id: '331', parentId: '328', name: 'Level 7', subtext: 'id 331', type: 'Level 7' },\n  { id: '332', parentId: '327', name: 'Level 6', subtext: 'id 332', type: 'Level 6' },\n  { id: '333', parentId: '332', name: 'Level 7', subtext: 'id 333', type: 'Level 7' },\n  { id: '334', parentId: '312', name: 'Level 5', subtext: 'id 334', type: 'Level 5' },\n  { id: '335', parentId: '334', name: 'Level 6', subtext: 'id 335', type: 'Level 6' },\n  { id: '336', parentId: '335', name: 'Level 7', subtext: 'id 336', type: 'Level 7' },\n  { id: '337', parentId: '335', name: 'Level 7', subtext: 'id 337', type: 'Level 7' },\n  { id: '338', parentId: '334', name: 'Level 6', subtext: 'id 338', type: 'Level 6' },\n  { id: '339', parentId: '338', name: 'Level 7', subtext: 'id 339', type: 'Level 7' },\n  { id: '340', parentId: '334', name: 'Level 6', subtext: 'id 340', type: 'Level 6' },\n  { id: '341', parentId: '340', name: 'Level 7', subtext: 'id 341', type: 'Level 7' },\n  { id: '342', parentId: '340', name: 'Level 7', subtext: 'id 342', type: 'Level 7' },\n  { id: '343', parentId: '340', name: 'Level 7', subtext: 'id 343', type: 'Level 7' },\n  { id: '344', parentId: '340', name: 'Level 7', subtext: 'id 344', type: 'Level 7' },\n  { id: '345', parentId: '340', name: 'Level 7', subtext: 'id 345', type: 'Level 7' },\n  { id: '346', parentId: '334', name: 'Level 6', subtext: 'id 346', type: 'Level 6' },\n  { id: '347', parentId: '346', name: 'Level 7', subtext: 'id 347', type: 'Level 7' },\n  { id: '348', parentId: '346', name: 'Level 7', subtext: 'id 348', type: 'Level 7' },\n  { id: '349', parentId: '346', name: 'Level 7', subtext: 'id 349', type: 'Level 7' },\n  { id: '350', parentId: '346', name: 'Level 7', subtext: 'id 350', type: 'Level 7' },\n  { id: '351', parentId: '238', name: 'Level 4', subtext: 'id 351', type: 'Level 4' },\n  { id: '352', parentId: '351', name: 'Level 5', subtext: 'id 352', type: 'Level 5' },\n  { id: '353', parentId: '352', name: 'Level 6', subtext: 'id 353', type: 'Level 6' },\n  { id: '354', parentId: '353', name: 'Level 7', subtext: 'id 354', type: 'Level 7' },\n  { id: '355', parentId: '237', name: 'Level 3', subtext: 'id 355', type: 'Level 3' },\n  { id: '356', parentId: '355', name: 'Level 4', subtext: 'id 356', type: 'Level 4' },\n  { id: '357', parentId: '356', name: 'Level 5', subtext: 'id 357', type: 'Level 5' },\n  { id: '358', parentId: '357', name: 'Level 6', subtext: 'id 358', type: 'Level 6' },\n  { id: '359', parentId: '358', name: 'Level 7', subtext: 'id 359', type: 'Level 7' },\n  { id: '360', parentId: '358', name: 'Level 7', subtext: 'id 360', type: 'Level 7' },\n  { id: '361', parentId: '358', name: 'Level 7', subtext: 'id 361', type: 'Level 7' },\n  { id: '362', parentId: '358', name: 'Level 7', subtext: 'id 362', type: 'Level 7' },\n  { id: '363', parentId: '358', name: 'Level 7', subtext: 'id 363', type: 'Level 7' },\n  { id: '364', parentId: '357', name: 'Level 6', subtext: 'id 364', type: 'Level 6' },\n  { id: '365', parentId: '364', name: 'Level 7', subtext: 'id 365', type: 'Level 7' },\n  { id: '366', parentId: '356', name: 'Level 5', subtext: 'id 366', type: 'Level 5' },\n  { id: '367', parentId: '366', name: 'Level 6', subtext: 'id 367', type: 'Level 6' },\n  { id: '368', parentId: '367', name: 'Level 7', subtext: 'id 368', type: 'Level 7' },\n  { id: '369', parentId: '355', name: 'Level 4', subtext: 'id 369', type: 'Level 4' },\n  { id: '370', parentId: '369', name: 'Level 5', subtext: 'id 370', type: 'Level 5' },\n  { id: '371', parentId: '370', name: 'Level 6', subtext: 'id 371', type: 'Level 6' },\n  { id: '372', parentId: '371', name: 'Level 7', subtext: 'id 372', type: 'Level 7' },\n  { id: '373', parentId: '371', name: 'Level 7', subtext: 'id 373', type: 'Level 7' },\n  { id: '374', parentId: '371', name: 'Level 7', subtext: 'id 374', type: 'Level 7' },\n  { id: '375', parentId: '371', name: 'Level 7', subtext: 'id 375', type: 'Level 7' },\n  { id: '376', parentId: '370', name: 'Level 6', subtext: 'id 376', type: 'Level 6' },\n  { id: '377', parentId: '376', name: 'Level 7', subtext: 'id 377', type: 'Level 7' },\n  { id: '378', parentId: '376', name: 'Level 7', subtext: 'id 378', type: 'Level 7' },\n  { id: '379', parentId: '376', name: 'Level 7', subtext: 'id 379', type: 'Level 7' },\n  { id: '380', parentId: '376', name: 'Level 7', subtext: 'id 380', type: 'Level 7' },\n  { id: '381', parentId: '376', name: 'Level 7', subtext: 'id 381', type: 'Level 7' },\n  { id: '382', parentId: '370', name: 'Level 6', subtext: 'id 382', type: 'Level 6' },\n  { id: '383', parentId: '382', name: 'Level 7', subtext: 'id 383', type: 'Level 7' },\n  { id: '384', parentId: '369', name: 'Level 5', subtext: 'id 384', type: 'Level 5' },\n  { id: '385', parentId: '384', name: 'Level 6', subtext: 'id 385', type: 'Level 6' },\n  { id: '386', parentId: '385', name: 'Level 7', subtext: 'id 386', type: 'Level 7' },\n  { id: '387', parentId: '385', name: 'Level 7', subtext: 'id 387', type: 'Level 7' },\n  { id: '388', parentId: '385', name: 'Level 7', subtext: 'id 388', type: 'Level 7' },\n  { id: '389', parentId: '385', name: 'Level 7', subtext: 'id 389', type: 'Level 7' },\n  { id: '390', parentId: '385', name: 'Level 7', subtext: 'id 390', type: 'Level 7' },\n  { id: '391', parentId: '384', name: 'Level 6', subtext: 'id 391', type: 'Level 6' },\n  { id: '392', parentId: '391', name: 'Level 7', subtext: 'id 392', type: 'Level 7' },\n  { id: '393', parentId: '391', name: 'Level 7', subtext: 'id 393', type: 'Level 7' },\n  { id: '394', parentId: '391', name: 'Level 7', subtext: 'id 394', type: 'Level 7' },\n  { id: '395', parentId: '391', name: 'Level 7', subtext: 'id 395', type: 'Level 7' },\n  { id: '396', parentId: '369', name: 'Level 5', subtext: 'id 396', type: 'Level 5' },\n  { id: '397', parentId: '396', name: 'Level 6', subtext: 'id 397', type: 'Level 6' },\n  { id: '398', parentId: '397', name: 'Level 7', subtext: 'id 398', type: 'Level 7' },\n  { id: '399', parentId: '397', name: 'Level 7', subtext: 'id 399', type: 'Level 7' },\n  { id: '400', parentId: '397', name: 'Level 7', subtext: 'id 400', type: 'Level 7' },\n  { id: '401', parentId: '397', name: 'Level 7', subtext: 'id 401', type: 'Level 7' },\n  { id: '402', parentId: '396', name: 'Level 6', subtext: 'id 402', type: 'Level 6' },\n  { id: '403', parentId: '402', name: 'Level 7', subtext: 'id 403', type: 'Level 7' },\n  { id: '404', parentId: '402', name: 'Level 7', subtext: 'id 404', type: 'Level 7' },\n  { id: '405', parentId: '402', name: 'Level 7', subtext: 'id 405', type: 'Level 7' },\n  { id: '406', parentId: '402', name: 'Level 7', subtext: 'id 406', type: 'Level 7' },\n  { id: '407', parentId: '402', name: 'Level 7', subtext: 'id 407', type: 'Level 7' },\n  { id: '408', parentId: '396', name: 'Level 6', subtext: 'id 408', type: 'Level 6' },\n  { id: '409', parentId: '408', name: 'Level 7', subtext: 'id 409', type: 'Level 7' },\n  { id: '410', parentId: '396', name: 'Level 6', subtext: 'id 410', type: 'Level 6' },\n  { id: '411', parentId: '410', name: 'Level 7', subtext: 'id 411', type: 'Level 7' },\n  { id: '412', parentId: '410', name: 'Level 7', subtext: 'id 412', type: 'Level 7' },\n  { id: '413', parentId: '410', name: 'Level 7', subtext: 'id 413', type: 'Level 7' },\n  { id: '414', parentId: '410', name: 'Level 7', subtext: 'id 414', type: 'Level 7' },\n  { id: '415', parentId: '369', name: 'Level 5', subtext: 'id 415', type: 'Level 5' },\n  { id: '416', parentId: '415', name: 'Level 6', subtext: 'id 416', type: 'Level 6' },\n  { id: '417', parentId: '416', name: 'Level 7', subtext: 'id 417', type: 'Level 7' },\n  { id: '418', parentId: '416', name: 'Level 7', subtext: 'id 418', type: 'Level 7' },\n  { id: '419', parentId: '416', name: 'Level 7', subtext: 'id 419', type: 'Level 7' },\n  { id: '420', parentId: '416', name: 'Level 7', subtext: 'id 420', type: 'Level 7' },\n  { id: '421', parentId: '415', name: 'Level 6', subtext: 'id 421', type: 'Level 6' },\n  { id: '422', parentId: '421', name: 'Level 7', subtext: 'id 422', type: 'Level 7' },\n  { id: '423', parentId: '421', name: 'Level 7', subtext: 'id 423', type: 'Level 7' },\n  { id: '424', parentId: '421', name: 'Level 7', subtext: 'id 424', type: 'Level 7' },\n  { id: '425', parentId: '421', name: 'Level 7', subtext: 'id 425', type: 'Level 7' },\n  { id: '426', parentId: '421', name: 'Level 7', subtext: 'id 426', type: 'Level 7' },\n  { id: '427', parentId: '415', name: 'Level 6', subtext: 'id 427', type: 'Level 6' },\n  { id: '428', parentId: '427', name: 'Level 7', subtext: 'id 428', type: 'Level 7' },\n  { id: '429', parentId: '427', name: 'Level 7', subtext: 'id 429', type: 'Level 7' },\n  { id: '430', parentId: '427', name: 'Level 7', subtext: 'id 430', type: 'Level 7' },\n  { id: '431', parentId: '415', name: 'Level 6', subtext: 'id 431', type: 'Level 6' },\n  { id: '432', parentId: '431', name: 'Level 7', subtext: 'id 432', type: 'Level 7' },\n  { id: '433', parentId: '431', name: 'Level 7', subtext: 'id 433', type: 'Level 7' },\n  { id: '434', parentId: '431', name: 'Level 7', subtext: 'id 434', type: 'Level 7' },\n  { id: '435', parentId: '431', name: 'Level 7', subtext: 'id 435', type: 'Level 7' },\n  { id: '436', parentId: '355', name: 'Level 4', subtext: 'id 436', type: 'Level 4' },\n  { id: '437', parentId: '436', name: 'Level 5', subtext: 'id 437', type: 'Level 5' },\n  { id: '438', parentId: '437', name: 'Level 6', subtext: 'id 438', type: 'Level 6' },\n  { id: '439', parentId: '438', name: 'Level 7', subtext: 'id 439', type: 'Level 7' },\n  { id: '440', parentId: '438', name: 'Level 7', subtext: 'id 440', type: 'Level 7' },\n  { id: '441', parentId: '438', name: 'Level 7', subtext: 'id 441', type: 'Level 7' },\n  { id: '442', parentId: '438', name: 'Level 7', subtext: 'id 442', type: 'Level 7' },\n  { id: '443', parentId: '438', name: 'Level 7', subtext: 'id 443', type: 'Level 7' },\n  { id: '444', parentId: '437', name: 'Level 6', subtext: 'id 444', type: 'Level 6' },\n  { id: '445', parentId: '444', name: 'Level 7', subtext: 'id 445', type: 'Level 7' },\n  { id: '446', parentId: '444', name: 'Level 7', subtext: 'id 446', type: 'Level 7' },\n  { id: '447', parentId: '444', name: 'Level 7', subtext: 'id 447', type: 'Level 7' },\n  { id: '448', parentId: '436', name: 'Level 5', subtext: 'id 448', type: 'Level 5' },\n  { id: '449', parentId: '448', name: 'Level 6', subtext: 'id 449', type: 'Level 6' },\n  { id: '450', parentId: '449', name: 'Level 7', subtext: 'id 450', type: 'Level 7' },\n  { id: '451', parentId: '449', name: 'Level 7', subtext: 'id 451', type: 'Level 7' },\n  { id: '452', parentId: '448', name: 'Level 6', subtext: 'id 452', type: 'Level 6' },\n  { id: '453', parentId: '452', name: 'Level 7', subtext: 'id 453', type: 'Level 7' },\n  { id: '454', parentId: '452', name: 'Level 7', subtext: 'id 454', type: 'Level 7' },\n  { id: '455', parentId: '452', name: 'Level 7', subtext: 'id 455', type: 'Level 7' },\n  { id: '456', parentId: '436', name: 'Level 5', subtext: 'id 456', type: 'Level 5' },\n  { id: '457', parentId: '456', name: 'Level 6', subtext: 'id 457', type: 'Level 6' },\n  { id: '458', parentId: '457', name: 'Level 7', subtext: 'id 458', type: 'Level 7' },\n  { id: '459', parentId: '436', name: 'Level 5', subtext: 'id 459', type: 'Level 5' },\n  { id: '460', parentId: '459', name: 'Level 6', subtext: 'id 460', type: 'Level 6' },\n  { id: '461', parentId: '460', name: 'Level 7', subtext: 'id 461', type: 'Level 7' },\n  { id: '462', parentId: '460', name: 'Level 7', subtext: 'id 462', type: 'Level 7' },\n  { id: '463', parentId: '460', name: 'Level 7', subtext: 'id 463', type: 'Level 7' },\n  { id: '464', parentId: '460', name: 'Level 7', subtext: 'id 464', type: 'Level 7' },\n  { id: '465', parentId: '460', name: 'Level 7', subtext: 'id 465', type: 'Level 7' },\n  { id: '466', parentId: '436', name: 'Level 5', subtext: 'id 466', type: 'Level 5' },\n  { id: '467', parentId: '466', name: 'Level 6', subtext: 'id 467', type: 'Level 6' },\n  { id: '468', parentId: '467', name: 'Level 7', subtext: 'id 468', type: 'Level 7' },\n  { id: '469', parentId: '467', name: 'Level 7', subtext: 'id 469', type: 'Level 7' },\n  { id: '470', parentId: '467', name: 'Level 7', subtext: 'id 470', type: 'Level 7' },\n  { id: '471', parentId: '467', name: 'Level 7', subtext: 'id 471', type: 'Level 7' },\n  { id: '472', parentId: '466', name: 'Level 6', subtext: 'id 472', type: 'Level 6' },\n  { id: '473', parentId: '472', name: 'Level 7', subtext: 'id 473', type: 'Level 7' },\n  { id: '474', parentId: '472', name: 'Level 7', subtext: 'id 474', type: 'Level 7' },\n  { id: '475', parentId: '472', name: 'Level 7', subtext: 'id 475', type: 'Level 7' },\n  { id: '476', parentId: '472', name: 'Level 7', subtext: 'id 476', type: 'Level 7' },\n  { id: '477', parentId: '472', name: 'Level 7', subtext: 'id 477', type: 'Level 7' },\n  { id: '478', parentId: null, name: 'Level 1', subtext: 'id 478', type: 'Level 1' },\n  { id: '479', parentId: '478', name: 'Level 2', subtext: 'id 479', type: 'Level 2' },\n  { id: '480', parentId: '479', name: 'Level 3', subtext: 'id 480', type: 'Level 3' },\n  { id: '481', parentId: '480', name: 'Level 4', subtext: 'id 481', type: 'Level 4' },\n  { id: '482', parentId: '481', name: 'Level 5', subtext: 'id 482', type: 'Level 5' },\n  { id: '483', parentId: '482', name: 'Level 6', subtext: 'id 483', type: 'Level 6' },\n  { id: '484', parentId: '483', name: 'Level 7', subtext: 'id 484', type: 'Level 7' },\n  { id: '485', parentId: '483', name: 'Level 7', subtext: 'id 485', type: 'Level 7' },\n  { id: '486', parentId: '483', name: 'Level 7', subtext: 'id 486', type: 'Level 7' },\n  { id: '487', parentId: '482', name: 'Level 6', subtext: 'id 487', type: 'Level 6' },\n  { id: '488', parentId: '487', name: 'Level 7', subtext: 'id 488', type: 'Level 7' },\n  { id: '489', parentId: '487', name: 'Level 7', subtext: 'id 489', type: 'Level 7' },\n  { id: '490', parentId: '487', name: 'Level 7', subtext: 'id 490', type: 'Level 7' },\n  { id: '491', parentId: '482', name: 'Level 6', subtext: 'id 491', type: 'Level 6' },\n  { id: '492', parentId: '491', name: 'Level 7', subtext: 'id 492', type: 'Level 7' },\n  { id: '493', parentId: '481', name: 'Level 5', subtext: 'id 493', type: 'Level 5' },\n  { id: '494', parentId: '493', name: 'Level 6', subtext: 'id 494', type: 'Level 6' },\n  { id: '495', parentId: '494', name: 'Level 7', subtext: 'id 495', type: 'Level 7' },\n  { id: '496', parentId: '494', name: 'Level 7', subtext: 'id 496', type: 'Level 7' },\n  { id: '497', parentId: '494', name: 'Level 7', subtext: 'id 497', type: 'Level 7' },\n  { id: '498', parentId: '494', name: 'Level 7', subtext: 'id 498', type: 'Level 7' },\n  { id: '499', parentId: '493', name: 'Level 6', subtext: 'id 499', type: 'Level 6' },\n  { id: '500', parentId: '499', name: 'Level 7', subtext: 'id 500', type: 'Level 7' },\n  { id: '501', parentId: '499', name: 'Level 7', subtext: 'id 501', type: 'Level 7' },\n  { id: '502', parentId: '499', name: 'Level 7', subtext: 'id 502', type: 'Level 7' },\n  { id: '503', parentId: '481', name: 'Level 5', subtext: 'id 503', type: 'Level 5' },\n  { id: '504', parentId: '503', name: 'Level 6', subtext: 'id 504', type: 'Level 6' },\n  { id: '505', parentId: '504', name: 'Level 7', subtext: 'id 505', type: 'Level 7' },\n  { id: '506', parentId: '504', name: 'Level 7', subtext: 'id 506', type: 'Level 7' },\n  { id: '507', parentId: '504', name: 'Level 7', subtext: 'id 507', type: 'Level 7' },\n  { id: '508', parentId: '504', name: 'Level 7', subtext: 'id 508', type: 'Level 7' },\n  { id: '509', parentId: '481', name: 'Level 5', subtext: 'id 509', type: 'Level 5' },\n  { id: '510', parentId: '509', name: 'Level 6', subtext: 'id 510', type: 'Level 6' },\n  { id: '511', parentId: '510', name: 'Level 7', subtext: 'id 511', type: 'Level 7' },\n  { id: '512', parentId: '510', name: 'Level 7', subtext: 'id 512', type: 'Level 7' },\n  { id: '513', parentId: '510', name: 'Level 7', subtext: 'id 513', type: 'Level 7' },\n  { id: '514', parentId: '510', name: 'Level 7', subtext: 'id 514', type: 'Level 7' },\n  { id: '515', parentId: '481', name: 'Level 5', subtext: 'id 515', type: 'Level 5' },\n  { id: '516', parentId: '515', name: 'Level 6', subtext: 'id 516', type: 'Level 6' },\n  { id: '517', parentId: '516', name: 'Level 7', subtext: 'id 517', type: 'Level 7' },\n  { id: '518', parentId: '516', name: 'Level 7', subtext: 'id 518', type: 'Level 7' },\n  { id: '519', parentId: '515', name: 'Level 6', subtext: 'id 519', type: 'Level 6' },\n  { id: '520', parentId: '519', name: 'Level 7', subtext: 'id 520', type: 'Level 7' },\n  { id: '521', parentId: '519', name: 'Level 7', subtext: 'id 521', type: 'Level 7' },\n  { id: '522', parentId: '519', name: 'Level 7', subtext: 'id 522', type: 'Level 7' },\n  { id: '523', parentId: '519', name: 'Level 7', subtext: 'id 523', type: 'Level 7' },\n  { id: '524', parentId: '515', name: 'Level 6', subtext: 'id 524', type: 'Level 6' },\n  { id: '525', parentId: '524', name: 'Level 7', subtext: 'id 525', type: 'Level 7' },\n  { id: '526', parentId: '524', name: 'Level 7', subtext: 'id 526', type: 'Level 7' },\n  { id: '527', parentId: '524', name: 'Level 7', subtext: 'id 527', type: 'Level 7' },\n  { id: '528', parentId: '524', name: 'Level 7', subtext: 'id 528', type: 'Level 7' },\n  { id: '529', parentId: '515', name: 'Level 6', subtext: 'id 529', type: 'Level 6' },\n  { id: '530', parentId: '529', name: 'Level 7', subtext: 'id 530', type: 'Level 7' },\n  { id: '531', parentId: '529', name: 'Level 7', subtext: 'id 531', type: 'Level 7' },\n  { id: '532', parentId: '515', name: 'Level 6', subtext: 'id 532', type: 'Level 6' },\n  { id: '533', parentId: '532', name: 'Level 7', subtext: 'id 533', type: 'Level 7' },\n  { id: '534', parentId: '532', name: 'Level 7', subtext: 'id 534', type: 'Level 7' },\n  { id: '535', parentId: '532', name: 'Level 7', subtext: 'id 535', type: 'Level 7' },\n  { id: '536', parentId: '532', name: 'Level 7', subtext: 'id 536', type: 'Level 7' },\n  { id: '537', parentId: '479', name: 'Level 3', subtext: 'id 537', type: 'Level 3' },\n  { id: '538', parentId: '537', name: 'Level 4', subtext: 'id 538', type: 'Level 4' },\n  { id: '539', parentId: '538', name: 'Level 5', subtext: 'id 539', type: 'Level 5' },\n  { id: '540', parentId: '539', name: 'Level 6', subtext: 'id 540', type: 'Level 6' },\n  { id: '541', parentId: '540', name: 'Level 7', subtext: 'id 541', type: 'Level 7' },\n  { id: '542', parentId: '540', name: 'Level 7', subtext: 'id 542', type: 'Level 7' },\n  { id: '543', parentId: '540', name: 'Level 7', subtext: 'id 543', type: 'Level 7' },\n  { id: '544', parentId: '540', name: 'Level 7', subtext: 'id 544', type: 'Level 7' },\n  { id: '545', parentId: '539', name: 'Level 6', subtext: 'id 545', type: 'Level 6' },\n  { id: '546', parentId: '545', name: 'Level 7', subtext: 'id 546', type: 'Level 7' },\n  { id: '547', parentId: '545', name: 'Level 7', subtext: 'id 547', type: 'Level 7' },\n  { id: '548', parentId: '539', name: 'Level 6', subtext: 'id 548', type: 'Level 6' },\n  { id: '549', parentId: '548', name: 'Level 7', subtext: 'id 549', type: 'Level 7' },\n  { id: '550', parentId: '548', name: 'Level 7', subtext: 'id 550', type: 'Level 7' },\n  { id: '551', parentId: '548', name: 'Level 7', subtext: 'id 551', type: 'Level 7' },\n  { id: '552', parentId: '539', name: 'Level 6', subtext: 'id 552', type: 'Level 6' },\n  { id: '553', parentId: '552', name: 'Level 7', subtext: 'id 553', type: 'Level 7' },\n  { id: '554', parentId: '537', name: 'Level 4', subtext: 'id 554', type: 'Level 4' },\n  { id: '555', parentId: '554', name: 'Level 5', subtext: 'id 555', type: 'Level 5' },\n  { id: '556', parentId: '555', name: 'Level 6', subtext: 'id 556', type: 'Level 6' },\n  { id: '557', parentId: '556', name: 'Level 7', subtext: 'id 557', type: 'Level 7' },\n  { id: '558', parentId: '556', name: 'Level 7', subtext: 'id 558', type: 'Level 7' },\n  { id: '559', parentId: '556', name: 'Level 7', subtext: 'id 559', type: 'Level 7' },\n  { id: '560', parentId: '556', name: 'Level 7', subtext: 'id 560', type: 'Level 7' },\n  { id: '561', parentId: '555', name: 'Level 6', subtext: 'id 561', type: 'Level 6' },\n  { id: '562', parentId: '561', name: 'Level 7', subtext: 'id 562', type: 'Level 7' },\n  { id: '563', parentId: '561', name: 'Level 7', subtext: 'id 563', type: 'Level 7' },\n  { id: '564', parentId: '561', name: 'Level 7', subtext: 'id 564', type: 'Level 7' },\n  { id: '565', parentId: '561', name: 'Level 7', subtext: 'id 565', type: 'Level 7' },\n  { id: '566', parentId: '561', name: 'Level 7', subtext: 'id 566', type: 'Level 7' },\n  { id: '567', parentId: '555', name: 'Level 6', subtext: 'id 567', type: 'Level 6' },\n  { id: '568', parentId: '567', name: 'Level 7', subtext: 'id 568', type: 'Level 7' },\n  { id: '569', parentId: '555', name: 'Level 6', subtext: 'id 569', type: 'Level 6' },\n  { id: '570', parentId: '569', name: 'Level 7', subtext: 'id 570', type: 'Level 7' },\n  { id: '571', parentId: '555', name: 'Level 6', subtext: 'id 571', type: 'Level 6' },\n  { id: '572', parentId: '571', name: 'Level 7', subtext: 'id 572', type: 'Level 7' },\n  { id: '573', parentId: '571', name: 'Level 7', subtext: 'id 573', type: 'Level 7' },\n  { id: '574', parentId: '571', name: 'Level 7', subtext: 'id 574', type: 'Level 7' },\n  { id: '575', parentId: '571', name: 'Level 7', subtext: 'id 575', type: 'Level 7' },\n  { id: '576', parentId: '571', name: 'Level 7', subtext: 'id 576', type: 'Level 7' },\n  { id: '577', parentId: '554', name: 'Level 5', subtext: 'id 577', type: 'Level 5' },\n  { id: '578', parentId: '577', name: 'Level 6', subtext: 'id 578', type: 'Level 6' },\n  { id: '579', parentId: '578', name: 'Level 7', subtext: 'id 579', type: 'Level 7' },\n  { id: '580', parentId: '578', name: 'Level 7', subtext: 'id 580', type: 'Level 7' },\n  { id: '581', parentId: '578', name: 'Level 7', subtext: 'id 581', type: 'Level 7' },\n  { id: '582', parentId: '578', name: 'Level 7', subtext: 'id 582', type: 'Level 7' },\n  { id: '583', parentId: '578', name: 'Level 7', subtext: 'id 583', type: 'Level 7' },\n  { id: '584', parentId: '577', name: 'Level 6', subtext: 'id 584', type: 'Level 6' },\n  { id: '585', parentId: '584', name: 'Level 7', subtext: 'id 585', type: 'Level 7' },\n  { id: '586', parentId: '577', name: 'Level 6', subtext: 'id 586', type: 'Level 6' },\n  { id: '587', parentId: '586', name: 'Level 7', subtext: 'id 587', type: 'Level 7' },\n  { id: '588', parentId: '586', name: 'Level 7', subtext: 'id 588', type: 'Level 7' },\n  { id: '589', parentId: '586', name: 'Level 7', subtext: 'id 589', type: 'Level 7' },\n  { id: '590', parentId: '537', name: 'Level 4', subtext: 'id 590', type: 'Level 4' },\n  { id: '591', parentId: '590', name: 'Level 5', subtext: 'id 591', type: 'Level 5' },\n  { id: '592', parentId: '591', name: 'Level 6', subtext: 'id 592', type: 'Level 6' },\n  { id: '593', parentId: '592', name: 'Level 7', subtext: 'id 593', type: 'Level 7' },\n  { id: '594', parentId: '592', name: 'Level 7', subtext: 'id 594', type: 'Level 7' },\n  { id: '595', parentId: '592', name: 'Level 7', subtext: 'id 595', type: 'Level 7' },\n  { id: '596', parentId: '590', name: 'Level 5', subtext: 'id 596', type: 'Level 5' },\n  { id: '597', parentId: '596', name: 'Level 6', subtext: 'id 597', type: 'Level 6' },\n  { id: '598', parentId: '597', name: 'Level 7', subtext: 'id 598', type: 'Level 7' },\n  { id: '599', parentId: '597', name: 'Level 7', subtext: 'id 599', type: 'Level 7' },\n  { id: '600', parentId: '597', name: 'Level 7', subtext: 'id 600', type: 'Level 7' },\n  { id: '601', parentId: '597', name: 'Level 7', subtext: 'id 601', type: 'Level 7' },\n  { id: '602', parentId: '597', name: 'Level 7', subtext: 'id 602', type: 'Level 7' },\n  { id: '603', parentId: '596', name: 'Level 6', subtext: 'id 603', type: 'Level 6' },\n  { id: '604', parentId: '603', name: 'Level 7', subtext: 'id 604', type: 'Level 7' },\n  { id: '605', parentId: '603', name: 'Level 7', subtext: 'id 605', type: 'Level 7' },\n  { id: '606', parentId: '603', name: 'Level 7', subtext: 'id 606', type: 'Level 7' },\n  { id: '607', parentId: '603', name: 'Level 7', subtext: 'id 607', type: 'Level 7' },\n  { id: '608', parentId: '596', name: 'Level 6', subtext: 'id 608', type: 'Level 6' },\n  { id: '609', parentId: '608', name: 'Level 7', subtext: 'id 609', type: 'Level 7' },\n  { id: '610', parentId: '608', name: 'Level 7', subtext: 'id 610', type: 'Level 7' },\n  { id: '611', parentId: '608', name: 'Level 7', subtext: 'id 611', type: 'Level 7' },\n  { id: '612', parentId: '608', name: 'Level 7', subtext: 'id 612', type: 'Level 7' },\n  { id: '613', parentId: '608', name: 'Level 7', subtext: 'id 613', type: 'Level 7' },\n  { id: '614', parentId: '596', name: 'Level 6', subtext: 'id 614', type: 'Level 6' },\n  { id: '615', parentId: '614', name: 'Level 7', subtext: 'id 615', type: 'Level 7' },\n  { id: '616', parentId: '614', name: 'Level 7', subtext: 'id 616', type: 'Level 7' },\n  { id: '617', parentId: '614', name: 'Level 7', subtext: 'id 617', type: 'Level 7' },\n  { id: '618', parentId: '537', name: 'Level 4', subtext: 'id 618', type: 'Level 4' },\n  { id: '619', parentId: '618', name: 'Level 5', subtext: 'id 619', type: 'Level 5' },\n  { id: '620', parentId: '619', name: 'Level 6', subtext: 'id 620', type: 'Level 6' },\n  { id: '621', parentId: '620', name: 'Level 7', subtext: 'id 621', type: 'Level 7' },\n  { id: '622', parentId: '618', name: 'Level 5', subtext: 'id 622', type: 'Level 5' },\n  { id: '623', parentId: '622', name: 'Level 6', subtext: 'id 623', type: 'Level 6' },\n  { id: '624', parentId: '623', name: 'Level 7', subtext: 'id 624', type: 'Level 7' },\n  { id: '625', parentId: '623', name: 'Level 7', subtext: 'id 625', type: 'Level 7' },\n  { id: '626', parentId: '623', name: 'Level 7', subtext: 'id 626', type: 'Level 7' },\n  { id: '627', parentId: '623', name: 'Level 7', subtext: 'id 627', type: 'Level 7' },\n  { id: '628', parentId: '622', name: 'Level 6', subtext: 'id 628', type: 'Level 6' },\n  { id: '629', parentId: '628', name: 'Level 7', subtext: 'id 629', type: 'Level 7' },\n  { id: '630', parentId: '628', name: 'Level 7', subtext: 'id 630', type: 'Level 7' },\n  { id: '631', parentId: '628', name: 'Level 7', subtext: 'id 631', type: 'Level 7' },\n  { id: '632', parentId: '622', name: 'Level 6', subtext: 'id 632', type: 'Level 6' },\n  { id: '633', parentId: '632', name: 'Level 7', subtext: 'id 633', type: 'Level 7' },\n  { id: '634', parentId: '632', name: 'Level 7', subtext: 'id 634', type: 'Level 7' },\n  { id: '635', parentId: '632', name: 'Level 7', subtext: 'id 635', type: 'Level 7' },\n  { id: '636', parentId: '632', name: 'Level 7', subtext: 'id 636', type: 'Level 7' },\n  { id: '637', parentId: '622', name: 'Level 6', subtext: 'id 637', type: 'Level 6' },\n  { id: '638', parentId: '637', name: 'Level 7', subtext: 'id 638', type: 'Level 7' },\n  { id: '639', parentId: '637', name: 'Level 7', subtext: 'id 639', type: 'Level 7' },\n  { id: '640', parentId: '637', name: 'Level 7', subtext: 'id 640', type: 'Level 7' },\n  { id: '641', parentId: '637', name: 'Level 7', subtext: 'id 641', type: 'Level 7' },\n  { id: '642', parentId: '637', name: 'Level 7', subtext: 'id 642', type: 'Level 7' },\n  { id: '643', parentId: '618', name: 'Level 5', subtext: 'id 643', type: 'Level 5' },\n  { id: '644', parentId: '643', name: 'Level 6', subtext: 'id 644', type: 'Level 6' },\n  { id: '645', parentId: '644', name: 'Level 7', subtext: 'id 645', type: 'Level 7' },\n  { id: '646', parentId: '644', name: 'Level 7', subtext: 'id 646', type: 'Level 7' },\n  { id: '647', parentId: '643', name: 'Level 6', subtext: 'id 647', type: 'Level 6' },\n  { id: '648', parentId: '647', name: 'Level 7', subtext: 'id 648', type: 'Level 7' },\n  { id: '649', parentId: '643', name: 'Level 6', subtext: 'id 649', type: 'Level 6' },\n  { id: '650', parentId: '649', name: 'Level 7', subtext: 'id 650', type: 'Level 7' },\n  { id: '651', parentId: '649', name: 'Level 7', subtext: 'id 651', type: 'Level 7' },\n  { id: '652', parentId: '649', name: 'Level 7', subtext: 'id 652', type: 'Level 7' },\n  { id: '653', parentId: '643', name: 'Level 6', subtext: 'id 653', type: 'Level 6' },\n  { id: '654', parentId: '653', name: 'Level 7', subtext: 'id 654', type: 'Level 7' },\n  { id: '655', parentId: '643', name: 'Level 6', subtext: 'id 655', type: 'Level 6' },\n  { id: '656', parentId: '655', name: 'Level 7', subtext: 'id 656', type: 'Level 7' },\n  { id: '657', parentId: '655', name: 'Level 7', subtext: 'id 657', type: 'Level 7' },\n  { id: '658', parentId: '655', name: 'Level 7', subtext: 'id 658', type: 'Level 7' },\n  { id: '659', parentId: '655', name: 'Level 7', subtext: 'id 659', type: 'Level 7' },\n  { id: '660', parentId: '655', name: 'Level 7', subtext: 'id 660', type: 'Level 7' },\n  { id: '661', parentId: '618', name: 'Level 5', subtext: 'id 661', type: 'Level 5' },\n  { id: '662', parentId: '661', name: 'Level 6', subtext: 'id 662', type: 'Level 6' },\n  { id: '663', parentId: '662', name: 'Level 7', subtext: 'id 663', type: 'Level 7' },\n  { id: '664', parentId: '662', name: 'Level 7', subtext: 'id 664', type: 'Level 7' },\n  { id: '665', parentId: '661', name: 'Level 6', subtext: 'id 665', type: 'Level 6' },\n  { id: '666', parentId: '665', name: 'Level 7', subtext: 'id 666', type: 'Level 7' },\n  { id: '667', parentId: '665', name: 'Level 7', subtext: 'id 667', type: 'Level 7' },\n  { id: '668', parentId: '661', name: 'Level 6', subtext: 'id 668', type: 'Level 6' },\n  { id: '669', parentId: '668', name: 'Level 7', subtext: 'id 669', type: 'Level 7' },\n  { id: '670', parentId: '478', name: 'Level 2', subtext: 'id 670', type: 'Level 2' },\n  { id: '671', parentId: '670', name: 'Level 3', subtext: 'id 671', type: 'Level 3' },\n  { id: '672', parentId: '671', name: 'Level 4', subtext: 'id 672', type: 'Level 4' },\n  { id: '673', parentId: '672', name: 'Level 5', subtext: 'id 673', type: 'Level 5' },\n  { id: '674', parentId: '673', name: 'Level 6', subtext: 'id 674', type: 'Level 6' },\n  { id: '675', parentId: '674', name: 'Level 7', subtext: 'id 675', type: 'Level 7' },\n  { id: '676', parentId: '674', name: 'Level 7', subtext: 'id 676', type: 'Level 7' },\n  { id: '677', parentId: '674', name: 'Level 7', subtext: 'id 677', type: 'Level 7' },\n  { id: '678', parentId: '672', name: 'Level 5', subtext: 'id 678', type: 'Level 5' },\n  { id: '679', parentId: '678', name: 'Level 6', subtext: 'id 679', type: 'Level 6' },\n  { id: '680', parentId: '679', name: 'Level 7', subtext: 'id 680', type: 'Level 7' },\n  { id: '681', parentId: '679', name: 'Level 7', subtext: 'id 681', type: 'Level 7' },\n  { id: '682', parentId: '679', name: 'Level 7', subtext: 'id 682', type: 'Level 7' },\n  { id: '683', parentId: '679', name: 'Level 7', subtext: 'id 683', type: 'Level 7' },\n  { id: '684', parentId: '678', name: 'Level 6', subtext: 'id 684', type: 'Level 6' },\n  { id: '685', parentId: '684', name: 'Level 7', subtext: 'id 685', type: 'Level 7' },\n  { id: '686', parentId: '684', name: 'Level 7', subtext: 'id 686', type: 'Level 7' },\n  { id: '687', parentId: '684', name: 'Level 7', subtext: 'id 687', type: 'Level 7' },\n  { id: '688', parentId: '678', name: 'Level 6', subtext: 'id 688', type: 'Level 6' },\n  { id: '689', parentId: '688', name: 'Level 7', subtext: 'id 689', type: 'Level 7' },\n  { id: '690', parentId: '672', name: 'Level 5', subtext: 'id 690', type: 'Level 5' },\n  { id: '691', parentId: '690', name: 'Level 6', subtext: 'id 691', type: 'Level 6' },\n  { id: '692', parentId: '691', name: 'Level 7', subtext: 'id 692', type: 'Level 7' },\n  { id: '693', parentId: '691', name: 'Level 7', subtext: 'id 693', type: 'Level 7' },\n  { id: '694', parentId: '691', name: 'Level 7', subtext: 'id 694', type: 'Level 7' },\n  { id: '695', parentId: '691', name: 'Level 7', subtext: 'id 695', type: 'Level 7' },\n  { id: '696', parentId: '691', name: 'Level 7', subtext: 'id 696', type: 'Level 7' },\n  { id: '697', parentId: '690', name: 'Level 6', subtext: 'id 697', type: 'Level 6' },\n  { id: '698', parentId: '697', name: 'Level 7', subtext: 'id 698', type: 'Level 7' },\n  { id: '699', parentId: '672', name: 'Level 5', subtext: 'id 699', type: 'Level 5' },\n  { id: '700', parentId: '699', name: 'Level 6', subtext: 'id 700', type: 'Level 6' },\n  { id: '701', parentId: '700', name: 'Level 7', subtext: 'id 701', type: 'Level 7' },\n  { id: '702', parentId: '700', name: 'Level 7', subtext: 'id 702', type: 'Level 7' },\n  { id: '703', parentId: '700', name: 'Level 7', subtext: 'id 703', type: 'Level 7' },\n  { id: '704', parentId: '700', name: 'Level 7', subtext: 'id 704', type: 'Level 7' },\n  { id: '705', parentId: '700', name: 'Level 7', subtext: 'id 705', type: 'Level 7' },\n  { id: '706', parentId: '699', name: 'Level 6', subtext: 'id 706', type: 'Level 6' },\n  { id: '707', parentId: '706', name: 'Level 7', subtext: 'id 707', type: 'Level 7' },\n  { id: '708', parentId: '706', name: 'Level 7', subtext: 'id 708', type: 'Level 7' },\n  { id: '709', parentId: '671', name: 'Level 4', subtext: 'id 709', type: 'Level 4' },\n  { id: '710', parentId: '709', name: 'Level 5', subtext: 'id 710', type: 'Level 5' },\n  { id: '711', parentId: '710', name: 'Level 6', subtext: 'id 711', type: 'Level 6' },\n  { id: '712', parentId: '711', name: 'Level 7', subtext: 'id 712', type: 'Level 7' },\n  { id: '713', parentId: '711', name: 'Level 7', subtext: 'id 713', type: 'Level 7' },\n  { id: '714', parentId: '711', name: 'Level 7', subtext: 'id 714', type: 'Level 7' },\n  { id: '715', parentId: '711', name: 'Level 7', subtext: 'id 715', type: 'Level 7' },\n  { id: '716', parentId: '710', name: 'Level 6', subtext: 'id 716', type: 'Level 6' },\n  { id: '717', parentId: '716', name: 'Level 7', subtext: 'id 717', type: 'Level 7' },\n  { id: '718', parentId: '716', name: 'Level 7', subtext: 'id 718', type: 'Level 7' },\n  { id: '719', parentId: '716', name: 'Level 7', subtext: 'id 719', type: 'Level 7' },\n  { id: '720', parentId: '710', name: 'Level 6', subtext: 'id 720', type: 'Level 6' },\n  { id: '721', parentId: '720', name: 'Level 7', subtext: 'id 721', type: 'Level 7' },\n  { id: '722', parentId: '710', name: 'Level 6', subtext: 'id 722', type: 'Level 6' },\n  { id: '723', parentId: '722', name: 'Level 7', subtext: 'id 723', type: 'Level 7' },\n  { id: '724', parentId: '710', name: 'Level 6', subtext: 'id 724', type: 'Level 6' },\n  { id: '725', parentId: '724', name: 'Level 7', subtext: 'id 725', type: 'Level 7' },\n  { id: '726', parentId: '724', name: 'Level 7', subtext: 'id 726', type: 'Level 7' },\n  { id: '727', parentId: '724', name: 'Level 7', subtext: 'id 727', type: 'Level 7' },\n  { id: '728', parentId: '724', name: 'Level 7', subtext: 'id 728', type: 'Level 7' },\n  { id: '729', parentId: '724', name: 'Level 7', subtext: 'id 729', type: 'Level 7' },\n  { id: '730', parentId: '709', name: 'Level 5', subtext: 'id 730', type: 'Level 5' },\n  { id: '731', parentId: '730', name: 'Level 6', subtext: 'id 731', type: 'Level 6' },\n  { id: '732', parentId: '731', name: 'Level 7', subtext: 'id 732', type: 'Level 7' },\n  { id: '733', parentId: '731', name: 'Level 7', subtext: 'id 733', type: 'Level 7' },\n  { id: '734', parentId: '731', name: 'Level 7', subtext: 'id 734', type: 'Level 7' },\n  { id: '735', parentId: '731', name: 'Level 7', subtext: 'id 735', type: 'Level 7' },\n  { id: '736', parentId: '730', name: 'Level 6', subtext: 'id 736', type: 'Level 6' },\n  { id: '737', parentId: '736', name: 'Level 7', subtext: 'id 737', type: 'Level 7' },\n  { id: '738', parentId: '736', name: 'Level 7', subtext: 'id 738', type: 'Level 7' },\n  { id: '739', parentId: '736', name: 'Level 7', subtext: 'id 739', type: 'Level 7' },\n  { id: '740', parentId: '736', name: 'Level 7', subtext: 'id 740', type: 'Level 7' },\n  { id: '741', parentId: '730', name: 'Level 6', subtext: 'id 741', type: 'Level 6' },\n  { id: '742', parentId: '741', name: 'Level 7', subtext: 'id 742', type: 'Level 7' },\n  { id: '743', parentId: '730', name: 'Level 6', subtext: 'id 743', type: 'Level 6' },\n  { id: '744', parentId: '743', name: 'Level 7', subtext: 'id 744', type: 'Level 7' },\n  { id: '745', parentId: '671', name: 'Level 4', subtext: 'id 745', type: 'Level 4' },\n  { id: '746', parentId: '745', name: 'Level 5', subtext: 'id 746', type: 'Level 5' },\n  { id: '747', parentId: '746', name: 'Level 6', subtext: 'id 747', type: 'Level 6' },\n  { id: '748', parentId: '747', name: 'Level 7', subtext: 'id 748', type: 'Level 7' },\n  { id: '749', parentId: '747', name: 'Level 7', subtext: 'id 749', type: 'Level 7' },\n  { id: '750', parentId: '747', name: 'Level 7', subtext: 'id 750', type: 'Level 7' },\n  { id: '751', parentId: '747', name: 'Level 7', subtext: 'id 751', type: 'Level 7' },\n  { id: '752', parentId: '746', name: 'Level 6', subtext: 'id 752', type: 'Level 6' },\n  { id: '753', parentId: '752', name: 'Level 7', subtext: 'id 753', type: 'Level 7' },\n  { id: '754', parentId: '752', name: 'Level 7', subtext: 'id 754', type: 'Level 7' },\n  { id: '755', parentId: '752', name: 'Level 7', subtext: 'id 755', type: 'Level 7' },\n  { id: '756', parentId: '745', name: 'Level 5', subtext: 'id 756', type: 'Level 5' },\n  { id: '757', parentId: '756', name: 'Level 6', subtext: 'id 757', type: 'Level 6' },\n  { id: '758', parentId: '757', name: 'Level 7', subtext: 'id 758', type: 'Level 7' },\n  { id: '759', parentId: '757', name: 'Level 7', subtext: 'id 759', type: 'Level 7' },\n  { id: '760', parentId: '757', name: 'Level 7', subtext: 'id 760', type: 'Level 7' },\n  { id: '761', parentId: '757', name: 'Level 7', subtext: 'id 761', type: 'Level 7' },\n  { id: '762', parentId: '757', name: 'Level 7', subtext: 'id 762', type: 'Level 7' },\n  { id: '763', parentId: '756', name: 'Level 6', subtext: 'id 763', type: 'Level 6' },\n  { id: '764', parentId: '763', name: 'Level 7', subtext: 'id 764', type: 'Level 7' },\n  { id: '765', parentId: '763', name: 'Level 7', subtext: 'id 765', type: 'Level 7' },\n  { id: '766', parentId: '756', name: 'Level 6', subtext: 'id 766', type: 'Level 6' },\n  { id: '767', parentId: '766', name: 'Level 7', subtext: 'id 767', type: 'Level 7' },\n  { id: '768', parentId: '766', name: 'Level 7', subtext: 'id 768', type: 'Level 7' },\n  { id: '769', parentId: '766', name: 'Level 7', subtext: 'id 769', type: 'Level 7' },\n  { id: '770', parentId: '766', name: 'Level 7', subtext: 'id 770', type: 'Level 7' },\n  { id: '771', parentId: '756', name: 'Level 6', subtext: 'id 771', type: 'Level 6' },\n  { id: '772', parentId: '771', name: 'Level 7', subtext: 'id 772', type: 'Level 7' },\n  { id: '773', parentId: '771', name: 'Level 7', subtext: 'id 773', type: 'Level 7' },\n  { id: '774', parentId: '745', name: 'Level 5', subtext: 'id 774', type: 'Level 5' },\n  { id: '775', parentId: '774', name: 'Level 6', subtext: 'id 775', type: 'Level 6' },\n  { id: '776', parentId: '775', name: 'Level 7', subtext: 'id 776', type: 'Level 7' },\n  { id: '777', parentId: '774', name: 'Level 6', subtext: 'id 777', type: 'Level 6' },\n  { id: '778', parentId: '777', name: 'Level 7', subtext: 'id 778', type: 'Level 7' },\n  { id: '779', parentId: '777', name: 'Level 7', subtext: 'id 779', type: 'Level 7' },\n  { id: '780', parentId: '777', name: 'Level 7', subtext: 'id 780', type: 'Level 7' },\n  { id: '781', parentId: '777', name: 'Level 7', subtext: 'id 781', type: 'Level 7' },\n  { id: '782', parentId: '774', name: 'Level 6', subtext: 'id 782', type: 'Level 6' },\n  { id: '783', parentId: '782', name: 'Level 7', subtext: 'id 783', type: 'Level 7' },\n  { id: '784', parentId: '782', name: 'Level 7', subtext: 'id 784', type: 'Level 7' },\n  { id: '785', parentId: '774', name: 'Level 6', subtext: 'id 785', type: 'Level 6' },\n  { id: '786', parentId: '785', name: 'Level 7', subtext: 'id 786', type: 'Level 7' },\n  { id: '787', parentId: '785', name: 'Level 7', subtext: 'id 787', type: 'Level 7' },\n  { id: '788', parentId: '671', name: 'Level 4', subtext: 'id 788', type: 'Level 4' },\n  { id: '789', parentId: '788', name: 'Level 5', subtext: 'id 789', type: 'Level 5' },\n  { id: '790', parentId: '789', name: 'Level 6', subtext: 'id 790', type: 'Level 6' },\n  { id: '791', parentId: '790', name: 'Level 7', subtext: 'id 791', type: 'Level 7' },\n  { id: '792', parentId: '790', name: 'Level 7', subtext: 'id 792', type: 'Level 7' },\n  { id: '793', parentId: '789', name: 'Level 6', subtext: 'id 793', type: 'Level 6' },\n  { id: '794', parentId: '793', name: 'Level 7', subtext: 'id 794', type: 'Level 7' },\n  { id: '795', parentId: '793', name: 'Level 7', subtext: 'id 795', type: 'Level 7' },\n  { id: '796', parentId: '793', name: 'Level 7', subtext: 'id 796', type: 'Level 7' },\n  { id: '797', parentId: '788', name: 'Level 5', subtext: 'id 797', type: 'Level 5' },\n  { id: '798', parentId: '797', name: 'Level 6', subtext: 'id 798', type: 'Level 6' },\n  { id: '799', parentId: '798', name: 'Level 7', subtext: 'id 799', type: 'Level 7' },\n  { id: '800', parentId: '798', name: 'Level 7', subtext: 'id 800', type: 'Level 7' },\n  { id: '801', parentId: '797', name: 'Level 6', subtext: 'id 801', type: 'Level 6' },\n  { id: '802', parentId: '801', name: 'Level 7', subtext: 'id 802', type: 'Level 7' },\n  { id: '803', parentId: '801', name: 'Level 7', subtext: 'id 803', type: 'Level 7' },\n  { id: '804', parentId: '801', name: 'Level 7', subtext: 'id 804', type: 'Level 7' },\n  { id: '805', parentId: '801', name: 'Level 7', subtext: 'id 805', type: 'Level 7' },\n  { id: '806', parentId: '788', name: 'Level 5', subtext: 'id 806', type: 'Level 5' },\n  { id: '807', parentId: '806', name: 'Level 6', subtext: 'id 807', type: 'Level 6' },\n  { id: '808', parentId: '807', name: 'Level 7', subtext: 'id 808', type: 'Level 7' },\n  { id: '809', parentId: '807', name: 'Level 7', subtext: 'id 809', type: 'Level 7' },\n  { id: '810', parentId: '806', name: 'Level 6', subtext: 'id 810', type: 'Level 6' },\n  { id: '811', parentId: '810', name: 'Level 7', subtext: 'id 811', type: 'Level 7' },\n  { id: '812', parentId: '806', name: 'Level 6', subtext: 'id 812', type: 'Level 6' },\n  { id: '813', parentId: '812', name: 'Level 7', subtext: 'id 813', type: 'Level 7' },\n  { id: '814', parentId: '806', name: 'Level 6', subtext: 'id 814', type: 'Level 6' },\n  { id: '815', parentId: '814', name: 'Level 7', subtext: 'id 815', type: 'Level 7' },\n  { id: '816', parentId: '814', name: 'Level 7', subtext: 'id 816', type: 'Level 7' },\n  { id: '817', parentId: '814', name: 'Level 7', subtext: 'id 817', type: 'Level 7' },\n  { id: '818', parentId: '814', name: 'Level 7', subtext: 'id 818', type: 'Level 7' },\n  { id: '819', parentId: '806', name: 'Level 6', subtext: 'id 819', type: 'Level 6' },\n  { id: '820', parentId: '819', name: 'Level 7', subtext: 'id 820', type: 'Level 7' },\n  { id: '821', parentId: '788', name: 'Level 5', subtext: 'id 821', type: 'Level 5' },\n  { id: '822', parentId: '821', name: 'Level 6', subtext: 'id 822', type: 'Level 6' },\n  { id: '823', parentId: '822', name: 'Level 7', subtext: 'id 823', type: 'Level 7' },\n  { id: '824', parentId: '822', name: 'Level 7', subtext: 'id 824', type: 'Level 7' },\n  { id: '825', parentId: '822', name: 'Level 7', subtext: 'id 825', type: 'Level 7' },\n  { id: '826', parentId: '821', name: 'Level 6', subtext: 'id 826', type: 'Level 6' },\n  { id: '827', parentId: '826', name: 'Level 7', subtext: 'id 827', type: 'Level 7' },\n  { id: '828', parentId: '821', name: 'Level 6', subtext: 'id 828', type: 'Level 6' },\n  { id: '829', parentId: '828', name: 'Level 7', subtext: 'id 829', type: 'Level 7' },\n  { id: '830', parentId: '821', name: 'Level 6', subtext: 'id 830', type: 'Level 6' },\n  { id: '831', parentId: '830', name: 'Level 7', subtext: 'id 831', type: 'Level 7' },\n  { id: '832', parentId: '830', name: 'Level 7', subtext: 'id 832', type: 'Level 7' },\n  { id: '833', parentId: '671', name: 'Level 4', subtext: 'id 833', type: 'Level 4' },\n  { id: '834', parentId: '833', name: 'Level 5', subtext: 'id 834', type: 'Level 5' },\n  { id: '835', parentId: '834', name: 'Level 6', subtext: 'id 835', type: 'Level 6' },\n  { id: '836', parentId: '835', name: 'Level 7', subtext: 'id 836', type: 'Level 7' },\n  { id: '837', parentId: '834', name: 'Level 6', subtext: 'id 837', type: 'Level 6' },\n  { id: '838', parentId: '837', name: 'Level 7', subtext: 'id 838', type: 'Level 7' },\n  { id: '839', parentId: '837', name: 'Level 7', subtext: 'id 839', type: 'Level 7' },\n  { id: '840', parentId: '837', name: 'Level 7', subtext: 'id 840', type: 'Level 7' },\n  { id: '841', parentId: '837', name: 'Level 7', subtext: 'id 841', type: 'Level 7' },\n  { id: '842', parentId: '837', name: 'Level 7', subtext: 'id 842', type: 'Level 7' },\n  { id: '843', parentId: '833', name: 'Level 5', subtext: 'id 843', type: 'Level 5' },\n  { id: '844', parentId: '843', name: 'Level 6', subtext: 'id 844', type: 'Level 6' },\n  { id: '845', parentId: '844', name: 'Level 7', subtext: 'id 845', type: 'Level 7' },\n  { id: '846', parentId: '833', name: 'Level 5', subtext: 'id 846', type: 'Level 5' },\n  { id: '847', parentId: '846', name: 'Level 6', subtext: 'id 847', type: 'Level 6' },\n  { id: '848', parentId: '847', name: 'Level 7', subtext: 'id 848', type: 'Level 7' },\n  { id: '849', parentId: '847', name: 'Level 7', subtext: 'id 849', type: 'Level 7' },\n  { id: '850', parentId: '847', name: 'Level 7', subtext: 'id 850', type: 'Level 7' },\n  { id: '851', parentId: '846', name: 'Level 6', subtext: 'id 851', type: 'Level 6' },\n  { id: '852', parentId: '851', name: 'Level 7', subtext: 'id 852', type: 'Level 7' },\n  { id: '853', parentId: '851', name: 'Level 7', subtext: 'id 853', type: 'Level 7' },\n  { id: '854', parentId: '851', name: 'Level 7', subtext: 'id 854', type: 'Level 7' },\n  { id: '855', parentId: '851', name: 'Level 7', subtext: 'id 855', type: 'Level 7' },\n  { id: '856', parentId: '851', name: 'Level 7', subtext: 'id 856', type: 'Level 7' },\n  { id: '857', parentId: '846', name: 'Level 6', subtext: 'id 857', type: 'Level 6' },\n  { id: '858', parentId: '857', name: 'Level 7', subtext: 'id 858', type: 'Level 7' },\n  { id: '859', parentId: '857', name: 'Level 7', subtext: 'id 859', type: 'Level 7' },\n  { id: '860', parentId: '846', name: 'Level 6', subtext: 'id 860', type: 'Level 6' },\n  { id: '861', parentId: '860', name: 'Level 7', subtext: 'id 861', type: 'Level 7' },\n  { id: '862', parentId: '860', name: 'Level 7', subtext: 'id 862', type: 'Level 7' },\n  { id: '863', parentId: '860', name: 'Level 7', subtext: 'id 863', type: 'Level 7' },\n  { id: '864', parentId: '860', name: 'Level 7', subtext: 'id 864', type: 'Level 7' },\n  { id: '865', parentId: '860', name: 'Level 7', subtext: 'id 865', type: 'Level 7' },\n  { id: '866', parentId: '833', name: 'Level 5', subtext: 'id 866', type: 'Level 5' },\n  { id: '867', parentId: '866', name: 'Level 6', subtext: 'id 867', type: 'Level 6' },\n  { id: '868', parentId: '867', name: 'Level 7', subtext: 'id 868', type: 'Level 7' },\n  { id: '869', parentId: '867', name: 'Level 7', subtext: 'id 869', type: 'Level 7' },\n  { id: '870', parentId: '867', name: 'Level 7', subtext: 'id 870', type: 'Level 7' },\n  { id: '871', parentId: '867', name: 'Level 7', subtext: 'id 871', type: 'Level 7' },\n  { id: '872', parentId: '867', name: 'Level 7', subtext: 'id 872', type: 'Level 7' },\n  { id: '873', parentId: '866', name: 'Level 6', subtext: 'id 873', type: 'Level 6' },\n  { id: '874', parentId: '873', name: 'Level 7', subtext: 'id 874', type: 'Level 7' },\n  { id: '875', parentId: '873', name: 'Level 7', subtext: 'id 875', type: 'Level 7' },\n  { id: '876', parentId: '873', name: 'Level 7', subtext: 'id 876', type: 'Level 7' },\n  { id: '877', parentId: '873', name: 'Level 7', subtext: 'id 877', type: 'Level 7' },\n  { id: '878', parentId: '670', name: 'Level 3', subtext: 'id 878', type: 'Level 3' },\n  { id: '879', parentId: '878', name: 'Level 4', subtext: 'id 879', type: 'Level 4' },\n  { id: '880', parentId: '879', name: 'Level 5', subtext: 'id 880', type: 'Level 5' },\n  { id: '881', parentId: '880', name: 'Level 6', subtext: 'id 881', type: 'Level 6' },\n  { id: '882', parentId: '881', name: 'Level 7', subtext: 'id 882', type: 'Level 7' },\n  { id: '883', parentId: '881', name: 'Level 7', subtext: 'id 883', type: 'Level 7' },\n  { id: '884', parentId: '880', name: 'Level 6', subtext: 'id 884', type: 'Level 6' },\n  { id: '885', parentId: '884', name: 'Level 7', subtext: 'id 885', type: 'Level 7' },\n  { id: '886', parentId: '880', name: 'Level 6', subtext: 'id 886', type: 'Level 6' },\n  { id: '887', parentId: '886', name: 'Level 7', subtext: 'id 887', type: 'Level 7' },\n  { id: '888', parentId: '886', name: 'Level 7', subtext: 'id 888', type: 'Level 7' },\n  { id: '889', parentId: '886', name: 'Level 7', subtext: 'id 889', type: 'Level 7' },\n  { id: '890', parentId: '886', name: 'Level 7', subtext: 'id 890', type: 'Level 7' },\n  { id: '891', parentId: '880', name: 'Level 6', subtext: 'id 891', type: 'Level 6' },\n  { id: '892', parentId: '891', name: 'Level 7', subtext: 'id 892', type: 'Level 7' },\n  { id: '893', parentId: '891', name: 'Level 7', subtext: 'id 893', type: 'Level 7' },\n  { id: '894', parentId: '891', name: 'Level 7', subtext: 'id 894', type: 'Level 7' },\n  { id: '895', parentId: '880', name: 'Level 6', subtext: 'id 895', type: 'Level 6' },\n  { id: '896', parentId: '895', name: 'Level 7', subtext: 'id 896', type: 'Level 7' },\n  { id: '897', parentId: '895', name: 'Level 7', subtext: 'id 897', type: 'Level 7' },\n  { id: '898', parentId: '895', name: 'Level 7', subtext: 'id 898', type: 'Level 7' },\n  { id: '899', parentId: '895', name: 'Level 7', subtext: 'id 899', type: 'Level 7' },\n  { id: '900', parentId: '879', name: 'Level 5', subtext: 'id 900', type: 'Level 5' },\n  { id: '901', parentId: '900', name: 'Level 6', subtext: 'id 901', type: 'Level 6' },\n  { id: '902', parentId: '901', name: 'Level 7', subtext: 'id 902', type: 'Level 7' },\n  { id: '903', parentId: '879', name: 'Level 5', subtext: 'id 903', type: 'Level 5' },\n  { id: '904', parentId: '903', name: 'Level 6', subtext: 'id 904', type: 'Level 6' },\n  { id: '905', parentId: '904', name: 'Level 7', subtext: 'id 905', type: 'Level 7' },\n  { id: '906', parentId: '903', name: 'Level 6', subtext: 'id 906', type: 'Level 6' },\n  { id: '907', parentId: '906', name: 'Level 7', subtext: 'id 907', type: 'Level 7' },\n  { id: '908', parentId: '906', name: 'Level 7', subtext: 'id 908', type: 'Level 7' },\n  { id: '909', parentId: '906', name: 'Level 7', subtext: 'id 909', type: 'Level 7' },\n  { id: '910', parentId: '903', name: 'Level 6', subtext: 'id 910', type: 'Level 6' },\n  { id: '911', parentId: '910', name: 'Level 7', subtext: 'id 911', type: 'Level 7' },\n  { id: '912', parentId: '910', name: 'Level 7', subtext: 'id 912', type: 'Level 7' },\n  { id: '913', parentId: '910', name: 'Level 7', subtext: 'id 913', type: 'Level 7' },\n  { id: '914', parentId: '903', name: 'Level 6', subtext: 'id 914', type: 'Level 6' },\n  { id: '915', parentId: '914', name: 'Level 7', subtext: 'id 915', type: 'Level 7' },\n  { id: '916', parentId: '914', name: 'Level 7', subtext: 'id 916', type: 'Level 7' },\n  { id: '917', parentId: '879', name: 'Level 5', subtext: 'id 917', type: 'Level 5' },\n  { id: '918', parentId: '917', name: 'Level 6', subtext: 'id 918', type: 'Level 6' },\n  { id: '919', parentId: '918', name: 'Level 7', subtext: 'id 919', type: 'Level 7' },\n  { id: '920', parentId: '918', name: 'Level 7', subtext: 'id 920', type: 'Level 7' },\n  { id: '921', parentId: '917', name: 'Level 6', subtext: 'id 921', type: 'Level 6' },\n  { id: '922', parentId: '921', name: 'Level 7', subtext: 'id 922', type: 'Level 7' },\n  { id: '923', parentId: '921', name: 'Level 7', subtext: 'id 923', type: 'Level 7' },\n  { id: '924', parentId: '921', name: 'Level 7', subtext: 'id 924', type: 'Level 7' },\n  { id: '925', parentId: '879', name: 'Level 5', subtext: 'id 925', type: 'Level 5' },\n  { id: '926', parentId: '925', name: 'Level 6', subtext: 'id 926', type: 'Level 6' },\n  { id: '927', parentId: '926', name: 'Level 7', subtext: 'id 927', type: 'Level 7' },\n  { id: '928', parentId: '926', name: 'Level 7', subtext: 'id 928', type: 'Level 7' },\n  { id: '929', parentId: '878', name: 'Level 4', subtext: 'id 929', type: 'Level 4' },\n  { id: '930', parentId: '929', name: 'Level 5', subtext: 'id 930', type: 'Level 5' },\n  { id: '931', parentId: '930', name: 'Level 6', subtext: 'id 931', type: 'Level 6' },\n  { id: '932', parentId: '931', name: 'Level 7', subtext: 'id 932', type: 'Level 7' },\n  { id: '933', parentId: '931', name: 'Level 7', subtext: 'id 933', type: 'Level 7' },\n  { id: '934', parentId: '930', name: 'Level 6', subtext: 'id 934', type: 'Level 6' },\n  { id: '935', parentId: '934', name: 'Level 7', subtext: 'id 935', type: 'Level 7' },\n  { id: '936', parentId: '934', name: 'Level 7', subtext: 'id 936', type: 'Level 7' },\n  { id: '937', parentId: '930', name: 'Level 6', subtext: 'id 937', type: 'Level 6' },\n  { id: '938', parentId: '937', name: 'Level 7', subtext: 'id 938', type: 'Level 7' },\n  { id: '939', parentId: '937', name: 'Level 7', subtext: 'id 939', type: 'Level 7' },\n  { id: '940', parentId: '930', name: 'Level 6', subtext: 'id 940', type: 'Level 6' },\n  { id: '941', parentId: '940', name: 'Level 7', subtext: 'id 941', type: 'Level 7' },\n  { id: '942', parentId: '940', name: 'Level 7', subtext: 'id 942', type: 'Level 7' },\n  { id: '943', parentId: '940', name: 'Level 7', subtext: 'id 943', type: 'Level 7' },\n  { id: '944', parentId: '940', name: 'Level 7', subtext: 'id 944', type: 'Level 7' },\n  { id: '945', parentId: '940', name: 'Level 7', subtext: 'id 945', type: 'Level 7' },\n  { id: '946', parentId: '930', name: 'Level 6', subtext: 'id 946', type: 'Level 6' },\n  { id: '947', parentId: '946', name: 'Level 7', subtext: 'id 947', type: 'Level 7' },\n  { id: '948', parentId: '946', name: 'Level 7', subtext: 'id 948', type: 'Level 7' },\n  { id: '949', parentId: '929', name: 'Level 5', subtext: 'id 949', type: 'Level 5' },\n  { id: '950', parentId: '949', name: 'Level 6', subtext: 'id 950', type: 'Level 6' },\n  { id: '951', parentId: '950', name: 'Level 7', subtext: 'id 951', type: 'Level 7' },\n  { id: '952', parentId: '950', name: 'Level 7', subtext: 'id 952', type: 'Level 7' },\n  { id: '953', parentId: '950', name: 'Level 7', subtext: 'id 953', type: 'Level 7' },\n  { id: '954', parentId: '950', name: 'Level 7', subtext: 'id 954', type: 'Level 7' },\n  { id: '955', parentId: '949', name: 'Level 6', subtext: 'id 955', type: 'Level 6' },\n  { id: '956', parentId: '955', name: 'Level 7', subtext: 'id 956', type: 'Level 7' },\n  { id: '957', parentId: '955', name: 'Level 7', subtext: 'id 957', type: 'Level 7' },\n  { id: '958', parentId: '955', name: 'Level 7', subtext: 'id 958', type: 'Level 7' },\n  { id: '959', parentId: '955', name: 'Level 7', subtext: 'id 959', type: 'Level 7' },\n  { id: '960', parentId: '949', name: 'Level 6', subtext: 'id 960', type: 'Level 6' },\n  { id: '961', parentId: '960', name: 'Level 7', subtext: 'id 961', type: 'Level 7' },\n  { id: '962', parentId: '949', name: 'Level 6', subtext: 'id 962', type: 'Level 6' },\n  { id: '963', parentId: '962', name: 'Level 7', subtext: 'id 963', type: 'Level 7' },\n  { id: '964', parentId: '962', name: 'Level 7', subtext: 'id 964', type: 'Level 7' },\n  { id: '965', parentId: '878', name: 'Level 4', subtext: 'id 965', type: 'Level 4' },\n  { id: '966', parentId: '965', name: 'Level 5', subtext: 'id 966', type: 'Level 5' },\n  { id: '967', parentId: '966', name: 'Level 6', subtext: 'id 967', type: 'Level 6' },\n  { id: '968', parentId: '967', name: 'Level 7', subtext: 'id 968', type: 'Level 7' },\n  { id: '969', parentId: '967', name: 'Level 7', subtext: 'id 969', type: 'Level 7' },\n  { id: '970', parentId: '967', name: 'Level 7', subtext: 'id 970', type: 'Level 7' },\n  { id: '971', parentId: '966', name: 'Level 6', subtext: 'id 971', type: 'Level 6' },\n  { id: '972', parentId: '971', name: 'Level 7', subtext: 'id 972', type: 'Level 7' },\n  { id: '973', parentId: '971', name: 'Level 7', subtext: 'id 973', type: 'Level 7' },\n  { id: '974', parentId: '878', name: 'Level 4', subtext: 'id 974', type: 'Level 4' },\n  { id: '975', parentId: '974', name: 'Level 5', subtext: 'id 975', type: 'Level 5' },\n  { id: '976', parentId: '975', name: 'Level 6', subtext: 'id 976', type: 'Level 6' },\n  { id: '977', parentId: '976', name: 'Level 7', subtext: 'id 977', type: 'Level 7' },\n  { id: '978', parentId: '976', name: 'Level 7', subtext: 'id 978', type: 'Level 7' },\n  { id: '979', parentId: '976', name: 'Level 7', subtext: 'id 979', type: 'Level 7' },\n  { id: '980', parentId: '975', name: 'Level 6', subtext: 'id 980', type: 'Level 6' },\n  { id: '981', parentId: '980', name: 'Level 7', subtext: 'id 981', type: 'Level 7' },\n  { id: '982', parentId: '980', name: 'Level 7', subtext: 'id 982', type: 'Level 7' },\n  { id: '983', parentId: '975', name: 'Level 6', subtext: 'id 983', type: 'Level 6' },\n  { id: '984', parentId: '983', name: 'Level 7', subtext: 'id 984', type: 'Level 7' },\n  { id: '985', parentId: '983', name: 'Level 7', subtext: 'id 985', type: 'Level 7' },\n  { id: '986', parentId: '983', name: 'Level 7', subtext: 'id 986', type: 'Level 7' },\n  { id: '987', parentId: '974', name: 'Level 5', subtext: 'id 987', type: 'Level 5' },\n  { id: '988', parentId: '987', name: 'Level 6', subtext: 'id 988', type: 'Level 6' },\n  { id: '989', parentId: '988', name: 'Level 7', subtext: 'id 989', type: 'Level 7' },\n  { id: '990', parentId: '988', name: 'Level 7', subtext: 'id 990', type: 'Level 7' },\n  { id: '991', parentId: '987', name: 'Level 6', subtext: 'id 991', type: 'Level 6' },\n  { id: '992', parentId: '991', name: 'Level 7', subtext: 'id 992', type: 'Level 7' },\n  { id: '993', parentId: '991', name: 'Level 7', subtext: 'id 993', type: 'Level 7' },\n  { id: '994', parentId: '987', name: 'Level 6', subtext: 'id 994', type: 'Level 6' },\n  { id: '995', parentId: '994', name: 'Level 7', subtext: 'id 995', type: 'Level 7' },\n  { id: '996', parentId: '994', name: 'Level 7', subtext: 'id 996', type: 'Level 7' },\n  { id: '997', parentId: '994', name: 'Level 7', subtext: 'id 997', type: 'Level 7' },\n  { id: '998', parentId: '994', name: 'Level 7', subtext: 'id 998', type: 'Level 7' },\n  { id: '999', parentId: '994', name: 'Level 7', subtext: 'id 999', type: 'Level 7' },\n  { id: '1000', parentId: '670', name: 'Level 3', subtext: 'id 1000', type: 'Level 3' },\n  { id: '1001', parentId: '1000', name: 'Level 4', subtext: 'id 1001', type: 'Level 4' },\n  { id: '1002', parentId: '1001', name: 'Level 5', subtext: 'id 1002', type: 'Level 5' },\n  { id: '1003', parentId: '1002', name: 'Level 6', subtext: 'id 1003', type: 'Level 6' },\n  { id: '1004', parentId: '1003', name: 'Level 7', subtext: 'id 1004', type: 'Level 7' },\n  { id: '1005', parentId: '1003', name: 'Level 7', subtext: 'id 1005', type: 'Level 7' },\n  { id: '1006', parentId: '1003', name: 'Level 7', subtext: 'id 1006', type: 'Level 7' },\n  { id: '1007', parentId: '1003', name: 'Level 7', subtext: 'id 1007', type: 'Level 7' },\n  { id: '1008', parentId: '1003', name: 'Level 7', subtext: 'id 1008', type: 'Level 7' },\n  { id: '1009', parentId: '1001', name: 'Level 5', subtext: 'id 1009', type: 'Level 5' },\n  { id: '1010', parentId: '1009', name: 'Level 6', subtext: 'id 1010', type: 'Level 6' },\n  { id: '1011', parentId: '1010', name: 'Level 7', subtext: 'id 1011', type: 'Level 7' },\n  { id: '1012', parentId: '1010', name: 'Level 7', subtext: 'id 1012', type: 'Level 7' },\n  { id: '1013', parentId: '1009', name: 'Level 6', subtext: 'id 1013', type: 'Level 6' },\n  { id: '1014', parentId: '1013', name: 'Level 7', subtext: 'id 1014', type: 'Level 7' },\n  { id: '1015', parentId: '1013', name: 'Level 7', subtext: 'id 1015', type: 'Level 7' },\n  { id: '1016', parentId: '1013', name: 'Level 7', subtext: 'id 1016', type: 'Level 7' },\n  { id: '1017', parentId: '1013', name: 'Level 7', subtext: 'id 1017', type: 'Level 7' },\n  { id: '1018', parentId: '1013', name: 'Level 7', subtext: 'id 1018', type: 'Level 7' },\n  { id: '1019', parentId: '1009', name: 'Level 6', subtext: 'id 1019', type: 'Level 6' },\n  { id: '1020', parentId: '1019', name: 'Level 7', subtext: 'id 1020', type: 'Level 7' },\n  { id: '1021', parentId: '1019', name: 'Level 7', subtext: 'id 1021', type: 'Level 7' },\n  { id: '1022', parentId: '1009', name: 'Level 6', subtext: 'id 1022', type: 'Level 6' },\n  { id: '1023', parentId: '1022', name: 'Level 7', subtext: 'id 1023', type: 'Level 7' },\n  { id: '1024', parentId: '1022', name: 'Level 7', subtext: 'id 1024', type: 'Level 7' },\n  { id: '1025', parentId: '1022', name: 'Level 7', subtext: 'id 1025', type: 'Level 7' },\n  { id: '1026', parentId: '1022', name: 'Level 7', subtext: 'id 1026', type: 'Level 7' },\n  { id: '1027', parentId: '1009', name: 'Level 6', subtext: 'id 1027', type: 'Level 6' },\n  { id: '1028', parentId: '1027', name: 'Level 7', subtext: 'id 1028', type: 'Level 7' },\n  { id: '1029', parentId: '1027', name: 'Level 7', subtext: 'id 1029', type: 'Level 7' },\n  { id: '1030', parentId: '1001', name: 'Level 5', subtext: 'id 1030', type: 'Level 5' },\n  { id: '1031', parentId: '1030', name: 'Level 6', subtext: 'id 1031', type: 'Level 6' },\n  { id: '1032', parentId: '1031', name: 'Level 7', subtext: 'id 1032', type: 'Level 7' },\n  { id: '1033', parentId: '1031', name: 'Level 7', subtext: 'id 1033', type: 'Level 7' },\n  { id: '1034', parentId: '1031', name: 'Level 7', subtext: 'id 1034', type: 'Level 7' },\n  { id: '1035', parentId: '1030', name: 'Level 6', subtext: 'id 1035', type: 'Level 6' },\n  { id: '1036', parentId: '1035', name: 'Level 7', subtext: 'id 1036', type: 'Level 7' },\n  { id: '1037', parentId: '1035', name: 'Level 7', subtext: 'id 1037', type: 'Level 7' },\n  { id: '1038', parentId: '1035', name: 'Level 7', subtext: 'id 1038', type: 'Level 7' },\n  { id: '1039', parentId: '1030', name: 'Level 6', subtext: 'id 1039', type: 'Level 6' },\n  { id: '1040', parentId: '1039', name: 'Level 7', subtext: 'id 1040', type: 'Level 7' },\n  { id: '1041', parentId: '1039', name: 'Level 7', subtext: 'id 1041', type: 'Level 7' },\n  { id: '1042', parentId: '1039', name: 'Level 7', subtext: 'id 1042', type: 'Level 7' },\n  { id: '1043', parentId: '1030', name: 'Level 6', subtext: 'id 1043', type: 'Level 6' },\n  { id: '1044', parentId: '1043', name: 'Level 7', subtext: 'id 1044', type: 'Level 7' },\n  { id: '1045', parentId: '1043', name: 'Level 7', subtext: 'id 1045', type: 'Level 7' },\n  { id: '1046', parentId: '1043', name: 'Level 7', subtext: 'id 1046', type: 'Level 7' },\n  { id: '1047', parentId: '1043', name: 'Level 7', subtext: 'id 1047', type: 'Level 7' },\n  { id: '1048', parentId: '1001', name: 'Level 5', subtext: 'id 1048', type: 'Level 5' },\n  { id: '1049', parentId: '1048', name: 'Level 6', subtext: 'id 1049', type: 'Level 6' },\n  { id: '1050', parentId: '1049', name: 'Level 7', subtext: 'id 1050', type: 'Level 7' },\n  { id: '1051', parentId: '1049', name: 'Level 7', subtext: 'id 1051', type: 'Level 7' },\n  { id: '1052', parentId: '1049', name: 'Level 7', subtext: 'id 1052', type: 'Level 7' },\n  { id: '1053', parentId: '1048', name: 'Level 6', subtext: 'id 1053', type: 'Level 6' },\n  { id: '1054', parentId: '1053', name: 'Level 7', subtext: 'id 1054', type: 'Level 7' },\n  { id: '1055', parentId: '1053', name: 'Level 7', subtext: 'id 1055', type: 'Level 7' },\n  { id: '1056', parentId: '1053', name: 'Level 7', subtext: 'id 1056', type: 'Level 7' },\n  { id: '1057', parentId: '1053', name: 'Level 7', subtext: 'id 1057', type: 'Level 7' },\n  { id: '1058', parentId: '1053', name: 'Level 7', subtext: 'id 1058', type: 'Level 7' },\n  { id: '1059', parentId: '1000', name: 'Level 4', subtext: 'id 1059', type: 'Level 4' },\n  { id: '1060', parentId: '1059', name: 'Level 5', subtext: 'id 1060', type: 'Level 5' },\n  { id: '1061', parentId: '1060', name: 'Level 6', subtext: 'id 1061', type: 'Level 6' },\n  { id: '1062', parentId: '1061', name: 'Level 7', subtext: 'id 1062', type: 'Level 7' },\n  { id: '1063', parentId: '1060', name: 'Level 6', subtext: 'id 1063', type: 'Level 6' },\n  { id: '1064', parentId: '1063', name: 'Level 7', subtext: 'id 1064', type: 'Level 7' },\n  { id: '1065', parentId: '1063', name: 'Level 7', subtext: 'id 1065', type: 'Level 7' },\n  { id: '1066', parentId: '1063', name: 'Level 7', subtext: 'id 1066', type: 'Level 7' },\n  { id: '1067', parentId: '1063', name: 'Level 7', subtext: 'id 1067', type: 'Level 7' },\n  { id: '1068', parentId: '1060', name: 'Level 6', subtext: 'id 1068', type: 'Level 6' },\n  { id: '1069', parentId: '1068', name: 'Level 7', subtext: 'id 1069', type: 'Level 7' },\n  { id: '1070', parentId: '1060', name: 'Level 6', subtext: 'id 1070', type: 'Level 6' },\n  { id: '1071', parentId: '1070', name: 'Level 7', subtext: 'id 1071', type: 'Level 7' },\n  { id: '1072', parentId: '1060', name: 'Level 6', subtext: 'id 1072', type: 'Level 6' },\n  { id: '1073', parentId: '1072', name: 'Level 7', subtext: 'id 1073', type: 'Level 7' },\n  { id: '1074', parentId: '1072', name: 'Level 7', subtext: 'id 1074', type: 'Level 7' },\n  { id: '1075', parentId: '1072', name: 'Level 7', subtext: 'id 1075', type: 'Level 7' },\n  { id: '1076', parentId: '1059', name: 'Level 5', subtext: 'id 1076', type: 'Level 5' },\n  { id: '1077', parentId: '1076', name: 'Level 6', subtext: 'id 1077', type: 'Level 6' },\n  { id: '1078', parentId: '1077', name: 'Level 7', subtext: 'id 1078', type: 'Level 7' },\n  { id: '1079', parentId: '1077', name: 'Level 7', subtext: 'id 1079', type: 'Level 7' },\n  { id: '1080', parentId: '1077', name: 'Level 7', subtext: 'id 1080', type: 'Level 7' },\n  { id: '1081', parentId: '1077', name: 'Level 7', subtext: 'id 1081', type: 'Level 7' },\n  { id: '1082', parentId: '1077', name: 'Level 7', subtext: 'id 1082', type: 'Level 7' },\n  { id: '1083', parentId: '1076', name: 'Level 6', subtext: 'id 1083', type: 'Level 6' },\n  { id: '1084', parentId: '1083', name: 'Level 7', subtext: 'id 1084', type: 'Level 7' },\n  { id: '1085', parentId: '1083', name: 'Level 7', subtext: 'id 1085', type: 'Level 7' },\n  { id: '1086', parentId: '1083', name: 'Level 7', subtext: 'id 1086', type: 'Level 7' },\n  { id: '1087', parentId: '1083', name: 'Level 7', subtext: 'id 1087', type: 'Level 7' },\n  { id: '1088', parentId: '1076', name: 'Level 6', subtext: 'id 1088', type: 'Level 6' },\n  { id: '1089', parentId: '1088', name: 'Level 7', subtext: 'id 1089', type: 'Level 7' },\n  { id: '1090', parentId: '1088', name: 'Level 7', subtext: 'id 1090', type: 'Level 7' },\n  { id: '1091', parentId: '1088', name: 'Level 7', subtext: 'id 1091', type: 'Level 7' },\n  { id: '1092', parentId: '1088', name: 'Level 7', subtext: 'id 1092', type: 'Level 7' },\n  { id: '1093', parentId: '1059', name: 'Level 5', subtext: 'id 1093', type: 'Level 5' },\n  { id: '1094', parentId: '1093', name: 'Level 6', subtext: 'id 1094', type: 'Level 6' },\n  { id: '1095', parentId: '1094', name: 'Level 7', subtext: 'id 1095', type: 'Level 7' },\n  { id: '1096', parentId: '1094', name: 'Level 7', subtext: 'id 1096', type: 'Level 7' },\n  { id: '1097', parentId: '1094', name: 'Level 7', subtext: 'id 1097', type: 'Level 7' },\n  { id: '1098', parentId: '1094', name: 'Level 7', subtext: 'id 1098', type: 'Level 7' },\n  { id: '1099', parentId: '1094', name: 'Level 7', subtext: 'id 1099', type: 'Level 7' },\n  { id: '1100', parentId: '1059', name: 'Level 5', subtext: 'id 1100', type: 'Level 5' },\n  { id: '1101', parentId: '1100', name: 'Level 6', subtext: 'id 1101', type: 'Level 6' },\n  { id: '1102', parentId: '1101', name: 'Level 7', subtext: 'id 1102', type: 'Level 7' },\n  { id: '1103', parentId: '1101', name: 'Level 7', subtext: 'id 1103', type: 'Level 7' },\n  { id: '1104', parentId: '1100', name: 'Level 6', subtext: 'id 1104', type: 'Level 6' },\n  { id: '1105', parentId: '1104', name: 'Level 7', subtext: 'id 1105', type: 'Level 7' },\n  { id: '1106', parentId: '1100', name: 'Level 6', subtext: 'id 1106', type: 'Level 6' },\n  { id: '1107', parentId: '1106', name: 'Level 7', subtext: 'id 1107', type: 'Level 7' },\n  { id: '1108', parentId: '1106', name: 'Level 7', subtext: 'id 1108', type: 'Level 7' },\n  { id: '1109', parentId: '1106', name: 'Level 7', subtext: 'id 1109', type: 'Level 7' },\n  { id: '1110', parentId: '1106', name: 'Level 7', subtext: 'id 1110', type: 'Level 7' },\n  { id: '1111', parentId: '1106', name: 'Level 7', subtext: 'id 1111', type: 'Level 7' },\n  { id: '1112', parentId: '1100', name: 'Level 6', subtext: 'id 1112', type: 'Level 6' },\n  { id: '1113', parentId: '1112', name: 'Level 7', subtext: 'id 1113', type: 'Level 7' },\n  { id: '1114', parentId: '1112', name: 'Level 7', subtext: 'id 1114', type: 'Level 7' },\n  { id: '1115', parentId: '1112', name: 'Level 7', subtext: 'id 1115', type: 'Level 7' },\n  { id: '1116', parentId: '1059', name: 'Level 5', subtext: 'id 1116', type: 'Level 5' },\n  { id: '1117', parentId: '1116', name: 'Level 6', subtext: 'id 1117', type: 'Level 6' },\n  { id: '1118', parentId: '1117', name: 'Level 7', subtext: 'id 1118', type: 'Level 7' },\n  { id: '1119', parentId: '1117', name: 'Level 7', subtext: 'id 1119', type: 'Level 7' },\n  { id: '1120', parentId: '1117', name: 'Level 7', subtext: 'id 1120', type: 'Level 7' },\n  { id: '1121', parentId: '1117', name: 'Level 7', subtext: 'id 1121', type: 'Level 7' },\n  { id: '1122', parentId: '1117', name: 'Level 7', subtext: 'id 1122', type: 'Level 7' },\n  { id: '1123', parentId: '1116', name: 'Level 6', subtext: 'id 1123', type: 'Level 6' },\n  { id: '1124', parentId: '1123', name: 'Level 7', subtext: 'id 1124', type: 'Level 7' },\n  { id: '1125', parentId: '1123', name: 'Level 7', subtext: 'id 1125', type: 'Level 7' },\n  { id: '1126', parentId: '1123', name: 'Level 7', subtext: 'id 1126', type: 'Level 7' },\n  { id: '1127', parentId: '1116', name: 'Level 6', subtext: 'id 1127', type: 'Level 6' },\n  { id: '1128', parentId: '1127', name: 'Level 7', subtext: 'id 1128', type: 'Level 7' },\n  { id: '1129', parentId: '1127', name: 'Level 7', subtext: 'id 1129', type: 'Level 7' },\n  { id: '1130', parentId: '1127', name: 'Level 7', subtext: 'id 1130', type: 'Level 7' },\n  { id: '1131', parentId: '1116', name: 'Level 6', subtext: 'id 1131', type: 'Level 6' },\n  { id: '1132', parentId: '1131', name: 'Level 7', subtext: 'id 1132', type: 'Level 7' },\n  { id: '1133', parentId: '1131', name: 'Level 7', subtext: 'id 1133', type: 'Level 7' },\n  { id: '1134', parentId: '1131', name: 'Level 7', subtext: 'id 1134', type: 'Level 7' },\n  { id: '1135', parentId: '1116', name: 'Level 6', subtext: 'id 1135', type: 'Level 6' },\n  { id: '1136', parentId: '1135', name: 'Level 7', subtext: 'id 1136', type: 'Level 7' },\n  { id: '1137', parentId: '1135', name: 'Level 7', subtext: 'id 1137', type: 'Level 7' },\n  { id: '1138', parentId: null, name: 'Level 1', subtext: 'id 1138', type: 'Level 1' },\n  { id: '1139', parentId: '1138', name: 'Level 2', subtext: 'id 1139', type: 'Level 2' },\n  { id: '1140', parentId: '1139', name: 'Level 3', subtext: 'id 1140', type: 'Level 3' },\n  { id: '1141', parentId: '1140', name: 'Level 4', subtext: 'id 1141', type: 'Level 4' },\n  { id: '1142', parentId: '1141', name: 'Level 5', subtext: 'id 1142', type: 'Level 5' },\n  { id: '1143', parentId: '1142', name: 'Level 6', subtext: 'id 1143', type: 'Level 6' },\n  { id: '1144', parentId: '1143', name: 'Level 7', subtext: 'id 1144', type: 'Level 7' },\n  { id: '1145', parentId: '1143', name: 'Level 7', subtext: 'id 1145', type: 'Level 7' },\n  { id: '1146', parentId: '1143', name: 'Level 7', subtext: 'id 1146', type: 'Level 7' },\n  { id: '1147', parentId: '1143', name: 'Level 7', subtext: 'id 1147', type: 'Level 7' },\n  { id: '1148', parentId: '1142', name: 'Level 6', subtext: 'id 1148', type: 'Level 6' },\n  { id: '1149', parentId: '1148', name: 'Level 7', subtext: 'id 1149', type: 'Level 7' },\n  { id: '1150', parentId: '1148', name: 'Level 7', subtext: 'id 1150', type: 'Level 7' },\n  { id: '1151', parentId: '1148', name: 'Level 7', subtext: 'id 1151', type: 'Level 7' },\n  { id: '1152', parentId: '1142', name: 'Level 6', subtext: 'id 1152', type: 'Level 6' },\n  { id: '1153', parentId: '1152', name: 'Level 7', subtext: 'id 1153', type: 'Level 7' },\n  { id: '1154', parentId: '1152', name: 'Level 7', subtext: 'id 1154', type: 'Level 7' },\n  { id: '1155', parentId: '1152', name: 'Level 7', subtext: 'id 1155', type: 'Level 7' },\n  { id: '1156', parentId: '1142', name: 'Level 6', subtext: 'id 1156', type: 'Level 6' },\n  { id: '1157', parentId: '1156', name: 'Level 7', subtext: 'id 1157', type: 'Level 7' },\n  { id: '1158', parentId: '1141', name: 'Level 5', subtext: 'id 1158', type: 'Level 5' },\n  { id: '1159', parentId: '1158', name: 'Level 6', subtext: 'id 1159', type: 'Level 6' },\n  { id: '1160', parentId: '1159', name: 'Level 7', subtext: 'id 1160', type: 'Level 7' },\n  { id: '1161', parentId: '1158', name: 'Level 6', subtext: 'id 1161', type: 'Level 6' },\n  { id: '1162', parentId: '1161', name: 'Level 7', subtext: 'id 1162', type: 'Level 7' },\n  { id: '1163', parentId: '1161', name: 'Level 7', subtext: 'id 1163', type: 'Level 7' },\n  { id: '1164', parentId: '1161', name: 'Level 7', subtext: 'id 1164', type: 'Level 7' },\n  { id: '1165', parentId: '1161', name: 'Level 7', subtext: 'id 1165', type: 'Level 7' },\n  { id: '1166', parentId: '1140', name: 'Level 4', subtext: 'id 1166', type: 'Level 4' },\n  { id: '1167', parentId: '1166', name: 'Level 5', subtext: 'id 1167', type: 'Level 5' },\n  { id: '1168', parentId: '1167', name: 'Level 6', subtext: 'id 1168', type: 'Level 6' },\n  { id: '1169', parentId: '1168', name: 'Level 7', subtext: 'id 1169', type: 'Level 7' },\n  { id: '1170', parentId: '1167', name: 'Level 6', subtext: 'id 1170', type: 'Level 6' },\n  { id: '1171', parentId: '1170', name: 'Level 7', subtext: 'id 1171', type: 'Level 7' },\n  { id: '1172', parentId: '1170', name: 'Level 7', subtext: 'id 1172', type: 'Level 7' },\n  { id: '1173', parentId: '1170', name: 'Level 7', subtext: 'id 1173', type: 'Level 7' },\n  { id: '1174', parentId: '1167', name: 'Level 6', subtext: 'id 1174', type: 'Level 6' },\n  { id: '1175', parentId: '1174', name: 'Level 7', subtext: 'id 1175', type: 'Level 7' },\n  { id: '1176', parentId: '1166', name: 'Level 5', subtext: 'id 1176', type: 'Level 5' },\n  { id: '1177', parentId: '1176', name: 'Level 6', subtext: 'id 1177', type: 'Level 6' },\n  { id: '1178', parentId: '1177', name: 'Level 7', subtext: 'id 1178', type: 'Level 7' },\n  { id: '1179', parentId: '1177', name: 'Level 7', subtext: 'id 1179', type: 'Level 7' },\n  { id: '1180', parentId: '1177', name: 'Level 7', subtext: 'id 1180', type: 'Level 7' },\n  { id: '1181', parentId: '1176', name: 'Level 6', subtext: 'id 1181', type: 'Level 6' },\n  { id: '1182', parentId: '1181', name: 'Level 7', subtext: 'id 1182', type: 'Level 7' },\n  { id: '1183', parentId: '1181', name: 'Level 7', subtext: 'id 1183', type: 'Level 7' },\n  { id: '1184', parentId: '1181', name: 'Level 7', subtext: 'id 1184', type: 'Level 7' },\n  { id: '1185', parentId: '1181', name: 'Level 7', subtext: 'id 1185', type: 'Level 7' },\n  { id: '1186', parentId: '1181', name: 'Level 7', subtext: 'id 1186', type: 'Level 7' },\n  { id: '1187', parentId: '1166', name: 'Level 5', subtext: 'id 1187', type: 'Level 5' },\n  { id: '1188', parentId: '1187', name: 'Level 6', subtext: 'id 1188', type: 'Level 6' },\n  { id: '1189', parentId: '1188', name: 'Level 7', subtext: 'id 1189', type: 'Level 7' },\n  { id: '1190', parentId: '1188', name: 'Level 7', subtext: 'id 1190', type: 'Level 7' },\n  { id: '1191', parentId: '1188', name: 'Level 7', subtext: 'id 1191', type: 'Level 7' },\n  { id: '1192', parentId: '1188', name: 'Level 7', subtext: 'id 1192', type: 'Level 7' },\n  { id: '1193', parentId: '1188', name: 'Level 7', subtext: 'id 1193', type: 'Level 7' },\n  { id: '1194', parentId: '1140', name: 'Level 4', subtext: 'id 1194', type: 'Level 4' },\n  { id: '1195', parentId: '1194', name: 'Level 5', subtext: 'id 1195', type: 'Level 5' },\n  { id: '1196', parentId: '1195', name: 'Level 6', subtext: 'id 1196', type: 'Level 6' },\n  { id: '1197', parentId: '1196', name: 'Level 7', subtext: 'id 1197', type: 'Level 7' },\n  { id: '1198', parentId: '1195', name: 'Level 6', subtext: 'id 1198', type: 'Level 6' },\n  { id: '1199', parentId: '1198', name: 'Level 7', subtext: 'id 1199', type: 'Level 7' },\n  { id: '1200', parentId: '1198', name: 'Level 7', subtext: 'id 1200', type: 'Level 7' },\n  { id: '1201', parentId: '1195', name: 'Level 6', subtext: 'id 1201', type: 'Level 6' },\n  { id: '1202', parentId: '1201', name: 'Level 7', subtext: 'id 1202', type: 'Level 7' },\n  { id: '1203', parentId: '1201', name: 'Level 7', subtext: 'id 1203', type: 'Level 7' },\n  { id: '1204', parentId: '1201', name: 'Level 7', subtext: 'id 1204', type: 'Level 7' },\n  { id: '1205', parentId: '1201', name: 'Level 7', subtext: 'id 1205', type: 'Level 7' },\n  { id: '1206', parentId: '1201', name: 'Level 7', subtext: 'id 1206', type: 'Level 7' },\n  { id: '1207', parentId: '1194', name: 'Level 5', subtext: 'id 1207', type: 'Level 5' },\n  { id: '1208', parentId: '1207', name: 'Level 6', subtext: 'id 1208', type: 'Level 6' },\n  { id: '1209', parentId: '1208', name: 'Level 7', subtext: 'id 1209', type: 'Level 7' },\n  { id: '1210', parentId: '1208', name: 'Level 7', subtext: 'id 1210', type: 'Level 7' },\n  { id: '1211', parentId: '1207', name: 'Level 6', subtext: 'id 1211', type: 'Level 6' },\n  { id: '1212', parentId: '1211', name: 'Level 7', subtext: 'id 1212', type: 'Level 7' },\n  { id: '1213', parentId: '1211', name: 'Level 7', subtext: 'id 1213', type: 'Level 7' },\n  { id: '1214', parentId: '1211', name: 'Level 7', subtext: 'id 1214', type: 'Level 7' },\n  { id: '1215', parentId: '1207', name: 'Level 6', subtext: 'id 1215', type: 'Level 6' },\n  { id: '1216', parentId: '1215', name: 'Level 7', subtext: 'id 1216', type: 'Level 7' },\n  { id: '1217', parentId: '1215', name: 'Level 7', subtext: 'id 1217', type: 'Level 7' },\n  { id: '1218', parentId: '1215', name: 'Level 7', subtext: 'id 1218', type: 'Level 7' },\n  { id: '1219', parentId: '1215', name: 'Level 7', subtext: 'id 1219', type: 'Level 7' },\n  { id: '1220', parentId: '1215', name: 'Level 7', subtext: 'id 1220', type: 'Level 7' },\n  { id: '1221', parentId: '1194', name: 'Level 5', subtext: 'id 1221', type: 'Level 5' },\n  { id: '1222', parentId: '1221', name: 'Level 6', subtext: 'id 1222', type: 'Level 6' },\n  { id: '1223', parentId: '1222', name: 'Level 7', subtext: 'id 1223', type: 'Level 7' },\n  { id: '1224', parentId: '1222', name: 'Level 7', subtext: 'id 1224', type: 'Level 7' },\n  { id: '1225', parentId: '1222', name: 'Level 7', subtext: 'id 1225', type: 'Level 7' },\n  { id: '1226', parentId: '1222', name: 'Level 7', subtext: 'id 1226', type: 'Level 7' },\n  { id: '1227', parentId: '1222', name: 'Level 7', subtext: 'id 1227', type: 'Level 7' },\n  { id: '1228', parentId: '1221', name: 'Level 6', subtext: 'id 1228', type: 'Level 6' },\n  { id: '1229', parentId: '1228', name: 'Level 7', subtext: 'id 1229', type: 'Level 7' },\n  { id: '1230', parentId: '1228', name: 'Level 7', subtext: 'id 1230', type: 'Level 7' },\n  { id: '1231', parentId: '1228', name: 'Level 7', subtext: 'id 1231', type: 'Level 7' },\n  { id: '1232', parentId: '1228', name: 'Level 7', subtext: 'id 1232', type: 'Level 7' },\n  { id: '1233', parentId: '1228', name: 'Level 7', subtext: 'id 1233', type: 'Level 7' },\n  { id: '1234', parentId: '1221', name: 'Level 6', subtext: 'id 1234', type: 'Level 6' },\n  { id: '1235', parentId: '1234', name: 'Level 7', subtext: 'id 1235', type: 'Level 7' },\n  { id: '1236', parentId: '1234', name: 'Level 7', subtext: 'id 1236', type: 'Level 7' },\n  { id: '1237', parentId: '1221', name: 'Level 6', subtext: 'id 1237', type: 'Level 6' },\n  { id: '1238', parentId: '1237', name: 'Level 7', subtext: 'id 1238', type: 'Level 7' },\n  { id: '1239', parentId: '1237', name: 'Level 7', subtext: 'id 1239', type: 'Level 7' },\n  { id: '1240', parentId: '1237', name: 'Level 7', subtext: 'id 1240', type: 'Level 7' },\n  { id: '1241', parentId: '1221', name: 'Level 6', subtext: 'id 1241', type: 'Level 6' },\n  { id: '1242', parentId: '1241', name: 'Level 7', subtext: 'id 1242', type: 'Level 7' },\n  { id: '1243', parentId: '1140', name: 'Level 4', subtext: 'id 1243', type: 'Level 4' },\n  { id: '1244', parentId: '1243', name: 'Level 5', subtext: 'id 1244', type: 'Level 5' },\n  { id: '1245', parentId: '1244', name: 'Level 6', subtext: 'id 1245', type: 'Level 6' },\n  { id: '1246', parentId: '1245', name: 'Level 7', subtext: 'id 1246', type: 'Level 7' },\n  { id: '1247', parentId: '1245', name: 'Level 7', subtext: 'id 1247', type: 'Level 7' },\n  { id: '1248', parentId: '1245', name: 'Level 7', subtext: 'id 1248', type: 'Level 7' },\n  { id: '1249', parentId: '1245', name: 'Level 7', subtext: 'id 1249', type: 'Level 7' },\n  { id: '1250', parentId: '1244', name: 'Level 6', subtext: 'id 1250', type: 'Level 6' },\n  { id: '1251', parentId: '1250', name: 'Level 7', subtext: 'id 1251', type: 'Level 7' },\n  { id: '1252', parentId: '1250', name: 'Level 7', subtext: 'id 1252', type: 'Level 7' },\n  { id: '1253', parentId: '1250', name: 'Level 7', subtext: 'id 1253', type: 'Level 7' },\n  { id: '1254', parentId: '1250', name: 'Level 7', subtext: 'id 1254', type: 'Level 7' },\n  { id: '1255', parentId: '1250', name: 'Level 7', subtext: 'id 1255', type: 'Level 7' },\n  { id: '1256', parentId: '1244', name: 'Level 6', subtext: 'id 1256', type: 'Level 6' },\n  { id: '1257', parentId: '1256', name: 'Level 7', subtext: 'id 1257', type: 'Level 7' },\n  { id: '1258', parentId: '1244', name: 'Level 6', subtext: 'id 1258', type: 'Level 6' },\n  { id: '1259', parentId: '1258', name: 'Level 7', subtext: 'id 1259', type: 'Level 7' },\n  { id: '1260', parentId: '1244', name: 'Level 6', subtext: 'id 1260', type: 'Level 6' },\n  { id: '1261', parentId: '1260', name: 'Level 7', subtext: 'id 1261', type: 'Level 7' },\n  { id: '1262', parentId: '1243', name: 'Level 5', subtext: 'id 1262', type: 'Level 5' },\n  { id: '1263', parentId: '1262', name: 'Level 6', subtext: 'id 1263', type: 'Level 6' },\n  { id: '1264', parentId: '1263', name: 'Level 7', subtext: 'id 1264', type: 'Level 7' },\n  { id: '1265', parentId: '1263', name: 'Level 7', subtext: 'id 1265', type: 'Level 7' },\n  { id: '1266', parentId: '1263', name: 'Level 7', subtext: 'id 1266', type: 'Level 7' },\n  { id: '1267', parentId: '1263', name: 'Level 7', subtext: 'id 1267', type: 'Level 7' },\n  { id: '1268', parentId: '1243', name: 'Level 5', subtext: 'id 1268', type: 'Level 5' },\n  { id: '1269', parentId: '1268', name: 'Level 6', subtext: 'id 1269', type: 'Level 6' },\n  { id: '1270', parentId: '1269', name: 'Level 7', subtext: 'id 1270', type: 'Level 7' },\n  { id: '1271', parentId: '1269', name: 'Level 7', subtext: 'id 1271', type: 'Level 7' },\n  { id: '1272', parentId: '1269', name: 'Level 7', subtext: 'id 1272', type: 'Level 7' },\n  { id: '1273', parentId: '1269', name: 'Level 7', subtext: 'id 1273', type: 'Level 7' },\n  { id: '1274', parentId: '1269', name: 'Level 7', subtext: 'id 1274', type: 'Level 7' },\n  { id: '1275', parentId: '1243', name: 'Level 5', subtext: 'id 1275', type: 'Level 5' },\n  { id: '1276', parentId: '1275', name: 'Level 6', subtext: 'id 1276', type: 'Level 6' },\n  { id: '1277', parentId: '1276', name: 'Level 7', subtext: 'id 1277', type: 'Level 7' },\n  { id: '1278', parentId: '1276', name: 'Level 7', subtext: 'id 1278', type: 'Level 7' },\n  { id: '1279', parentId: '1276', name: 'Level 7', subtext: 'id 1279', type: 'Level 7' },\n  { id: '1280', parentId: '1276', name: 'Level 7', subtext: 'id 1280', type: 'Level 7' },\n  { id: '1281', parentId: '1275', name: 'Level 6', subtext: 'id 1281', type: 'Level 6' },\n  { id: '1282', parentId: '1281', name: 'Level 7', subtext: 'id 1282', type: 'Level 7' },\n  { id: '1283', parentId: '1281', name: 'Level 7', subtext: 'id 1283', type: 'Level 7' },\n  { id: '1284', parentId: '1281', name: 'Level 7', subtext: 'id 1284', type: 'Level 7' },\n  { id: '1285', parentId: '1281', name: 'Level 7', subtext: 'id 1285', type: 'Level 7' },\n  { id: '1286', parentId: '1275', name: 'Level 6', subtext: 'id 1286', type: 'Level 6' },\n  { id: '1287', parentId: '1286', name: 'Level 7', subtext: 'id 1287', type: 'Level 7' },\n  { id: '1288', parentId: '1243', name: 'Level 5', subtext: 'id 1288', type: 'Level 5' },\n  { id: '1289', parentId: '1288', name: 'Level 6', subtext: 'id 1289', type: 'Level 6' },\n  { id: '1290', parentId: '1289', name: 'Level 7', subtext: 'id 1290', type: 'Level 7' },\n  { id: '1291', parentId: '1288', name: 'Level 6', subtext: 'id 1291', type: 'Level 6' },\n  { id: '1292', parentId: '1291', name: 'Level 7', subtext: 'id 1292', type: 'Level 7' },\n  { id: '1293', parentId: '1291', name: 'Level 7', subtext: 'id 1293', type: 'Level 7' },\n  { id: '1294', parentId: '1291', name: 'Level 7', subtext: 'id 1294', type: 'Level 7' },\n  { id: '1295', parentId: '1291', name: 'Level 7', subtext: 'id 1295', type: 'Level 7' },\n  { id: '1296', parentId: '1291', name: 'Level 7', subtext: 'id 1296', type: 'Level 7' },\n  { id: '1297', parentId: '1139', name: 'Level 3', subtext: 'id 1297', type: 'Level 3' },\n  { id: '1298', parentId: '1297', name: 'Level 4', subtext: 'id 1298', type: 'Level 4' },\n  { id: '1299', parentId: '1298', name: 'Level 5', subtext: 'id 1299', type: 'Level 5' },\n  { id: '1300', parentId: '1299', name: 'Level 6', subtext: 'id 1300', type: 'Level 6' },\n  { id: '1301', parentId: '1300', name: 'Level 7', subtext: 'id 1301', type: 'Level 7' },\n  { id: '1302', parentId: '1300', name: 'Level 7', subtext: 'id 1302', type: 'Level 7' },\n  { id: '1303', parentId: '1299', name: 'Level 6', subtext: 'id 1303', type: 'Level 6' },\n  { id: '1304', parentId: '1303', name: 'Level 7', subtext: 'id 1304', type: 'Level 7' },\n  { id: '1305', parentId: '1303', name: 'Level 7', subtext: 'id 1305', type: 'Level 7' },\n  { id: '1306', parentId: '1303', name: 'Level 7', subtext: 'id 1306', type: 'Level 7' },\n  { id: '1307', parentId: '1303', name: 'Level 7', subtext: 'id 1307', type: 'Level 7' },\n  { id: '1308', parentId: '1303', name: 'Level 7', subtext: 'id 1308', type: 'Level 7' },\n  { id: '1309', parentId: '1299', name: 'Level 6', subtext: 'id 1309', type: 'Level 6' },\n  { id: '1310', parentId: '1309', name: 'Level 7', subtext: 'id 1310', type: 'Level 7' },\n  { id: '1311', parentId: '1299', name: 'Level 6', subtext: 'id 1311', type: 'Level 6' },\n  { id: '1312', parentId: '1311', name: 'Level 7', subtext: 'id 1312', type: 'Level 7' },\n  { id: '1313', parentId: '1311', name: 'Level 7', subtext: 'id 1313', type: 'Level 7' },\n  { id: '1314', parentId: '1311', name: 'Level 7', subtext: 'id 1314', type: 'Level 7' },\n  { id: '1315', parentId: '1299', name: 'Level 6', subtext: 'id 1315', type: 'Level 6' },\n  { id: '1316', parentId: '1315', name: 'Level 7', subtext: 'id 1316', type: 'Level 7' },\n  { id: '1317', parentId: '1315', name: 'Level 7', subtext: 'id 1317', type: 'Level 7' },\n  { id: '1318', parentId: '1315', name: 'Level 7', subtext: 'id 1318', type: 'Level 7' },\n  { id: '1319', parentId: '1315', name: 'Level 7', subtext: 'id 1319', type: 'Level 7' },\n  { id: '1320', parentId: '1315', name: 'Level 7', subtext: 'id 1320', type: 'Level 7' },\n  { id: '1321', parentId: '1298', name: 'Level 5', subtext: 'id 1321', type: 'Level 5' },\n  { id: '1322', parentId: '1321', name: 'Level 6', subtext: 'id 1322', type: 'Level 6' },\n  { id: '1323', parentId: '1322', name: 'Level 7', subtext: 'id 1323', type: 'Level 7' },\n  { id: '1324', parentId: '1322', name: 'Level 7', subtext: 'id 1324', type: 'Level 7' },\n  { id: '1325', parentId: '1322', name: 'Level 7', subtext: 'id 1325', type: 'Level 7' },\n  { id: '1326', parentId: '1321', name: 'Level 6', subtext: 'id 1326', type: 'Level 6' },\n  { id: '1327', parentId: '1326', name: 'Level 7', subtext: 'id 1327', type: 'Level 7' },\n  { id: '1328', parentId: '1326', name: 'Level 7', subtext: 'id 1328', type: 'Level 7' },\n  { id: '1329', parentId: '1326', name: 'Level 7', subtext: 'id 1329', type: 'Level 7' },\n  { id: '1330', parentId: '1298', name: 'Level 5', subtext: 'id 1330', type: 'Level 5' },\n  { id: '1331', parentId: '1330', name: 'Level 6', subtext: 'id 1331', type: 'Level 6' },\n  { id: '1332', parentId: '1331', name: 'Level 7', subtext: 'id 1332', type: 'Level 7' },\n  { id: '1333', parentId: '1331', name: 'Level 7', subtext: 'id 1333', type: 'Level 7' },\n  { id: '1334', parentId: '1331', name: 'Level 7', subtext: 'id 1334', type: 'Level 7' },\n  { id: '1335', parentId: '1331', name: 'Level 7', subtext: 'id 1335', type: 'Level 7' },\n  { id: '1336', parentId: '1330', name: 'Level 6', subtext: 'id 1336', type: 'Level 6' },\n  { id: '1337', parentId: '1336', name: 'Level 7', subtext: 'id 1337', type: 'Level 7' },\n  { id: '1338', parentId: '1336', name: 'Level 7', subtext: 'id 1338', type: 'Level 7' },\n  { id: '1339', parentId: '1336', name: 'Level 7', subtext: 'id 1339', type: 'Level 7' },\n  { id: '1340', parentId: '1330', name: 'Level 6', subtext: 'id 1340', type: 'Level 6' },\n  { id: '1341', parentId: '1340', name: 'Level 7', subtext: 'id 1341', type: 'Level 7' },\n  { id: '1342', parentId: '1340', name: 'Level 7', subtext: 'id 1342', type: 'Level 7' },\n  { id: '1343', parentId: '1330', name: 'Level 6', subtext: 'id 1343', type: 'Level 6' },\n  { id: '1344', parentId: '1343', name: 'Level 7', subtext: 'id 1344', type: 'Level 7' },\n  { id: '1345', parentId: '1343', name: 'Level 7', subtext: 'id 1345', type: 'Level 7' },\n  { id: '1346', parentId: '1343', name: 'Level 7', subtext: 'id 1346', type: 'Level 7' },\n  { id: '1347', parentId: '1330', name: 'Level 6', subtext: 'id 1347', type: 'Level 6' },\n  { id: '1348', parentId: '1347', name: 'Level 7', subtext: 'id 1348', type: 'Level 7' },\n  { id: '1349', parentId: '1347', name: 'Level 7', subtext: 'id 1349', type: 'Level 7' },\n  { id: '1350', parentId: '1347', name: 'Level 7', subtext: 'id 1350', type: 'Level 7' },\n  { id: '1351', parentId: '1347', name: 'Level 7', subtext: 'id 1351', type: 'Level 7' },\n  { id: '1352', parentId: '1298', name: 'Level 5', subtext: 'id 1352', type: 'Level 5' },\n  { id: '1353', parentId: '1352', name: 'Level 6', subtext: 'id 1353', type: 'Level 6' },\n  { id: '1354', parentId: '1353', name: 'Level 7', subtext: 'id 1354', type: 'Level 7' },\n  { id: '1355', parentId: '1298', name: 'Level 5', subtext: 'id 1355', type: 'Level 5' },\n  { id: '1356', parentId: '1355', name: 'Level 6', subtext: 'id 1356', type: 'Level 6' },\n  { id: '1357', parentId: '1356', name: 'Level 7', subtext: 'id 1357', type: 'Level 7' },\n  { id: '1358', parentId: '1356', name: 'Level 7', subtext: 'id 1358', type: 'Level 7' },\n  { id: '1359', parentId: '1356', name: 'Level 7', subtext: 'id 1359', type: 'Level 7' },\n  { id: '1360', parentId: '1356', name: 'Level 7', subtext: 'id 1360', type: 'Level 7' },\n  { id: '1361', parentId: '1356', name: 'Level 7', subtext: 'id 1361', type: 'Level 7' },\n  { id: '1362', parentId: '1297', name: 'Level 4', subtext: 'id 1362', type: 'Level 4' },\n  { id: '1363', parentId: '1362', name: 'Level 5', subtext: 'id 1363', type: 'Level 5' },\n  { id: '1364', parentId: '1363', name: 'Level 6', subtext: 'id 1364', type: 'Level 6' },\n  { id: '1365', parentId: '1364', name: 'Level 7', subtext: 'id 1365', type: 'Level 7' },\n  { id: '1366', parentId: '1364', name: 'Level 7', subtext: 'id 1366', type: 'Level 7' },\n  { id: '1367', parentId: '1364', name: 'Level 7', subtext: 'id 1367', type: 'Level 7' },\n  { id: '1368', parentId: '1364', name: 'Level 7', subtext: 'id 1368', type: 'Level 7' },\n  { id: '1369', parentId: '1363', name: 'Level 6', subtext: 'id 1369', type: 'Level 6' },\n  { id: '1370', parentId: '1369', name: 'Level 7', subtext: 'id 1370', type: 'Level 7' },\n  { id: '1371', parentId: '1369', name: 'Level 7', subtext: 'id 1371', type: 'Level 7' },\n  { id: '1372', parentId: '1369', name: 'Level 7', subtext: 'id 1372', type: 'Level 7' },\n  { id: '1373', parentId: '1369', name: 'Level 7', subtext: 'id 1373', type: 'Level 7' },\n  { id: '1374', parentId: '1369', name: 'Level 7', subtext: 'id 1374', type: 'Level 7' },\n  { id: '1375', parentId: '1362', name: 'Level 5', subtext: 'id 1375', type: 'Level 5' },\n  { id: '1376', parentId: '1375', name: 'Level 6', subtext: 'id 1376', type: 'Level 6' },\n  { id: '1377', parentId: '1376', name: 'Level 7', subtext: 'id 1377', type: 'Level 7' },\n  { id: '1378', parentId: '1297', name: 'Level 4', subtext: 'id 1378', type: 'Level 4' },\n  { id: '1379', parentId: '1378', name: 'Level 5', subtext: 'id 1379', type: 'Level 5' },\n  { id: '1380', parentId: '1379', name: 'Level 6', subtext: 'id 1380', type: 'Level 6' },\n  { id: '1381', parentId: '1380', name: 'Level 7', subtext: 'id 1381', type: 'Level 7' },\n  { id: '1382', parentId: '1380', name: 'Level 7', subtext: 'id 1382', type: 'Level 7' },\n  { id: '1383', parentId: '1380', name: 'Level 7', subtext: 'id 1383', type: 'Level 7' },\n  { id: '1384', parentId: '1380', name: 'Level 7', subtext: 'id 1384', type: 'Level 7' },\n  { id: '1385', parentId: '1380', name: 'Level 7', subtext: 'id 1385', type: 'Level 7' },\n  { id: '1386', parentId: '1379', name: 'Level 6', subtext: 'id 1386', type: 'Level 6' },\n  { id: '1387', parentId: '1386', name: 'Level 7', subtext: 'id 1387', type: 'Level 7' },\n  { id: '1388', parentId: '1386', name: 'Level 7', subtext: 'id 1388', type: 'Level 7' },\n  { id: '1389', parentId: '1386', name: 'Level 7', subtext: 'id 1389', type: 'Level 7' },\n  { id: '1390', parentId: '1386', name: 'Level 7', subtext: 'id 1390', type: 'Level 7' },\n  { id: '1391', parentId: '1386', name: 'Level 7', subtext: 'id 1391', type: 'Level 7' },\n  { id: '1392', parentId: '1379', name: 'Level 6', subtext: 'id 1392', type: 'Level 6' },\n  { id: '1393', parentId: '1392', name: 'Level 7', subtext: 'id 1393', type: 'Level 7' },\n  { id: '1394', parentId: '1392', name: 'Level 7', subtext: 'id 1394', type: 'Level 7' },\n  { id: '1395', parentId: '1392', name: 'Level 7', subtext: 'id 1395', type: 'Level 7' },\n  { id: '1396', parentId: '1392', name: 'Level 7', subtext: 'id 1396', type: 'Level 7' },\n  { id: '1397', parentId: '1392', name: 'Level 7', subtext: 'id 1397', type: 'Level 7' },\n  { id: '1398', parentId: '1379', name: 'Level 6', subtext: 'id 1398', type: 'Level 6' },\n  { id: '1399', parentId: '1398', name: 'Level 7', subtext: 'id 1399', type: 'Level 7' },\n  { id: '1400', parentId: '1398', name: 'Level 7', subtext: 'id 1400', type: 'Level 7' },\n  { id: '1401', parentId: '1378', name: 'Level 5', subtext: 'id 1401', type: 'Level 5' },\n  { id: '1402', parentId: '1401', name: 'Level 6', subtext: 'id 1402', type: 'Level 6' },\n  { id: '1403', parentId: '1402', name: 'Level 7', subtext: 'id 1403', type: 'Level 7' },\n  { id: '1404', parentId: '1402', name: 'Level 7', subtext: 'id 1404', type: 'Level 7' },\n  { id: '1405', parentId: '1401', name: 'Level 6', subtext: 'id 1405', type: 'Level 6' },\n  { id: '1406', parentId: '1405', name: 'Level 7', subtext: 'id 1406', type: 'Level 7' },\n  { id: '1407', parentId: '1405', name: 'Level 7', subtext: 'id 1407', type: 'Level 7' },\n  { id: '1408', parentId: '1401', name: 'Level 6', subtext: 'id 1408', type: 'Level 6' },\n  { id: '1409', parentId: '1408', name: 'Level 7', subtext: 'id 1409', type: 'Level 7' },\n  { id: '1410', parentId: '1408', name: 'Level 7', subtext: 'id 1410', type: 'Level 7' },\n  { id: '1411', parentId: '1408', name: 'Level 7', subtext: 'id 1411', type: 'Level 7' },\n  { id: '1412', parentId: '1401', name: 'Level 6', subtext: 'id 1412', type: 'Level 6' },\n  { id: '1413', parentId: '1412', name: 'Level 7', subtext: 'id 1413', type: 'Level 7' },\n  { id: '1414', parentId: '1378', name: 'Level 5', subtext: 'id 1414', type: 'Level 5' },\n  { id: '1415', parentId: '1414', name: 'Level 6', subtext: 'id 1415', type: 'Level 6' },\n  { id: '1416', parentId: '1415', name: 'Level 7', subtext: 'id 1416', type: 'Level 7' },\n  { id: '1417', parentId: '1415', name: 'Level 7', subtext: 'id 1417', type: 'Level 7' },\n  { id: '1418', parentId: '1414', name: 'Level 6', subtext: 'id 1418', type: 'Level 6' },\n  { id: '1419', parentId: '1418', name: 'Level 7', subtext: 'id 1419', type: 'Level 7' },\n  { id: '1420', parentId: '1414', name: 'Level 6', subtext: 'id 1420', type: 'Level 6' },\n  { id: '1421', parentId: '1420', name: 'Level 7', subtext: 'id 1421', type: 'Level 7' },\n  { id: '1422', parentId: '1420', name: 'Level 7', subtext: 'id 1422', type: 'Level 7' },\n  { id: '1423', parentId: '1420', name: 'Level 7', subtext: 'id 1423', type: 'Level 7' },\n  { id: '1424', parentId: '1297', name: 'Level 4', subtext: 'id 1424', type: 'Level 4' },\n  { id: '1425', parentId: '1424', name: 'Level 5', subtext: 'id 1425', type: 'Level 5' },\n  { id: '1426', parentId: '1425', name: 'Level 6', subtext: 'id 1426', type: 'Level 6' },\n  { id: '1427', parentId: '1426', name: 'Level 7', subtext: 'id 1427', type: 'Level 7' },\n  { id: '1428', parentId: '1426', name: 'Level 7', subtext: 'id 1428', type: 'Level 7' },\n  { id: '1429', parentId: '1426', name: 'Level 7', subtext: 'id 1429', type: 'Level 7' },\n  { id: '1430', parentId: '1426', name: 'Level 7', subtext: 'id 1430', type: 'Level 7' },\n  { id: '1431', parentId: '1426', name: 'Level 7', subtext: 'id 1431', type: 'Level 7' },\n  { id: '1432', parentId: '1424', name: 'Level 5', subtext: 'id 1432', type: 'Level 5' },\n  { id: '1433', parentId: '1432', name: 'Level 6', subtext: 'id 1433', type: 'Level 6' },\n  { id: '1434', parentId: '1433', name: 'Level 7', subtext: 'id 1434', type: 'Level 7' },\n  { id: '1435', parentId: '1433', name: 'Level 7', subtext: 'id 1435', type: 'Level 7' },\n  { id: '1436', parentId: '1433', name: 'Level 7', subtext: 'id 1436', type: 'Level 7' },\n  { id: '1437', parentId: '1433', name: 'Level 7', subtext: 'id 1437', type: 'Level 7' },\n  { id: '1438', parentId: '1424', name: 'Level 5', subtext: 'id 1438', type: 'Level 5' },\n  { id: '1439', parentId: '1438', name: 'Level 6', subtext: 'id 1439', type: 'Level 6' },\n  { id: '1440', parentId: '1439', name: 'Level 7', subtext: 'id 1440', type: 'Level 7' },\n  { id: '1441', parentId: '1439', name: 'Level 7', subtext: 'id 1441', type: 'Level 7' },\n  { id: '1442', parentId: '1439', name: 'Level 7', subtext: 'id 1442', type: 'Level 7' },\n  { id: '1443', parentId: '1438', name: 'Level 6', subtext: 'id 1443', type: 'Level 6' },\n  { id: '1444', parentId: '1443', name: 'Level 7', subtext: 'id 1444', type: 'Level 7' },\n  { id: '1445', parentId: '1443', name: 'Level 7', subtext: 'id 1445', type: 'Level 7' },\n  { id: '1446', parentId: '1443', name: 'Level 7', subtext: 'id 1446', type: 'Level 7' },\n  { id: '1447', parentId: '1443', name: 'Level 7', subtext: 'id 1447', type: 'Level 7' },\n  { id: '1448', parentId: '1443', name: 'Level 7', subtext: 'id 1448', type: 'Level 7' },\n  { id: '1449', parentId: '1139', name: 'Level 3', subtext: 'id 1449', type: 'Level 3' },\n  { id: '1450', parentId: '1449', name: 'Level 4', subtext: 'id 1450', type: 'Level 4' },\n  { id: '1451', parentId: '1450', name: 'Level 5', subtext: 'id 1451', type: 'Level 5' },\n  { id: '1452', parentId: '1451', name: 'Level 6', subtext: 'id 1452', type: 'Level 6' },\n  { id: '1453', parentId: '1452', name: 'Level 7', subtext: 'id 1453', type: 'Level 7' },\n  { id: '1454', parentId: '1452', name: 'Level 7', subtext: 'id 1454', type: 'Level 7' },\n  { id: '1455', parentId: '1452', name: 'Level 7', subtext: 'id 1455', type: 'Level 7' },\n  { id: '1456', parentId: '1451', name: 'Level 6', subtext: 'id 1456', type: 'Level 6' },\n  { id: '1457', parentId: '1456', name: 'Level 7', subtext: 'id 1457', type: 'Level 7' },\n  { id: '1458', parentId: '1456', name: 'Level 7', subtext: 'id 1458', type: 'Level 7' },\n  { id: '1459', parentId: '1456', name: 'Level 7', subtext: 'id 1459', type: 'Level 7' },\n  { id: '1460', parentId: '1456', name: 'Level 7', subtext: 'id 1460', type: 'Level 7' },\n  { id: '1461', parentId: '1451', name: 'Level 6', subtext: 'id 1461', type: 'Level 6' },\n  { id: '1462', parentId: '1461', name: 'Level 7', subtext: 'id 1462', type: 'Level 7' },\n  { id: '1463', parentId: '1461', name: 'Level 7', subtext: 'id 1463', type: 'Level 7' },\n  { id: '1464', parentId: '1450', name: 'Level 5', subtext: 'id 1464', type: 'Level 5' },\n  { id: '1465', parentId: '1464', name: 'Level 6', subtext: 'id 1465', type: 'Level 6' },\n  { id: '1466', parentId: '1465', name: 'Level 7', subtext: 'id 1466', type: 'Level 7' },\n  { id: '1467', parentId: '1465', name: 'Level 7', subtext: 'id 1467', type: 'Level 7' },\n  { id: '1468', parentId: '1465', name: 'Level 7', subtext: 'id 1468', type: 'Level 7' },\n  { id: '1469', parentId: '1465', name: 'Level 7', subtext: 'id 1469', type: 'Level 7' },\n  { id: '1470', parentId: '1450', name: 'Level 5', subtext: 'id 1470', type: 'Level 5' },\n  { id: '1471', parentId: '1470', name: 'Level 6', subtext: 'id 1471', type: 'Level 6' },\n  { id: '1472', parentId: '1471', name: 'Level 7', subtext: 'id 1472', type: 'Level 7' },\n  { id: '1473', parentId: '1470', name: 'Level 6', subtext: 'id 1473', type: 'Level 6' },\n  { id: '1474', parentId: '1473', name: 'Level 7', subtext: 'id 1474', type: 'Level 7' },\n  { id: '1475', parentId: '1470', name: 'Level 6', subtext: 'id 1475', type: 'Level 6' },\n  { id: '1476', parentId: '1475', name: 'Level 7', subtext: 'id 1476', type: 'Level 7' },\n  { id: '1477', parentId: '1470', name: 'Level 6', subtext: 'id 1477', type: 'Level 6' },\n  { id: '1478', parentId: '1477', name: 'Level 7', subtext: 'id 1478', type: 'Level 7' },\n  { id: '1479', parentId: '1477', name: 'Level 7', subtext: 'id 1479', type: 'Level 7' },\n  { id: '1480', parentId: '1450', name: 'Level 5', subtext: 'id 1480', type: 'Level 5' },\n  { id: '1481', parentId: '1480', name: 'Level 6', subtext: 'id 1481', type: 'Level 6' },\n  { id: '1482', parentId: '1481', name: 'Level 7', subtext: 'id 1482', type: 'Level 7' },\n  { id: '1483', parentId: '1481', name: 'Level 7', subtext: 'id 1483', type: 'Level 7' },\n  { id: '1484', parentId: '1481', name: 'Level 7', subtext: 'id 1484', type: 'Level 7' },\n  { id: '1485', parentId: '1481', name: 'Level 7', subtext: 'id 1485', type: 'Level 7' },\n  { id: '1486', parentId: '1481', name: 'Level 7', subtext: 'id 1486', type: 'Level 7' },\n  { id: '1487', parentId: '1480', name: 'Level 6', subtext: 'id 1487', type: 'Level 6' },\n  { id: '1488', parentId: '1487', name: 'Level 7', subtext: 'id 1488', type: 'Level 7' },\n  { id: '1489', parentId: '1480', name: 'Level 6', subtext: 'id 1489', type: 'Level 6' },\n  { id: '1490', parentId: '1489', name: 'Level 7', subtext: 'id 1490', type: 'Level 7' },\n  { id: '1491', parentId: '1480', name: 'Level 6', subtext: 'id 1491', type: 'Level 6' },\n  { id: '1492', parentId: '1491', name: 'Level 7', subtext: 'id 1492', type: 'Level 7' },\n  { id: '1493', parentId: '1491', name: 'Level 7', subtext: 'id 1493', type: 'Level 7' },\n  { id: '1494', parentId: '1491', name: 'Level 7', subtext: 'id 1494', type: 'Level 7' },\n  { id: '1495', parentId: '1491', name: 'Level 7', subtext: 'id 1495', type: 'Level 7' },\n  { id: '1496', parentId: '1450', name: 'Level 5', subtext: 'id 1496', type: 'Level 5' },\n  { id: '1497', parentId: '1496', name: 'Level 6', subtext: 'id 1497', type: 'Level 6' },\n  { id: '1498', parentId: '1497', name: 'Level 7', subtext: 'id 1498', type: 'Level 7' },\n  { id: '1499', parentId: '1497', name: 'Level 7', subtext: 'id 1499', type: 'Level 7' },\n  { id: '1500', parentId: '1497', name: 'Level 7', subtext: 'id 1500', type: 'Level 7' },\n  { id: '1501', parentId: '1497', name: 'Level 7', subtext: 'id 1501', type: 'Level 7' },\n  { id: '1502', parentId: '1496', name: 'Level 6', subtext: 'id 1502', type: 'Level 6' },\n  { id: '1503', parentId: '1502', name: 'Level 7', subtext: 'id 1503', type: 'Level 7' },\n  { id: '1504', parentId: '1502', name: 'Level 7', subtext: 'id 1504', type: 'Level 7' },\n  { id: '1505', parentId: '1502', name: 'Level 7', subtext: 'id 1505', type: 'Level 7' },\n  { id: '1506', parentId: '1502', name: 'Level 7', subtext: 'id 1506', type: 'Level 7' },\n  { id: '1507', parentId: '1502', name: 'Level 7', subtext: 'id 1507', type: 'Level 7' },\n  { id: '1508', parentId: '1496', name: 'Level 6', subtext: 'id 1508', type: 'Level 6' },\n  { id: '1509', parentId: '1508', name: 'Level 7', subtext: 'id 1509', type: 'Level 7' },\n  { id: '1510', parentId: '1508', name: 'Level 7', subtext: 'id 1510', type: 'Level 7' },\n  { id: '1511', parentId: '1508', name: 'Level 7', subtext: 'id 1511', type: 'Level 7' },\n  { id: '1512', parentId: '1496', name: 'Level 6', subtext: 'id 1512', type: 'Level 6' },\n  { id: '1513', parentId: '1512', name: 'Level 7', subtext: 'id 1513', type: 'Level 7' },\n  { id: '1514', parentId: '1512', name: 'Level 7', subtext: 'id 1514', type: 'Level 7' },\n  { id: '1515', parentId: '1512', name: 'Level 7', subtext: 'id 1515', type: 'Level 7' },\n  { id: '1516', parentId: '1496', name: 'Level 6', subtext: 'id 1516', type: 'Level 6' },\n  { id: '1517', parentId: '1516', name: 'Level 7', subtext: 'id 1517', type: 'Level 7' },\n  { id: '1518', parentId: '1516', name: 'Level 7', subtext: 'id 1518', type: 'Level 7' },\n  { id: '1519', parentId: '1516', name: 'Level 7', subtext: 'id 1519', type: 'Level 7' },\n  { id: '1520', parentId: '1139', name: 'Level 3', subtext: 'id 1520', type: 'Level 3' },\n  { id: '1521', parentId: '1520', name: 'Level 4', subtext: 'id 1521', type: 'Level 4' },\n  { id: '1522', parentId: '1521', name: 'Level 5', subtext: 'id 1522', type: 'Level 5' },\n  { id: '1523', parentId: '1522', name: 'Level 6', subtext: 'id 1523', type: 'Level 6' },\n  { id: '1524', parentId: '1523', name: 'Level 7', subtext: 'id 1524', type: 'Level 7' },\n  { id: '1525', parentId: '1522', name: 'Level 6', subtext: 'id 1525', type: 'Level 6' },\n  { id: '1526', parentId: '1525', name: 'Level 7', subtext: 'id 1526', type: 'Level 7' },\n  { id: '1527', parentId: '1525', name: 'Level 7', subtext: 'id 1527', type: 'Level 7' },\n  { id: '1528', parentId: '1525', name: 'Level 7', subtext: 'id 1528', type: 'Level 7' },\n  { id: '1529', parentId: '1525', name: 'Level 7', subtext: 'id 1529', type: 'Level 7' },\n  { id: '1530', parentId: '1525', name: 'Level 7', subtext: 'id 1530', type: 'Level 7' },\n  { id: '1531', parentId: '1522', name: 'Level 6', subtext: 'id 1531', type: 'Level 6' },\n  { id: '1532', parentId: '1531', name: 'Level 7', subtext: 'id 1532', type: 'Level 7' },\n  { id: '1533', parentId: '1531', name: 'Level 7', subtext: 'id 1533', type: 'Level 7' },\n  { id: '1534', parentId: '1522', name: 'Level 6', subtext: 'id 1534', type: 'Level 6' },\n  { id: '1535', parentId: '1534', name: 'Level 7', subtext: 'id 1535', type: 'Level 7' },\n  { id: '1536', parentId: '1534', name: 'Level 7', subtext: 'id 1536', type: 'Level 7' },\n  { id: '1537', parentId: '1139', name: 'Level 3', subtext: 'id 1537', type: 'Level 3' },\n  { id: '1538', parentId: '1537', name: 'Level 4', subtext: 'id 1538', type: 'Level 4' },\n  { id: '1539', parentId: '1538', name: 'Level 5', subtext: 'id 1539', type: 'Level 5' },\n  { id: '1540', parentId: '1539', name: 'Level 6', subtext: 'id 1540', type: 'Level 6' },\n  { id: '1541', parentId: '1540', name: 'Level 7', subtext: 'id 1541', type: 'Level 7' },\n  { id: '1542', parentId: '1540', name: 'Level 7', subtext: 'id 1542', type: 'Level 7' },\n  { id: '1543', parentId: '1540', name: 'Level 7', subtext: 'id 1543', type: 'Level 7' },\n  { id: '1544', parentId: '1540', name: 'Level 7', subtext: 'id 1544', type: 'Level 7' },\n  { id: '1545', parentId: '1539', name: 'Level 6', subtext: 'id 1545', type: 'Level 6' },\n  { id: '1546', parentId: '1545', name: 'Level 7', subtext: 'id 1546', type: 'Level 7' },\n  { id: '1547', parentId: '1545', name: 'Level 7', subtext: 'id 1547', type: 'Level 7' },\n  { id: '1548', parentId: '1545', name: 'Level 7', subtext: 'id 1548', type: 'Level 7' },\n  { id: '1549', parentId: '1539', name: 'Level 6', subtext: 'id 1549', type: 'Level 6' },\n  { id: '1550', parentId: '1549', name: 'Level 7', subtext: 'id 1550', type: 'Level 7' },\n  { id: '1551', parentId: '1549', name: 'Level 7', subtext: 'id 1551', type: 'Level 7' },\n  { id: '1552', parentId: '1539', name: 'Level 6', subtext: 'id 1552', type: 'Level 6' },\n  { id: '1553', parentId: '1552', name: 'Level 7', subtext: 'id 1553', type: 'Level 7' },\n  { id: '1554', parentId: '1552', name: 'Level 7', subtext: 'id 1554', type: 'Level 7' },\n  { id: '1555', parentId: '1539', name: 'Level 6', subtext: 'id 1555', type: 'Level 6' },\n  { id: '1556', parentId: '1555', name: 'Level 7', subtext: 'id 1556', type: 'Level 7' },\n  { id: '1557', parentId: '1555', name: 'Level 7', subtext: 'id 1557', type: 'Level 7' },\n  { id: '1558', parentId: '1555', name: 'Level 7', subtext: 'id 1558', type: 'Level 7' },\n  { id: '1559', parentId: '1538', name: 'Level 5', subtext: 'id 1559', type: 'Level 5' },\n  { id: '1560', parentId: '1559', name: 'Level 6', subtext: 'id 1560', type: 'Level 6' },\n  { id: '1561', parentId: '1560', name: 'Level 7', subtext: 'id 1561', type: 'Level 7' },\n  { id: '1562', parentId: '1560', name: 'Level 7', subtext: 'id 1562', type: 'Level 7' },\n  { id: '1563', parentId: '1560', name: 'Level 7', subtext: 'id 1563', type: 'Level 7' },\n  { id: '1564', parentId: '1560', name: 'Level 7', subtext: 'id 1564', type: 'Level 7' },\n  { id: '1565', parentId: '1560', name: 'Level 7', subtext: 'id 1565', type: 'Level 7' },\n  { id: '1566', parentId: '1559', name: 'Level 6', subtext: 'id 1566', type: 'Level 6' },\n  { id: '1567', parentId: '1566', name: 'Level 7', subtext: 'id 1567', type: 'Level 7' },\n  { id: '1568', parentId: '1566', name: 'Level 7', subtext: 'id 1568', type: 'Level 7' },\n  { id: '1569', parentId: '1566', name: 'Level 7', subtext: 'id 1569', type: 'Level 7' },\n  { id: '1570', parentId: '1566', name: 'Level 7', subtext: 'id 1570', type: 'Level 7' },\n  { id: '1571', parentId: '1559', name: 'Level 6', subtext: 'id 1571', type: 'Level 6' },\n  { id: '1572', parentId: '1571', name: 'Level 7', subtext: 'id 1572', type: 'Level 7' },\n  { id: '1573', parentId: '1571', name: 'Level 7', subtext: 'id 1573', type: 'Level 7' },\n  { id: '1574', parentId: '1571', name: 'Level 7', subtext: 'id 1574', type: 'Level 7' },\n  { id: '1575', parentId: '1571', name: 'Level 7', subtext: 'id 1575', type: 'Level 7' },\n  { id: '1576', parentId: '1571', name: 'Level 7', subtext: 'id 1576', type: 'Level 7' },\n  { id: '1577', parentId: '1538', name: 'Level 5', subtext: 'id 1577', type: 'Level 5' },\n  { id: '1578', parentId: '1577', name: 'Level 6', subtext: 'id 1578', type: 'Level 6' },\n  { id: '1579', parentId: '1578', name: 'Level 7', subtext: 'id 1579', type: 'Level 7' },\n  { id: '1580', parentId: '1578', name: 'Level 7', subtext: 'id 1580', type: 'Level 7' },\n  { id: '1581', parentId: '1578', name: 'Level 7', subtext: 'id 1581', type: 'Level 7' },\n  { id: '1582', parentId: '1578', name: 'Level 7', subtext: 'id 1582', type: 'Level 7' },\n  { id: '1583', parentId: '1577', name: 'Level 6', subtext: 'id 1583', type: 'Level 6' },\n  { id: '1584', parentId: '1583', name: 'Level 7', subtext: 'id 1584', type: 'Level 7' },\n  { id: '1585', parentId: '1577', name: 'Level 6', subtext: 'id 1585', type: 'Level 6' },\n  { id: '1586', parentId: '1585', name: 'Level 7', subtext: 'id 1586', type: 'Level 7' },\n  { id: '1587', parentId: '1585', name: 'Level 7', subtext: 'id 1587', type: 'Level 7' },\n  { id: '1588', parentId: '1577', name: 'Level 6', subtext: 'id 1588', type: 'Level 6' },\n  { id: '1589', parentId: '1588', name: 'Level 7', subtext: 'id 1589', type: 'Level 7' },\n  { id: '1590', parentId: '1588', name: 'Level 7', subtext: 'id 1590', type: 'Level 7' },\n  { id: '1591', parentId: '1588', name: 'Level 7', subtext: 'id 1591', type: 'Level 7' },\n  { id: '1592', parentId: '1577', name: 'Level 6', subtext: 'id 1592', type: 'Level 6' },\n  { id: '1593', parentId: '1592', name: 'Level 7', subtext: 'id 1593', type: 'Level 7' },\n  { id: '1594', parentId: '1538', name: 'Level 5', subtext: 'id 1594', type: 'Level 5' },\n  { id: '1595', parentId: '1594', name: 'Level 6', subtext: 'id 1595', type: 'Level 6' },\n  { id: '1596', parentId: '1595', name: 'Level 7', subtext: 'id 1596', type: 'Level 7' },\n  { id: '1597', parentId: '1594', name: 'Level 6', subtext: 'id 1597', type: 'Level 6' },\n  { id: '1598', parentId: '1597', name: 'Level 7', subtext: 'id 1598', type: 'Level 7' },\n  { id: '1599', parentId: '1597', name: 'Level 7', subtext: 'id 1599', type: 'Level 7' },\n  { id: '1600', parentId: '1597', name: 'Level 7', subtext: 'id 1600', type: 'Level 7' },\n  { id: '1601', parentId: '1597', name: 'Level 7', subtext: 'id 1601', type: 'Level 7' },\n  { id: '1602', parentId: '1594', name: 'Level 6', subtext: 'id 1602', type: 'Level 6' },\n  { id: '1603', parentId: '1602', name: 'Level 7', subtext: 'id 1603', type: 'Level 7' },\n  { id: '1604', parentId: '1602', name: 'Level 7', subtext: 'id 1604', type: 'Level 7' },\n  { id: '1605', parentId: '1602', name: 'Level 7', subtext: 'id 1605', type: 'Level 7' },\n  { id: '1606', parentId: '1594', name: 'Level 6', subtext: 'id 1606', type: 'Level 6' },\n  { id: '1607', parentId: '1606', name: 'Level 7', subtext: 'id 1607', type: 'Level 7' },\n  { id: '1608', parentId: '1606', name: 'Level 7', subtext: 'id 1608', type: 'Level 7' },\n  { id: '1609', parentId: '1594', name: 'Level 6', subtext: 'id 1609', type: 'Level 6' },\n  { id: '1610', parentId: '1609', name: 'Level 7', subtext: 'id 1610', type: 'Level 7' },\n  { id: '1611', parentId: '1609', name: 'Level 7', subtext: 'id 1611', type: 'Level 7' },\n  { id: '1612', parentId: '1609', name: 'Level 7', subtext: 'id 1612', type: 'Level 7' },\n  { id: '1613', parentId: '1609', name: 'Level 7', subtext: 'id 1613', type: 'Level 7' },\n  { id: '1614', parentId: '1538', name: 'Level 5', subtext: 'id 1614', type: 'Level 5' },\n  { id: '1615', parentId: '1614', name: 'Level 6', subtext: 'id 1615', type: 'Level 6' },\n  { id: '1616', parentId: '1615', name: 'Level 7', subtext: 'id 1616', type: 'Level 7' },\n  { id: '1617', parentId: '1615', name: 'Level 7', subtext: 'id 1617', type: 'Level 7' },\n  { id: '1618', parentId: '1615', name: 'Level 7', subtext: 'id 1618', type: 'Level 7' },\n  { id: '1619', parentId: '1615', name: 'Level 7', subtext: 'id 1619', type: 'Level 7' },\n  { id: '1620', parentId: '1614', name: 'Level 6', subtext: 'id 1620', type: 'Level 6' },\n  { id: '1621', parentId: '1620', name: 'Level 7', subtext: 'id 1621', type: 'Level 7' },\n  { id: '1622', parentId: '1620', name: 'Level 7', subtext: 'id 1622', type: 'Level 7' },\n  { id: '1623', parentId: '1620', name: 'Level 7', subtext: 'id 1623', type: 'Level 7' },\n  { id: '1624', parentId: '1620', name: 'Level 7', subtext: 'id 1624', type: 'Level 7' },\n  { id: '1625', parentId: '1620', name: 'Level 7', subtext: 'id 1625', type: 'Level 7' },\n  { id: '1626', parentId: '1614', name: 'Level 6', subtext: 'id 1626', type: 'Level 6' },\n  { id: '1627', parentId: '1626', name: 'Level 7', subtext: 'id 1627', type: 'Level 7' },\n  { id: '1628', parentId: '1614', name: 'Level 6', subtext: 'id 1628', type: 'Level 6' },\n  { id: '1629', parentId: '1628', name: 'Level 7', subtext: 'id 1629', type: 'Level 7' },\n  { id: '1630', parentId: '1628', name: 'Level 7', subtext: 'id 1630', type: 'Level 7' },\n  { id: '1631', parentId: '1614', name: 'Level 6', subtext: 'id 1631', type: 'Level 6' },\n  { id: '1632', parentId: '1631', name: 'Level 7', subtext: 'id 1632', type: 'Level 7' },\n  { id: '1633', parentId: '1631', name: 'Level 7', subtext: 'id 1633', type: 'Level 7' },\n  { id: '1634', parentId: '1631', name: 'Level 7', subtext: 'id 1634', type: 'Level 7' },\n  { id: '1635', parentId: '1537', name: 'Level 4', subtext: 'id 1635', type: 'Level 4' },\n  { id: '1636', parentId: '1635', name: 'Level 5', subtext: 'id 1636', type: 'Level 5' },\n  { id: '1637', parentId: '1636', name: 'Level 6', subtext: 'id 1637', type: 'Level 6' },\n  { id: '1638', parentId: '1637', name: 'Level 7', subtext: 'id 1638', type: 'Level 7' },\n  { id: '1639', parentId: '1637', name: 'Level 7', subtext: 'id 1639', type: 'Level 7' },\n  { id: '1640', parentId: '1637', name: 'Level 7', subtext: 'id 1640', type: 'Level 7' },\n  { id: '1641', parentId: '1637', name: 'Level 7', subtext: 'id 1641', type: 'Level 7' },\n  { id: '1642', parentId: '1636', name: 'Level 6', subtext: 'id 1642', type: 'Level 6' },\n  { id: '1643', parentId: '1642', name: 'Level 7', subtext: 'id 1643', type: 'Level 7' },\n  { id: '1644', parentId: '1642', name: 'Level 7', subtext: 'id 1644', type: 'Level 7' },\n  { id: '1645', parentId: '1642', name: 'Level 7', subtext: 'id 1645', type: 'Level 7' },\n  { id: '1646', parentId: '1636', name: 'Level 6', subtext: 'id 1646', type: 'Level 6' },\n  { id: '1647', parentId: '1646', name: 'Level 7', subtext: 'id 1647', type: 'Level 7' },\n  { id: '1648', parentId: '1646', name: 'Level 7', subtext: 'id 1648', type: 'Level 7' },\n  { id: '1649', parentId: '1635', name: 'Level 5', subtext: 'id 1649', type: 'Level 5' },\n  { id: '1650', parentId: '1649', name: 'Level 6', subtext: 'id 1650', type: 'Level 6' },\n  { id: '1651', parentId: '1650', name: 'Level 7', subtext: 'id 1651', type: 'Level 7' },\n  { id: '1652', parentId: '1650', name: 'Level 7', subtext: 'id 1652', type: 'Level 7' },\n  { id: '1653', parentId: '1650', name: 'Level 7', subtext: 'id 1653', type: 'Level 7' },\n  { id: '1654', parentId: '1649', name: 'Level 6', subtext: 'id 1654', type: 'Level 6' },\n  { id: '1655', parentId: '1654', name: 'Level 7', subtext: 'id 1655', type: 'Level 7' },\n  { id: '1656', parentId: '1635', name: 'Level 5', subtext: 'id 1656', type: 'Level 5' },\n  { id: '1657', parentId: '1656', name: 'Level 6', subtext: 'id 1657', type: 'Level 6' },\n  { id: '1658', parentId: '1657', name: 'Level 7', subtext: 'id 1658', type: 'Level 7' },\n  { id: '1659', parentId: '1657', name: 'Level 7', subtext: 'id 1659', type: 'Level 7' },\n  { id: '1660', parentId: '1656', name: 'Level 6', subtext: 'id 1660', type: 'Level 6' },\n  { id: '1661', parentId: '1660', name: 'Level 7', subtext: 'id 1661', type: 'Level 7' },\n  { id: '1662', parentId: '1660', name: 'Level 7', subtext: 'id 1662', type: 'Level 7' },\n  { id: '1663', parentId: '1660', name: 'Level 7', subtext: 'id 1663', type: 'Level 7' },\n  { id: '1664', parentId: '1656', name: 'Level 6', subtext: 'id 1664', type: 'Level 6' },\n  { id: '1665', parentId: '1664', name: 'Level 7', subtext: 'id 1665', type: 'Level 7' },\n  { id: '1666', parentId: '1664', name: 'Level 7', subtext: 'id 1666', type: 'Level 7' },\n  { id: '1667', parentId: '1664', name: 'Level 7', subtext: 'id 1667', type: 'Level 7' },\n  { id: '1668', parentId: '1537', name: 'Level 4', subtext: 'id 1668', type: 'Level 4' },\n  { id: '1669', parentId: '1668', name: 'Level 5', subtext: 'id 1669', type: 'Level 5' },\n  { id: '1670', parentId: '1669', name: 'Level 6', subtext: 'id 1670', type: 'Level 6' },\n  { id: '1671', parentId: '1670', name: 'Level 7', subtext: 'id 1671', type: 'Level 7' },\n  { id: '1672', parentId: '1670', name: 'Level 7', subtext: 'id 1672', type: 'Level 7' },\n  { id: '1673', parentId: '1669', name: 'Level 6', subtext: 'id 1673', type: 'Level 6' },\n  { id: '1674', parentId: '1673', name: 'Level 7', subtext: 'id 1674', type: 'Level 7' },\n  { id: '1675', parentId: '1673', name: 'Level 7', subtext: 'id 1675', type: 'Level 7' },\n  { id: '1676', parentId: '1673', name: 'Level 7', subtext: 'id 1676', type: 'Level 7' },\n  { id: '1677', parentId: '1673', name: 'Level 7', subtext: 'id 1677', type: 'Level 7' },\n  { id: '1678', parentId: '1673', name: 'Level 7', subtext: 'id 1678', type: 'Level 7' },\n  { id: '1679', parentId: '1668', name: 'Level 5', subtext: 'id 1679', type: 'Level 5' },\n  { id: '1680', parentId: '1679', name: 'Level 6', subtext: 'id 1680', type: 'Level 6' },\n  { id: '1681', parentId: '1680', name: 'Level 7', subtext: 'id 1681', type: 'Level 7' },\n  { id: '1682', parentId: '1680', name: 'Level 7', subtext: 'id 1682', type: 'Level 7' },\n  { id: '1683', parentId: '1680', name: 'Level 7', subtext: 'id 1683', type: 'Level 7' },\n  { id: '1684', parentId: '1680', name: 'Level 7', subtext: 'id 1684', type: 'Level 7' },\n  { id: '1685', parentId: '1680', name: 'Level 7', subtext: 'id 1685', type: 'Level 7' },\n  { id: '1686', parentId: '1679', name: 'Level 6', subtext: 'id 1686', type: 'Level 6' },\n  { id: '1687', parentId: '1686', name: 'Level 7', subtext: 'id 1687', type: 'Level 7' },\n  { id: '1688', parentId: '1679', name: 'Level 6', subtext: 'id 1688', type: 'Level 6' },\n  { id: '1689', parentId: '1688', name: 'Level 7', subtext: 'id 1689', type: 'Level 7' },\n  { id: '1690', parentId: '1688', name: 'Level 7', subtext: 'id 1690', type: 'Level 7' },\n  { id: '1691', parentId: '1688', name: 'Level 7', subtext: 'id 1691', type: 'Level 7' },\n  { id: '1692', parentId: '1688', name: 'Level 7', subtext: 'id 1692', type: 'Level 7' },\n  { id: '1693', parentId: '1679', name: 'Level 6', subtext: 'id 1693', type: 'Level 6' },\n  { id: '1694', parentId: '1693', name: 'Level 7', subtext: 'id 1694', type: 'Level 7' },\n  { id: '1695', parentId: '1693', name: 'Level 7', subtext: 'id 1695', type: 'Level 7' },\n  { id: '1696', parentId: '1693', name: 'Level 7', subtext: 'id 1696', type: 'Level 7' },\n  { id: '1697', parentId: '1693', name: 'Level 7', subtext: 'id 1697', type: 'Level 7' },\n  { id: '1698', parentId: '1693', name: 'Level 7', subtext: 'id 1698', type: 'Level 7' },\n  { id: '1699', parentId: '1138', name: 'Level 2', subtext: 'id 1699', type: 'Level 2' },\n  { id: '1700', parentId: '1699', name: 'Level 3', subtext: 'id 1700', type: 'Level 3' },\n  { id: '1701', parentId: '1700', name: 'Level 4', subtext: 'id 1701', type: 'Level 4' },\n  { id: '1702', parentId: '1701', name: 'Level 5', subtext: 'id 1702', type: 'Level 5' },\n  { id: '1703', parentId: '1702', name: 'Level 6', subtext: 'id 1703', type: 'Level 6' },\n  { id: '1704', parentId: '1703', name: 'Level 7', subtext: 'id 1704', type: 'Level 7' },\n  { id: '1705', parentId: '1703', name: 'Level 7', subtext: 'id 1705', type: 'Level 7' },\n  { id: '1706', parentId: '1702', name: 'Level 6', subtext: 'id 1706', type: 'Level 6' },\n  { id: '1707', parentId: '1706', name: 'Level 7', subtext: 'id 1707', type: 'Level 7' },\n  { id: '1708', parentId: '1706', name: 'Level 7', subtext: 'id 1708', type: 'Level 7' },\n  { id: '1709', parentId: '1706', name: 'Level 7', subtext: 'id 1709', type: 'Level 7' },\n  { id: '1710', parentId: '1706', name: 'Level 7', subtext: 'id 1710', type: 'Level 7' },\n  { id: '1711', parentId: '1702', name: 'Level 6', subtext: 'id 1711', type: 'Level 6' },\n  { id: '1712', parentId: '1711', name: 'Level 7', subtext: 'id 1712', type: 'Level 7' },\n  { id: '1713', parentId: '1711', name: 'Level 7', subtext: 'id 1713', type: 'Level 7' },\n  { id: '1714', parentId: '1711', name: 'Level 7', subtext: 'id 1714', type: 'Level 7' },\n  { id: '1715', parentId: '1711', name: 'Level 7', subtext: 'id 1715', type: 'Level 7' },\n  { id: '1716', parentId: '1702', name: 'Level 6', subtext: 'id 1716', type: 'Level 6' },\n  { id: '1717', parentId: '1716', name: 'Level 7', subtext: 'id 1717', type: 'Level 7' },\n  { id: '1718', parentId: '1716', name: 'Level 7', subtext: 'id 1718', type: 'Level 7' },\n  { id: '1719', parentId: '1716', name: 'Level 7', subtext: 'id 1719', type: 'Level 7' },\n  { id: '1720', parentId: '1716', name: 'Level 7', subtext: 'id 1720', type: 'Level 7' },\n  { id: '1721', parentId: '1716', name: 'Level 7', subtext: 'id 1721', type: 'Level 7' },\n  { id: '1722', parentId: '1699', name: 'Level 3', subtext: 'id 1722', type: 'Level 3' },\n  { id: '1723', parentId: '1722', name: 'Level 4', subtext: 'id 1723', type: 'Level 4' },\n  { id: '1724', parentId: '1723', name: 'Level 5', subtext: 'id 1724', type: 'Level 5' },\n  { id: '1725', parentId: '1724', name: 'Level 6', subtext: 'id 1725', type: 'Level 6' },\n  { id: '1726', parentId: '1725', name: 'Level 7', subtext: 'id 1726', type: 'Level 7' },\n  { id: '1727', parentId: '1725', name: 'Level 7', subtext: 'id 1727', type: 'Level 7' },\n  { id: '1728', parentId: '1724', name: 'Level 6', subtext: 'id 1728', type: 'Level 6' },\n  { id: '1729', parentId: '1728', name: 'Level 7', subtext: 'id 1729', type: 'Level 7' },\n  { id: '1730', parentId: '1728', name: 'Level 7', subtext: 'id 1730', type: 'Level 7' },\n  { id: '1731', parentId: '1728', name: 'Level 7', subtext: 'id 1731', type: 'Level 7' },\n  { id: '1732', parentId: '1724', name: 'Level 6', subtext: 'id 1732', type: 'Level 6' },\n  { id: '1733', parentId: '1732', name: 'Level 7', subtext: 'id 1733', type: 'Level 7' },\n  { id: '1734', parentId: '1724', name: 'Level 6', subtext: 'id 1734', type: 'Level 6' },\n  { id: '1735', parentId: '1734', name: 'Level 7', subtext: 'id 1735', type: 'Level 7' },\n  { id: '1736', parentId: '1723', name: 'Level 5', subtext: 'id 1736', type: 'Level 5' },\n  { id: '1737', parentId: '1736', name: 'Level 6', subtext: 'id 1737', type: 'Level 6' },\n  { id: '1738', parentId: '1737', name: 'Level 7', subtext: 'id 1738', type: 'Level 7' },\n  { id: '1739', parentId: '1737', name: 'Level 7', subtext: 'id 1739', type: 'Level 7' },\n  { id: '1740', parentId: '1737', name: 'Level 7', subtext: 'id 1740', type: 'Level 7' },\n  { id: '1741', parentId: '1737', name: 'Level 7', subtext: 'id 1741', type: 'Level 7' },\n  { id: '1742', parentId: '1737', name: 'Level 7', subtext: 'id 1742', type: 'Level 7' },\n  { id: '1743', parentId: '1736', name: 'Level 6', subtext: 'id 1743', type: 'Level 6' },\n  { id: '1744', parentId: '1743', name: 'Level 7', subtext: 'id 1744', type: 'Level 7' },\n  { id: '1745', parentId: '1736', name: 'Level 6', subtext: 'id 1745', type: 'Level 6' },\n  { id: '1746', parentId: '1745', name: 'Level 7', subtext: 'id 1746', type: 'Level 7' },\n  { id: '1747', parentId: '1745', name: 'Level 7', subtext: 'id 1747', type: 'Level 7' },\n  { id: '1748', parentId: '1745', name: 'Level 7', subtext: 'id 1748', type: 'Level 7' },\n  { id: '1749', parentId: '1745', name: 'Level 7', subtext: 'id 1749', type: 'Level 7' },\n  { id: '1750', parentId: '1745', name: 'Level 7', subtext: 'id 1750', type: 'Level 7' },\n  { id: '1751', parentId: '1723', name: 'Level 5', subtext: 'id 1751', type: 'Level 5' },\n  { id: '1752', parentId: '1751', name: 'Level 6', subtext: 'id 1752', type: 'Level 6' },\n  { id: '1753', parentId: '1752', name: 'Level 7', subtext: 'id 1753', type: 'Level 7' },\n  { id: '1754', parentId: '1752', name: 'Level 7', subtext: 'id 1754', type: 'Level 7' },\n  { id: '1755', parentId: '1752', name: 'Level 7', subtext: 'id 1755', type: 'Level 7' },\n  { id: '1756', parentId: '1752', name: 'Level 7', subtext: 'id 1756', type: 'Level 7' },\n  { id: '1757', parentId: '1752', name: 'Level 7', subtext: 'id 1757', type: 'Level 7' },\n  { id: '1758', parentId: '1751', name: 'Level 6', subtext: 'id 1758', type: 'Level 6' },\n  { id: '1759', parentId: '1758', name: 'Level 7', subtext: 'id 1759', type: 'Level 7' },\n  { id: '1760', parentId: '1758', name: 'Level 7', subtext: 'id 1760', type: 'Level 7' },\n  { id: '1761', parentId: '1758', name: 'Level 7', subtext: 'id 1761', type: 'Level 7' },\n  { id: '1762', parentId: '1751', name: 'Level 6', subtext: 'id 1762', type: 'Level 6' },\n  { id: '1763', parentId: '1762', name: 'Level 7', subtext: 'id 1763', type: 'Level 7' },\n  { id: '1764', parentId: '1751', name: 'Level 6', subtext: 'id 1764', type: 'Level 6' },\n  { id: '1765', parentId: '1764', name: 'Level 7', subtext: 'id 1765', type: 'Level 7' },\n  { id: '1766', parentId: '1764', name: 'Level 7', subtext: 'id 1766', type: 'Level 7' },\n  { id: '1767', parentId: '1723', name: 'Level 5', subtext: 'id 1767', type: 'Level 5' },\n  { id: '1768', parentId: '1767', name: 'Level 6', subtext: 'id 1768', type: 'Level 6' },\n  { id: '1769', parentId: '1768', name: 'Level 7', subtext: 'id 1769', type: 'Level 7' },\n  { id: '1770', parentId: '1722', name: 'Level 4', subtext: 'id 1770', type: 'Level 4' },\n  { id: '1771', parentId: '1770', name: 'Level 5', subtext: 'id 1771', type: 'Level 5' },\n  { id: '1772', parentId: '1771', name: 'Level 6', subtext: 'id 1772', type: 'Level 6' },\n  { id: '1773', parentId: '1772', name: 'Level 7', subtext: 'id 1773', type: 'Level 7' },\n  { id: '1774', parentId: '1772', name: 'Level 7', subtext: 'id 1774', type: 'Level 7' },\n  { id: '1775', parentId: '1772', name: 'Level 7', subtext: 'id 1775', type: 'Level 7' },\n  { id: '1776', parentId: '1772', name: 'Level 7', subtext: 'id 1776', type: 'Level 7' },\n  { id: '1777', parentId: '1772', name: 'Level 7', subtext: 'id 1777', type: 'Level 7' },\n  { id: '1778', parentId: '1771', name: 'Level 6', subtext: 'id 1778', type: 'Level 6' },\n  { id: '1779', parentId: '1778', name: 'Level 7', subtext: 'id 1779', type: 'Level 7' },\n  { id: '1780', parentId: '1771', name: 'Level 6', subtext: 'id 1780', type: 'Level 6' },\n  { id: '1781', parentId: '1780', name: 'Level 7', subtext: 'id 1781', type: 'Level 7' },\n  { id: '1782', parentId: '1780', name: 'Level 7', subtext: 'id 1782', type: 'Level 7' },\n  { id: '1783', parentId: '1780', name: 'Level 7', subtext: 'id 1783', type: 'Level 7' },\n  { id: '1784', parentId: '1770', name: 'Level 5', subtext: 'id 1784', type: 'Level 5' },\n  { id: '1785', parentId: '1784', name: 'Level 6', subtext: 'id 1785', type: 'Level 6' },\n  { id: '1786', parentId: '1785', name: 'Level 7', subtext: 'id 1786', type: 'Level 7' },\n  { id: '1787', parentId: '1785', name: 'Level 7', subtext: 'id 1787', type: 'Level 7' },\n  { id: '1788', parentId: '1785', name: 'Level 7', subtext: 'id 1788', type: 'Level 7' },\n  { id: '1789', parentId: '1784', name: 'Level 6', subtext: 'id 1789', type: 'Level 6' },\n  { id: '1790', parentId: '1789', name: 'Level 7', subtext: 'id 1790', type: 'Level 7' },\n  { id: '1791', parentId: '1789', name: 'Level 7', subtext: 'id 1791', type: 'Level 7' },\n  { id: '1792', parentId: '1789', name: 'Level 7', subtext: 'id 1792', type: 'Level 7' },\n  { id: '1793', parentId: '1784', name: 'Level 6', subtext: 'id 1793', type: 'Level 6' },\n  { id: '1794', parentId: '1793', name: 'Level 7', subtext: 'id 1794', type: 'Level 7' },\n  { id: '1795', parentId: '1793', name: 'Level 7', subtext: 'id 1795', type: 'Level 7' },\n  { id: '1796', parentId: '1793', name: 'Level 7', subtext: 'id 1796', type: 'Level 7' },\n  { id: '1797', parentId: '1793', name: 'Level 7', subtext: 'id 1797', type: 'Level 7' },\n  { id: '1798', parentId: '1793', name: 'Level 7', subtext: 'id 1798', type: 'Level 7' },\n  { id: '1799', parentId: '1784', name: 'Level 6', subtext: 'id 1799', type: 'Level 6' },\n  { id: '1800', parentId: '1799', name: 'Level 7', subtext: 'id 1800', type: 'Level 7' },\n  { id: '1801', parentId: '1799', name: 'Level 7', subtext: 'id 1801', type: 'Level 7' },\n  { id: '1802', parentId: '1799', name: 'Level 7', subtext: 'id 1802', type: 'Level 7' },\n  { id: '1803', parentId: '1799', name: 'Level 7', subtext: 'id 1803', type: 'Level 7' },\n  { id: '1804', parentId: '1799', name: 'Level 7', subtext: 'id 1804', type: 'Level 7' },\n  { id: '1805', parentId: '1784', name: 'Level 6', subtext: 'id 1805', type: 'Level 6' },\n  { id: '1806', parentId: '1805', name: 'Level 7', subtext: 'id 1806', type: 'Level 7' },\n  { id: '1807', parentId: '1805', name: 'Level 7', subtext: 'id 1807', type: 'Level 7' },\n  { id: '1808', parentId: '1805', name: 'Level 7', subtext: 'id 1808', type: 'Level 7' },\n  { id: '1809', parentId: '1805', name: 'Level 7', subtext: 'id 1809', type: 'Level 7' },\n  { id: '1810', parentId: '1805', name: 'Level 7', subtext: 'id 1810', type: 'Level 7' },\n  { id: '1811', parentId: '1770', name: 'Level 5', subtext: 'id 1811', type: 'Level 5' },\n  { id: '1812', parentId: '1811', name: 'Level 6', subtext: 'id 1812', type: 'Level 6' },\n  { id: '1813', parentId: '1812', name: 'Level 7', subtext: 'id 1813', type: 'Level 7' },\n  { id: '1814', parentId: '1812', name: 'Level 7', subtext: 'id 1814', type: 'Level 7' },\n  { id: '1815', parentId: '1811', name: 'Level 6', subtext: 'id 1815', type: 'Level 6' },\n  { id: '1816', parentId: '1815', name: 'Level 7', subtext: 'id 1816', type: 'Level 7' },\n  { id: '1817', parentId: '1815', name: 'Level 7', subtext: 'id 1817', type: 'Level 7' },\n  { id: '1818', parentId: '1815', name: 'Level 7', subtext: 'id 1818', type: 'Level 7' },\n  { id: '1819', parentId: '1815', name: 'Level 7', subtext: 'id 1819', type: 'Level 7' },\n  { id: '1820', parentId: '1815', name: 'Level 7', subtext: 'id 1820', type: 'Level 7' },\n  { id: '1821', parentId: '1811', name: 'Level 6', subtext: 'id 1821', type: 'Level 6' },\n  { id: '1822', parentId: '1821', name: 'Level 7', subtext: 'id 1822', type: 'Level 7' },\n  { id: '1823', parentId: '1821', name: 'Level 7', subtext: 'id 1823', type: 'Level 7' },\n  { id: '1824', parentId: '1811', name: 'Level 6', subtext: 'id 1824', type: 'Level 6' },\n  { id: '1825', parentId: '1824', name: 'Level 7', subtext: 'id 1825', type: 'Level 7' },\n  { id: '1826', parentId: '1824', name: 'Level 7', subtext: 'id 1826', type: 'Level 7' },\n  { id: '1827', parentId: '1824', name: 'Level 7', subtext: 'id 1827', type: 'Level 7' },\n  { id: '1828', parentId: '1824', name: 'Level 7', subtext: 'id 1828', type: 'Level 7' },\n  { id: '1829', parentId: '1811', name: 'Level 6', subtext: 'id 1829', type: 'Level 6' },\n  { id: '1830', parentId: '1829', name: 'Level 7', subtext: 'id 1830', type: 'Level 7' },\n  { id: '1831', parentId: '1829', name: 'Level 7', subtext: 'id 1831', type: 'Level 7' },\n  { id: '1832', parentId: '1829', name: 'Level 7', subtext: 'id 1832', type: 'Level 7' },\n  { id: '1833', parentId: '1829', name: 'Level 7', subtext: 'id 1833', type: 'Level 7' },\n  { id: '1834', parentId: '1829', name: 'Level 7', subtext: 'id 1834', type: 'Level 7' },\n  { id: '1835', parentId: '1722', name: 'Level 4', subtext: 'id 1835', type: 'Level 4' },\n  { id: '1836', parentId: '1835', name: 'Level 5', subtext: 'id 1836', type: 'Level 5' },\n  { id: '1837', parentId: '1836', name: 'Level 6', subtext: 'id 1837', type: 'Level 6' },\n  { id: '1838', parentId: '1837', name: 'Level 7', subtext: 'id 1838', type: 'Level 7' },\n  { id: '1839', parentId: '1837', name: 'Level 7', subtext: 'id 1839', type: 'Level 7' },\n  { id: '1840', parentId: '1837', name: 'Level 7', subtext: 'id 1840', type: 'Level 7' },\n  { id: '1841', parentId: '1837', name: 'Level 7', subtext: 'id 1841', type: 'Level 7' },\n  { id: '1842', parentId: '1837', name: 'Level 7', subtext: 'id 1842', type: 'Level 7' },\n  { id: '1843', parentId: '1835', name: 'Level 5', subtext: 'id 1843', type: 'Level 5' },\n  { id: '1844', parentId: '1843', name: 'Level 6', subtext: 'id 1844', type: 'Level 6' },\n  { id: '1845', parentId: '1844', name: 'Level 7', subtext: 'id 1845', type: 'Level 7' },\n  { id: '1846', parentId: '1844', name: 'Level 7', subtext: 'id 1846', type: 'Level 7' },\n  { id: '1847', parentId: '1844', name: 'Level 7', subtext: 'id 1847', type: 'Level 7' },\n  { id: '1848', parentId: '1843', name: 'Level 6', subtext: 'id 1848', type: 'Level 6' },\n  { id: '1849', parentId: '1848', name: 'Level 7', subtext: 'id 1849', type: 'Level 7' },\n  { id: '1850', parentId: '1848', name: 'Level 7', subtext: 'id 1850', type: 'Level 7' },\n  { id: '1851', parentId: '1848', name: 'Level 7', subtext: 'id 1851', type: 'Level 7' },\n  { id: '1852', parentId: '1843', name: 'Level 6', subtext: 'id 1852', type: 'Level 6' },\n  { id: '1853', parentId: '1852', name: 'Level 7', subtext: 'id 1853', type: 'Level 7' },\n  { id: '1854', parentId: '1852', name: 'Level 7', subtext: 'id 1854', type: 'Level 7' },\n  { id: '1855', parentId: '1852', name: 'Level 7', subtext: 'id 1855', type: 'Level 7' },\n  { id: '1856', parentId: '1852', name: 'Level 7', subtext: 'id 1856', type: 'Level 7' },\n  { id: '1857', parentId: '1843', name: 'Level 6', subtext: 'id 1857', type: 'Level 6' },\n  { id: '1858', parentId: '1857', name: 'Level 7', subtext: 'id 1858', type: 'Level 7' },\n  { id: '1859', parentId: '1857', name: 'Level 7', subtext: 'id 1859', type: 'Level 7' },\n  { id: '1860', parentId: '1835', name: 'Level 5', subtext: 'id 1860', type: 'Level 5' },\n  { id: '1861', parentId: '1860', name: 'Level 6', subtext: 'id 1861', type: 'Level 6' },\n  { id: '1862', parentId: '1861', name: 'Level 7', subtext: 'id 1862', type: 'Level 7' },\n  { id: '1863', parentId: '1860', name: 'Level 6', subtext: 'id 1863', type: 'Level 6' },\n  { id: '1864', parentId: '1863', name: 'Level 7', subtext: 'id 1864', type: 'Level 7' },\n  { id: '1865', parentId: '1863', name: 'Level 7', subtext: 'id 1865', type: 'Level 7' },\n  { id: '1866', parentId: '1863', name: 'Level 7', subtext: 'id 1866', type: 'Level 7' },\n  { id: '1867', parentId: '1860', name: 'Level 6', subtext: 'id 1867', type: 'Level 6' },\n  { id: '1868', parentId: '1867', name: 'Level 7', subtext: 'id 1868', type: 'Level 7' },\n  { id: '1869', parentId: '1867', name: 'Level 7', subtext: 'id 1869', type: 'Level 7' },\n  { id: '1870', parentId: '1867', name: 'Level 7', subtext: 'id 1870', type: 'Level 7' },\n  { id: '1871', parentId: '1860', name: 'Level 6', subtext: 'id 1871', type: 'Level 6' },\n  { id: '1872', parentId: '1871', name: 'Level 7', subtext: 'id 1872', type: 'Level 7' },\n  { id: '1873', parentId: '1871', name: 'Level 7', subtext: 'id 1873', type: 'Level 7' },\n  { id: '1874', parentId: '1871', name: 'Level 7', subtext: 'id 1874', type: 'Level 7' },\n  { id: '1875', parentId: '1871', name: 'Level 7', subtext: 'id 1875', type: 'Level 7' },\n  { id: '1876', parentId: '1860', name: 'Level 6', subtext: 'id 1876', type: 'Level 6' },\n  { id: '1877', parentId: '1876', name: 'Level 7', subtext: 'id 1877', type: 'Level 7' },\n  { id: '1878', parentId: '1876', name: 'Level 7', subtext: 'id 1878', type: 'Level 7' },\n  { id: '1879', parentId: '1876', name: 'Level 7', subtext: 'id 1879', type: 'Level 7' },\n  { id: '1880', parentId: '1876', name: 'Level 7', subtext: 'id 1880', type: 'Level 7' },\n  { id: '1881', parentId: '1876', name: 'Level 7', subtext: 'id 1881', type: 'Level 7' },\n  { id: '1882', parentId: '1835', name: 'Level 5', subtext: 'id 1882', type: 'Level 5' },\n  { id: '1883', parentId: '1882', name: 'Level 6', subtext: 'id 1883', type: 'Level 6' },\n  { id: '1884', parentId: '1883', name: 'Level 7', subtext: 'id 1884', type: 'Level 7' },\n  { id: '1885', parentId: '1883', name: 'Level 7', subtext: 'id 1885', type: 'Level 7' },\n  { id: '1886', parentId: '1883', name: 'Level 7', subtext: 'id 1886', type: 'Level 7' },\n  { id: '1887', parentId: '1883', name: 'Level 7', subtext: 'id 1887', type: 'Level 7' },\n  { id: '1888', parentId: '1883', name: 'Level 7', subtext: 'id 1888', type: 'Level 7' },\n  { id: '1889', parentId: '1882', name: 'Level 6', subtext: 'id 1889', type: 'Level 6' },\n  { id: '1890', parentId: '1889', name: 'Level 7', subtext: 'id 1890', type: 'Level 7' },\n  { id: '1891', parentId: '1889', name: 'Level 7', subtext: 'id 1891', type: 'Level 7' },\n  { id: '1892', parentId: '1889', name: 'Level 7', subtext: 'id 1892', type: 'Level 7' },\n  { id: '1893', parentId: '1889', name: 'Level 7', subtext: 'id 1893', type: 'Level 7' },\n  { id: '1894', parentId: '1882', name: 'Level 6', subtext: 'id 1894', type: 'Level 6' },\n  { id: '1895', parentId: '1894', name: 'Level 7', subtext: 'id 1895', type: 'Level 7' },\n  { id: '1896', parentId: '1882', name: 'Level 6', subtext: 'id 1896', type: 'Level 6' },\n  { id: '1897', parentId: '1896', name: 'Level 7', subtext: 'id 1897', type: 'Level 7' },\n  { id: '1898', parentId: '1896', name: 'Level 7', subtext: 'id 1898', type: 'Level 7' },\n  { id: '1899', parentId: '1896', name: 'Level 7', subtext: 'id 1899', type: 'Level 7' },\n  { id: '1900', parentId: '1896', name: 'Level 7', subtext: 'id 1900', type: 'Level 7' },\n  { id: '1901', parentId: '1138', name: 'Level 2', subtext: 'id 1901', type: 'Level 2' },\n  { id: '1902', parentId: '1901', name: 'Level 3', subtext: 'id 1902', type: 'Level 3' },\n  { id: '1903', parentId: '1902', name: 'Level 4', subtext: 'id 1903', type: 'Level 4' },\n  { id: '1904', parentId: '1903', name: 'Level 5', subtext: 'id 1904', type: 'Level 5' },\n  { id: '1905', parentId: '1904', name: 'Level 6', subtext: 'id 1905', type: 'Level 6' },\n  { id: '1906', parentId: '1905', name: 'Level 7', subtext: 'id 1906', type: 'Level 7' },\n  { id: '1907', parentId: '1905', name: 'Level 7', subtext: 'id 1907', type: 'Level 7' },\n  { id: '1908', parentId: '1905', name: 'Level 7', subtext: 'id 1908', type: 'Level 7' },\n  { id: '1909', parentId: '1905', name: 'Level 7', subtext: 'id 1909', type: 'Level 7' },\n  { id: '1910', parentId: '1905', name: 'Level 7', subtext: 'id 1910', type: 'Level 7' },\n  { id: '1911', parentId: '1904', name: 'Level 6', subtext: 'id 1911', type: 'Level 6' },\n  { id: '1912', parentId: '1911', name: 'Level 7', subtext: 'id 1912', type: 'Level 7' },\n  { id: '1913', parentId: '1911', name: 'Level 7', subtext: 'id 1913', type: 'Level 7' },\n  { id: '1914', parentId: '1911', name: 'Level 7', subtext: 'id 1914', type: 'Level 7' },\n  { id: '1915', parentId: '1911', name: 'Level 7', subtext: 'id 1915', type: 'Level 7' },\n  { id: '1916', parentId: '1904', name: 'Level 6', subtext: 'id 1916', type: 'Level 6' },\n  { id: '1917', parentId: '1916', name: 'Level 7', subtext: 'id 1917', type: 'Level 7' },\n  { id: '1918', parentId: '1916', name: 'Level 7', subtext: 'id 1918', type: 'Level 7' },\n  { id: '1919', parentId: '1916', name: 'Level 7', subtext: 'id 1919', type: 'Level 7' },\n  { id: '1920', parentId: '1916', name: 'Level 7', subtext: 'id 1920', type: 'Level 7' },\n  { id: '1921', parentId: '1904', name: 'Level 6', subtext: 'id 1921', type: 'Level 6' },\n  { id: '1922', parentId: '1921', name: 'Level 7', subtext: 'id 1922', type: 'Level 7' },\n  { id: '1923', parentId: '1921', name: 'Level 7', subtext: 'id 1923', type: 'Level 7' },\n  { id: '1924', parentId: '1921', name: 'Level 7', subtext: 'id 1924', type: 'Level 7' },\n  { id: '1925', parentId: '1921', name: 'Level 7', subtext: 'id 1925', type: 'Level 7' },\n  { id: '1926', parentId: '1921', name: 'Level 7', subtext: 'id 1926', type: 'Level 7' },\n  { id: '1927', parentId: '1903', name: 'Level 5', subtext: 'id 1927', type: 'Level 5' },\n  { id: '1928', parentId: '1927', name: 'Level 6', subtext: 'id 1928', type: 'Level 6' },\n  { id: '1929', parentId: '1928', name: 'Level 7', subtext: 'id 1929', type: 'Level 7' },\n  { id: '1930', parentId: '1928', name: 'Level 7', subtext: 'id 1930', type: 'Level 7' },\n  { id: '1931', parentId: '1928', name: 'Level 7', subtext: 'id 1931', type: 'Level 7' },\n  { id: '1932', parentId: '1928', name: 'Level 7', subtext: 'id 1932', type: 'Level 7' },\n  { id: '1933', parentId: '1928', name: 'Level 7', subtext: 'id 1933', type: 'Level 7' },\n  { id: '1934', parentId: '1903', name: 'Level 5', subtext: 'id 1934', type: 'Level 5' },\n  { id: '1935', parentId: '1934', name: 'Level 6', subtext: 'id 1935', type: 'Level 6' },\n  { id: '1936', parentId: '1935', name: 'Level 7', subtext: 'id 1936', type: 'Level 7' },\n  { id: '1937', parentId: '1934', name: 'Level 6', subtext: 'id 1937', type: 'Level 6' },\n  { id: '1938', parentId: '1937', name: 'Level 7', subtext: 'id 1938', type: 'Level 7' },\n  { id: '1939', parentId: '1937', name: 'Level 7', subtext: 'id 1939', type: 'Level 7' },\n  { id: '1940', parentId: '1937', name: 'Level 7', subtext: 'id 1940', type: 'Level 7' },\n  { id: '1941', parentId: '1937', name: 'Level 7', subtext: 'id 1941', type: 'Level 7' },\n  { id: '1942', parentId: '1934', name: 'Level 6', subtext: 'id 1942', type: 'Level 6' },\n  { id: '1943', parentId: '1942', name: 'Level 7', subtext: 'id 1943', type: 'Level 7' },\n  { id: '1944', parentId: '1934', name: 'Level 6', subtext: 'id 1944', type: 'Level 6' },\n  { id: '1945', parentId: '1944', name: 'Level 7', subtext: 'id 1945', type: 'Level 7' },\n  { id: '1946', parentId: '1903', name: 'Level 5', subtext: 'id 1946', type: 'Level 5' },\n  { id: '1947', parentId: '1946', name: 'Level 6', subtext: 'id 1947', type: 'Level 6' },\n  { id: '1948', parentId: '1947', name: 'Level 7', subtext: 'id 1948', type: 'Level 7' },\n  { id: '1949', parentId: '1947', name: 'Level 7', subtext: 'id 1949', type: 'Level 7' },\n  { id: '1950', parentId: '1947', name: 'Level 7', subtext: 'id 1950', type: 'Level 7' },\n  { id: '1951', parentId: '1947', name: 'Level 7', subtext: 'id 1951', type: 'Level 7' },\n  { id: '1952', parentId: '1946', name: 'Level 6', subtext: 'id 1952', type: 'Level 6' },\n  { id: '1953', parentId: '1952', name: 'Level 7', subtext: 'id 1953', type: 'Level 7' },\n  { id: '1954', parentId: '1952', name: 'Level 7', subtext: 'id 1954', type: 'Level 7' },\n  { id: '1955', parentId: '1946', name: 'Level 6', subtext: 'id 1955', type: 'Level 6' },\n  { id: '1956', parentId: '1955', name: 'Level 7', subtext: 'id 1956', type: 'Level 7' },\n  { id: '1957', parentId: '1903', name: 'Level 5', subtext: 'id 1957', type: 'Level 5' },\n  { id: '1958', parentId: '1957', name: 'Level 6', subtext: 'id 1958', type: 'Level 6' },\n  { id: '1959', parentId: '1958', name: 'Level 7', subtext: 'id 1959', type: 'Level 7' },\n  { id: '1960', parentId: '1958', name: 'Level 7', subtext: 'id 1960', type: 'Level 7' },\n  { id: '1961', parentId: '1958', name: 'Level 7', subtext: 'id 1961', type: 'Level 7' },\n  { id: '1962', parentId: '1957', name: 'Level 6', subtext: 'id 1962', type: 'Level 6' },\n  { id: '1963', parentId: '1962', name: 'Level 7', subtext: 'id 1963', type: 'Level 7' },\n  { id: '1964', parentId: '1962', name: 'Level 7', subtext: 'id 1964', type: 'Level 7' },\n  { id: '1965', parentId: '1962', name: 'Level 7', subtext: 'id 1965', type: 'Level 7' },\n  { id: '1966', parentId: '1957', name: 'Level 6', subtext: 'id 1966', type: 'Level 6' },\n  { id: '1967', parentId: '1966', name: 'Level 7', subtext: 'id 1967', type: 'Level 7' },\n  { id: '1968', parentId: '1966', name: 'Level 7', subtext: 'id 1968', type: 'Level 7' },\n  { id: '1969', parentId: '1966', name: 'Level 7', subtext: 'id 1969', type: 'Level 7' },\n  { id: '1970', parentId: '1966', name: 'Level 7', subtext: 'id 1970', type: 'Level 7' },\n  { id: '1971', parentId: '1957', name: 'Level 6', subtext: 'id 1971', type: 'Level 6' },\n  { id: '1972', parentId: '1971', name: 'Level 7', subtext: 'id 1972', type: 'Level 7' },\n  { id: '1973', parentId: '1971', name: 'Level 7', subtext: 'id 1973', type: 'Level 7' },\n  { id: '1974', parentId: '1971', name: 'Level 7', subtext: 'id 1974', type: 'Level 7' },\n  { id: '1975', parentId: '1971', name: 'Level 7', subtext: 'id 1975', type: 'Level 7' },\n  { id: '1976', parentId: '1957', name: 'Level 6', subtext: 'id 1976', type: 'Level 6' },\n  { id: '1977', parentId: '1976', name: 'Level 7', subtext: 'id 1977', type: 'Level 7' },\n  { id: '1978', parentId: '1976', name: 'Level 7', subtext: 'id 1978', type: 'Level 7' },\n  { id: '1979', parentId: '1976', name: 'Level 7', subtext: 'id 1979', type: 'Level 7' },\n  { id: '1980', parentId: '1976', name: 'Level 7', subtext: 'id 1980', type: 'Level 7' },\n  { id: '1981', parentId: '1902', name: 'Level 4', subtext: 'id 1981', type: 'Level 4' },\n  { id: '1982', parentId: '1981', name: 'Level 5', subtext: 'id 1982', type: 'Level 5' },\n  { id: '1983', parentId: '1982', name: 'Level 6', subtext: 'id 1983', type: 'Level 6' },\n  { id: '1984', parentId: '1983', name: 'Level 7', subtext: 'id 1984', type: 'Level 7' },\n  { id: '1985', parentId: '1983', name: 'Level 7', subtext: 'id 1985', type: 'Level 7' },\n  { id: '1986', parentId: '1983', name: 'Level 7', subtext: 'id 1986', type: 'Level 7' },\n  { id: '1987', parentId: '1983', name: 'Level 7', subtext: 'id 1987', type: 'Level 7' },\n  { id: '1988', parentId: '1982', name: 'Level 6', subtext: 'id 1988', type: 'Level 6' },\n  { id: '1989', parentId: '1988', name: 'Level 7', subtext: 'id 1989', type: 'Level 7' },\n  { id: '1990', parentId: '1988', name: 'Level 7', subtext: 'id 1990', type: 'Level 7' },\n  { id: '1991', parentId: '1988', name: 'Level 7', subtext: 'id 1991', type: 'Level 7' },\n  { id: '1992', parentId: '1988', name: 'Level 7', subtext: 'id 1992', type: 'Level 7' },\n  { id: '1993', parentId: '1981', name: 'Level 5', subtext: 'id 1993', type: 'Level 5' },\n  { id: '1994', parentId: '1993', name: 'Level 6', subtext: 'id 1994', type: 'Level 6' },\n  { id: '1995', parentId: '1994', name: 'Level 7', subtext: 'id 1995', type: 'Level 7' },\n  { id: '1996', parentId: '1993', name: 'Level 6', subtext: 'id 1996', type: 'Level 6' },\n  { id: '1997', parentId: '1996', name: 'Level 7', subtext: 'id 1997', type: 'Level 7' },\n  { id: '1998', parentId: '1996', name: 'Level 7', subtext: 'id 1998', type: 'Level 7' },\n  { id: '1999', parentId: '1996', name: 'Level 7', subtext: 'id 1999', type: 'Level 7' },\n  { id: '2000', parentId: '1996', name: 'Level 7', subtext: 'id 2000', type: 'Level 7' },\n  { id: '2001', parentId: '1996', name: 'Level 7', subtext: 'id 2001', type: 'Level 7' },\n  { id: '2002', parentId: '1993', name: 'Level 6', subtext: 'id 2002', type: 'Level 6' },\n  { id: '2003', parentId: '2002', name: 'Level 7', subtext: 'id 2003', type: 'Level 7' },\n  { id: '2004', parentId: '1993', name: 'Level 6', subtext: 'id 2004', type: 'Level 6' },\n  { id: '2005', parentId: '2004', name: 'Level 7', subtext: 'id 2005', type: 'Level 7' },\n  { id: '2006', parentId: '2004', name: 'Level 7', subtext: 'id 2006', type: 'Level 7' },\n  { id: '2007', parentId: '2004', name: 'Level 7', subtext: 'id 2007', type: 'Level 7' },\n  { id: '2008', parentId: '2004', name: 'Level 7', subtext: 'id 2008', type: 'Level 7' },\n  { id: '2009', parentId: '1993', name: 'Level 6', subtext: 'id 2009', type: 'Level 6' },\n  { id: '2010', parentId: '2009', name: 'Level 7', subtext: 'id 2010', type: 'Level 7' },\n  { id: '2011', parentId: '1981', name: 'Level 5', subtext: 'id 2011', type: 'Level 5' },\n  { id: '2012', parentId: '2011', name: 'Level 6', subtext: 'id 2012', type: 'Level 6' },\n  { id: '2013', parentId: '2012', name: 'Level 7', subtext: 'id 2013', type: 'Level 7' },\n  { id: '2014', parentId: '2012', name: 'Level 7', subtext: 'id 2014', type: 'Level 7' },\n  { id: '2015', parentId: '2012', name: 'Level 7', subtext: 'id 2015', type: 'Level 7' },\n  { id: '2016', parentId: '2012', name: 'Level 7', subtext: 'id 2016', type: 'Level 7' },\n  { id: '2017', parentId: '2011', name: 'Level 6', subtext: 'id 2017', type: 'Level 6' },\n  { id: '2018', parentId: '2017', name: 'Level 7', subtext: 'id 2018', type: 'Level 7' },\n  { id: '2019', parentId: '2017', name: 'Level 7', subtext: 'id 2019', type: 'Level 7' },\n  { id: '2020', parentId: '2017', name: 'Level 7', subtext: 'id 2020', type: 'Level 7' },\n  { id: '2021', parentId: '2017', name: 'Level 7', subtext: 'id 2021', type: 'Level 7' },\n  { id: '2022', parentId: '2011', name: 'Level 6', subtext: 'id 2022', type: 'Level 6' },\n  { id: '2023', parentId: '2022', name: 'Level 7', subtext: 'id 2023', type: 'Level 7' },\n  { id: '2024', parentId: '2022', name: 'Level 7', subtext: 'id 2024', type: 'Level 7' },\n  { id: '2025', parentId: '2022', name: 'Level 7', subtext: 'id 2025', type: 'Level 7' },\n  { id: '2026', parentId: '2022', name: 'Level 7', subtext: 'id 2026', type: 'Level 7' },\n  { id: '2027', parentId: '2022', name: 'Level 7', subtext: 'id 2027', type: 'Level 7' },\n  { id: '2028', parentId: '2011', name: 'Level 6', subtext: 'id 2028', type: 'Level 6' },\n  { id: '2029', parentId: '2028', name: 'Level 7', subtext: 'id 2029', type: 'Level 7' },\n  { id: '2030', parentId: '2028', name: 'Level 7', subtext: 'id 2030', type: 'Level 7' },\n  { id: '2031', parentId: '2028', name: 'Level 7', subtext: 'id 2031', type: 'Level 7' },\n  { id: '2032', parentId: '2028', name: 'Level 7', subtext: 'id 2032', type: 'Level 7' },\n  { id: '2033', parentId: '2028', name: 'Level 7', subtext: 'id 2033', type: 'Level 7' },\n  { id: '2034', parentId: '2011', name: 'Level 6', subtext: 'id 2034', type: 'Level 6' },\n  { id: '2035', parentId: '2034', name: 'Level 7', subtext: 'id 2035', type: 'Level 7' },\n  { id: '2036', parentId: '2034', name: 'Level 7', subtext: 'id 2036', type: 'Level 7' },\n  { id: '2037', parentId: '2034', name: 'Level 7', subtext: 'id 2037', type: 'Level 7' },\n  { id: '2038', parentId: '2034', name: 'Level 7', subtext: 'id 2038', type: 'Level 7' },\n  { id: '2039', parentId: '1981', name: 'Level 5', subtext: 'id 2039', type: 'Level 5' },\n  { id: '2040', parentId: '2039', name: 'Level 6', subtext: 'id 2040', type: 'Level 6' },\n  { id: '2041', parentId: '2040', name: 'Level 7', subtext: 'id 2041', type: 'Level 7' },\n  { id: '2042', parentId: '2040', name: 'Level 7', subtext: 'id 2042', type: 'Level 7' },\n  { id: '2043', parentId: '1902', name: 'Level 4', subtext: 'id 2043', type: 'Level 4' },\n  { id: '2044', parentId: '2043', name: 'Level 5', subtext: 'id 2044', type: 'Level 5' },\n  { id: '2045', parentId: '2044', name: 'Level 6', subtext: 'id 2045', type: 'Level 6' },\n  { id: '2046', parentId: '2045', name: 'Level 7', subtext: 'id 2046', type: 'Level 7' },\n  { id: '2047', parentId: '2045', name: 'Level 7', subtext: 'id 2047', type: 'Level 7' },\n  { id: '2048', parentId: '2044', name: 'Level 6', subtext: 'id 2048', type: 'Level 6' },\n  { id: '2049', parentId: '2048', name: 'Level 7', subtext: 'id 2049', type: 'Level 7' },\n  { id: '2050', parentId: '2044', name: 'Level 6', subtext: 'id 2050', type: 'Level 6' },\n  { id: '2051', parentId: '2050', name: 'Level 7', subtext: 'id 2051', type: 'Level 7' },\n  { id: '2052', parentId: '2050', name: 'Level 7', subtext: 'id 2052', type: 'Level 7' },\n  { id: '2053', parentId: '2050', name: 'Level 7', subtext: 'id 2053', type: 'Level 7' },\n  { id: '2054', parentId: '2050', name: 'Level 7', subtext: 'id 2054', type: 'Level 7' },\n  { id: '2055', parentId: '2044', name: 'Level 6', subtext: 'id 2055', type: 'Level 6' },\n  { id: '2056', parentId: '2055', name: 'Level 7', subtext: 'id 2056', type: 'Level 7' },\n  { id: '2057', parentId: '2055', name: 'Level 7', subtext: 'id 2057', type: 'Level 7' },\n  { id: '2058', parentId: '2043', name: 'Level 5', subtext: 'id 2058', type: 'Level 5' },\n  { id: '2059', parentId: '2058', name: 'Level 6', subtext: 'id 2059', type: 'Level 6' },\n  { id: '2060', parentId: '2059', name: 'Level 7', subtext: 'id 2060', type: 'Level 7' },\n  { id: '2061', parentId: '2059', name: 'Level 7', subtext: 'id 2061', type: 'Level 7' },\n  { id: '2062', parentId: '2058', name: 'Level 6', subtext: 'id 2062', type: 'Level 6' },\n  { id: '2063', parentId: '2062', name: 'Level 7', subtext: 'id 2063', type: 'Level 7' },\n  { id: '2064', parentId: '2062', name: 'Level 7', subtext: 'id 2064', type: 'Level 7' },\n  { id: '2065', parentId: '2058', name: 'Level 6', subtext: 'id 2065', type: 'Level 6' },\n  { id: '2066', parentId: '2065', name: 'Level 7', subtext: 'id 2066', type: 'Level 7' },\n  { id: '2067', parentId: '2065', name: 'Level 7', subtext: 'id 2067', type: 'Level 7' },\n  { id: '2068', parentId: '2065', name: 'Level 7', subtext: 'id 2068', type: 'Level 7' },\n  { id: '2069', parentId: '2065', name: 'Level 7', subtext: 'id 2069', type: 'Level 7' },\n  { id: '2070', parentId: '2058', name: 'Level 6', subtext: 'id 2070', type: 'Level 6' },\n  { id: '2071', parentId: '2070', name: 'Level 7', subtext: 'id 2071', type: 'Level 7' },\n  { id: '2072', parentId: '2070', name: 'Level 7', subtext: 'id 2072', type: 'Level 7' },\n  { id: '2073', parentId: '2070', name: 'Level 7', subtext: 'id 2073', type: 'Level 7' },\n  { id: '2074', parentId: '2070', name: 'Level 7', subtext: 'id 2074', type: 'Level 7' },\n  { id: '2075', parentId: '2058', name: 'Level 6', subtext: 'id 2075', type: 'Level 6' },\n  { id: '2076', parentId: '2075', name: 'Level 7', subtext: 'id 2076', type: 'Level 7' },\n  { id: '2077', parentId: '2075', name: 'Level 7', subtext: 'id 2077', type: 'Level 7' },\n  { id: '2078', parentId: '1902', name: 'Level 4', subtext: 'id 2078', type: 'Level 4' },\n  { id: '2079', parentId: '2078', name: 'Level 5', subtext: 'id 2079', type: 'Level 5' },\n  { id: '2080', parentId: '2079', name: 'Level 6', subtext: 'id 2080', type: 'Level 6' },\n  { id: '2081', parentId: '2080', name: 'Level 7', subtext: 'id 2081', type: 'Level 7' },\n  { id: '2082', parentId: '2079', name: 'Level 6', subtext: 'id 2082', type: 'Level 6' },\n  { id: '2083', parentId: '2082', name: 'Level 7', subtext: 'id 2083', type: 'Level 7' },\n  { id: '2084', parentId: '2082', name: 'Level 7', subtext: 'id 2084', type: 'Level 7' },\n  { id: '2085', parentId: '2082', name: 'Level 7', subtext: 'id 2085', type: 'Level 7' },\n  { id: '2086', parentId: '2082', name: 'Level 7', subtext: 'id 2086', type: 'Level 7' },\n  { id: '2087', parentId: '2082', name: 'Level 7', subtext: 'id 2087', type: 'Level 7' },\n  { id: '2088', parentId: '2078', name: 'Level 5', subtext: 'id 2088', type: 'Level 5' },\n  { id: '2089', parentId: '2088', name: 'Level 6', subtext: 'id 2089', type: 'Level 6' },\n  { id: '2090', parentId: '2089', name: 'Level 7', subtext: 'id 2090', type: 'Level 7' },\n  { id: '2091', parentId: '2089', name: 'Level 7', subtext: 'id 2091', type: 'Level 7' },\n  { id: '2092', parentId: '2089', name: 'Level 7', subtext: 'id 2092', type: 'Level 7' },\n  { id: '2093', parentId: '2088', name: 'Level 6', subtext: 'id 2093', type: 'Level 6' },\n  { id: '2094', parentId: '2093', name: 'Level 7', subtext: 'id 2094', type: 'Level 7' },\n  { id: '2095', parentId: '2093', name: 'Level 7', subtext: 'id 2095', type: 'Level 7' },\n  { id: '2096', parentId: '2093', name: 'Level 7', subtext: 'id 2096', type: 'Level 7' },\n  { id: '2097', parentId: '2088', name: 'Level 6', subtext: 'id 2097', type: 'Level 6' },\n  { id: '2098', parentId: '2097', name: 'Level 7', subtext: 'id 2098', type: 'Level 7' },\n  { id: '2099', parentId: '2097', name: 'Level 7', subtext: 'id 2099', type: 'Level 7' },\n  { id: '2100', parentId: '2097', name: 'Level 7', subtext: 'id 2100', type: 'Level 7' },\n  { id: '2101', parentId: '2097', name: 'Level 7', subtext: 'id 2101', type: 'Level 7' },\n  { id: '2102', parentId: '2097', name: 'Level 7', subtext: 'id 2102', type: 'Level 7' },\n  { id: '2103', parentId: '2088', name: 'Level 6', subtext: 'id 2103', type: 'Level 6' },\n  { id: '2104', parentId: '2103', name: 'Level 7', subtext: 'id 2104', type: 'Level 7' },\n  { id: '2105', parentId: '2103', name: 'Level 7', subtext: 'id 2105', type: 'Level 7' },\n  { id: '2106', parentId: '2078', name: 'Level 5', subtext: 'id 2106', type: 'Level 5' },\n  { id: '2107', parentId: '2106', name: 'Level 6', subtext: 'id 2107', type: 'Level 6' },\n  { id: '2108', parentId: '2107', name: 'Level 7', subtext: 'id 2108', type: 'Level 7' },\n  { id: '2109', parentId: '2107', name: 'Level 7', subtext: 'id 2109', type: 'Level 7' },\n  { id: '2110', parentId: '2106', name: 'Level 6', subtext: 'id 2110', type: 'Level 6' },\n  { id: '2111', parentId: '2110', name: 'Level 7', subtext: 'id 2111', type: 'Level 7' },\n  { id: '2112', parentId: '2106', name: 'Level 6', subtext: 'id 2112', type: 'Level 6' },\n  { id: '2113', parentId: '2112', name: 'Level 7', subtext: 'id 2113', type: 'Level 7' },\n  { id: '2114', parentId: '2112', name: 'Level 7', subtext: 'id 2114', type: 'Level 7' },\n  { id: '2115', parentId: '2112', name: 'Level 7', subtext: 'id 2115', type: 'Level 7' },\n  { id: '2116', parentId: '2112', name: 'Level 7', subtext: 'id 2116', type: 'Level 7' },\n  { id: '2117', parentId: '2112', name: 'Level 7', subtext: 'id 2117', type: 'Level 7' },\n  { id: '2118', parentId: '2106', name: 'Level 6', subtext: 'id 2118', type: 'Level 6' },\n  { id: '2119', parentId: '2118', name: 'Level 7', subtext: 'id 2119', type: 'Level 7' },\n  { id: '2120', parentId: '2118', name: 'Level 7', subtext: 'id 2120', type: 'Level 7' },\n  { id: '2121', parentId: '2118', name: 'Level 7', subtext: 'id 2121', type: 'Level 7' },\n  { id: '2122', parentId: '2118', name: 'Level 7', subtext: 'id 2122', type: 'Level 7' },\n  { id: '2123', parentId: '2106', name: 'Level 6', subtext: 'id 2123', type: 'Level 6' },\n  { id: '2124', parentId: '2123', name: 'Level 7', subtext: 'id 2124', type: 'Level 7' },\n  { id: '2125', parentId: '2123', name: 'Level 7', subtext: 'id 2125', type: 'Level 7' },\n  { id: '2126', parentId: '2123', name: 'Level 7', subtext: 'id 2126', type: 'Level 7' },\n  { id: '2127', parentId: '2123', name: 'Level 7', subtext: 'id 2127', type: 'Level 7' },\n  { id: '2128', parentId: '2078', name: 'Level 5', subtext: 'id 2128', type: 'Level 5' },\n  { id: '2129', parentId: '2128', name: 'Level 6', subtext: 'id 2129', type: 'Level 6' },\n  { id: '2130', parentId: '2129', name: 'Level 7', subtext: 'id 2130', type: 'Level 7' },\n  { id: '2131', parentId: '2129', name: 'Level 7', subtext: 'id 2131', type: 'Level 7' },\n  { id: '2132', parentId: '2129', name: 'Level 7', subtext: 'id 2132', type: 'Level 7' },\n  { id: '2133', parentId: '2129', name: 'Level 7', subtext: 'id 2133', type: 'Level 7' },\n  { id: '2134', parentId: '2128', name: 'Level 6', subtext: 'id 2134', type: 'Level 6' },\n  { id: '2135', parentId: '2134', name: 'Level 7', subtext: 'id 2135', type: 'Level 7' },\n  { id: '2136', parentId: '2134', name: 'Level 7', subtext: 'id 2136', type: 'Level 7' },\n  { id: '2137', parentId: '2134', name: 'Level 7', subtext: 'id 2137', type: 'Level 7' },\n  { id: '2138', parentId: '2134', name: 'Level 7', subtext: 'id 2138', type: 'Level 7' },\n  { id: '2139', parentId: '2134', name: 'Level 7', subtext: 'id 2139', type: 'Level 7' },\n  { id: '2140', parentId: '2128', name: 'Level 6', subtext: 'id 2140', type: 'Level 6' },\n  { id: '2141', parentId: '2140', name: 'Level 7', subtext: 'id 2141', type: 'Level 7' },\n  { id: '2142', parentId: '2140', name: 'Level 7', subtext: 'id 2142', type: 'Level 7' },\n  { id: '2143', parentId: '2128', name: 'Level 6', subtext: 'id 2143', type: 'Level 6' },\n  { id: '2144', parentId: '2143', name: 'Level 7', subtext: 'id 2144', type: 'Level 7' },\n  { id: '2145', parentId: '2143', name: 'Level 7', subtext: 'id 2145', type: 'Level 7' },\n  { id: '2146', parentId: '2143', name: 'Level 7', subtext: 'id 2146', type: 'Level 7' },\n  { id: '2147', parentId: '1902', name: 'Level 4', subtext: 'id 2147', type: 'Level 4' },\n  { id: '2148', parentId: '2147', name: 'Level 5', subtext: 'id 2148', type: 'Level 5' },\n  { id: '2149', parentId: '2148', name: 'Level 6', subtext: 'id 2149', type: 'Level 6' },\n  { id: '2150', parentId: '2149', name: 'Level 7', subtext: 'id 2150', type: 'Level 7' },\n  { id: '2151', parentId: '2148', name: 'Level 6', subtext: 'id 2151', type: 'Level 6' },\n  { id: '2152', parentId: '2151', name: 'Level 7', subtext: 'id 2152', type: 'Level 7' },\n  { id: '2153', parentId: '2151', name: 'Level 7', subtext: 'id 2153', type: 'Level 7' },\n  { id: '2154', parentId: '2151', name: 'Level 7', subtext: 'id 2154', type: 'Level 7' },\n  { id: '2155', parentId: '2151', name: 'Level 7', subtext: 'id 2155', type: 'Level 7' },\n  { id: '2156', parentId: '2151', name: 'Level 7', subtext: 'id 2156', type: 'Level 7' },\n  { id: '2157', parentId: '2147', name: 'Level 5', subtext: 'id 2157', type: 'Level 5' },\n  { id: '2158', parentId: '2157', name: 'Level 6', subtext: 'id 2158', type: 'Level 6' },\n  { id: '2159', parentId: '2158', name: 'Level 7', subtext: 'id 2159', type: 'Level 7' },\n  { id: '2160', parentId: '2157', name: 'Level 6', subtext: 'id 2160', type: 'Level 6' },\n  { id: '2161', parentId: '2160', name: 'Level 7', subtext: 'id 2161', type: 'Level 7' },\n  { id: '2162', parentId: '2160', name: 'Level 7', subtext: 'id 2162', type: 'Level 7' },\n  { id: '2163', parentId: '2160', name: 'Level 7', subtext: 'id 2163', type: 'Level 7' },\n  { id: '2164', parentId: '2160', name: 'Level 7', subtext: 'id 2164', type: 'Level 7' },\n  { id: '2165', parentId: '2160', name: 'Level 7', subtext: 'id 2165', type: 'Level 7' },\n  { id: '2166', parentId: '2157', name: 'Level 6', subtext: 'id 2166', type: 'Level 6' },\n  { id: '2167', parentId: '2166', name: 'Level 7', subtext: 'id 2167', type: 'Level 7' },\n  { id: '2168', parentId: '1901', name: 'Level 3', subtext: 'id 2168', type: 'Level 3' },\n  { id: '2169', parentId: '2168', name: 'Level 4', subtext: 'id 2169', type: 'Level 4' },\n  { id: '2170', parentId: '2169', name: 'Level 5', subtext: 'id 2170', type: 'Level 5' },\n  { id: '2171', parentId: '2170', name: 'Level 6', subtext: 'id 2171', type: 'Level 6' },\n  { id: '2172', parentId: '2171', name: 'Level 7', subtext: 'id 2172', type: 'Level 7' },\n  { id: '2173', parentId: '2169', name: 'Level 5', subtext: 'id 2173', type: 'Level 5' },\n  { id: '2174', parentId: '2173', name: 'Level 6', subtext: 'id 2174', type: 'Level 6' },\n  { id: '2175', parentId: '2174', name: 'Level 7', subtext: 'id 2175', type: 'Level 7' },\n  { id: '2176', parentId: '2173', name: 'Level 6', subtext: 'id 2176', type: 'Level 6' },\n  { id: '2177', parentId: '2176', name: 'Level 7', subtext: 'id 2177', type: 'Level 7' },\n  { id: '2178', parentId: '2176', name: 'Level 7', subtext: 'id 2178', type: 'Level 7' },\n  { id: '2179', parentId: '2176', name: 'Level 7', subtext: 'id 2179', type: 'Level 7' },\n  { id: '2180', parentId: '2176', name: 'Level 7', subtext: 'id 2180', type: 'Level 7' },\n  { id: '2181', parentId: '2173', name: 'Level 6', subtext: 'id 2181', type: 'Level 6' },\n  { id: '2182', parentId: '2181', name: 'Level 7', subtext: 'id 2182', type: 'Level 7' },\n  { id: '2183', parentId: '2181', name: 'Level 7', subtext: 'id 2183', type: 'Level 7' },\n  { id: '2184', parentId: '2181', name: 'Level 7', subtext: 'id 2184', type: 'Level 7' },\n  { id: '2185', parentId: '2181', name: 'Level 7', subtext: 'id 2185', type: 'Level 7' },\n  { id: '2186', parentId: '2181', name: 'Level 7', subtext: 'id 2186', type: 'Level 7' },\n  { id: '2187', parentId: '2168', name: 'Level 4', subtext: 'id 2187', type: 'Level 4' },\n  { id: '2188', parentId: '2187', name: 'Level 5', subtext: 'id 2188', type: 'Level 5' },\n  { id: '2189', parentId: '2188', name: 'Level 6', subtext: 'id 2189', type: 'Level 6' },\n  { id: '2190', parentId: '2189', name: 'Level 7', subtext: 'id 2190', type: 'Level 7' },\n  { id: '2191', parentId: '2189', name: 'Level 7', subtext: 'id 2191', type: 'Level 7' },\n  { id: '2192', parentId: '2188', name: 'Level 6', subtext: 'id 2192', type: 'Level 6' },\n  { id: '2193', parentId: '2192', name: 'Level 7', subtext: 'id 2193', type: 'Level 7' },\n  { id: '2194', parentId: '2192', name: 'Level 7', subtext: 'id 2194', type: 'Level 7' },\n  { id: '2195', parentId: '2192', name: 'Level 7', subtext: 'id 2195', type: 'Level 7' },\n  { id: '2196', parentId: '2192', name: 'Level 7', subtext: 'id 2196', type: 'Level 7' },\n  { id: '2197', parentId: '2188', name: 'Level 6', subtext: 'id 2197', type: 'Level 6' },\n  { id: '2198', parentId: '2197', name: 'Level 7', subtext: 'id 2198', type: 'Level 7' },\n  { id: '2199', parentId: '2197', name: 'Level 7', subtext: 'id 2199', type: 'Level 7' },\n  { id: '2200', parentId: '2187', name: 'Level 5', subtext: 'id 2200', type: 'Level 5' },\n  { id: '2201', parentId: '2200', name: 'Level 6', subtext: 'id 2201', type: 'Level 6' },\n  { id: '2202', parentId: '2201', name: 'Level 7', subtext: 'id 2202', type: 'Level 7' },\n  { id: '2203', parentId: '2201', name: 'Level 7', subtext: 'id 2203', type: 'Level 7' },\n  { id: '2204', parentId: '2201', name: 'Level 7', subtext: 'id 2204', type: 'Level 7' },\n  { id: '2205', parentId: '2168', name: 'Level 4', subtext: 'id 2205', type: 'Level 4' },\n  { id: '2206', parentId: '2205', name: 'Level 5', subtext: 'id 2206', type: 'Level 5' },\n  { id: '2207', parentId: '2206', name: 'Level 6', subtext: 'id 2207', type: 'Level 6' },\n  { id: '2208', parentId: '2207', name: 'Level 7', subtext: 'id 2208', type: 'Level 7' },\n  { id: '2209', parentId: '2207', name: 'Level 7', subtext: 'id 2209', type: 'Level 7' },\n  { id: '2210', parentId: '2207', name: 'Level 7', subtext: 'id 2210', type: 'Level 7' },\n  { id: '2211', parentId: '2207', name: 'Level 7', subtext: 'id 2211', type: 'Level 7' },\n  { id: '2212', parentId: '2206', name: 'Level 6', subtext: 'id 2212', type: 'Level 6' },\n  { id: '2213', parentId: '2212', name: 'Level 7', subtext: 'id 2213', type: 'Level 7' },\n  { id: '2214', parentId: '2212', name: 'Level 7', subtext: 'id 2214', type: 'Level 7' },\n  { id: '2215', parentId: '2212', name: 'Level 7', subtext: 'id 2215', type: 'Level 7' },\n  { id: '2216', parentId: '2212', name: 'Level 7', subtext: 'id 2216', type: 'Level 7' },\n  { id: '2217', parentId: '2206', name: 'Level 6', subtext: 'id 2217', type: 'Level 6' },\n  { id: '2218', parentId: '2217', name: 'Level 7', subtext: 'id 2218', type: 'Level 7' },\n  { id: '2219', parentId: '2217', name: 'Level 7', subtext: 'id 2219', type: 'Level 7' },\n  { id: '2220', parentId: '2217', name: 'Level 7', subtext: 'id 2220', type: 'Level 7' },\n  { id: '2221', parentId: '2217', name: 'Level 7', subtext: 'id 2221', type: 'Level 7' },\n  { id: '2222', parentId: '2206', name: 'Level 6', subtext: 'id 2222', type: 'Level 6' },\n  { id: '2223', parentId: '2222', name: 'Level 7', subtext: 'id 2223', type: 'Level 7' },\n  { id: '2224', parentId: '2222', name: 'Level 7', subtext: 'id 2224', type: 'Level 7' },\n  { id: '2225', parentId: '2222', name: 'Level 7', subtext: 'id 2225', type: 'Level 7' },\n  { id: '2226', parentId: '2168', name: 'Level 4', subtext: 'id 2226', type: 'Level 4' },\n  { id: '2227', parentId: '2226', name: 'Level 5', subtext: 'id 2227', type: 'Level 5' },\n  { id: '2228', parentId: '2227', name: 'Level 6', subtext: 'id 2228', type: 'Level 6' },\n  { id: '2229', parentId: '2228', name: 'Level 7', subtext: 'id 2229', type: 'Level 7' },\n  { id: '2230', parentId: '2226', name: 'Level 5', subtext: 'id 2230', type: 'Level 5' },\n  { id: '2231', parentId: '2230', name: 'Level 6', subtext: 'id 2231', type: 'Level 6' },\n  { id: '2232', parentId: '2231', name: 'Level 7', subtext: 'id 2232', type: 'Level 7' },\n  { id: '2233', parentId: '2231', name: 'Level 7', subtext: 'id 2233', type: 'Level 7' },\n  { id: '2234', parentId: '2231', name: 'Level 7', subtext: 'id 2234', type: 'Level 7' },\n  { id: '2235', parentId: '2231', name: 'Level 7', subtext: 'id 2235', type: 'Level 7' },\n  { id: '2236', parentId: '2230', name: 'Level 6', subtext: 'id 2236', type: 'Level 6' },\n  { id: '2237', parentId: '2236', name: 'Level 7', subtext: 'id 2237', type: 'Level 7' },\n  { id: '2238', parentId: '2236', name: 'Level 7', subtext: 'id 2238', type: 'Level 7' },\n  { id: '2239', parentId: '2230', name: 'Level 6', subtext: 'id 2239', type: 'Level 6' },\n  { id: '2240', parentId: '2239', name: 'Level 7', subtext: 'id 2240', type: 'Level 7' },\n  { id: '2241', parentId: '2239', name: 'Level 7', subtext: 'id 2241', type: 'Level 7' },\n  { id: '2242', parentId: '2239', name: 'Level 7', subtext: 'id 2242', type: 'Level 7' },\n  { id: '2243', parentId: '2230', name: 'Level 6', subtext: 'id 2243', type: 'Level 6' },\n  { id: '2244', parentId: '2243', name: 'Level 7', subtext: 'id 2244', type: 'Level 7' },\n  { id: '2245', parentId: '2243', name: 'Level 7', subtext: 'id 2245', type: 'Level 7' },\n  { id: '2246', parentId: '2243', name: 'Level 7', subtext: 'id 2246', type: 'Level 7' },\n  { id: '2247', parentId: '2243', name: 'Level 7', subtext: 'id 2247', type: 'Level 7' },\n  { id: '2248', parentId: '2243', name: 'Level 7', subtext: 'id 2248', type: 'Level 7' },\n  { id: '2249', parentId: '1138', name: 'Level 2', subtext: 'id 2249', type: 'Level 2' },\n  { id: '2250', parentId: '2249', name: 'Level 3', subtext: 'id 2250', type: 'Level 3' },\n  { id: '2251', parentId: '2250', name: 'Level 4', subtext: 'id 2251', type: 'Level 4' },\n  { id: '2252', parentId: '2251', name: 'Level 5', subtext: 'id 2252', type: 'Level 5' },\n  { id: '2253', parentId: '2252', name: 'Level 6', subtext: 'id 2253', type: 'Level 6' },\n  { id: '2254', parentId: '2253', name: 'Level 7', subtext: 'id 2254', type: 'Level 7' },\n  { id: '2255', parentId: '2252', name: 'Level 6', subtext: 'id 2255', type: 'Level 6' },\n  { id: '2256', parentId: '2255', name: 'Level 7', subtext: 'id 2256', type: 'Level 7' },\n  { id: '2257', parentId: '2255', name: 'Level 7', subtext: 'id 2257', type: 'Level 7' },\n  { id: '2258', parentId: '2255', name: 'Level 7', subtext: 'id 2258', type: 'Level 7' },\n  { id: '2259', parentId: '2255', name: 'Level 7', subtext: 'id 2259', type: 'Level 7' },\n  { id: '2260', parentId: '2255', name: 'Level 7', subtext: 'id 2260', type: 'Level 7' },\n  { id: '2261', parentId: '1138', name: 'Level 2', subtext: 'id 2261', type: 'Level 2' },\n  { id: '2262', parentId: '2261', name: 'Level 3', subtext: 'id 2262', type: 'Level 3' },\n  { id: '2263', parentId: '2262', name: 'Level 4', subtext: 'id 2263', type: 'Level 4' },\n  { id: '2264', parentId: '2263', name: 'Level 5', subtext: 'id 2264', type: 'Level 5' },\n  { id: '2265', parentId: '2264', name: 'Level 6', subtext: 'id 2265', type: 'Level 6' },\n  { id: '2266', parentId: '2265', name: 'Level 7', subtext: 'id 2266', type: 'Level 7' },\n  { id: '2267', parentId: '2265', name: 'Level 7', subtext: 'id 2267', type: 'Level 7' },\n  { id: '2268', parentId: '2265', name: 'Level 7', subtext: 'id 2268', type: 'Level 7' },\n  { id: '2269', parentId: '2264', name: 'Level 6', subtext: 'id 2269', type: 'Level 6' },\n  { id: '2270', parentId: '2269', name: 'Level 7', subtext: 'id 2270', type: 'Level 7' },\n  { id: '2271', parentId: '2269', name: 'Level 7', subtext: 'id 2271', type: 'Level 7' },\n  { id: '2272', parentId: '2269', name: 'Level 7', subtext: 'id 2272', type: 'Level 7' },\n  { id: '2273', parentId: '2269', name: 'Level 7', subtext: 'id 2273', type: 'Level 7' },\n  { id: '2274', parentId: '2269', name: 'Level 7', subtext: 'id 2274', type: 'Level 7' },\n  { id: '2275', parentId: '2264', name: 'Level 6', subtext: 'id 2275', type: 'Level 6' },\n  { id: '2276', parentId: '2275', name: 'Level 7', subtext: 'id 2276', type: 'Level 7' },\n  { id: '2277', parentId: '2275', name: 'Level 7', subtext: 'id 2277', type: 'Level 7' },\n  { id: '2278', parentId: '2264', name: 'Level 6', subtext: 'id 2278', type: 'Level 6' },\n  { id: '2279', parentId: '2278', name: 'Level 7', subtext: 'id 2279', type: 'Level 7' },\n  { id: '2280', parentId: '2278', name: 'Level 7', subtext: 'id 2280', type: 'Level 7' },\n  { id: '2281', parentId: '2278', name: 'Level 7', subtext: 'id 2281', type: 'Level 7' },\n  { id: '2282', parentId: '2278', name: 'Level 7', subtext: 'id 2282', type: 'Level 7' },\n  { id: '2283', parentId: '2278', name: 'Level 7', subtext: 'id 2283', type: 'Level 7' },\n  { id: '2284', parentId: '2263', name: 'Level 5', subtext: 'id 2284', type: 'Level 5' },\n  { id: '2285', parentId: '2284', name: 'Level 6', subtext: 'id 2285', type: 'Level 6' },\n  { id: '2286', parentId: '2285', name: 'Level 7', subtext: 'id 2286', type: 'Level 7' },\n  { id: '2287', parentId: '2285', name: 'Level 7', subtext: 'id 2287', type: 'Level 7' },\n  { id: '2288', parentId: '2285', name: 'Level 7', subtext: 'id 2288', type: 'Level 7' },\n  { id: '2289', parentId: '2285', name: 'Level 7', subtext: 'id 2289', type: 'Level 7' },\n  { id: '2290', parentId: '2263', name: 'Level 5', subtext: 'id 2290', type: 'Level 5' },\n  { id: '2291', parentId: '2290', name: 'Level 6', subtext: 'id 2291', type: 'Level 6' },\n  { id: '2292', parentId: '2291', name: 'Level 7', subtext: 'id 2292', type: 'Level 7' },\n  { id: '2293', parentId: '2291', name: 'Level 7', subtext: 'id 2293', type: 'Level 7' },\n  { id: '2294', parentId: '2291', name: 'Level 7', subtext: 'id 2294', type: 'Level 7' },\n  { id: '2295', parentId: '2290', name: 'Level 6', subtext: 'id 2295', type: 'Level 6' },\n  { id: '2296', parentId: '2295', name: 'Level 7', subtext: 'id 2296', type: 'Level 7' },\n  { id: '2297', parentId: '2295', name: 'Level 7', subtext: 'id 2297', type: 'Level 7' },\n  { id: '2298', parentId: '2295', name: 'Level 7', subtext: 'id 2298', type: 'Level 7' },\n  { id: '2299', parentId: '2295', name: 'Level 7', subtext: 'id 2299', type: 'Level 7' },\n  { id: '2300', parentId: '2295', name: 'Level 7', subtext: 'id 2300', type: 'Level 7' },\n  { id: '2301', parentId: '2290', name: 'Level 6', subtext: 'id 2301', type: 'Level 6' },\n  { id: '2302', parentId: '2301', name: 'Level 7', subtext: 'id 2302', type: 'Level 7' },\n  { id: '2303', parentId: '2301', name: 'Level 7', subtext: 'id 2303', type: 'Level 7' },\n  { id: '2304', parentId: '2301', name: 'Level 7', subtext: 'id 2304', type: 'Level 7' },\n  { id: '2305', parentId: '2301', name: 'Level 7', subtext: 'id 2305', type: 'Level 7' },\n  { id: '2306', parentId: '2290', name: 'Level 6', subtext: 'id 2306', type: 'Level 6' },\n  { id: '2307', parentId: '2306', name: 'Level 7', subtext: 'id 2307', type: 'Level 7' },\n  { id: '2308', parentId: '2290', name: 'Level 6', subtext: 'id 2308', type: 'Level 6' },\n  { id: '2309', parentId: '2308', name: 'Level 7', subtext: 'id 2309', type: 'Level 7' },\n  { id: '2310', parentId: '2308', name: 'Level 7', subtext: 'id 2310', type: 'Level 7' },\n  { id: '2311', parentId: '2308', name: 'Level 7', subtext: 'id 2311', type: 'Level 7' },\n  { id: '2312', parentId: '2308', name: 'Level 7', subtext: 'id 2312', type: 'Level 7' },\n  { id: '2313', parentId: '2308', name: 'Level 7', subtext: 'id 2313', type: 'Level 7' },\n  { id: '2314', parentId: '2263', name: 'Level 5', subtext: 'id 2314', type: 'Level 5' },\n  { id: '2315', parentId: '2314', name: 'Level 6', subtext: 'id 2315', type: 'Level 6' },\n  { id: '2316', parentId: '2315', name: 'Level 7', subtext: 'id 2316', type: 'Level 7' },\n  { id: '2317', parentId: '2314', name: 'Level 6', subtext: 'id 2317', type: 'Level 6' },\n  { id: '2318', parentId: '2317', name: 'Level 7', subtext: 'id 2318', type: 'Level 7' },\n  { id: '2319', parentId: '2317', name: 'Level 7', subtext: 'id 2319', type: 'Level 7' },\n  { id: '2320', parentId: '2317', name: 'Level 7', subtext: 'id 2320', type: 'Level 7' },\n  { id: '2321', parentId: '2317', name: 'Level 7', subtext: 'id 2321', type: 'Level 7' },\n  { id: '2322', parentId: '2317', name: 'Level 7', subtext: 'id 2322', type: 'Level 7' },\n  { id: '2323', parentId: '2314', name: 'Level 6', subtext: 'id 2323', type: 'Level 6' },\n  { id: '2324', parentId: '2323', name: 'Level 7', subtext: 'id 2324', type: 'Level 7' },\n  { id: '2325', parentId: '2323', name: 'Level 7', subtext: 'id 2325', type: 'Level 7' },\n  { id: '2326', parentId: '2314', name: 'Level 6', subtext: 'id 2326', type: 'Level 6' },\n  { id: '2327', parentId: '2326', name: 'Level 7', subtext: 'id 2327', type: 'Level 7' },\n  { id: '2328', parentId: '2263', name: 'Level 5', subtext: 'id 2328', type: 'Level 5' },\n  { id: '2329', parentId: '2328', name: 'Level 6', subtext: 'id 2329', type: 'Level 6' },\n  { id: '2330', parentId: '2329', name: 'Level 7', subtext: 'id 2330', type: 'Level 7' },\n  { id: '2331', parentId: '2329', name: 'Level 7', subtext: 'id 2331', type: 'Level 7' },\n  { id: '2332', parentId: '2329', name: 'Level 7', subtext: 'id 2332', type: 'Level 7' },\n  { id: '2333', parentId: '2329', name: 'Level 7', subtext: 'id 2333', type: 'Level 7' },\n  { id: '2334', parentId: '2329', name: 'Level 7', subtext: 'id 2334', type: 'Level 7' },\n  { id: '2335', parentId: '2328', name: 'Level 6', subtext: 'id 2335', type: 'Level 6' },\n  { id: '2336', parentId: '2335', name: 'Level 7', subtext: 'id 2336', type: 'Level 7' },\n  { id: '2337', parentId: '2328', name: 'Level 6', subtext: 'id 2337', type: 'Level 6' },\n  { id: '2338', parentId: '2337', name: 'Level 7', subtext: 'id 2338', type: 'Level 7' },\n  { id: '2339', parentId: '2337', name: 'Level 7', subtext: 'id 2339', type: 'Level 7' },\n  { id: '2340', parentId: '2337', name: 'Level 7', subtext: 'id 2340', type: 'Level 7' },\n  { id: '2341', parentId: '2262', name: 'Level 4', subtext: 'id 2341', type: 'Level 4' },\n  { id: '2342', parentId: '2341', name: 'Level 5', subtext: 'id 2342', type: 'Level 5' },\n  { id: '2343', parentId: '2342', name: 'Level 6', subtext: 'id 2343', type: 'Level 6' },\n  { id: '2344', parentId: '2343', name: 'Level 7', subtext: 'id 2344', type: 'Level 7' },\n  { id: '2345', parentId: '2343', name: 'Level 7', subtext: 'id 2345', type: 'Level 7' },\n  { id: '2346', parentId: '2342', name: 'Level 6', subtext: 'id 2346', type: 'Level 6' },\n  { id: '2347', parentId: '2346', name: 'Level 7', subtext: 'id 2347', type: 'Level 7' },\n  { id: '2348', parentId: '2346', name: 'Level 7', subtext: 'id 2348', type: 'Level 7' },\n  { id: '2349', parentId: '2346', name: 'Level 7', subtext: 'id 2349', type: 'Level 7' },\n  { id: '2350', parentId: '2346', name: 'Level 7', subtext: 'id 2350', type: 'Level 7' },\n  { id: '2351', parentId: '2346', name: 'Level 7', subtext: 'id 2351', type: 'Level 7' },\n  { id: '2352', parentId: '2342', name: 'Level 6', subtext: 'id 2352', type: 'Level 6' },\n  { id: '2353', parentId: '2352', name: 'Level 7', subtext: 'id 2353', type: 'Level 7' },\n  { id: '2354', parentId: '2352', name: 'Level 7', subtext: 'id 2354', type: 'Level 7' },\n  { id: '2355', parentId: '2352', name: 'Level 7', subtext: 'id 2355', type: 'Level 7' },\n  { id: '2356', parentId: '2352', name: 'Level 7', subtext: 'id 2356', type: 'Level 7' },\n  { id: '2357', parentId: '2342', name: 'Level 6', subtext: 'id 2357', type: 'Level 6' },\n  { id: '2358', parentId: '2357', name: 'Level 7', subtext: 'id 2358', type: 'Level 7' },\n  { id: '2359', parentId: '2357', name: 'Level 7', subtext: 'id 2359', type: 'Level 7' },\n  { id: '2360', parentId: '2342', name: 'Level 6', subtext: 'id 2360', type: 'Level 6' },\n  { id: '2361', parentId: '2360', name: 'Level 7', subtext: 'id 2361', type: 'Level 7' },\n  { id: '2362', parentId: '2360', name: 'Level 7', subtext: 'id 2362', type: 'Level 7' },\n  { id: '2363', parentId: '2360', name: 'Level 7', subtext: 'id 2363', type: 'Level 7' },\n  { id: '2364', parentId: '2360', name: 'Level 7', subtext: 'id 2364', type: 'Level 7' },\n  { id: '2365', parentId: '2360', name: 'Level 7', subtext: 'id 2365', type: 'Level 7' },\n  { id: '2366', parentId: '2341', name: 'Level 5', subtext: 'id 2366', type: 'Level 5' },\n  { id: '2367', parentId: '2366', name: 'Level 6', subtext: 'id 2367', type: 'Level 6' },\n  { id: '2368', parentId: '2367', name: 'Level 7', subtext: 'id 2368', type: 'Level 7' },\n  { id: '2369', parentId: '2367', name: 'Level 7', subtext: 'id 2369', type: 'Level 7' },\n  { id: '2370', parentId: '2367', name: 'Level 7', subtext: 'id 2370', type: 'Level 7' },\n  { id: '2371', parentId: '2261', name: 'Level 3', subtext: 'id 2371', type: 'Level 3' },\n  { id: '2372', parentId: '2371', name: 'Level 4', subtext: 'id 2372', type: 'Level 4' },\n  { id: '2373', parentId: '2372', name: 'Level 5', subtext: 'id 2373', type: 'Level 5' },\n  { id: '2374', parentId: '2373', name: 'Level 6', subtext: 'id 2374', type: 'Level 6' },\n  { id: '2375', parentId: '2374', name: 'Level 7', subtext: 'id 2375', type: 'Level 7' },\n  { id: '2376', parentId: '2374', name: 'Level 7', subtext: 'id 2376', type: 'Level 7' },\n  { id: '2377', parentId: '2374', name: 'Level 7', subtext: 'id 2377', type: 'Level 7' },\n  { id: '2378', parentId: '2372', name: 'Level 5', subtext: 'id 2378', type: 'Level 5' },\n  { id: '2379', parentId: '2378', name: 'Level 6', subtext: 'id 2379', type: 'Level 6' },\n  { id: '2380', parentId: '2379', name: 'Level 7', subtext: 'id 2380', type: 'Level 7' },\n  { id: '2381', parentId: '2379', name: 'Level 7', subtext: 'id 2381', type: 'Level 7' },\n  { id: '2382', parentId: '2378', name: 'Level 6', subtext: 'id 2382', type: 'Level 6' },\n  { id: '2383', parentId: '2382', name: 'Level 7', subtext: 'id 2383', type: 'Level 7' },\n  { id: '2384', parentId: '2378', name: 'Level 6', subtext: 'id 2384', type: 'Level 6' },\n  { id: '2385', parentId: '2384', name: 'Level 7', subtext: 'id 2385', type: 'Level 7' },\n  { id: '2386', parentId: '2378', name: 'Level 6', subtext: 'id 2386', type: 'Level 6' },\n  { id: '2387', parentId: '2386', name: 'Level 7', subtext: 'id 2387', type: 'Level 7' },\n  { id: '2388', parentId: '2386', name: 'Level 7', subtext: 'id 2388', type: 'Level 7' },\n  { id: '2389', parentId: '2386', name: 'Level 7', subtext: 'id 2389', type: 'Level 7' },\n  { id: '2390', parentId: '2372', name: 'Level 5', subtext: 'id 2390', type: 'Level 5' },\n  { id: '2391', parentId: '2390', name: 'Level 6', subtext: 'id 2391', type: 'Level 6' },\n  { id: '2392', parentId: '2391', name: 'Level 7', subtext: 'id 2392', type: 'Level 7' },\n  { id: '2393', parentId: '2391', name: 'Level 7', subtext: 'id 2393', type: 'Level 7' },\n  { id: '2394', parentId: '2391', name: 'Level 7', subtext: 'id 2394', type: 'Level 7' },\n  { id: '2395', parentId: '2391', name: 'Level 7', subtext: 'id 2395', type: 'Level 7' },\n  { id: '2396', parentId: '2391', name: 'Level 7', subtext: 'id 2396', type: 'Level 7' },\n  { id: '2397', parentId: '2390', name: 'Level 6', subtext: 'id 2397', type: 'Level 6' },\n  { id: '2398', parentId: '2397', name: 'Level 7', subtext: 'id 2398', type: 'Level 7' },\n  { id: '2399', parentId: '2397', name: 'Level 7', subtext: 'id 2399', type: 'Level 7' },\n  { id: '2400', parentId: '2390', name: 'Level 6', subtext: 'id 2400', type: 'Level 6' },\n  { id: '2401', parentId: '2400', name: 'Level 7', subtext: 'id 2401', type: 'Level 7' },\n  { id: '2402', parentId: '2400', name: 'Level 7', subtext: 'id 2402', type: 'Level 7' },\n  { id: '2403', parentId: '2400', name: 'Level 7', subtext: 'id 2403', type: 'Level 7' },\n  { id: '2404', parentId: '2390', name: 'Level 6', subtext: 'id 2404', type: 'Level 6' },\n  { id: '2405', parentId: '2404', name: 'Level 7', subtext: 'id 2405', type: 'Level 7' },\n  { id: '2406', parentId: '2404', name: 'Level 7', subtext: 'id 2406', type: 'Level 7' },\n  { id: '2407', parentId: '2404', name: 'Level 7', subtext: 'id 2407', type: 'Level 7' },\n  { id: '2408', parentId: '2404', name: 'Level 7', subtext: 'id 2408', type: 'Level 7' },\n  { id: '2409', parentId: '2404', name: 'Level 7', subtext: 'id 2409', type: 'Level 7' },\n  { id: '2410', parentId: '2390', name: 'Level 6', subtext: 'id 2410', type: 'Level 6' },\n  { id: '2411', parentId: '2410', name: 'Level 7', subtext: 'id 2411', type: 'Level 7' },\n  { id: '2412', parentId: '2410', name: 'Level 7', subtext: 'id 2412', type: 'Level 7' },\n  { id: '2413', parentId: '2410', name: 'Level 7', subtext: 'id 2413', type: 'Level 7' },\n  { id: '2414', parentId: '2372', name: 'Level 5', subtext: 'id 2414', type: 'Level 5' },\n  { id: '2415', parentId: '2414', name: 'Level 6', subtext: 'id 2415', type: 'Level 6' },\n  { id: '2416', parentId: '2415', name: 'Level 7', subtext: 'id 2416', type: 'Level 7' },\n  { id: '2417', parentId: '2415', name: 'Level 7', subtext: 'id 2417', type: 'Level 7' },\n  { id: '2418', parentId: '2415', name: 'Level 7', subtext: 'id 2418', type: 'Level 7' },\n  { id: '2419', parentId: '2415', name: 'Level 7', subtext: 'id 2419', type: 'Level 7' },\n  { id: '2420', parentId: '2415', name: 'Level 7', subtext: 'id 2420', type: 'Level 7' },\n  { id: '2421', parentId: '2414', name: 'Level 6', subtext: 'id 2421', type: 'Level 6' },\n  { id: '2422', parentId: '2421', name: 'Level 7', subtext: 'id 2422', type: 'Level 7' },\n  { id: '2423', parentId: '2421', name: 'Level 7', subtext: 'id 2423', type: 'Level 7' },\n  { id: '2424', parentId: '2421', name: 'Level 7', subtext: 'id 2424', type: 'Level 7' },\n  { id: '2425', parentId: '2421', name: 'Level 7', subtext: 'id 2425', type: 'Level 7' },\n  { id: '2426', parentId: '2414', name: 'Level 6', subtext: 'id 2426', type: 'Level 6' },\n  { id: '2427', parentId: '2426', name: 'Level 7', subtext: 'id 2427', type: 'Level 7' },\n  { id: '2428', parentId: '2426', name: 'Level 7', subtext: 'id 2428', type: 'Level 7' },\n  { id: '2429', parentId: '2426', name: 'Level 7', subtext: 'id 2429', type: 'Level 7' },\n  { id: '2430', parentId: '2371', name: 'Level 4', subtext: 'id 2430', type: 'Level 4' },\n  { id: '2431', parentId: '2430', name: 'Level 5', subtext: 'id 2431', type: 'Level 5' },\n  { id: '2432', parentId: '2431', name: 'Level 6', subtext: 'id 2432', type: 'Level 6' },\n  { id: '2433', parentId: '2432', name: 'Level 7', subtext: 'id 2433', type: 'Level 7' },\n  { id: '2434', parentId: '2432', name: 'Level 7', subtext: 'id 2434', type: 'Level 7' },\n  { id: '2435', parentId: '2432', name: 'Level 7', subtext: 'id 2435', type: 'Level 7' },\n  { id: '2436', parentId: '2431', name: 'Level 6', subtext: 'id 2436', type: 'Level 6' },\n  { id: '2437', parentId: '2436', name: 'Level 7', subtext: 'id 2437', type: 'Level 7' },\n  { id: '2438', parentId: '2436', name: 'Level 7', subtext: 'id 2438', type: 'Level 7' },\n  { id: '2439', parentId: '2436', name: 'Level 7', subtext: 'id 2439', type: 'Level 7' },\n  { id: '2440', parentId: '2430', name: 'Level 5', subtext: 'id 2440', type: 'Level 5' },\n  { id: '2441', parentId: '2440', name: 'Level 6', subtext: 'id 2441', type: 'Level 6' },\n  { id: '2442', parentId: '2441', name: 'Level 7', subtext: 'id 2442', type: 'Level 7' },\n  { id: '2443', parentId: '2441', name: 'Level 7', subtext: 'id 2443', type: 'Level 7' },\n  { id: '2444', parentId: '2441', name: 'Level 7', subtext: 'id 2444', type: 'Level 7' },\n  { id: '2445', parentId: '2441', name: 'Level 7', subtext: 'id 2445', type: 'Level 7' },\n  { id: '2446', parentId: '2441', name: 'Level 7', subtext: 'id 2446', type: 'Level 7' },\n  { id: '2447', parentId: '2430', name: 'Level 5', subtext: 'id 2447', type: 'Level 5' },\n  { id: '2448', parentId: '2447', name: 'Level 6', subtext: 'id 2448', type: 'Level 6' },\n  { id: '2449', parentId: '2448', name: 'Level 7', subtext: 'id 2449', type: 'Level 7' },\n  { id: '2450', parentId: '2448', name: 'Level 7', subtext: 'id 2450', type: 'Level 7' },\n  { id: '2451', parentId: '2448', name: 'Level 7', subtext: 'id 2451', type: 'Level 7' },\n  { id: '2452', parentId: '2448', name: 'Level 7', subtext: 'id 2452', type: 'Level 7' },\n  { id: '2453', parentId: '2430', name: 'Level 5', subtext: 'id 2453', type: 'Level 5' },\n  { id: '2454', parentId: '2453', name: 'Level 6', subtext: 'id 2454', type: 'Level 6' },\n  { id: '2455', parentId: '2454', name: 'Level 7', subtext: 'id 2455', type: 'Level 7' },\n  { id: '2456', parentId: '2454', name: 'Level 7', subtext: 'id 2456', type: 'Level 7' },\n  { id: '2457', parentId: '2454', name: 'Level 7', subtext: 'id 2457', type: 'Level 7' },\n  { id: '2458', parentId: '2454', name: 'Level 7', subtext: 'id 2458', type: 'Level 7' },\n  { id: '2459', parentId: '2453', name: 'Level 6', subtext: 'id 2459', type: 'Level 6' },\n  { id: '2460', parentId: '2459', name: 'Level 7', subtext: 'id 2460', type: 'Level 7' },\n  { id: '2461', parentId: '2459', name: 'Level 7', subtext: 'id 2461', type: 'Level 7' },\n  { id: '2462', parentId: '2459', name: 'Level 7', subtext: 'id 2462', type: 'Level 7' },\n  { id: '2463', parentId: '2453', name: 'Level 6', subtext: 'id 2463', type: 'Level 6' },\n  { id: '2464', parentId: '2463', name: 'Level 7', subtext: 'id 2464', type: 'Level 7' },\n  { id: '2465', parentId: '2453', name: 'Level 6', subtext: 'id 2465', type: 'Level 6' },\n  { id: '2466', parentId: '2465', name: 'Level 7', subtext: 'id 2466', type: 'Level 7' },\n  { id: '2467', parentId: '2465', name: 'Level 7', subtext: 'id 2467', type: 'Level 7' },\n  { id: '2468', parentId: '2465', name: 'Level 7', subtext: 'id 2468', type: 'Level 7' },\n  { id: '2469', parentId: '2465', name: 'Level 7', subtext: 'id 2469', type: 'Level 7' },\n  { id: '2470', parentId: '2453', name: 'Level 6', subtext: 'id 2470', type: 'Level 6' },\n  { id: '2471', parentId: '2470', name: 'Level 7', subtext: 'id 2471', type: 'Level 7' },\n  { id: '2472', parentId: '2470', name: 'Level 7', subtext: 'id 2472', type: 'Level 7' },\n  { id: '2473', parentId: '2470', name: 'Level 7', subtext: 'id 2473', type: 'Level 7' },\n  { id: '2474', parentId: '2470', name: 'Level 7', subtext: 'id 2474', type: 'Level 7' },\n  { id: '2475', parentId: '2470', name: 'Level 7', subtext: 'id 2475', type: 'Level 7' },\n  { id: '2476', parentId: '2371', name: 'Level 4', subtext: 'id 2476', type: 'Level 4' },\n  { id: '2477', parentId: '2476', name: 'Level 5', subtext: 'id 2477', type: 'Level 5' },\n  { id: '2478', parentId: '2477', name: 'Level 6', subtext: 'id 2478', type: 'Level 6' },\n  { id: '2479', parentId: '2478', name: 'Level 7', subtext: 'id 2479', type: 'Level 7' },\n  { id: '2480', parentId: '2478', name: 'Level 7', subtext: 'id 2480', type: 'Level 7' },\n  { id: '2481', parentId: '2478', name: 'Level 7', subtext: 'id 2481', type: 'Level 7' },\n  { id: '2482', parentId: '2477', name: 'Level 6', subtext: 'id 2482', type: 'Level 6' },\n  { id: '2483', parentId: '2482', name: 'Level 7', subtext: 'id 2483', type: 'Level 7' },\n  { id: '2484', parentId: '2482', name: 'Level 7', subtext: 'id 2484', type: 'Level 7' },\n  { id: '2485', parentId: '2482', name: 'Level 7', subtext: 'id 2485', type: 'Level 7' },\n  { id: '2486', parentId: '2482', name: 'Level 7', subtext: 'id 2486', type: 'Level 7' },\n  { id: '2487', parentId: '2482', name: 'Level 7', subtext: 'id 2487', type: 'Level 7' },\n  { id: '2488', parentId: '2476', name: 'Level 5', subtext: 'id 2488', type: 'Level 5' },\n  { id: '2489', parentId: '2488', name: 'Level 6', subtext: 'id 2489', type: 'Level 6' },\n  { id: '2490', parentId: '2489', name: 'Level 7', subtext: 'id 2490', type: 'Level 7' },\n  { id: '2491', parentId: '2489', name: 'Level 7', subtext: 'id 2491', type: 'Level 7' },\n  { id: '2492', parentId: '2489', name: 'Level 7', subtext: 'id 2492', type: 'Level 7' },\n  { id: '2493', parentId: '2488', name: 'Level 6', subtext: 'id 2493', type: 'Level 6' },\n  { id: '2494', parentId: '2493', name: 'Level 7', subtext: 'id 2494', type: 'Level 7' },\n  { id: '2495', parentId: '2488', name: 'Level 6', subtext: 'id 2495', type: 'Level 6' },\n  { id: '2496', parentId: '2495', name: 'Level 7', subtext: 'id 2496', type: 'Level 7' },\n  { id: '2497', parentId: '2495', name: 'Level 7', subtext: 'id 2497', type: 'Level 7' },\n  { id: '2498', parentId: '2495', name: 'Level 7', subtext: 'id 2498', type: 'Level 7' },\n  { id: '2499', parentId: '2495', name: 'Level 7', subtext: 'id 2499', type: 'Level 7' },\n  { id: '2500', parentId: '2495', name: 'Level 7', subtext: 'id 2500', type: 'Level 7' },\n  { id: '2501', parentId: '2476', name: 'Level 5', subtext: 'id 2501', type: 'Level 5' },\n  { id: '2502', parentId: '2501', name: 'Level 6', subtext: 'id 2502', type: 'Level 6' },\n  { id: '2503', parentId: '2502', name: 'Level 7', subtext: 'id 2503', type: 'Level 7' },\n  { id: '2504', parentId: '2502', name: 'Level 7', subtext: 'id 2504', type: 'Level 7' },\n  { id: '2505', parentId: '2502', name: 'Level 7', subtext: 'id 2505', type: 'Level 7' },\n  { id: '2506', parentId: '2502', name: 'Level 7', subtext: 'id 2506', type: 'Level 7' },\n  { id: '2507', parentId: '2501', name: 'Level 6', subtext: 'id 2507', type: 'Level 6' },\n  { id: '2508', parentId: '2507', name: 'Level 7', subtext: 'id 2508', type: 'Level 7' },\n  { id: '2509', parentId: '2507', name: 'Level 7', subtext: 'id 2509', type: 'Level 7' },\n  { id: '2510', parentId: '2507', name: 'Level 7', subtext: 'id 2510', type: 'Level 7' },\n  { id: '2511', parentId: '2507', name: 'Level 7', subtext: 'id 2511', type: 'Level 7' },\n  { id: '2512', parentId: '2507', name: 'Level 7', subtext: 'id 2512', type: 'Level 7' },\n  { id: '2513', parentId: '2501', name: 'Level 6', subtext: 'id 2513', type: 'Level 6' },\n  { id: '2514', parentId: '2513', name: 'Level 7', subtext: 'id 2514', type: 'Level 7' },\n  { id: '2515', parentId: '2513', name: 'Level 7', subtext: 'id 2515', type: 'Level 7' },\n  { id: '2516', parentId: '2513', name: 'Level 7', subtext: 'id 2516', type: 'Level 7' },\n  { id: '2517', parentId: '2513', name: 'Level 7', subtext: 'id 2517', type: 'Level 7' },\n  { id: '2518', parentId: '2501', name: 'Level 6', subtext: 'id 2518', type: 'Level 6' },\n  { id: '2519', parentId: '2518', name: 'Level 7', subtext: 'id 2519', type: 'Level 7' },\n  { id: '2520', parentId: '2518', name: 'Level 7', subtext: 'id 2520', type: 'Level 7' },\n  { id: '2521', parentId: '2518', name: 'Level 7', subtext: 'id 2521', type: 'Level 7' },\n  { id: '2522', parentId: '2501', name: 'Level 6', subtext: 'id 2522', type: 'Level 6' },\n  { id: '2523', parentId: '2522', name: 'Level 7', subtext: 'id 2523', type: 'Level 7' },\n  { id: '2524', parentId: '2261', name: 'Level 3', subtext: 'id 2524', type: 'Level 3' },\n  { id: '2525', parentId: '2524', name: 'Level 4', subtext: 'id 2525', type: 'Level 4' },\n  { id: '2526', parentId: '2525', name: 'Level 5', subtext: 'id 2526', type: 'Level 5' },\n  { id: '2527', parentId: '2526', name: 'Level 6', subtext: 'id 2527', type: 'Level 6' },\n  { id: '2528', parentId: '2527', name: 'Level 7', subtext: 'id 2528', type: 'Level 7' },\n  { id: '2529', parentId: '2527', name: 'Level 7', subtext: 'id 2529', type: 'Level 7' },\n  { id: '2530', parentId: '2527', name: 'Level 7', subtext: 'id 2530', type: 'Level 7' },\n  { id: '2531', parentId: '2527', name: 'Level 7', subtext: 'id 2531', type: 'Level 7' },\n  { id: '2532', parentId: '2526', name: 'Level 6', subtext: 'id 2532', type: 'Level 6' },\n  { id: '2533', parentId: '2532', name: 'Level 7', subtext: 'id 2533', type: 'Level 7' },\n  { id: '2534', parentId: '2532', name: 'Level 7', subtext: 'id 2534', type: 'Level 7' },\n  { id: '2535', parentId: '2532', name: 'Level 7', subtext: 'id 2535', type: 'Level 7' },\n  { id: '2536', parentId: '2525', name: 'Level 5', subtext: 'id 2536', type: 'Level 5' },\n  { id: '2537', parentId: '2536', name: 'Level 6', subtext: 'id 2537', type: 'Level 6' },\n  { id: '2538', parentId: '2537', name: 'Level 7', subtext: 'id 2538', type: 'Level 7' },\n  { id: '2539', parentId: '2537', name: 'Level 7', subtext: 'id 2539', type: 'Level 7' },\n  { id: '2540', parentId: '2536', name: 'Level 6', subtext: 'id 2540', type: 'Level 6' },\n  { id: '2541', parentId: '2540', name: 'Level 7', subtext: 'id 2541', type: 'Level 7' },\n  { id: '2542', parentId: '2540', name: 'Level 7', subtext: 'id 2542', type: 'Level 7' },\n  { id: '2543', parentId: '2540', name: 'Level 7', subtext: 'id 2543', type: 'Level 7' },\n  { id: '2544', parentId: '2540', name: 'Level 7', subtext: 'id 2544', type: 'Level 7' },\n  { id: '2545', parentId: '2536', name: 'Level 6', subtext: 'id 2545', type: 'Level 6' },\n  { id: '2546', parentId: '2545', name: 'Level 7', subtext: 'id 2546', type: 'Level 7' },\n  { id: '2547', parentId: '2536', name: 'Level 6', subtext: 'id 2547', type: 'Level 6' },\n  { id: '2548', parentId: '2547', name: 'Level 7', subtext: 'id 2548', type: 'Level 7' },\n  { id: '2549', parentId: '2547', name: 'Level 7', subtext: 'id 2549', type: 'Level 7' },\n  { id: '2550', parentId: '2547', name: 'Level 7', subtext: 'id 2550', type: 'Level 7' },\n  { id: '2551', parentId: '2547', name: 'Level 7', subtext: 'id 2551', type: 'Level 7' },\n  { id: '2552', parentId: '2536', name: 'Level 6', subtext: 'id 2552', type: 'Level 6' },\n  { id: '2553', parentId: '2552', name: 'Level 7', subtext: 'id 2553', type: 'Level 7' },\n  { id: '2554', parentId: '2524', name: 'Level 4', subtext: 'id 2554', type: 'Level 4' },\n  { id: '2555', parentId: '2554', name: 'Level 5', subtext: 'id 2555', type: 'Level 5' },\n  { id: '2556', parentId: '2555', name: 'Level 6', subtext: 'id 2556', type: 'Level 6' },\n  { id: '2557', parentId: '2556', name: 'Level 7', subtext: 'id 2557', type: 'Level 7' },\n  { id: '2558', parentId: '2524', name: 'Level 4', subtext: 'id 2558', type: 'Level 4' },\n  { id: '2559', parentId: '2558', name: 'Level 5', subtext: 'id 2559', type: 'Level 5' },\n  { id: '2560', parentId: '2559', name: 'Level 6', subtext: 'id 2560', type: 'Level 6' },\n  { id: '2561', parentId: '2560', name: 'Level 7', subtext: 'id 2561', type: 'Level 7' },\n  { id: '2562', parentId: '2560', name: 'Level 7', subtext: 'id 2562', type: 'Level 7' },\n  { id: '2563', parentId: '2560', name: 'Level 7', subtext: 'id 2563', type: 'Level 7' },\n  { id: '2564', parentId: '2560', name: 'Level 7', subtext: 'id 2564', type: 'Level 7' },\n  { id: '2565', parentId: '2559', name: 'Level 6', subtext: 'id 2565', type: 'Level 6' },\n  { id: '2566', parentId: '2565', name: 'Level 7', subtext: 'id 2566', type: 'Level 7' },\n  { id: '2567', parentId: '2565', name: 'Level 7', subtext: 'id 2567', type: 'Level 7' },\n  { id: '2568', parentId: '2565', name: 'Level 7', subtext: 'id 2568', type: 'Level 7' },\n  { id: '2569', parentId: '2559', name: 'Level 6', subtext: 'id 2569', type: 'Level 6' },\n  { id: '2570', parentId: '2569', name: 'Level 7', subtext: 'id 2570', type: 'Level 7' },\n  { id: '2571', parentId: '2569', name: 'Level 7', subtext: 'id 2571', type: 'Level 7' },\n  { id: '2572', parentId: '2569', name: 'Level 7', subtext: 'id 2572', type: 'Level 7' },\n  { id: '2573', parentId: '2569', name: 'Level 7', subtext: 'id 2573', type: 'Level 7' },\n  { id: '2574', parentId: '2569', name: 'Level 7', subtext: 'id 2574', type: 'Level 7' },\n  { id: '2575', parentId: '2558', name: 'Level 5', subtext: 'id 2575', type: 'Level 5' },\n  { id: '2576', parentId: '2575', name: 'Level 6', subtext: 'id 2576', type: 'Level 6' },\n  { id: '2577', parentId: '2576', name: 'Level 7', subtext: 'id 2577', type: 'Level 7' },\n  { id: '2578', parentId: '2576', name: 'Level 7', subtext: 'id 2578', type: 'Level 7' },\n  { id: '2579', parentId: '2576', name: 'Level 7', subtext: 'id 2579', type: 'Level 7' },\n  { id: '2580', parentId: '2575', name: 'Level 6', subtext: 'id 2580', type: 'Level 6' },\n  { id: '2581', parentId: '2580', name: 'Level 7', subtext: 'id 2581', type: 'Level 7' },\n  { id: '2582', parentId: '2580', name: 'Level 7', subtext: 'id 2582', type: 'Level 7' },\n  { id: '2583', parentId: '2575', name: 'Level 6', subtext: 'id 2583', type: 'Level 6' },\n  { id: '2584', parentId: '2583', name: 'Level 7', subtext: 'id 2584', type: 'Level 7' },\n  { id: '2585', parentId: '2583', name: 'Level 7', subtext: 'id 2585', type: 'Level 7' },\n  { id: '2586', parentId: '2583', name: 'Level 7', subtext: 'id 2586', type: 'Level 7' },\n  { id: '2587', parentId: '2558', name: 'Level 5', subtext: 'id 2587', type: 'Level 5' },\n  { id: '2588', parentId: '2587', name: 'Level 6', subtext: 'id 2588', type: 'Level 6' },\n  { id: '2589', parentId: '2588', name: 'Level 7', subtext: 'id 2589', type: 'Level 7' },\n  { id: '2590', parentId: '2588', name: 'Level 7', subtext: 'id 2590', type: 'Level 7' },\n  { id: '2591', parentId: '2588', name: 'Level 7', subtext: 'id 2591', type: 'Level 7' },\n  { id: '2592', parentId: '2588', name: 'Level 7', subtext: 'id 2592', type: 'Level 7' },\n  { id: '2593', parentId: '2588', name: 'Level 7', subtext: 'id 2593', type: 'Level 7' },\n  { id: '2594', parentId: '2587', name: 'Level 6', subtext: 'id 2594', type: 'Level 6' },\n  { id: '2595', parentId: '2594', name: 'Level 7', subtext: 'id 2595', type: 'Level 7' },\n  { id: '2596', parentId: '2594', name: 'Level 7', subtext: 'id 2596', type: 'Level 7' },\n  { id: '2597', parentId: '2587', name: 'Level 6', subtext: 'id 2597', type: 'Level 6' },\n  { id: '2598', parentId: '2597', name: 'Level 7', subtext: 'id 2598', type: 'Level 7' },\n  { id: '2599', parentId: '2597', name: 'Level 7', subtext: 'id 2599', type: 'Level 7' },\n  { id: '2600', parentId: '2597', name: 'Level 7', subtext: 'id 2600', type: 'Level 7' },\n  { id: '2601', parentId: '2597', name: 'Level 7', subtext: 'id 2601', type: 'Level 7' },\n  { id: '2602', parentId: '2558', name: 'Level 5', subtext: 'id 2602', type: 'Level 5' },\n  { id: '2603', parentId: '2602', name: 'Level 6', subtext: 'id 2603', type: 'Level 6' },\n  { id: '2604', parentId: '2603', name: 'Level 7', subtext: 'id 2604', type: 'Level 7' },\n  { id: '2605', parentId: '2603', name: 'Level 7', subtext: 'id 2605', type: 'Level 7' },\n  { id: '2606', parentId: '2603', name: 'Level 7', subtext: 'id 2606', type: 'Level 7' },\n  { id: '2607', parentId: '2602', name: 'Level 6', subtext: 'id 2607', type: 'Level 6' },\n  { id: '2608', parentId: '2607', name: 'Level 7', subtext: 'id 2608', type: 'Level 7' },\n  { id: '2609', parentId: '2607', name: 'Level 7', subtext: 'id 2609', type: 'Level 7' },\n  { id: '2610', parentId: '2607', name: 'Level 7', subtext: 'id 2610', type: 'Level 7' },\n  { id: '2611', parentId: '2524', name: 'Level 4', subtext: 'id 2611', type: 'Level 4' },\n  { id: '2612', parentId: '2611', name: 'Level 5', subtext: 'id 2612', type: 'Level 5' },\n  { id: '2613', parentId: '2612', name: 'Level 6', subtext: 'id 2613', type: 'Level 6' },\n  { id: '2614', parentId: '2613', name: 'Level 7', subtext: 'id 2614', type: 'Level 7' },\n  { id: '2615', parentId: '2613', name: 'Level 7', subtext: 'id 2615', type: 'Level 7' },\n  { id: '2616', parentId: '2612', name: 'Level 6', subtext: 'id 2616', type: 'Level 6' },\n  { id: '2617', parentId: '2616', name: 'Level 7', subtext: 'id 2617', type: 'Level 7' },\n  { id: '2618', parentId: '2616', name: 'Level 7', subtext: 'id 2618', type: 'Level 7' },\n  { id: '2619', parentId: '2616', name: 'Level 7', subtext: 'id 2619', type: 'Level 7' },\n  { id: '2620', parentId: '2612', name: 'Level 6', subtext: 'id 2620', type: 'Level 6' },\n  { id: '2621', parentId: '2620', name: 'Level 7', subtext: 'id 2621', type: 'Level 7' },\n  { id: '2622', parentId: '2611', name: 'Level 5', subtext: 'id 2622', type: 'Level 5' },\n  { id: '2623', parentId: '2622', name: 'Level 6', subtext: 'id 2623', type: 'Level 6' },\n  { id: '2624', parentId: '2623', name: 'Level 7', subtext: 'id 2624', type: 'Level 7' },\n  { id: '2625', parentId: '2622', name: 'Level 6', subtext: 'id 2625', type: 'Level 6' },\n  { id: '2626', parentId: '2625', name: 'Level 7', subtext: 'id 2626', type: 'Level 7' },\n  { id: '2627', parentId: '2625', name: 'Level 7', subtext: 'id 2627', type: 'Level 7' },\n  { id: '2628', parentId: '2625', name: 'Level 7', subtext: 'id 2628', type: 'Level 7' },\n  { id: '2629', parentId: '2622', name: 'Level 6', subtext: 'id 2629', type: 'Level 6' },\n  { id: '2630', parentId: '2629', name: 'Level 7', subtext: 'id 2630', type: 'Level 7' },\n  { id: '2631', parentId: '2629', name: 'Level 7', subtext: 'id 2631', type: 'Level 7' },\n  { id: '2632', parentId: '2629', name: 'Level 7', subtext: 'id 2632', type: 'Level 7' },\n  { id: '2633', parentId: '2611', name: 'Level 5', subtext: 'id 2633', type: 'Level 5' },\n  { id: '2634', parentId: '2633', name: 'Level 6', subtext: 'id 2634', type: 'Level 6' },\n  { id: '2635', parentId: '2634', name: 'Level 7', subtext: 'id 2635', type: 'Level 7' },\n  { id: '2636', parentId: '2633', name: 'Level 6', subtext: 'id 2636', type: 'Level 6' },\n  { id: '2637', parentId: '2636', name: 'Level 7', subtext: 'id 2637', type: 'Level 7' },\n  { id: '2638', parentId: '2611', name: 'Level 5', subtext: 'id 2638', type: 'Level 5' },\n  { id: '2639', parentId: '2638', name: 'Level 6', subtext: 'id 2639', type: 'Level 6' },\n  { id: '2640', parentId: '2639', name: 'Level 7', subtext: 'id 2640', type: 'Level 7' },\n  { id: '2641', parentId: '2639', name: 'Level 7', subtext: 'id 2641', type: 'Level 7' },\n  { id: '2642', parentId: '2639', name: 'Level 7', subtext: 'id 2642', type: 'Level 7' },\n  { id: '2643', parentId: '2639', name: 'Level 7', subtext: 'id 2643', type: 'Level 7' },\n  { id: '2644', parentId: '2638', name: 'Level 6', subtext: 'id 2644', type: 'Level 6' },\n  { id: '2645', parentId: '2644', name: 'Level 7', subtext: 'id 2645', type: 'Level 7' },\n  { id: '2646', parentId: '2644', name: 'Level 7', subtext: 'id 2646', type: 'Level 7' },\n  { id: '2647', parentId: '2644', name: 'Level 7', subtext: 'id 2647', type: 'Level 7' },\n  { id: '2648', parentId: '2638', name: 'Level 6', subtext: 'id 2648', type: 'Level 6' },\n  { id: '2649', parentId: '2648', name: 'Level 7', subtext: 'id 2649', type: 'Level 7' },\n  { id: '2650', parentId: '2648', name: 'Level 7', subtext: 'id 2650', type: 'Level 7' },\n  { id: '2651', parentId: '2648', name: 'Level 7', subtext: 'id 2651', type: 'Level 7' },\n  { id: '2652', parentId: '2648', name: 'Level 7', subtext: 'id 2652', type: 'Level 7' },\n  { id: '2653', parentId: '2648', name: 'Level 7', subtext: 'id 2653', type: 'Level 7' },\n  { id: '2654', parentId: '2638', name: 'Level 6', subtext: 'id 2654', type: 'Level 6' },\n  { id: '2655', parentId: '2654', name: 'Level 7', subtext: 'id 2655', type: 'Level 7' },\n  { id: '2656', parentId: '2654', name: 'Level 7', subtext: 'id 2656', type: 'Level 7' },\n  { id: '2657', parentId: '2654', name: 'Level 7', subtext: 'id 2657', type: 'Level 7' },\n  { id: '2658', parentId: '2654', name: 'Level 7', subtext: 'id 2658', type: 'Level 7' },\n  { id: '2659', parentId: '2654', name: 'Level 7', subtext: 'id 2659', type: 'Level 7' },\n  { id: '2660', parentId: '2524', name: 'Level 4', subtext: 'id 2660', type: 'Level 4' },\n  { id: '2661', parentId: '2660', name: 'Level 5', subtext: 'id 2661', type: 'Level 5' },\n  { id: '2662', parentId: '2661', name: 'Level 6', subtext: 'id 2662', type: 'Level 6' },\n  { id: '2663', parentId: '2662', name: 'Level 7', subtext: 'id 2663', type: 'Level 7' },\n  { id: '2664', parentId: '2662', name: 'Level 7', subtext: 'id 2664', type: 'Level 7' },\n  { id: '2665', parentId: '2661', name: 'Level 6', subtext: 'id 2665', type: 'Level 6' },\n  { id: '2666', parentId: '2665', name: 'Level 7', subtext: 'id 2666', type: 'Level 7' },\n  { id: '2667', parentId: '2665', name: 'Level 7', subtext: 'id 2667', type: 'Level 7' },\n  { id: '2668', parentId: '2661', name: 'Level 6', subtext: 'id 2668', type: 'Level 6' },\n  { id: '2669', parentId: '2668', name: 'Level 7', subtext: 'id 2669', type: 'Level 7' },\n  { id: '2670', parentId: '2668', name: 'Level 7', subtext: 'id 2670', type: 'Level 7' },\n  { id: '2671', parentId: '2668', name: 'Level 7', subtext: 'id 2671', type: 'Level 7' },\n  { id: '2672', parentId: '2668', name: 'Level 7', subtext: 'id 2672', type: 'Level 7' },\n  { id: '2673', parentId: '2668', name: 'Level 7', subtext: 'id 2673', type: 'Level 7' },\n  { id: '2674', parentId: '2661', name: 'Level 6', subtext: 'id 2674', type: 'Level 6' },\n  { id: '2675', parentId: '2674', name: 'Level 7', subtext: 'id 2675', type: 'Level 7' },\n  { id: '2676', parentId: '2674', name: 'Level 7', subtext: 'id 2676', type: 'Level 7' },\n  { id: '2677', parentId: '2674', name: 'Level 7', subtext: 'id 2677', type: 'Level 7' },\n  { id: '2678', parentId: '2661', name: 'Level 6', subtext: 'id 2678', type: 'Level 6' },\n  { id: '2679', parentId: '2678', name: 'Level 7', subtext: 'id 2679', type: 'Level 7' },\n  { id: '2680', parentId: '2660', name: 'Level 5', subtext: 'id 2680', type: 'Level 5' },\n  { id: '2681', parentId: '2680', name: 'Level 6', subtext: 'id 2681', type: 'Level 6' },\n  { id: '2682', parentId: '2681', name: 'Level 7', subtext: 'id 2682', type: 'Level 7' },\n  { id: '2683', parentId: '2681', name: 'Level 7', subtext: 'id 2683', type: 'Level 7' },\n  { id: '2684', parentId: '2681', name: 'Level 7', subtext: 'id 2684', type: 'Level 7' },\n  { id: '2685', parentId: '2681', name: 'Level 7', subtext: 'id 2685', type: 'Level 7' },\n  { id: '2686', parentId: '2681', name: 'Level 7', subtext: 'id 2686', type: 'Level 7' },\n  { id: '2687', parentId: '2680', name: 'Level 6', subtext: 'id 2687', type: 'Level 6' },\n  { id: '2688', parentId: '2687', name: 'Level 7', subtext: 'id 2688', type: 'Level 7' },\n  { id: '2689', parentId: '2687', name: 'Level 7', subtext: 'id 2689', type: 'Level 7' },\n  { id: '2690', parentId: '2687', name: 'Level 7', subtext: 'id 2690', type: 'Level 7' },\n  { id: '2691', parentId: '2687', name: 'Level 7', subtext: 'id 2691', type: 'Level 7' },\n  { id: '2692', parentId: '2680', name: 'Level 6', subtext: 'id 2692', type: 'Level 6' },\n  { id: '2693', parentId: '2692', name: 'Level 7', subtext: 'id 2693', type: 'Level 7' },\n  { id: '2694', parentId: '2692', name: 'Level 7', subtext: 'id 2694', type: 'Level 7' },\n  { id: '2695', parentId: '2692', name: 'Level 7', subtext: 'id 2695', type: 'Level 7' },\n  { id: '2696', parentId: '2692', name: 'Level 7', subtext: 'id 2696', type: 'Level 7' },\n  { id: '2697', parentId: '2680', name: 'Level 6', subtext: 'id 2697', type: 'Level 6' },\n  { id: '2698', parentId: '2697', name: 'Level 7', subtext: 'id 2698', type: 'Level 7' },\n  { id: '2699', parentId: '2697', name: 'Level 7', subtext: 'id 2699', type: 'Level 7' },\n  { id: '2700', parentId: '2697', name: 'Level 7', subtext: 'id 2700', type: 'Level 7' },\n  { id: '2701', parentId: '2660', name: 'Level 5', subtext: 'id 2701', type: 'Level 5' },\n  { id: '2702', parentId: '2701', name: 'Level 6', subtext: 'id 2702', type: 'Level 6' },\n  { id: '2703', parentId: '2702', name: 'Level 7', subtext: 'id 2703', type: 'Level 7' },\n  { id: '2704', parentId: '2702', name: 'Level 7', subtext: 'id 2704', type: 'Level 7' },\n  { id: '2705', parentId: '2702', name: 'Level 7', subtext: 'id 2705', type: 'Level 7' },\n  { id: '2706', parentId: '2702', name: 'Level 7', subtext: 'id 2706', type: 'Level 7' },\n  { id: '2707', parentId: '2702', name: 'Level 7', subtext: 'id 2707', type: 'Level 7' },\n  { id: '2708', parentId: '2701', name: 'Level 6', subtext: 'id 2708', type: 'Level 6' },\n  { id: '2709', parentId: '2708', name: 'Level 7', subtext: 'id 2709', type: 'Level 7' },\n  { id: '2710', parentId: '2701', name: 'Level 6', subtext: 'id 2710', type: 'Level 6' },\n  { id: '2711', parentId: '2710', name: 'Level 7', subtext: 'id 2711', type: 'Level 7' },\n  { id: '2712', parentId: '2710', name: 'Level 7', subtext: 'id 2712', type: 'Level 7' },\n  { id: '2713', parentId: '2701', name: 'Level 6', subtext: 'id 2713', type: 'Level 6' },\n  { id: '2714', parentId: '2713', name: 'Level 7', subtext: 'id 2714', type: 'Level 7' },\n  { id: '2715', parentId: '2713', name: 'Level 7', subtext: 'id 2715', type: 'Level 7' },\n  { id: '2716', parentId: '2713', name: 'Level 7', subtext: 'id 2716', type: 'Level 7' },\n  { id: '2717', parentId: '2713', name: 'Level 7', subtext: 'id 2717', type: 'Level 7' },\n  { id: '2718', parentId: '2660', name: 'Level 5', subtext: 'id 2718', type: 'Level 5' },\n  { id: '2719', parentId: '2718', name: 'Level 6', subtext: 'id 2719', type: 'Level 6' },\n  { id: '2720', parentId: '2719', name: 'Level 7', subtext: 'id 2720', type: 'Level 7' },\n  { id: '2721', parentId: '2719', name: 'Level 7', subtext: 'id 2721', type: 'Level 7' },\n  { id: '2722', parentId: '2719', name: 'Level 7', subtext: 'id 2722', type: 'Level 7' },\n  { id: '2723', parentId: null, name: 'Level 1', subtext: 'id 2723', type: 'Level 1' },\n  { id: '2724', parentId: '2723', name: 'Level 2', subtext: 'id 2724', type: 'Level 2' },\n  { id: '2725', parentId: '2724', name: 'Level 3', subtext: 'id 2725', type: 'Level 3' },\n  { id: '2726', parentId: '2725', name: 'Level 4', subtext: 'id 2726', type: 'Level 4' },\n  { id: '2727', parentId: '2726', name: 'Level 5', subtext: 'id 2727', type: 'Level 5' },\n  { id: '2728', parentId: '2727', name: 'Level 6', subtext: 'id 2728', type: 'Level 6' },\n  { id: '2729', parentId: '2728', name: 'Level 7', subtext: 'id 2729', type: 'Level 7' },\n  { id: '2730', parentId: '2728', name: 'Level 7', subtext: 'id 2730', type: 'Level 7' },\n  { id: '2731', parentId: '2728', name: 'Level 7', subtext: 'id 2731', type: 'Level 7' },\n  { id: '2732', parentId: '2728', name: 'Level 7', subtext: 'id 2732', type: 'Level 7' },\n  { id: '2733', parentId: '2728', name: 'Level 7', subtext: 'id 2733', type: 'Level 7' },\n  { id: '2734', parentId: '2727', name: 'Level 6', subtext: 'id 2734', type: 'Level 6' },\n  { id: '2735', parentId: '2734', name: 'Level 7', subtext: 'id 2735', type: 'Level 7' },\n  { id: '2736', parentId: '2734', name: 'Level 7', subtext: 'id 2736', type: 'Level 7' },\n  { id: '2737', parentId: '2734', name: 'Level 7', subtext: 'id 2737', type: 'Level 7' },\n  { id: '2738', parentId: '2734', name: 'Level 7', subtext: 'id 2738', type: 'Level 7' },\n  { id: '2739', parentId: '2727', name: 'Level 6', subtext: 'id 2739', type: 'Level 6' },\n  { id: '2740', parentId: '2739', name: 'Level 7', subtext: 'id 2740', type: 'Level 7' },\n  { id: '2741', parentId: '2739', name: 'Level 7', subtext: 'id 2741', type: 'Level 7' },\n  { id: '2742', parentId: '2739', name: 'Level 7', subtext: 'id 2742', type: 'Level 7' },\n  { id: '2743', parentId: '2727', name: 'Level 6', subtext: 'id 2743', type: 'Level 6' },\n  { id: '2744', parentId: '2743', name: 'Level 7', subtext: 'id 2744', type: 'Level 7' },\n  { id: '2745', parentId: '2743', name: 'Level 7', subtext: 'id 2745', type: 'Level 7' },\n  { id: '2746', parentId: '2743', name: 'Level 7', subtext: 'id 2746', type: 'Level 7' },\n  { id: '2747', parentId: '2726', name: 'Level 5', subtext: 'id 2747', type: 'Level 5' },\n  { id: '2748', parentId: '2747', name: 'Level 6', subtext: 'id 2748', type: 'Level 6' },\n  { id: '2749', parentId: '2748', name: 'Level 7', subtext: 'id 2749', type: 'Level 7' },\n  { id: '2750', parentId: '2748', name: 'Level 7', subtext: 'id 2750', type: 'Level 7' },\n  { id: '2751', parentId: '2748', name: 'Level 7', subtext: 'id 2751', type: 'Level 7' },\n  { id: '2752', parentId: '2747', name: 'Level 6', subtext: 'id 2752', type: 'Level 6' },\n  { id: '2753', parentId: '2752', name: 'Level 7', subtext: 'id 2753', type: 'Level 7' },\n  { id: '2754', parentId: '2752', name: 'Level 7', subtext: 'id 2754', type: 'Level 7' },\n  { id: '2755', parentId: '2752', name: 'Level 7', subtext: 'id 2755', type: 'Level 7' },\n  { id: '2756', parentId: '2752', name: 'Level 7', subtext: 'id 2756', type: 'Level 7' },\n  { id: '2757', parentId: '2726', name: 'Level 5', subtext: 'id 2757', type: 'Level 5' },\n  { id: '2758', parentId: '2757', name: 'Level 6', subtext: 'id 2758', type: 'Level 6' },\n  { id: '2759', parentId: '2758', name: 'Level 7', subtext: 'id 2759', type: 'Level 7' },\n  { id: '2760', parentId: '2757', name: 'Level 6', subtext: 'id 2760', type: 'Level 6' },\n  { id: '2761', parentId: '2760', name: 'Level 7', subtext: 'id 2761', type: 'Level 7' },\n  { id: '2762', parentId: '2760', name: 'Level 7', subtext: 'id 2762', type: 'Level 7' },\n  { id: '2763', parentId: '2757', name: 'Level 6', subtext: 'id 2763', type: 'Level 6' },\n  { id: '2764', parentId: '2763', name: 'Level 7', subtext: 'id 2764', type: 'Level 7' },\n  { id: '2765', parentId: '2726', name: 'Level 5', subtext: 'id 2765', type: 'Level 5' },\n  { id: '2766', parentId: '2765', name: 'Level 6', subtext: 'id 2766', type: 'Level 6' },\n  { id: '2767', parentId: '2766', name: 'Level 7', subtext: 'id 2767', type: 'Level 7' },\n  { id: '2768', parentId: '2766', name: 'Level 7', subtext: 'id 2768', type: 'Level 7' },\n  { id: '2769', parentId: '2766', name: 'Level 7', subtext: 'id 2769', type: 'Level 7' },\n  { id: '2770', parentId: '2766', name: 'Level 7', subtext: 'id 2770', type: 'Level 7' },\n  { id: '2771', parentId: '2766', name: 'Level 7', subtext: 'id 2771', type: 'Level 7' },\n  { id: '2772', parentId: '2765', name: 'Level 6', subtext: 'id 2772', type: 'Level 6' },\n  { id: '2773', parentId: '2772', name: 'Level 7', subtext: 'id 2773', type: 'Level 7' },\n  { id: '2774', parentId: '2726', name: 'Level 5', subtext: 'id 2774', type: 'Level 5' },\n  { id: '2775', parentId: '2774', name: 'Level 6', subtext: 'id 2775', type: 'Level 6' },\n  { id: '2776', parentId: '2775', name: 'Level 7', subtext: 'id 2776', type: 'Level 7' },\n  { id: '2777', parentId: '2775', name: 'Level 7', subtext: 'id 2777', type: 'Level 7' },\n  { id: '2778', parentId: '2775', name: 'Level 7', subtext: 'id 2778', type: 'Level 7' },\n  { id: '2779', parentId: '2775', name: 'Level 7', subtext: 'id 2779', type: 'Level 7' },\n  { id: '2780', parentId: '2775', name: 'Level 7', subtext: 'id 2780', type: 'Level 7' },\n  { id: '2781', parentId: '2774', name: 'Level 6', subtext: 'id 2781', type: 'Level 6' },\n  { id: '2782', parentId: '2781', name: 'Level 7', subtext: 'id 2782', type: 'Level 7' },\n  { id: '2783', parentId: '2774', name: 'Level 6', subtext: 'id 2783', type: 'Level 6' },\n  { id: '2784', parentId: '2783', name: 'Level 7', subtext: 'id 2784', type: 'Level 7' },\n  { id: '2785', parentId: '2783', name: 'Level 7', subtext: 'id 2785', type: 'Level 7' },\n  { id: '2786', parentId: '2783', name: 'Level 7', subtext: 'id 2786', type: 'Level 7' },\n  { id: '2787', parentId: '2774', name: 'Level 6', subtext: 'id 2787', type: 'Level 6' },\n  { id: '2788', parentId: '2787', name: 'Level 7', subtext: 'id 2788', type: 'Level 7' },\n  { id: '2789', parentId: '2787', name: 'Level 7', subtext: 'id 2789', type: 'Level 7' },\n  { id: '2790', parentId: '2787', name: 'Level 7', subtext: 'id 2790', type: 'Level 7' },\n  { id: '2791', parentId: '2787', name: 'Level 7', subtext: 'id 2791', type: 'Level 7' },\n  { id: '2792', parentId: '2787', name: 'Level 7', subtext: 'id 2792', type: 'Level 7' },\n  { id: '2793', parentId: '2774', name: 'Level 6', subtext: 'id 2793', type: 'Level 6' },\n  { id: '2794', parentId: '2793', name: 'Level 7', subtext: 'id 2794', type: 'Level 7' },\n  { id: '2795', parentId: '2793', name: 'Level 7', subtext: 'id 2795', type: 'Level 7' },\n  { id: '2796', parentId: '2793', name: 'Level 7', subtext: 'id 2796', type: 'Level 7' },\n  { id: '2797', parentId: '2725', name: 'Level 4', subtext: 'id 2797', type: 'Level 4' },\n  { id: '2798', parentId: '2797', name: 'Level 5', subtext: 'id 2798', type: 'Level 5' },\n  { id: '2799', parentId: '2798', name: 'Level 6', subtext: 'id 2799', type: 'Level 6' },\n  { id: '2800', parentId: '2799', name: 'Level 7', subtext: 'id 2800', type: 'Level 7' },\n  { id: '2801', parentId: '2798', name: 'Level 6', subtext: 'id 2801', type: 'Level 6' },\n  { id: '2802', parentId: '2801', name: 'Level 7', subtext: 'id 2802', type: 'Level 7' },\n  { id: '2803', parentId: '2801', name: 'Level 7', subtext: 'id 2803', type: 'Level 7' },\n  { id: '2804', parentId: '2801', name: 'Level 7', subtext: 'id 2804', type: 'Level 7' },\n  { id: '2805', parentId: '2801', name: 'Level 7', subtext: 'id 2805', type: 'Level 7' },\n  { id: '2806', parentId: '2797', name: 'Level 5', subtext: 'id 2806', type: 'Level 5' },\n  { id: '2807', parentId: '2806', name: 'Level 6', subtext: 'id 2807', type: 'Level 6' },\n  { id: '2808', parentId: '2807', name: 'Level 7', subtext: 'id 2808', type: 'Level 7' },\n  { id: '2809', parentId: '2806', name: 'Level 6', subtext: 'id 2809', type: 'Level 6' },\n  { id: '2810', parentId: '2809', name: 'Level 7', subtext: 'id 2810', type: 'Level 7' },\n  { id: '2811', parentId: '2809', name: 'Level 7', subtext: 'id 2811', type: 'Level 7' },\n  { id: '2812', parentId: '2809', name: 'Level 7', subtext: 'id 2812', type: 'Level 7' },\n  { id: '2813', parentId: '2809', name: 'Level 7', subtext: 'id 2813', type: 'Level 7' },\n  { id: '2814', parentId: '2806', name: 'Level 6', subtext: 'id 2814', type: 'Level 6' },\n  { id: '2815', parentId: '2814', name: 'Level 7', subtext: 'id 2815', type: 'Level 7' },\n  { id: '2816', parentId: '2814', name: 'Level 7', subtext: 'id 2816', type: 'Level 7' },\n  { id: '2817', parentId: '2814', name: 'Level 7', subtext: 'id 2817', type: 'Level 7' },\n  { id: '2818', parentId: '2806', name: 'Level 6', subtext: 'id 2818', type: 'Level 6' },\n  { id: '2819', parentId: '2818', name: 'Level 7', subtext: 'id 2819', type: 'Level 7' },\n  { id: '2820', parentId: '2818', name: 'Level 7', subtext: 'id 2820', type: 'Level 7' },\n  { id: '2821', parentId: '2818', name: 'Level 7', subtext: 'id 2821', type: 'Level 7' },\n  { id: '2822', parentId: '2818', name: 'Level 7', subtext: 'id 2822', type: 'Level 7' },\n  { id: '2823', parentId: '2806', name: 'Level 6', subtext: 'id 2823', type: 'Level 6' },\n  { id: '2824', parentId: '2823', name: 'Level 7', subtext: 'id 2824', type: 'Level 7' },\n  { id: '2825', parentId: '2823', name: 'Level 7', subtext: 'id 2825', type: 'Level 7' },\n  { id: '2826', parentId: '2823', name: 'Level 7', subtext: 'id 2826', type: 'Level 7' },\n  { id: '2827', parentId: '2797', name: 'Level 5', subtext: 'id 2827', type: 'Level 5' },\n  { id: '2828', parentId: '2827', name: 'Level 6', subtext: 'id 2828', type: 'Level 6' },\n  { id: '2829', parentId: '2828', name: 'Level 7', subtext: 'id 2829', type: 'Level 7' },\n  { id: '2830', parentId: '2828', name: 'Level 7', subtext: 'id 2830', type: 'Level 7' },\n  { id: '2831', parentId: '2828', name: 'Level 7', subtext: 'id 2831', type: 'Level 7' },\n  { id: '2832', parentId: '2828', name: 'Level 7', subtext: 'id 2832', type: 'Level 7' },\n  { id: '2833', parentId: '2725', name: 'Level 4', subtext: 'id 2833', type: 'Level 4' },\n  { id: '2834', parentId: '2833', name: 'Level 5', subtext: 'id 2834', type: 'Level 5' },\n  { id: '2835', parentId: '2834', name: 'Level 6', subtext: 'id 2835', type: 'Level 6' },\n  { id: '2836', parentId: '2835', name: 'Level 7', subtext: 'id 2836', type: 'Level 7' },\n  { id: '2837', parentId: '2835', name: 'Level 7', subtext: 'id 2837', type: 'Level 7' },\n  { id: '2838', parentId: '2835', name: 'Level 7', subtext: 'id 2838', type: 'Level 7' },\n  { id: '2839', parentId: '2835', name: 'Level 7', subtext: 'id 2839', type: 'Level 7' },\n  { id: '2840', parentId: '2834', name: 'Level 6', subtext: 'id 2840', type: 'Level 6' },\n  { id: '2841', parentId: '2840', name: 'Level 7', subtext: 'id 2841', type: 'Level 7' },\n  { id: '2842', parentId: '2840', name: 'Level 7', subtext: 'id 2842', type: 'Level 7' },\n  { id: '2843', parentId: '2840', name: 'Level 7', subtext: 'id 2843', type: 'Level 7' },\n  { id: '2844', parentId: '2840', name: 'Level 7', subtext: 'id 2844', type: 'Level 7' },\n  { id: '2845', parentId: '2840', name: 'Level 7', subtext: 'id 2845', type: 'Level 7' },\n  { id: '2846', parentId: '2834', name: 'Level 6', subtext: 'id 2846', type: 'Level 6' },\n  { id: '2847', parentId: '2846', name: 'Level 7', subtext: 'id 2847', type: 'Level 7' },\n  { id: '2848', parentId: '2846', name: 'Level 7', subtext: 'id 2848', type: 'Level 7' },\n  { id: '2849', parentId: '2846', name: 'Level 7', subtext: 'id 2849', type: 'Level 7' },\n  { id: '2850', parentId: '2846', name: 'Level 7', subtext: 'id 2850', type: 'Level 7' },\n  { id: '2851', parentId: '2833', name: 'Level 5', subtext: 'id 2851', type: 'Level 5' },\n  { id: '2852', parentId: '2851', name: 'Level 6', subtext: 'id 2852', type: 'Level 6' },\n  { id: '2853', parentId: '2852', name: 'Level 7', subtext: 'id 2853', type: 'Level 7' },\n  { id: '2854', parentId: '2851', name: 'Level 6', subtext: 'id 2854', type: 'Level 6' },\n  { id: '2855', parentId: '2854', name: 'Level 7', subtext: 'id 2855', type: 'Level 7' },\n  { id: '2856', parentId: '2854', name: 'Level 7', subtext: 'id 2856', type: 'Level 7' },\n  { id: '2857', parentId: '2854', name: 'Level 7', subtext: 'id 2857', type: 'Level 7' },\n  { id: '2858', parentId: '2854', name: 'Level 7', subtext: 'id 2858', type: 'Level 7' },\n  { id: '2859', parentId: '2851', name: 'Level 6', subtext: 'id 2859', type: 'Level 6' },\n  { id: '2860', parentId: '2859', name: 'Level 7', subtext: 'id 2860', type: 'Level 7' },\n  { id: '2861', parentId: '2859', name: 'Level 7', subtext: 'id 2861', type: 'Level 7' },\n  { id: '2862', parentId: '2859', name: 'Level 7', subtext: 'id 2862', type: 'Level 7' },\n  { id: '2863', parentId: '2851', name: 'Level 6', subtext: 'id 2863', type: 'Level 6' },\n  { id: '2864', parentId: '2863', name: 'Level 7', subtext: 'id 2864', type: 'Level 7' },\n  { id: '2865', parentId: '2863', name: 'Level 7', subtext: 'id 2865', type: 'Level 7' },\n  { id: '2866', parentId: '2863', name: 'Level 7', subtext: 'id 2866', type: 'Level 7' },\n  { id: '2867', parentId: '2851', name: 'Level 6', subtext: 'id 2867', type: 'Level 6' },\n  { id: '2868', parentId: '2867', name: 'Level 7', subtext: 'id 2868', type: 'Level 7' },\n  { id: '2869', parentId: '2833', name: 'Level 5', subtext: 'id 2869', type: 'Level 5' },\n  { id: '2870', parentId: '2869', name: 'Level 6', subtext: 'id 2870', type: 'Level 6' },\n  { id: '2871', parentId: '2870', name: 'Level 7', subtext: 'id 2871', type: 'Level 7' },\n  { id: '2872', parentId: '2870', name: 'Level 7', subtext: 'id 2872', type: 'Level 7' },\n  { id: '2873', parentId: '2870', name: 'Level 7', subtext: 'id 2873', type: 'Level 7' },\n  { id: '2874', parentId: '2869', name: 'Level 6', subtext: 'id 2874', type: 'Level 6' },\n  { id: '2875', parentId: '2874', name: 'Level 7', subtext: 'id 2875', type: 'Level 7' },\n  { id: '2876', parentId: '2874', name: 'Level 7', subtext: 'id 2876', type: 'Level 7' },\n  { id: '2877', parentId: '2874', name: 'Level 7', subtext: 'id 2877', type: 'Level 7' },\n  { id: '2878', parentId: '2869', name: 'Level 6', subtext: 'id 2878', type: 'Level 6' },\n  { id: '2879', parentId: '2878', name: 'Level 7', subtext: 'id 2879', type: 'Level 7' },\n  { id: '2880', parentId: '2878', name: 'Level 7', subtext: 'id 2880', type: 'Level 7' },\n  { id: '2881', parentId: '2878', name: 'Level 7', subtext: 'id 2881', type: 'Level 7' },\n  { id: '2882', parentId: '2878', name: 'Level 7', subtext: 'id 2882', type: 'Level 7' },\n  { id: '2883', parentId: '2833', name: 'Level 5', subtext: 'id 2883', type: 'Level 5' },\n  { id: '2884', parentId: '2883', name: 'Level 6', subtext: 'id 2884', type: 'Level 6' },\n  { id: '2885', parentId: '2884', name: 'Level 7', subtext: 'id 2885', type: 'Level 7' },\n  { id: '2886', parentId: '2884', name: 'Level 7', subtext: 'id 2886', type: 'Level 7' },\n  { id: '2887', parentId: '2884', name: 'Level 7', subtext: 'id 2887', type: 'Level 7' },\n  { id: '2888', parentId: '2884', name: 'Level 7', subtext: 'id 2888', type: 'Level 7' },\n  { id: '2889', parentId: '2883', name: 'Level 6', subtext: 'id 2889', type: 'Level 6' },\n  { id: '2890', parentId: '2889', name: 'Level 7', subtext: 'id 2890', type: 'Level 7' },\n  { id: '2891', parentId: '2889', name: 'Level 7', subtext: 'id 2891', type: 'Level 7' },\n  { id: '2892', parentId: '2889', name: 'Level 7', subtext: 'id 2892', type: 'Level 7' },\n  { id: '2893', parentId: '2889', name: 'Level 7', subtext: 'id 2893', type: 'Level 7' },\n  { id: '2894', parentId: '2833', name: 'Level 5', subtext: 'id 2894', type: 'Level 5' },\n  { id: '2895', parentId: '2894', name: 'Level 6', subtext: 'id 2895', type: 'Level 6' },\n  { id: '2896', parentId: '2895', name: 'Level 7', subtext: 'id 2896', type: 'Level 7' },\n  { id: '2897', parentId: '2895', name: 'Level 7', subtext: 'id 2897', type: 'Level 7' },\n  { id: '2898', parentId: '2724', name: 'Level 3', subtext: 'id 2898', type: 'Level 3' },\n  { id: '2899', parentId: '2898', name: 'Level 4', subtext: 'id 2899', type: 'Level 4' },\n  { id: '2900', parentId: '2899', name: 'Level 5', subtext: 'id 2900', type: 'Level 5' },\n  { id: '2901', parentId: '2900', name: 'Level 6', subtext: 'id 2901', type: 'Level 6' },\n  { id: '2902', parentId: '2901', name: 'Level 7', subtext: 'id 2902', type: 'Level 7' },\n  { id: '2903', parentId: '2900', name: 'Level 6', subtext: 'id 2903', type: 'Level 6' },\n  { id: '2904', parentId: '2903', name: 'Level 7', subtext: 'id 2904', type: 'Level 7' },\n  { id: '2905', parentId: '2899', name: 'Level 5', subtext: 'id 2905', type: 'Level 5' },\n  { id: '2906', parentId: '2905', name: 'Level 6', subtext: 'id 2906', type: 'Level 6' },\n  { id: '2907', parentId: '2906', name: 'Level 7', subtext: 'id 2907', type: 'Level 7' },\n  { id: '2908', parentId: '2905', name: 'Level 6', subtext: 'id 2908', type: 'Level 6' },\n  { id: '2909', parentId: '2908', name: 'Level 7', subtext: 'id 2909', type: 'Level 7' },\n  { id: '2910', parentId: '2908', name: 'Level 7', subtext: 'id 2910', type: 'Level 7' },\n  { id: '2911', parentId: '2908', name: 'Level 7', subtext: 'id 2911', type: 'Level 7' },\n  { id: '2912', parentId: '2908', name: 'Level 7', subtext: 'id 2912', type: 'Level 7' },\n  { id: '2913', parentId: '2908', name: 'Level 7', subtext: 'id 2913', type: 'Level 7' },\n  { id: '2914', parentId: '2899', name: 'Level 5', subtext: 'id 2914', type: 'Level 5' },\n  { id: '2915', parentId: '2914', name: 'Level 6', subtext: 'id 2915', type: 'Level 6' },\n  { id: '2916', parentId: '2915', name: 'Level 7', subtext: 'id 2916', type: 'Level 7' },\n  { id: '2917', parentId: '2915', name: 'Level 7', subtext: 'id 2917', type: 'Level 7' },\n  { id: '2918', parentId: '2915', name: 'Level 7', subtext: 'id 2918', type: 'Level 7' },\n  { id: '2919', parentId: '2915', name: 'Level 7', subtext: 'id 2919', type: 'Level 7' },\n  { id: '2920', parentId: '2914', name: 'Level 6', subtext: 'id 2920', type: 'Level 6' },\n  { id: '2921', parentId: '2920', name: 'Level 7', subtext: 'id 2921', type: 'Level 7' },\n  { id: '2922', parentId: '2920', name: 'Level 7', subtext: 'id 2922', type: 'Level 7' },\n  { id: '2923', parentId: '2920', name: 'Level 7', subtext: 'id 2923', type: 'Level 7' },\n  { id: '2924', parentId: '2920', name: 'Level 7', subtext: 'id 2924', type: 'Level 7' },\n  { id: '2925', parentId: '2920', name: 'Level 7', subtext: 'id 2925', type: 'Level 7' },\n  { id: '2926', parentId: '2914', name: 'Level 6', subtext: 'id 2926', type: 'Level 6' },\n  { id: '2927', parentId: '2926', name: 'Level 7', subtext: 'id 2927', type: 'Level 7' },\n  { id: '2928', parentId: '2926', name: 'Level 7', subtext: 'id 2928', type: 'Level 7' },\n  { id: '2929', parentId: '2926', name: 'Level 7', subtext: 'id 2929', type: 'Level 7' },\n  { id: '2930', parentId: '2926', name: 'Level 7', subtext: 'id 2930', type: 'Level 7' },\n  { id: '2931', parentId: '2926', name: 'Level 7', subtext: 'id 2931', type: 'Level 7' },\n  { id: '2932', parentId: '2914', name: 'Level 6', subtext: 'id 2932', type: 'Level 6' },\n  { id: '2933', parentId: '2932', name: 'Level 7', subtext: 'id 2933', type: 'Level 7' },\n  { id: '2934', parentId: '2932', name: 'Level 7', subtext: 'id 2934', type: 'Level 7' },\n  { id: '2935', parentId: '2932', name: 'Level 7', subtext: 'id 2935', type: 'Level 7' },\n  { id: '2936', parentId: '2724', name: 'Level 3', subtext: 'id 2936', type: 'Level 3' },\n  { id: '2937', parentId: '2936', name: 'Level 4', subtext: 'id 2937', type: 'Level 4' },\n  { id: '2938', parentId: '2937', name: 'Level 5', subtext: 'id 2938', type: 'Level 5' },\n  { id: '2939', parentId: '2938', name: 'Level 6', subtext: 'id 2939', type: 'Level 6' },\n  { id: '2940', parentId: '2939', name: 'Level 7', subtext: 'id 2940', type: 'Level 7' },\n  { id: '2941', parentId: '2939', name: 'Level 7', subtext: 'id 2941', type: 'Level 7' },\n  { id: '2942', parentId: '2939', name: 'Level 7', subtext: 'id 2942', type: 'Level 7' },\n  { id: '2943', parentId: '2939', name: 'Level 7', subtext: 'id 2943', type: 'Level 7' },\n  { id: '2944', parentId: '2938', name: 'Level 6', subtext: 'id 2944', type: 'Level 6' },\n  { id: '2945', parentId: '2944', name: 'Level 7', subtext: 'id 2945', type: 'Level 7' },\n  { id: '2946', parentId: '2944', name: 'Level 7', subtext: 'id 2946', type: 'Level 7' },\n  { id: '2947', parentId: '2937', name: 'Level 5', subtext: 'id 2947', type: 'Level 5' },\n  { id: '2948', parentId: '2947', name: 'Level 6', subtext: 'id 2948', type: 'Level 6' },\n  { id: '2949', parentId: '2948', name: 'Level 7', subtext: 'id 2949', type: 'Level 7' },\n  { id: '2950', parentId: '2948', name: 'Level 7', subtext: 'id 2950', type: 'Level 7' },\n  { id: '2951', parentId: '2947', name: 'Level 6', subtext: 'id 2951', type: 'Level 6' },\n  { id: '2952', parentId: '2951', name: 'Level 7', subtext: 'id 2952', type: 'Level 7' },\n  { id: '2953', parentId: '2951', name: 'Level 7', subtext: 'id 2953', type: 'Level 7' },\n  { id: '2954', parentId: '2951', name: 'Level 7', subtext: 'id 2954', type: 'Level 7' },\n  { id: '2955', parentId: '2951', name: 'Level 7', subtext: 'id 2955', type: 'Level 7' },\n  { id: '2956', parentId: '2951', name: 'Level 7', subtext: 'id 2956', type: 'Level 7' },\n  { id: '2957', parentId: '2947', name: 'Level 6', subtext: 'id 2957', type: 'Level 6' },\n  { id: '2958', parentId: '2957', name: 'Level 7', subtext: 'id 2958', type: 'Level 7' },\n  { id: '2959', parentId: '2957', name: 'Level 7', subtext: 'id 2959', type: 'Level 7' },\n  { id: '2960', parentId: '2957', name: 'Level 7', subtext: 'id 2960', type: 'Level 7' },\n  { id: '2961', parentId: '2937', name: 'Level 5', subtext: 'id 2961', type: 'Level 5' },\n  { id: '2962', parentId: '2961', name: 'Level 6', subtext: 'id 2962', type: 'Level 6' },\n  { id: '2963', parentId: '2962', name: 'Level 7', subtext: 'id 2963', type: 'Level 7' },\n  { id: '2964', parentId: '2962', name: 'Level 7', subtext: 'id 2964', type: 'Level 7' },\n  { id: '2965', parentId: '2961', name: 'Level 6', subtext: 'id 2965', type: 'Level 6' },\n  { id: '2966', parentId: '2965', name: 'Level 7', subtext: 'id 2966', type: 'Level 7' },\n  { id: '2967', parentId: '2961', name: 'Level 6', subtext: 'id 2967', type: 'Level 6' },\n  { id: '2968', parentId: '2967', name: 'Level 7', subtext: 'id 2968', type: 'Level 7' },\n  { id: '2969', parentId: '2967', name: 'Level 7', subtext: 'id 2969', type: 'Level 7' },\n  { id: '2970', parentId: '2967', name: 'Level 7', subtext: 'id 2970', type: 'Level 7' },\n  { id: '2971', parentId: '2967', name: 'Level 7', subtext: 'id 2971', type: 'Level 7' },\n  { id: '2972', parentId: '2961', name: 'Level 6', subtext: 'id 2972', type: 'Level 6' },\n  { id: '2973', parentId: '2972', name: 'Level 7', subtext: 'id 2973', type: 'Level 7' },\n  { id: '2974', parentId: '2972', name: 'Level 7', subtext: 'id 2974', type: 'Level 7' },\n  { id: '2975', parentId: '2961', name: 'Level 6', subtext: 'id 2975', type: 'Level 6' },\n  { id: '2976', parentId: '2975', name: 'Level 7', subtext: 'id 2976', type: 'Level 7' },\n  { id: '2977', parentId: '2937', name: 'Level 5', subtext: 'id 2977', type: 'Level 5' },\n  { id: '2978', parentId: '2977', name: 'Level 6', subtext: 'id 2978', type: 'Level 6' },\n  { id: '2979', parentId: '2978', name: 'Level 7', subtext: 'id 2979', type: 'Level 7' },\n  { id: '2980', parentId: '2978', name: 'Level 7', subtext: 'id 2980', type: 'Level 7' },\n  { id: '2981', parentId: '2978', name: 'Level 7', subtext: 'id 2981', type: 'Level 7' },\n  { id: '2982', parentId: '2978', name: 'Level 7', subtext: 'id 2982', type: 'Level 7' },\n  { id: '2983', parentId: '2977', name: 'Level 6', subtext: 'id 2983', type: 'Level 6' },\n  { id: '2984', parentId: '2983', name: 'Level 7', subtext: 'id 2984', type: 'Level 7' },\n  { id: '2985', parentId: '2983', name: 'Level 7', subtext: 'id 2985', type: 'Level 7' },\n  { id: '2986', parentId: '2983', name: 'Level 7', subtext: 'id 2986', type: 'Level 7' },\n  { id: '2987', parentId: '2937', name: 'Level 5', subtext: 'id 2987', type: 'Level 5' },\n  { id: '2988', parentId: '2987', name: 'Level 6', subtext: 'id 2988', type: 'Level 6' },\n  { id: '2989', parentId: '2988', name: 'Level 7', subtext: 'id 2989', type: 'Level 7' },\n  { id: '2990', parentId: '2987', name: 'Level 6', subtext: 'id 2990', type: 'Level 6' },\n  { id: '2991', parentId: '2990', name: 'Level 7', subtext: 'id 2991', type: 'Level 7' },\n  { id: '2992', parentId: '2990', name: 'Level 7', subtext: 'id 2992', type: 'Level 7' },\n  { id: '2993', parentId: '2990', name: 'Level 7', subtext: 'id 2993', type: 'Level 7' },\n  { id: '2994', parentId: '2987', name: 'Level 6', subtext: 'id 2994', type: 'Level 6' },\n  { id: '2995', parentId: '2994', name: 'Level 7', subtext: 'id 2995', type: 'Level 7' },\n  { id: '2996', parentId: '2994', name: 'Level 7', subtext: 'id 2996', type: 'Level 7' },\n  { id: '2997', parentId: '2987', name: 'Level 6', subtext: 'id 2997', type: 'Level 6' },\n  { id: '2998', parentId: '2997', name: 'Level 7', subtext: 'id 2998', type: 'Level 7' },\n  { id: '2999', parentId: '2987', name: 'Level 6', subtext: 'id 2999', type: 'Level 6' },\n  { id: '3000', parentId: '2999', name: 'Level 7', subtext: 'id 3000', type: 'Level 7' },\n  { id: '3001', parentId: '2999', name: 'Level 7', subtext: 'id 3001', type: 'Level 7' },\n  { id: '3002', parentId: '2999', name: 'Level 7', subtext: 'id 3002', type: 'Level 7' },\n  { id: '3003', parentId: '2999', name: 'Level 7', subtext: 'id 3003', type: 'Level 7' },\n  { id: '3004', parentId: '2936', name: 'Level 4', subtext: 'id 3004', type: 'Level 4' },\n  { id: '3005', parentId: '3004', name: 'Level 5', subtext: 'id 3005', type: 'Level 5' },\n  { id: '3006', parentId: '3005', name: 'Level 6', subtext: 'id 3006', type: 'Level 6' },\n  { id: '3007', parentId: '3006', name: 'Level 7', subtext: 'id 3007', type: 'Level 7' },\n  { id: '3008', parentId: '3006', name: 'Level 7', subtext: 'id 3008', type: 'Level 7' },\n  { id: '3009', parentId: '3006', name: 'Level 7', subtext: 'id 3009', type: 'Level 7' },\n  { id: '3010', parentId: '3006', name: 'Level 7', subtext: 'id 3010', type: 'Level 7' },\n  { id: '3011', parentId: '3006', name: 'Level 7', subtext: 'id 3011', type: 'Level 7' },\n  { id: '3012', parentId: '3005', name: 'Level 6', subtext: 'id 3012', type: 'Level 6' },\n  { id: '3013', parentId: '3012', name: 'Level 7', subtext: 'id 3013', type: 'Level 7' },\n  { id: '3014', parentId: '3012', name: 'Level 7', subtext: 'id 3014', type: 'Level 7' },\n  { id: '3015', parentId: '3012', name: 'Level 7', subtext: 'id 3015', type: 'Level 7' },\n  { id: '3016', parentId: '3005', name: 'Level 6', subtext: 'id 3016', type: 'Level 6' },\n  { id: '3017', parentId: '3016', name: 'Level 7', subtext: 'id 3017', type: 'Level 7' },\n  { id: '3018', parentId: '3016', name: 'Level 7', subtext: 'id 3018', type: 'Level 7' },\n  { id: '3019', parentId: '3005', name: 'Level 6', subtext: 'id 3019', type: 'Level 6' },\n  { id: '3020', parentId: '3019', name: 'Level 7', subtext: 'id 3020', type: 'Level 7' },\n  { id: '3021', parentId: '3019', name: 'Level 7', subtext: 'id 3021', type: 'Level 7' },\n  { id: '3022', parentId: '3019', name: 'Level 7', subtext: 'id 3022', type: 'Level 7' },\n  { id: '3023', parentId: '3019', name: 'Level 7', subtext: 'id 3023', type: 'Level 7' },\n  { id: '3024', parentId: '3004', name: 'Level 5', subtext: 'id 3024', type: 'Level 5' },\n  { id: '3025', parentId: '3024', name: 'Level 6', subtext: 'id 3025', type: 'Level 6' },\n  { id: '3026', parentId: '3025', name: 'Level 7', subtext: 'id 3026', type: 'Level 7' },\n  { id: '3027', parentId: '3025', name: 'Level 7', subtext: 'id 3027', type: 'Level 7' },\n  { id: '3028', parentId: '3025', name: 'Level 7', subtext: 'id 3028', type: 'Level 7' },\n  { id: '3029', parentId: '3025', name: 'Level 7', subtext: 'id 3029', type: 'Level 7' },\n  { id: '3030', parentId: '3025', name: 'Level 7', subtext: 'id 3030', type: 'Level 7' },\n  { id: '3031', parentId: '3004', name: 'Level 5', subtext: 'id 3031', type: 'Level 5' },\n  { id: '3032', parentId: '3031', name: 'Level 6', subtext: 'id 3032', type: 'Level 6' },\n  { id: '3033', parentId: '3032', name: 'Level 7', subtext: 'id 3033', type: 'Level 7' },\n  { id: '3034', parentId: '3031', name: 'Level 6', subtext: 'id 3034', type: 'Level 6' },\n  { id: '3035', parentId: '3034', name: 'Level 7', subtext: 'id 3035', type: 'Level 7' },\n  { id: '3036', parentId: '3034', name: 'Level 7', subtext: 'id 3036', type: 'Level 7' },\n  { id: '3037', parentId: '3004', name: 'Level 5', subtext: 'id 3037', type: 'Level 5' },\n  { id: '3038', parentId: '3037', name: 'Level 6', subtext: 'id 3038', type: 'Level 6' },\n  { id: '3039', parentId: '3038', name: 'Level 7', subtext: 'id 3039', type: 'Level 7' },\n  { id: '3040', parentId: '3038', name: 'Level 7', subtext: 'id 3040', type: 'Level 7' },\n  { id: '3041', parentId: '3038', name: 'Level 7', subtext: 'id 3041', type: 'Level 7' },\n  { id: '3042', parentId: '3038', name: 'Level 7', subtext: 'id 3042', type: 'Level 7' },\n  { id: '3043', parentId: '3038', name: 'Level 7', subtext: 'id 3043', type: 'Level 7' },\n  { id: '3044', parentId: '3037', name: 'Level 6', subtext: 'id 3044', type: 'Level 6' },\n  { id: '3045', parentId: '3044', name: 'Level 7', subtext: 'id 3045', type: 'Level 7' },\n  { id: '3046', parentId: '3044', name: 'Level 7', subtext: 'id 3046', type: 'Level 7' },\n  { id: '3047', parentId: '3044', name: 'Level 7', subtext: 'id 3047', type: 'Level 7' },\n  { id: '3048', parentId: '3044', name: 'Level 7', subtext: 'id 3048', type: 'Level 7' },\n  { id: '3049', parentId: '3044', name: 'Level 7', subtext: 'id 3049', type: 'Level 7' },\n  { id: '3050', parentId: '3004', name: 'Level 5', subtext: 'id 3050', type: 'Level 5' },\n  { id: '3051', parentId: '3050', name: 'Level 6', subtext: 'id 3051', type: 'Level 6' },\n  { id: '3052', parentId: '3051', name: 'Level 7', subtext: 'id 3052', type: 'Level 7' },\n  { id: '3053', parentId: '3050', name: 'Level 6', subtext: 'id 3053', type: 'Level 6' },\n  { id: '3054', parentId: '3053', name: 'Level 7', subtext: 'id 3054', type: 'Level 7' },\n  { id: '3055', parentId: '3050', name: 'Level 6', subtext: 'id 3055', type: 'Level 6' },\n  { id: '3056', parentId: '3055', name: 'Level 7', subtext: 'id 3056', type: 'Level 7' },\n  { id: '3057', parentId: '3055', name: 'Level 7', subtext: 'id 3057', type: 'Level 7' },\n  { id: '3058', parentId: '3055', name: 'Level 7', subtext: 'id 3058', type: 'Level 7' },\n  { id: '3059', parentId: '3055', name: 'Level 7', subtext: 'id 3059', type: 'Level 7' },\n  { id: '3060', parentId: '3055', name: 'Level 7', subtext: 'id 3060', type: 'Level 7' },\n  { id: '3061', parentId: '3050', name: 'Level 6', subtext: 'id 3061', type: 'Level 6' },\n  { id: '3062', parentId: '3061', name: 'Level 7', subtext: 'id 3062', type: 'Level 7' },\n  { id: '3063', parentId: '3061', name: 'Level 7', subtext: 'id 3063', type: 'Level 7' },\n  { id: '3064', parentId: '3050', name: 'Level 6', subtext: 'id 3064', type: 'Level 6' },\n  { id: '3065', parentId: '3064', name: 'Level 7', subtext: 'id 3065', type: 'Level 7' },\n  { id: '3066', parentId: '3064', name: 'Level 7', subtext: 'id 3066', type: 'Level 7' },\n  { id: '3067', parentId: '2936', name: 'Level 4', subtext: 'id 3067', type: 'Level 4' },\n  { id: '3068', parentId: '3067', name: 'Level 5', subtext: 'id 3068', type: 'Level 5' },\n  { id: '3069', parentId: '3068', name: 'Level 6', subtext: 'id 3069', type: 'Level 6' },\n  { id: '3070', parentId: '3069', name: 'Level 7', subtext: 'id 3070', type: 'Level 7' },\n  { id: '3071', parentId: '3069', name: 'Level 7', subtext: 'id 3071', type: 'Level 7' },\n  { id: '3072', parentId: '3068', name: 'Level 6', subtext: 'id 3072', type: 'Level 6' },\n  { id: '3073', parentId: '3072', name: 'Level 7', subtext: 'id 3073', type: 'Level 7' },\n  { id: '3074', parentId: '3068', name: 'Level 6', subtext: 'id 3074', type: 'Level 6' },\n  { id: '3075', parentId: '3074', name: 'Level 7', subtext: 'id 3075', type: 'Level 7' },\n  { id: '3076', parentId: '3067', name: 'Level 5', subtext: 'id 3076', type: 'Level 5' },\n  { id: '3077', parentId: '3076', name: 'Level 6', subtext: 'id 3077', type: 'Level 6' },\n  { id: '3078', parentId: '3077', name: 'Level 7', subtext: 'id 3078', type: 'Level 7' },\n  { id: '3079', parentId: '3077', name: 'Level 7', subtext: 'id 3079', type: 'Level 7' },\n  { id: '3080', parentId: '3067', name: 'Level 5', subtext: 'id 3080', type: 'Level 5' },\n  { id: '3081', parentId: '3080', name: 'Level 6', subtext: 'id 3081', type: 'Level 6' },\n  { id: '3082', parentId: '3081', name: 'Level 7', subtext: 'id 3082', type: 'Level 7' },\n  { id: '3083', parentId: '3081', name: 'Level 7', subtext: 'id 3083', type: 'Level 7' },\n  { id: '3084', parentId: '3081', name: 'Level 7', subtext: 'id 3084', type: 'Level 7' },\n  { id: '3085', parentId: '3081', name: 'Level 7', subtext: 'id 3085', type: 'Level 7' },\n  { id: '3086', parentId: '3081', name: 'Level 7', subtext: 'id 3086', type: 'Level 7' },\n  { id: '3087', parentId: '3080', name: 'Level 6', subtext: 'id 3087', type: 'Level 6' },\n  { id: '3088', parentId: '3087', name: 'Level 7', subtext: 'id 3088', type: 'Level 7' },\n  { id: '3089', parentId: '3087', name: 'Level 7', subtext: 'id 3089', type: 'Level 7' },\n  { id: '3090', parentId: '3087', name: 'Level 7', subtext: 'id 3090', type: 'Level 7' },\n  { id: '3091', parentId: '3080', name: 'Level 6', subtext: 'id 3091', type: 'Level 6' },\n  { id: '3092', parentId: '3091', name: 'Level 7', subtext: 'id 3092', type: 'Level 7' },\n  { id: '3093', parentId: '3091', name: 'Level 7', subtext: 'id 3093', type: 'Level 7' },\n  { id: '3094', parentId: '3091', name: 'Level 7', subtext: 'id 3094', type: 'Level 7' },\n  { id: '3095', parentId: '3091', name: 'Level 7', subtext: 'id 3095', type: 'Level 7' },\n  { id: '3096', parentId: '3091', name: 'Level 7', subtext: 'id 3096', type: 'Level 7' },\n  { id: '3097', parentId: '2936', name: 'Level 4', subtext: 'id 3097', type: 'Level 4' },\n  { id: '3098', parentId: '3097', name: 'Level 5', subtext: 'id 3098', type: 'Level 5' },\n  { id: '3099', parentId: '3098', name: 'Level 6', subtext: 'id 3099', type: 'Level 6' },\n  { id: '3100', parentId: '3099', name: 'Level 7', subtext: 'id 3100', type: 'Level 7' },\n  { id: '3101', parentId: '3099', name: 'Level 7', subtext: 'id 3101', type: 'Level 7' },\n  { id: '3102', parentId: '3099', name: 'Level 7', subtext: 'id 3102', type: 'Level 7' },\n  { id: '3103', parentId: '3099', name: 'Level 7', subtext: 'id 3103', type: 'Level 7' },\n  { id: '3104', parentId: '3098', name: 'Level 6', subtext: 'id 3104', type: 'Level 6' },\n  { id: '3105', parentId: '3104', name: 'Level 7', subtext: 'id 3105', type: 'Level 7' },\n  { id: '3106', parentId: '3104', name: 'Level 7', subtext: 'id 3106', type: 'Level 7' },\n  { id: '3107', parentId: '3104', name: 'Level 7', subtext: 'id 3107', type: 'Level 7' },\n  { id: '3108', parentId: '3104', name: 'Level 7', subtext: 'id 3108', type: 'Level 7' },\n  { id: '3109', parentId: '3104', name: 'Level 7', subtext: 'id 3109', type: 'Level 7' },\n  { id: '3110', parentId: '3098', name: 'Level 6', subtext: 'id 3110', type: 'Level 6' },\n  { id: '3111', parentId: '3110', name: 'Level 7', subtext: 'id 3111', type: 'Level 7' },\n  { id: '3112', parentId: '3110', name: 'Level 7', subtext: 'id 3112', type: 'Level 7' },\n  { id: '3113', parentId: '3110', name: 'Level 7', subtext: 'id 3113', type: 'Level 7' },\n  { id: '3114', parentId: '3097', name: 'Level 5', subtext: 'id 3114', type: 'Level 5' },\n  { id: '3115', parentId: '3114', name: 'Level 6', subtext: 'id 3115', type: 'Level 6' },\n  { id: '3116', parentId: '3115', name: 'Level 7', subtext: 'id 3116', type: 'Level 7' },\n  { id: '3117', parentId: '3115', name: 'Level 7', subtext: 'id 3117', type: 'Level 7' },\n  { id: '3118', parentId: '3115', name: 'Level 7', subtext: 'id 3118', type: 'Level 7' },\n  { id: '3119', parentId: '3115', name: 'Level 7', subtext: 'id 3119', type: 'Level 7' },\n  { id: '3120', parentId: '3115', name: 'Level 7', subtext: 'id 3120', type: 'Level 7' },\n  { id: '3121', parentId: '3114', name: 'Level 6', subtext: 'id 3121', type: 'Level 6' },\n  { id: '3122', parentId: '3121', name: 'Level 7', subtext: 'id 3122', type: 'Level 7' },\n  { id: '3123', parentId: '3121', name: 'Level 7', subtext: 'id 3123', type: 'Level 7' },\n  { id: '3124', parentId: '3121', name: 'Level 7', subtext: 'id 3124', type: 'Level 7' },\n  { id: '3125', parentId: '3114', name: 'Level 6', subtext: 'id 3125', type: 'Level 6' },\n  { id: '3126', parentId: '3125', name: 'Level 7', subtext: 'id 3126', type: 'Level 7' },\n  { id: '3127', parentId: '3125', name: 'Level 7', subtext: 'id 3127', type: 'Level 7' },\n  { id: '3128', parentId: '3125', name: 'Level 7', subtext: 'id 3128', type: 'Level 7' },\n  { id: '3129', parentId: '3125', name: 'Level 7', subtext: 'id 3129', type: 'Level 7' },\n  { id: '3130', parentId: '2724', name: 'Level 3', subtext: 'id 3130', type: 'Level 3' },\n  { id: '3131', parentId: '3130', name: 'Level 4', subtext: 'id 3131', type: 'Level 4' },\n  { id: '3132', parentId: '3131', name: 'Level 5', subtext: 'id 3132', type: 'Level 5' },\n  { id: '3133', parentId: '3132', name: 'Level 6', subtext: 'id 3133', type: 'Level 6' },\n  { id: '3134', parentId: '3133', name: 'Level 7', subtext: 'id 3134', type: 'Level 7' },\n  { id: '3135', parentId: '3132', name: 'Level 6', subtext: 'id 3135', type: 'Level 6' },\n  { id: '3136', parentId: '3135', name: 'Level 7', subtext: 'id 3136', type: 'Level 7' },\n  { id: '3137', parentId: '3135', name: 'Level 7', subtext: 'id 3137', type: 'Level 7' },\n  { id: '3138', parentId: '3135', name: 'Level 7', subtext: 'id 3138', type: 'Level 7' },\n  { id: '3139', parentId: '3132', name: 'Level 6', subtext: 'id 3139', type: 'Level 6' },\n  { id: '3140', parentId: '3139', name: 'Level 7', subtext: 'id 3140', type: 'Level 7' },\n  { id: '3141', parentId: '3139', name: 'Level 7', subtext: 'id 3141', type: 'Level 7' },\n  { id: '3142', parentId: '3139', name: 'Level 7', subtext: 'id 3142', type: 'Level 7' },\n  { id: '3143', parentId: '3132', name: 'Level 6', subtext: 'id 3143', type: 'Level 6' },\n  { id: '3144', parentId: '3143', name: 'Level 7', subtext: 'id 3144', type: 'Level 7' },\n  { id: '3145', parentId: '3132', name: 'Level 6', subtext: 'id 3145', type: 'Level 6' },\n  { id: '3146', parentId: '3145', name: 'Level 7', subtext: 'id 3146', type: 'Level 7' },\n  { id: '3147', parentId: '3145', name: 'Level 7', subtext: 'id 3147', type: 'Level 7' },\n  { id: '3148', parentId: '3131', name: 'Level 5', subtext: 'id 3148', type: 'Level 5' },\n  { id: '3149', parentId: '3148', name: 'Level 6', subtext: 'id 3149', type: 'Level 6' },\n  { id: '3150', parentId: '3149', name: 'Level 7', subtext: 'id 3150', type: 'Level 7' },\n  { id: '3151', parentId: '3149', name: 'Level 7', subtext: 'id 3151', type: 'Level 7' },\n  { id: '3152', parentId: '3130', name: 'Level 4', subtext: 'id 3152', type: 'Level 4' },\n  { id: '3153', parentId: '3152', name: 'Level 5', subtext: 'id 3153', type: 'Level 5' },\n  { id: '3154', parentId: '3153', name: 'Level 6', subtext: 'id 3154', type: 'Level 6' },\n  { id: '3155', parentId: '3154', name: 'Level 7', subtext: 'id 3155', type: 'Level 7' },\n  { id: '3156', parentId: '3154', name: 'Level 7', subtext: 'id 3156', type: 'Level 7' },\n  { id: '3157', parentId: '3154', name: 'Level 7', subtext: 'id 3157', type: 'Level 7' },\n  { id: '3158', parentId: '3153', name: 'Level 6', subtext: 'id 3158', type: 'Level 6' },\n  { id: '3159', parentId: '3158', name: 'Level 7', subtext: 'id 3159', type: 'Level 7' },\n  { id: '3160', parentId: '3153', name: 'Level 6', subtext: 'id 3160', type: 'Level 6' },\n  { id: '3161', parentId: '3160', name: 'Level 7', subtext: 'id 3161', type: 'Level 7' },\n  { id: '3162', parentId: '3160', name: 'Level 7', subtext: 'id 3162', type: 'Level 7' },\n  { id: '3163', parentId: '3160', name: 'Level 7', subtext: 'id 3163', type: 'Level 7' },\n  { id: '3164', parentId: '3160', name: 'Level 7', subtext: 'id 3164', type: 'Level 7' },\n  { id: '3165', parentId: '3152', name: 'Level 5', subtext: 'id 3165', type: 'Level 5' },\n  { id: '3166', parentId: '3165', name: 'Level 6', subtext: 'id 3166', type: 'Level 6' },\n  { id: '3167', parentId: '3166', name: 'Level 7', subtext: 'id 3167', type: 'Level 7' },\n  { id: '3168', parentId: '3166', name: 'Level 7', subtext: 'id 3168', type: 'Level 7' },\n  { id: '3169', parentId: '3166', name: 'Level 7', subtext: 'id 3169', type: 'Level 7' },\n  { id: '3170', parentId: '3166', name: 'Level 7', subtext: 'id 3170', type: 'Level 7' },\n  { id: '3171', parentId: '3166', name: 'Level 7', subtext: 'id 3171', type: 'Level 7' },\n  { id: '3172', parentId: '3165', name: 'Level 6', subtext: 'id 3172', type: 'Level 6' },\n  { id: '3173', parentId: '3172', name: 'Level 7', subtext: 'id 3173', type: 'Level 7' },\n  { id: '3174', parentId: '3172', name: 'Level 7', subtext: 'id 3174', type: 'Level 7' },\n  { id: '3175', parentId: '3165', name: 'Level 6', subtext: 'id 3175', type: 'Level 6' },\n  { id: '3176', parentId: '3175', name: 'Level 7', subtext: 'id 3176', type: 'Level 7' },\n  { id: '3177', parentId: '3175', name: 'Level 7', subtext: 'id 3177', type: 'Level 7' },\n  { id: '3178', parentId: '3165', name: 'Level 6', subtext: 'id 3178', type: 'Level 6' },\n  { id: '3179', parentId: '3178', name: 'Level 7', subtext: 'id 3179', type: 'Level 7' },\n  { id: '3180', parentId: '3165', name: 'Level 6', subtext: 'id 3180', type: 'Level 6' },\n  { id: '3181', parentId: '3180', name: 'Level 7', subtext: 'id 3181', type: 'Level 7' },\n  { id: '3182', parentId: '3180', name: 'Level 7', subtext: 'id 3182', type: 'Level 7' },\n  { id: '3183', parentId: '3180', name: 'Level 7', subtext: 'id 3183', type: 'Level 7' },\n  { id: '3184', parentId: '3180', name: 'Level 7', subtext: 'id 3184', type: 'Level 7' },\n  { id: '3185', parentId: '3152', name: 'Level 5', subtext: 'id 3185', type: 'Level 5' },\n  { id: '3186', parentId: '3185', name: 'Level 6', subtext: 'id 3186', type: 'Level 6' },\n  { id: '3187', parentId: '3186', name: 'Level 7', subtext: 'id 3187', type: 'Level 7' },\n  { id: '3188', parentId: '3185', name: 'Level 6', subtext: 'id 3188', type: 'Level 6' },\n  { id: '3189', parentId: '3188', name: 'Level 7', subtext: 'id 3189', type: 'Level 7' },\n  { id: '3190', parentId: '3152', name: 'Level 5', subtext: 'id 3190', type: 'Level 5' },\n  { id: '3191', parentId: '3190', name: 'Level 6', subtext: 'id 3191', type: 'Level 6' },\n  { id: '3192', parentId: '3191', name: 'Level 7', subtext: 'id 3192', type: 'Level 7' },\n  { id: '3193', parentId: '3191', name: 'Level 7', subtext: 'id 3193', type: 'Level 7' },\n  { id: '3194', parentId: '3191', name: 'Level 7', subtext: 'id 3194', type: 'Level 7' },\n  { id: '3195', parentId: '3191', name: 'Level 7', subtext: 'id 3195', type: 'Level 7' },\n  { id: '3196', parentId: '3190', name: 'Level 6', subtext: 'id 3196', type: 'Level 6' },\n  { id: '3197', parentId: '3196', name: 'Level 7', subtext: 'id 3197', type: 'Level 7' },\n  { id: '3198', parentId: '3190', name: 'Level 6', subtext: 'id 3198', type: 'Level 6' },\n  { id: '3199', parentId: '3198', name: 'Level 7', subtext: 'id 3199', type: 'Level 7' },\n  { id: '3200', parentId: '3198', name: 'Level 7', subtext: 'id 3200', type: 'Level 7' },\n  { id: '3201', parentId: '3152', name: 'Level 5', subtext: 'id 3201', type: 'Level 5' },\n  { id: '3202', parentId: '3201', name: 'Level 6', subtext: 'id 3202', type: 'Level 6' },\n  { id: '3203', parentId: '3202', name: 'Level 7', subtext: 'id 3203', type: 'Level 7' },\n  { id: '3204', parentId: '3202', name: 'Level 7', subtext: 'id 3204', type: 'Level 7' },\n  { id: '3205', parentId: '3201', name: 'Level 6', subtext: 'id 3205', type: 'Level 6' },\n  { id: '3206', parentId: '3205', name: 'Level 7', subtext: 'id 3206', type: 'Level 7' },\n  { id: '3207', parentId: '2724', name: 'Level 3', subtext: 'id 3207', type: 'Level 3' },\n  { id: '3208', parentId: '3207', name: 'Level 4', subtext: 'id 3208', type: 'Level 4' },\n  { id: '3209', parentId: '3208', name: 'Level 5', subtext: 'id 3209', type: 'Level 5' },\n  { id: '3210', parentId: '3209', name: 'Level 6', subtext: 'id 3210', type: 'Level 6' },\n  { id: '3211', parentId: '3210', name: 'Level 7', subtext: 'id 3211', type: 'Level 7' },\n  { id: '3212', parentId: '3210', name: 'Level 7', subtext: 'id 3212', type: 'Level 7' },\n  { id: '3213', parentId: '3210', name: 'Level 7', subtext: 'id 3213', type: 'Level 7' },\n  { id: '3214', parentId: '3209', name: 'Level 6', subtext: 'id 3214', type: 'Level 6' },\n  { id: '3215', parentId: '3214', name: 'Level 7', subtext: 'id 3215', type: 'Level 7' },\n  { id: '3216', parentId: '3214', name: 'Level 7', subtext: 'id 3216', type: 'Level 7' },\n  { id: '3217', parentId: '3214', name: 'Level 7', subtext: 'id 3217', type: 'Level 7' },\n  { id: '3218', parentId: '3214', name: 'Level 7', subtext: 'id 3218', type: 'Level 7' },\n  { id: '3219', parentId: '3209', name: 'Level 6', subtext: 'id 3219', type: 'Level 6' },\n  { id: '3220', parentId: '3219', name: 'Level 7', subtext: 'id 3220', type: 'Level 7' },\n  { id: '3221', parentId: '3219', name: 'Level 7', subtext: 'id 3221', type: 'Level 7' },\n  { id: '3222', parentId: '3219', name: 'Level 7', subtext: 'id 3222', type: 'Level 7' },\n  { id: '3223', parentId: '3207', name: 'Level 4', subtext: 'id 3223', type: 'Level 4' },\n  { id: '3224', parentId: '3223', name: 'Level 5', subtext: 'id 3224', type: 'Level 5' },\n  { id: '3225', parentId: '3224', name: 'Level 6', subtext: 'id 3225', type: 'Level 6' },\n  { id: '3226', parentId: '3225', name: 'Level 7', subtext: 'id 3226', type: 'Level 7' },\n  { id: '3227', parentId: '3225', name: 'Level 7', subtext: 'id 3227', type: 'Level 7' },\n  { id: '3228', parentId: '3225', name: 'Level 7', subtext: 'id 3228', type: 'Level 7' },\n  { id: '3229', parentId: '3224', name: 'Level 6', subtext: 'id 3229', type: 'Level 6' },\n  { id: '3230', parentId: '3229', name: 'Level 7', subtext: 'id 3230', type: 'Level 7' },\n  { id: '3231', parentId: '3229', name: 'Level 7', subtext: 'id 3231', type: 'Level 7' },\n  { id: '3232', parentId: '3229', name: 'Level 7', subtext: 'id 3232', type: 'Level 7' },\n  { id: '3233', parentId: '3229', name: 'Level 7', subtext: 'id 3233', type: 'Level 7' },\n  { id: '3234', parentId: '3224', name: 'Level 6', subtext: 'id 3234', type: 'Level 6' },\n  { id: '3235', parentId: '3234', name: 'Level 7', subtext: 'id 3235', type: 'Level 7' },\n  { id: '3236', parentId: '3234', name: 'Level 7', subtext: 'id 3236', type: 'Level 7' },\n  { id: '3237', parentId: '3234', name: 'Level 7', subtext: 'id 3237', type: 'Level 7' },\n  { id: '3238', parentId: '3224', name: 'Level 6', subtext: 'id 3238', type: 'Level 6' },\n  { id: '3239', parentId: '3238', name: 'Level 7', subtext: 'id 3239', type: 'Level 7' },\n  { id: '3240', parentId: '3224', name: 'Level 6', subtext: 'id 3240', type: 'Level 6' },\n  { id: '3241', parentId: '3240', name: 'Level 7', subtext: 'id 3241', type: 'Level 7' },\n  { id: '3242', parentId: '3223', name: 'Level 5', subtext: 'id 3242', type: 'Level 5' },\n  { id: '3243', parentId: '3242', name: 'Level 6', subtext: 'id 3243', type: 'Level 6' },\n  { id: '3244', parentId: '3243', name: 'Level 7', subtext: 'id 3244', type: 'Level 7' },\n  { id: '3245', parentId: '3243', name: 'Level 7', subtext: 'id 3245', type: 'Level 7' },\n  { id: '3246', parentId: '3242', name: 'Level 6', subtext: 'id 3246', type: 'Level 6' },\n  { id: '3247', parentId: '3246', name: 'Level 7', subtext: 'id 3247', type: 'Level 7' },\n  { id: '3248', parentId: '3246', name: 'Level 7', subtext: 'id 3248', type: 'Level 7' },\n  { id: '3249', parentId: '3246', name: 'Level 7', subtext: 'id 3249', type: 'Level 7' },\n  { id: '3250', parentId: '3246', name: 'Level 7', subtext: 'id 3250', type: 'Level 7' },\n  { id: '3251', parentId: '3242', name: 'Level 6', subtext: 'id 3251', type: 'Level 6' },\n  { id: '3252', parentId: '3251', name: 'Level 7', subtext: 'id 3252', type: 'Level 7' },\n  { id: '3253', parentId: '3251', name: 'Level 7', subtext: 'id 3253', type: 'Level 7' },\n  { id: '3254', parentId: '3251', name: 'Level 7', subtext: 'id 3254', type: 'Level 7' },\n  { id: '3255', parentId: '3242', name: 'Level 6', subtext: 'id 3255', type: 'Level 6' },\n  { id: '3256', parentId: '3255', name: 'Level 7', subtext: 'id 3256', type: 'Level 7' },\n  { id: '3257', parentId: '3255', name: 'Level 7', subtext: 'id 3257', type: 'Level 7' },\n  { id: '3258', parentId: '3255', name: 'Level 7', subtext: 'id 3258', type: 'Level 7' },\n  { id: '3259', parentId: '3242', name: 'Level 6', subtext: 'id 3259', type: 'Level 6' },\n  { id: '3260', parentId: '3259', name: 'Level 7', subtext: 'id 3260', type: 'Level 7' },\n  { id: '3261', parentId: '3259', name: 'Level 7', subtext: 'id 3261', type: 'Level 7' },\n  { id: '3262', parentId: '3223', name: 'Level 5', subtext: 'id 3262', type: 'Level 5' },\n  { id: '3263', parentId: '3262', name: 'Level 6', subtext: 'id 3263', type: 'Level 6' },\n  { id: '3264', parentId: '3263', name: 'Level 7', subtext: 'id 3264', type: 'Level 7' },\n  { id: '3265', parentId: '3263', name: 'Level 7', subtext: 'id 3265', type: 'Level 7' },\n  { id: '3266', parentId: '3263', name: 'Level 7', subtext: 'id 3266', type: 'Level 7' },\n  { id: '3267', parentId: '3262', name: 'Level 6', subtext: 'id 3267', type: 'Level 6' },\n  { id: '3268', parentId: '3267', name: 'Level 7', subtext: 'id 3268', type: 'Level 7' },\n  { id: '3269', parentId: '3267', name: 'Level 7', subtext: 'id 3269', type: 'Level 7' },\n  { id: '3270', parentId: '3267', name: 'Level 7', subtext: 'id 3270', type: 'Level 7' },\n  { id: '3271', parentId: '3267', name: 'Level 7', subtext: 'id 3271', type: 'Level 7' },\n  { id: '3272', parentId: '3267', name: 'Level 7', subtext: 'id 3272', type: 'Level 7' },\n  { id: '3273', parentId: '3223', name: 'Level 5', subtext: 'id 3273', type: 'Level 5' },\n  { id: '3274', parentId: '3273', name: 'Level 6', subtext: 'id 3274', type: 'Level 6' },\n  { id: '3275', parentId: '3274', name: 'Level 7', subtext: 'id 3275', type: 'Level 7' },\n  { id: '3276', parentId: '3274', name: 'Level 7', subtext: 'id 3276', type: 'Level 7' },\n  { id: '3277', parentId: '3274', name: 'Level 7', subtext: 'id 3277', type: 'Level 7' },\n  { id: '3278', parentId: '3274', name: 'Level 7', subtext: 'id 3278', type: 'Level 7' },\n  { id: '3279', parentId: '3273', name: 'Level 6', subtext: 'id 3279', type: 'Level 6' },\n  { id: '3280', parentId: '3279', name: 'Level 7', subtext: 'id 3280', type: 'Level 7' },\n  { id: '3281', parentId: '3207', name: 'Level 4', subtext: 'id 3281', type: 'Level 4' },\n  { id: '3282', parentId: '3281', name: 'Level 5', subtext: 'id 3282', type: 'Level 5' },\n  { id: '3283', parentId: '3282', name: 'Level 6', subtext: 'id 3283', type: 'Level 6' },\n  { id: '3284', parentId: '3283', name: 'Level 7', subtext: 'id 3284', type: 'Level 7' },\n  { id: '3285', parentId: '3282', name: 'Level 6', subtext: 'id 3285', type: 'Level 6' },\n  { id: '3286', parentId: '3285', name: 'Level 7', subtext: 'id 3286', type: 'Level 7' },\n  { id: '3287', parentId: '3285', name: 'Level 7', subtext: 'id 3287', type: 'Level 7' },\n  { id: '3288', parentId: '3285', name: 'Level 7', subtext: 'id 3288', type: 'Level 7' },\n  { id: '3289', parentId: '3285', name: 'Level 7', subtext: 'id 3289', type: 'Level 7' },\n  { id: '3290', parentId: '3282', name: 'Level 6', subtext: 'id 3290', type: 'Level 6' },\n  { id: '3291', parentId: '3290', name: 'Level 7', subtext: 'id 3291', type: 'Level 7' },\n  { id: '3292', parentId: '3290', name: 'Level 7', subtext: 'id 3292', type: 'Level 7' },\n  { id: '3293', parentId: '3290', name: 'Level 7', subtext: 'id 3293', type: 'Level 7' },\n  { id: '3294', parentId: '3290', name: 'Level 7', subtext: 'id 3294', type: 'Level 7' },\n  { id: '3295', parentId: '3282', name: 'Level 6', subtext: 'id 3295', type: 'Level 6' },\n  { id: '3296', parentId: '3295', name: 'Level 7', subtext: 'id 3296', type: 'Level 7' },\n  { id: '3297', parentId: '3295', name: 'Level 7', subtext: 'id 3297', type: 'Level 7' },\n  { id: '3298', parentId: '3282', name: 'Level 6', subtext: 'id 3298', type: 'Level 6' },\n  { id: '3299', parentId: '3298', name: 'Level 7', subtext: 'id 3299', type: 'Level 7' },\n  { id: '3300', parentId: '3298', name: 'Level 7', subtext: 'id 3300', type: 'Level 7' },\n  { id: '3301', parentId: '3281', name: 'Level 5', subtext: 'id 3301', type: 'Level 5' },\n  { id: '3302', parentId: '3301', name: 'Level 6', subtext: 'id 3302', type: 'Level 6' },\n  { id: '3303', parentId: '3302', name: 'Level 7', subtext: 'id 3303', type: 'Level 7' },\n  { id: '3304', parentId: '3302', name: 'Level 7', subtext: 'id 3304', type: 'Level 7' },\n  { id: '3305', parentId: '3301', name: 'Level 6', subtext: 'id 3305', type: 'Level 6' },\n  { id: '3306', parentId: '3305', name: 'Level 7', subtext: 'id 3306', type: 'Level 7' },\n  { id: '3307', parentId: '3305', name: 'Level 7', subtext: 'id 3307', type: 'Level 7' },\n  { id: '3308', parentId: '3301', name: 'Level 6', subtext: 'id 3308', type: 'Level 6' },\n  { id: '3309', parentId: '3308', name: 'Level 7', subtext: 'id 3309', type: 'Level 7' },\n  { id: '3310', parentId: '3308', name: 'Level 7', subtext: 'id 3310', type: 'Level 7' },\n  { id: '3311', parentId: '3281', name: 'Level 5', subtext: 'id 3311', type: 'Level 5' },\n  { id: '3312', parentId: '3311', name: 'Level 6', subtext: 'id 3312', type: 'Level 6' },\n  { id: '3313', parentId: '3312', name: 'Level 7', subtext: 'id 3313', type: 'Level 7' },\n  { id: '3314', parentId: '3311', name: 'Level 6', subtext: 'id 3314', type: 'Level 6' },\n  { id: '3315', parentId: '3314', name: 'Level 7', subtext: 'id 3315', type: 'Level 7' },\n  { id: '3316', parentId: '3314', name: 'Level 7', subtext: 'id 3316', type: 'Level 7' },\n  { id: '3317', parentId: '3311', name: 'Level 6', subtext: 'id 3317', type: 'Level 6' },\n  { id: '3318', parentId: '3317', name: 'Level 7', subtext: 'id 3318', type: 'Level 7' },\n  { id: '3319', parentId: '3317', name: 'Level 7', subtext: 'id 3319', type: 'Level 7' },\n  { id: '3320', parentId: '3317', name: 'Level 7', subtext: 'id 3320', type: 'Level 7' },\n  { id: '3321', parentId: '3317', name: 'Level 7', subtext: 'id 3321', type: 'Level 7' },\n  { id: '3322', parentId: '3317', name: 'Level 7', subtext: 'id 3322', type: 'Level 7' },\n  { id: '3323', parentId: '3311', name: 'Level 6', subtext: 'id 3323', type: 'Level 6' },\n  { id: '3324', parentId: '3323', name: 'Level 7', subtext: 'id 3324', type: 'Level 7' },\n  { id: '3325', parentId: '3323', name: 'Level 7', subtext: 'id 3325', type: 'Level 7' },\n  { id: '3326', parentId: '3323', name: 'Level 7', subtext: 'id 3326', type: 'Level 7' },\n  { id: '3327', parentId: '3323', name: 'Level 7', subtext: 'id 3327', type: 'Level 7' },\n  { id: '3328', parentId: '3323', name: 'Level 7', subtext: 'id 3328', type: 'Level 7' },\n  { id: '3329', parentId: '3281', name: 'Level 5', subtext: 'id 3329', type: 'Level 5' },\n  { id: '3330', parentId: '3329', name: 'Level 6', subtext: 'id 3330', type: 'Level 6' },\n  { id: '3331', parentId: '3330', name: 'Level 7', subtext: 'id 3331', type: 'Level 7' },\n  { id: '3332', parentId: '3330', name: 'Level 7', subtext: 'id 3332', type: 'Level 7' },\n  { id: '3333', parentId: '3330', name: 'Level 7', subtext: 'id 3333', type: 'Level 7' },\n  { id: '3334', parentId: '3330', name: 'Level 7', subtext: 'id 3334', type: 'Level 7' },\n  { id: '3335', parentId: '3329', name: 'Level 6', subtext: 'id 3335', type: 'Level 6' },\n  { id: '3336', parentId: '3335', name: 'Level 7', subtext: 'id 3336', type: 'Level 7' },\n  { id: '3337', parentId: '3335', name: 'Level 7', subtext: 'id 3337', type: 'Level 7' },\n  { id: '3338', parentId: '3335', name: 'Level 7', subtext: 'id 3338', type: 'Level 7' },\n  { id: '3339', parentId: '3335', name: 'Level 7', subtext: 'id 3339', type: 'Level 7' },\n  { id: '3340', parentId: '3335', name: 'Level 7', subtext: 'id 3340', type: 'Level 7' },\n  { id: '3341', parentId: '3329', name: 'Level 6', subtext: 'id 3341', type: 'Level 6' },\n  { id: '3342', parentId: '3341', name: 'Level 7', subtext: 'id 3342', type: 'Level 7' },\n  { id: '3343', parentId: '3341', name: 'Level 7', subtext: 'id 3343', type: 'Level 7' },\n  { id: '3344', parentId: '3341', name: 'Level 7', subtext: 'id 3344', type: 'Level 7' },\n  { id: '3345', parentId: '3341', name: 'Level 7', subtext: 'id 3345', type: 'Level 7' },\n  { id: '3346', parentId: '3329', name: 'Level 6', subtext: 'id 3346', type: 'Level 6' },\n  { id: '3347', parentId: '3346', name: 'Level 7', subtext: 'id 3347', type: 'Level 7' },\n  { id: '3348', parentId: '3346', name: 'Level 7', subtext: 'id 3348', type: 'Level 7' },\n  { id: '3349', parentId: '3346', name: 'Level 7', subtext: 'id 3349', type: 'Level 7' },\n  { id: '3350', parentId: '3346', name: 'Level 7', subtext: 'id 3350', type: 'Level 7' },\n  { id: '3351', parentId: '3346', name: 'Level 7', subtext: 'id 3351', type: 'Level 7' },\n  { id: '3352', parentId: '3329', name: 'Level 6', subtext: 'id 3352', type: 'Level 6' },\n  { id: '3353', parentId: '3352', name: 'Level 7', subtext: 'id 3353', type: 'Level 7' },\n  { id: '3354', parentId: '3207', name: 'Level 4', subtext: 'id 3354', type: 'Level 4' },\n  { id: '3355', parentId: '3354', name: 'Level 5', subtext: 'id 3355', type: 'Level 5' },\n  { id: '3356', parentId: '3355', name: 'Level 6', subtext: 'id 3356', type: 'Level 6' },\n  { id: '3357', parentId: '3356', name: 'Level 7', subtext: 'id 3357', type: 'Level 7' },\n  { id: '3358', parentId: '3355', name: 'Level 6', subtext: 'id 3358', type: 'Level 6' },\n  { id: '3359', parentId: '3358', name: 'Level 7', subtext: 'id 3359', type: 'Level 7' },\n  { id: '3360', parentId: '3358', name: 'Level 7', subtext: 'id 3360', type: 'Level 7' },\n  { id: '3361', parentId: '3358', name: 'Level 7', subtext: 'id 3361', type: 'Level 7' },\n  { id: '3362', parentId: '3355', name: 'Level 6', subtext: 'id 3362', type: 'Level 6' },\n  { id: '3363', parentId: '3362', name: 'Level 7', subtext: 'id 3363', type: 'Level 7' },\n  { id: '3364', parentId: '3362', name: 'Level 7', subtext: 'id 3364', type: 'Level 7' },\n  { id: '3365', parentId: '3362', name: 'Level 7', subtext: 'id 3365', type: 'Level 7' },\n  { id: '3366', parentId: '3355', name: 'Level 6', subtext: 'id 3366', type: 'Level 6' },\n  { id: '3367', parentId: '3366', name: 'Level 7', subtext: 'id 3367', type: 'Level 7' },\n  { id: '3368', parentId: '3366', name: 'Level 7', subtext: 'id 3368', type: 'Level 7' },\n  { id: '3369', parentId: '3366', name: 'Level 7', subtext: 'id 3369', type: 'Level 7' },\n  { id: '3370', parentId: '3366', name: 'Level 7', subtext: 'id 3370', type: 'Level 7' },\n  { id: '3371', parentId: '3355', name: 'Level 6', subtext: 'id 3371', type: 'Level 6' },\n  { id: '3372', parentId: '3371', name: 'Level 7', subtext: 'id 3372', type: 'Level 7' },\n  { id: '3373', parentId: '3371', name: 'Level 7', subtext: 'id 3373', type: 'Level 7' },\n  { id: '3374', parentId: '3371', name: 'Level 7', subtext: 'id 3374', type: 'Level 7' },\n  { id: '3375', parentId: '3371', name: 'Level 7', subtext: 'id 3375', type: 'Level 7' },\n  { id: '3376', parentId: '3354', name: 'Level 5', subtext: 'id 3376', type: 'Level 5' },\n  { id: '3377', parentId: '3376', name: 'Level 6', subtext: 'id 3377', type: 'Level 6' },\n  { id: '3378', parentId: '3377', name: 'Level 7', subtext: 'id 3378', type: 'Level 7' },\n  { id: '3379', parentId: '3377', name: 'Level 7', subtext: 'id 3379', type: 'Level 7' },\n  { id: '3380', parentId: '3377', name: 'Level 7', subtext: 'id 3380', type: 'Level 7' },\n  { id: '3381', parentId: '3377', name: 'Level 7', subtext: 'id 3381', type: 'Level 7' },\n  { id: '3382', parentId: '3354', name: 'Level 5', subtext: 'id 3382', type: 'Level 5' },\n  { id: '3383', parentId: '3382', name: 'Level 6', subtext: 'id 3383', type: 'Level 6' },\n  { id: '3384', parentId: '3383', name: 'Level 7', subtext: 'id 3384', type: 'Level 7' },\n  { id: '3385', parentId: '3383', name: 'Level 7', subtext: 'id 3385', type: 'Level 7' },\n  { id: '3386', parentId: '3383', name: 'Level 7', subtext: 'id 3386', type: 'Level 7' },\n  { id: '3387', parentId: '3383', name: 'Level 7', subtext: 'id 3387', type: 'Level 7' },\n  { id: '3388', parentId: '3382', name: 'Level 6', subtext: 'id 3388', type: 'Level 6' },\n  { id: '3389', parentId: '3388', name: 'Level 7', subtext: 'id 3389', type: 'Level 7' },\n  { id: '3390', parentId: '3388', name: 'Level 7', subtext: 'id 3390', type: 'Level 7' },\n  { id: '3391', parentId: '3388', name: 'Level 7', subtext: 'id 3391', type: 'Level 7' },\n  { id: '3392', parentId: '3388', name: 'Level 7', subtext: 'id 3392', type: 'Level 7' },\n  { id: '3393', parentId: '3382', name: 'Level 6', subtext: 'id 3393', type: 'Level 6' },\n  { id: '3394', parentId: '3393', name: 'Level 7', subtext: 'id 3394', type: 'Level 7' },\n  { id: '3395', parentId: '3382', name: 'Level 6', subtext: 'id 3395', type: 'Level 6' },\n  { id: '3396', parentId: '3395', name: 'Level 7', subtext: 'id 3396', type: 'Level 7' },\n  { id: '3397', parentId: '3382', name: 'Level 6', subtext: 'id 3397', type: 'Level 6' },\n  { id: '3398', parentId: '3397', name: 'Level 7', subtext: 'id 3398', type: 'Level 7' },\n  { id: '3399', parentId: '3397', name: 'Level 7', subtext: 'id 3399', type: 'Level 7' },\n  { id: '3400', parentId: '3397', name: 'Level 7', subtext: 'id 3400', type: 'Level 7' },\n  { id: '3401', parentId: '3397', name: 'Level 7', subtext: 'id 3401', type: 'Level 7' },\n  { id: '3402', parentId: '3354', name: 'Level 5', subtext: 'id 3402', type: 'Level 5' },\n  { id: '3403', parentId: '3402', name: 'Level 6', subtext: 'id 3403', type: 'Level 6' },\n  { id: '3404', parentId: '3403', name: 'Level 7', subtext: 'id 3404', type: 'Level 7' },\n  { id: '3405', parentId: '3403', name: 'Level 7', subtext: 'id 3405', type: 'Level 7' },\n  { id: '3406', parentId: '3402', name: 'Level 6', subtext: 'id 3406', type: 'Level 6' },\n  { id: '3407', parentId: '3406', name: 'Level 7', subtext: 'id 3407', type: 'Level 7' },\n  { id: '3408', parentId: '3207', name: 'Level 4', subtext: 'id 3408', type: 'Level 4' },\n  { id: '3409', parentId: '3408', name: 'Level 5', subtext: 'id 3409', type: 'Level 5' },\n  { id: '3410', parentId: '3409', name: 'Level 6', subtext: 'id 3410', type: 'Level 6' },\n  { id: '3411', parentId: '3410', name: 'Level 7', subtext: 'id 3411', type: 'Level 7' },\n  { id: '3412', parentId: '3409', name: 'Level 6', subtext: 'id 3412', type: 'Level 6' },\n  { id: '3413', parentId: '3412', name: 'Level 7', subtext: 'id 3413', type: 'Level 7' },\n  { id: '3414', parentId: '3412', name: 'Level 7', subtext: 'id 3414', type: 'Level 7' },\n  { id: '3415', parentId: '3412', name: 'Level 7', subtext: 'id 3415', type: 'Level 7' },\n  { id: '3416', parentId: '3412', name: 'Level 7', subtext: 'id 3416', type: 'Level 7' },\n  { id: '3417', parentId: '3412', name: 'Level 7', subtext: 'id 3417', type: 'Level 7' },\n  { id: '3418', parentId: '3409', name: 'Level 6', subtext: 'id 3418', type: 'Level 6' },\n  { id: '3419', parentId: '3418', name: 'Level 7', subtext: 'id 3419', type: 'Level 7' },\n  { id: '3420', parentId: '3418', name: 'Level 7', subtext: 'id 3420', type: 'Level 7' },\n  { id: '3421', parentId: '3418', name: 'Level 7', subtext: 'id 3421', type: 'Level 7' },\n  { id: '3422', parentId: '3418', name: 'Level 7', subtext: 'id 3422', type: 'Level 7' },\n  { id: '3423', parentId: '3418', name: 'Level 7', subtext: 'id 3423', type: 'Level 7' },\n  { id: '3424', parentId: '3409', name: 'Level 6', subtext: 'id 3424', type: 'Level 6' },\n  { id: '3425', parentId: '3424', name: 'Level 7', subtext: 'id 3425', type: 'Level 7' },\n  { id: '3426', parentId: '3409', name: 'Level 6', subtext: 'id 3426', type: 'Level 6' },\n  { id: '3427', parentId: '3426', name: 'Level 7', subtext: 'id 3427', type: 'Level 7' },\n  { id: '3428', parentId: '3426', name: 'Level 7', subtext: 'id 3428', type: 'Level 7' },\n  { id: '3429', parentId: '3426', name: 'Level 7', subtext: 'id 3429', type: 'Level 7' },\n  { id: '3430', parentId: '3426', name: 'Level 7', subtext: 'id 3430', type: 'Level 7' },\n  { id: '3431', parentId: '3408', name: 'Level 5', subtext: 'id 3431', type: 'Level 5' },\n  { id: '3432', parentId: '3431', name: 'Level 6', subtext: 'id 3432', type: 'Level 6' },\n  { id: '3433', parentId: '3432', name: 'Level 7', subtext: 'id 3433', type: 'Level 7' },\n  { id: '3434', parentId: '3432', name: 'Level 7', subtext: 'id 3434', type: 'Level 7' },\n  { id: '3435', parentId: '3432', name: 'Level 7', subtext: 'id 3435', type: 'Level 7' },\n  { id: '3436', parentId: '3431', name: 'Level 6', subtext: 'id 3436', type: 'Level 6' },\n  { id: '3437', parentId: '3436', name: 'Level 7', subtext: 'id 3437', type: 'Level 7' },\n  { id: '3438', parentId: '3436', name: 'Level 7', subtext: 'id 3438', type: 'Level 7' },\n  { id: '3439', parentId: '3436', name: 'Level 7', subtext: 'id 3439', type: 'Level 7' },\n  { id: '3440', parentId: '3436', name: 'Level 7', subtext: 'id 3440', type: 'Level 7' },\n  { id: '3441', parentId: '3408', name: 'Level 5', subtext: 'id 3441', type: 'Level 5' },\n  { id: '3442', parentId: '3441', name: 'Level 6', subtext: 'id 3442', type: 'Level 6' },\n  { id: '3443', parentId: '3442', name: 'Level 7', subtext: 'id 3443', type: 'Level 7' },\n  { id: '3444', parentId: '3442', name: 'Level 7', subtext: 'id 3444', type: 'Level 7' },\n  { id: '3445', parentId: '3442', name: 'Level 7', subtext: 'id 3445', type: 'Level 7' },\n  { id: '3446', parentId: '3442', name: 'Level 7', subtext: 'id 3446', type: 'Level 7' },\n  { id: '3447', parentId: '3442', name: 'Level 7', subtext: 'id 3447', type: 'Level 7' },\n  { id: '3448', parentId: '3441', name: 'Level 6', subtext: 'id 3448', type: 'Level 6' },\n  { id: '3449', parentId: '3448', name: 'Level 7', subtext: 'id 3449', type: 'Level 7' },\n  { id: '3450', parentId: '3448', name: 'Level 7', subtext: 'id 3450', type: 'Level 7' },\n  { id: '3451', parentId: '3448', name: 'Level 7', subtext: 'id 3451', type: 'Level 7' },\n  { id: '3452', parentId: '3448', name: 'Level 7', subtext: 'id 3452', type: 'Level 7' },\n  { id: '3453', parentId: '3441', name: 'Level 6', subtext: 'id 3453', type: 'Level 6' },\n  { id: '3454', parentId: '3453', name: 'Level 7', subtext: 'id 3454', type: 'Level 7' },\n  { id: '3455', parentId: '3453', name: 'Level 7', subtext: 'id 3455', type: 'Level 7' },\n  { id: '3456', parentId: '3453', name: 'Level 7', subtext: 'id 3456', type: 'Level 7' },\n  { id: '3457', parentId: '3453', name: 'Level 7', subtext: 'id 3457', type: 'Level 7' },\n  { id: '3458', parentId: '3441', name: 'Level 6', subtext: 'id 3458', type: 'Level 6' },\n  { id: '3459', parentId: '3458', name: 'Level 7', subtext: 'id 3459', type: 'Level 7' },\n  { id: '3460', parentId: '3441', name: 'Level 6', subtext: 'id 3460', type: 'Level 6' },\n  { id: '3461', parentId: '3460', name: 'Level 7', subtext: 'id 3461', type: 'Level 7' },\n  { id: '3462', parentId: '3460', name: 'Level 7', subtext: 'id 3462', type: 'Level 7' },\n  { id: '3463', parentId: '3460', name: 'Level 7', subtext: 'id 3463', type: 'Level 7' },\n  { id: '3464', parentId: '3460', name: 'Level 7', subtext: 'id 3464', type: 'Level 7' },\n  { id: '3465', parentId: '3408', name: 'Level 5', subtext: 'id 3465', type: 'Level 5' },\n  { id: '3466', parentId: '3465', name: 'Level 6', subtext: 'id 3466', type: 'Level 6' },\n  { id: '3467', parentId: '3466', name: 'Level 7', subtext: 'id 3467', type: 'Level 7' },\n  { id: '3468', parentId: '3466', name: 'Level 7', subtext: 'id 3468', type: 'Level 7' },\n  { id: '3469', parentId: '3466', name: 'Level 7', subtext: 'id 3469', type: 'Level 7' },\n  { id: '3470', parentId: '3466', name: 'Level 7', subtext: 'id 3470', type: 'Level 7' },\n  { id: '3471', parentId: '3466', name: 'Level 7', subtext: 'id 3471', type: 'Level 7' },\n  { id: '3472', parentId: '3465', name: 'Level 6', subtext: 'id 3472', type: 'Level 6' },\n  { id: '3473', parentId: '3472', name: 'Level 7', subtext: 'id 3473', type: 'Level 7' },\n  { id: '3474', parentId: '3472', name: 'Level 7', subtext: 'id 3474', type: 'Level 7' },\n  { id: '3475', parentId: '3465', name: 'Level 6', subtext: 'id 3475', type: 'Level 6' },\n  { id: '3476', parentId: '3475', name: 'Level 7', subtext: 'id 3476', type: 'Level 7' },\n  { id: '3477', parentId: '3408', name: 'Level 5', subtext: 'id 3477', type: 'Level 5' },\n  { id: '3478', parentId: '3477', name: 'Level 6', subtext: 'id 3478', type: 'Level 6' },\n  { id: '3479', parentId: '3478', name: 'Level 7', subtext: 'id 3479', type: 'Level 7' },\n  { id: '3480', parentId: '3478', name: 'Level 7', subtext: 'id 3480', type: 'Level 7' },\n  { id: '3481', parentId: '3478', name: 'Level 7', subtext: 'id 3481', type: 'Level 7' },\n  { id: '3482', parentId: '3477', name: 'Level 6', subtext: 'id 3482', type: 'Level 6' },\n  { id: '3483', parentId: '3482', name: 'Level 7', subtext: 'id 3483', type: 'Level 7' },\n  { id: '3484', parentId: '3482', name: 'Level 7', subtext: 'id 3484', type: 'Level 7' },\n  { id: '3485', parentId: '3482', name: 'Level 7', subtext: 'id 3485', type: 'Level 7' },\n  { id: '3486', parentId: '3482', name: 'Level 7', subtext: 'id 3486', type: 'Level 7' },\n  { id: '3487', parentId: '3482', name: 'Level 7', subtext: 'id 3487', type: 'Level 7' },\n  { id: '3488', parentId: '2723', name: 'Level 2', subtext: 'id 3488', type: 'Level 2' },\n  { id: '3489', parentId: '3488', name: 'Level 3', subtext: 'id 3489', type: 'Level 3' },\n  { id: '3490', parentId: '3489', name: 'Level 4', subtext: 'id 3490', type: 'Level 4' },\n  { id: '3491', parentId: '3490', name: 'Level 5', subtext: 'id 3491', type: 'Level 5' },\n  { id: '3492', parentId: '3491', name: 'Level 6', subtext: 'id 3492', type: 'Level 6' },\n  { id: '3493', parentId: '3492', name: 'Level 7', subtext: 'id 3493', type: 'Level 7' },\n  { id: '3494', parentId: '3492', name: 'Level 7', subtext: 'id 3494', type: 'Level 7' },\n  { id: '3495', parentId: '3492', name: 'Level 7', subtext: 'id 3495', type: 'Level 7' },\n  { id: '3496', parentId: '3492', name: 'Level 7', subtext: 'id 3496', type: 'Level 7' },\n  { id: '3497', parentId: '3491', name: 'Level 6', subtext: 'id 3497', type: 'Level 6' },\n  { id: '3498', parentId: '3497', name: 'Level 7', subtext: 'id 3498', type: 'Level 7' },\n  { id: '3499', parentId: '3497', name: 'Level 7', subtext: 'id 3499', type: 'Level 7' },\n  { id: '3500', parentId: '3497', name: 'Level 7', subtext: 'id 3500', type: 'Level 7' },\n  { id: '3501', parentId: '3497', name: 'Level 7', subtext: 'id 3501', type: 'Level 7' },\n  { id: '3502', parentId: '3491', name: 'Level 6', subtext: 'id 3502', type: 'Level 6' },\n  { id: '3503', parentId: '3502', name: 'Level 7', subtext: 'id 3503', type: 'Level 7' },\n  { id: '3504', parentId: '3502', name: 'Level 7', subtext: 'id 3504', type: 'Level 7' },\n  { id: '3505', parentId: '3502', name: 'Level 7', subtext: 'id 3505', type: 'Level 7' },\n  { id: '3506', parentId: '3502', name: 'Level 7', subtext: 'id 3506', type: 'Level 7' },\n  { id: '3507', parentId: '3502', name: 'Level 7', subtext: 'id 3507', type: 'Level 7' },\n  { id: '3508', parentId: '3491', name: 'Level 6', subtext: 'id 3508', type: 'Level 6' },\n  { id: '3509', parentId: '3508', name: 'Level 7', subtext: 'id 3509', type: 'Level 7' },\n  { id: '3510', parentId: '3490', name: 'Level 5', subtext: 'id 3510', type: 'Level 5' },\n  { id: '3511', parentId: '3510', name: 'Level 6', subtext: 'id 3511', type: 'Level 6' },\n  { id: '3512', parentId: '3511', name: 'Level 7', subtext: 'id 3512', type: 'Level 7' },\n  { id: '3513', parentId: '3511', name: 'Level 7', subtext: 'id 3513', type: 'Level 7' },\n  { id: '3514', parentId: '3511', name: 'Level 7', subtext: 'id 3514', type: 'Level 7' },\n  { id: '3515', parentId: '3511', name: 'Level 7', subtext: 'id 3515', type: 'Level 7' },\n  { id: '3516', parentId: '3511', name: 'Level 7', subtext: 'id 3516', type: 'Level 7' },\n  { id: '3517', parentId: '3510', name: 'Level 6', subtext: 'id 3517', type: 'Level 6' },\n  { id: '3518', parentId: '3517', name: 'Level 7', subtext: 'id 3518', type: 'Level 7' },\n  { id: '3519', parentId: '3517', name: 'Level 7', subtext: 'id 3519', type: 'Level 7' },\n  { id: '3520', parentId: '3490', name: 'Level 5', subtext: 'id 3520', type: 'Level 5' },\n  { id: '3521', parentId: '3520', name: 'Level 6', subtext: 'id 3521', type: 'Level 6' },\n  { id: '3522', parentId: '3521', name: 'Level 7', subtext: 'id 3522', type: 'Level 7' },\n  { id: '3523', parentId: '3521', name: 'Level 7', subtext: 'id 3523', type: 'Level 7' },\n  { id: '3524', parentId: '3521', name: 'Level 7', subtext: 'id 3524', type: 'Level 7' },\n  { id: '3525', parentId: '3521', name: 'Level 7', subtext: 'id 3525', type: 'Level 7' },\n  { id: '3526', parentId: '3521', name: 'Level 7', subtext: 'id 3526', type: 'Level 7' },\n  { id: '3527', parentId: '3520', name: 'Level 6', subtext: 'id 3527', type: 'Level 6' },\n  { id: '3528', parentId: '3527', name: 'Level 7', subtext: 'id 3528', type: 'Level 7' },\n  { id: '3529', parentId: '3527', name: 'Level 7', subtext: 'id 3529', type: 'Level 7' },\n  { id: '3530', parentId: '3527', name: 'Level 7', subtext: 'id 3530', type: 'Level 7' },\n  { id: '3531', parentId: '3520', name: 'Level 6', subtext: 'id 3531', type: 'Level 6' },\n  { id: '3532', parentId: '3531', name: 'Level 7', subtext: 'id 3532', type: 'Level 7' },\n  { id: '3533', parentId: '3531', name: 'Level 7', subtext: 'id 3533', type: 'Level 7' },\n  { id: '3534', parentId: '3531', name: 'Level 7', subtext: 'id 3534', type: 'Level 7' },\n  { id: '3535', parentId: '3531', name: 'Level 7', subtext: 'id 3535', type: 'Level 7' },\n  { id: '3536', parentId: '3531', name: 'Level 7', subtext: 'id 3536', type: 'Level 7' },\n  { id: '3537', parentId: '3520', name: 'Level 6', subtext: 'id 3537', type: 'Level 6' },\n  { id: '3538', parentId: '3537', name: 'Level 7', subtext: 'id 3538', type: 'Level 7' },\n  { id: '3539', parentId: '3537', name: 'Level 7', subtext: 'id 3539', type: 'Level 7' },\n  { id: '3540', parentId: '3520', name: 'Level 6', subtext: 'id 3540', type: 'Level 6' },\n  { id: '3541', parentId: '3540', name: 'Level 7', subtext: 'id 3541', type: 'Level 7' },\n  { id: '3542', parentId: '3540', name: 'Level 7', subtext: 'id 3542', type: 'Level 7' },\n  { id: '3543', parentId: '3540', name: 'Level 7', subtext: 'id 3543', type: 'Level 7' },\n  { id: '3544', parentId: '3540', name: 'Level 7', subtext: 'id 3544', type: 'Level 7' },\n  { id: '3545', parentId: '3540', name: 'Level 7', subtext: 'id 3545', type: 'Level 7' },\n  { id: '3546', parentId: '3489', name: 'Level 4', subtext: 'id 3546', type: 'Level 4' },\n  { id: '3547', parentId: '3546', name: 'Level 5', subtext: 'id 3547', type: 'Level 5' },\n  { id: '3548', parentId: '3547', name: 'Level 6', subtext: 'id 3548', type: 'Level 6' },\n  { id: '3549', parentId: '3548', name: 'Level 7', subtext: 'id 3549', type: 'Level 7' },\n  { id: '3550', parentId: '3547', name: 'Level 6', subtext: 'id 3550', type: 'Level 6' },\n  { id: '3551', parentId: '3550', name: 'Level 7', subtext: 'id 3551', type: 'Level 7' },\n  { id: '3552', parentId: '3550', name: 'Level 7', subtext: 'id 3552', type: 'Level 7' },\n  { id: '3553', parentId: '3550', name: 'Level 7', subtext: 'id 3553', type: 'Level 7' },\n  { id: '3554', parentId: '3550', name: 'Level 7', subtext: 'id 3554', type: 'Level 7' },\n  { id: '3555', parentId: '3547', name: 'Level 6', subtext: 'id 3555', type: 'Level 6' },\n  { id: '3556', parentId: '3555', name: 'Level 7', subtext: 'id 3556', type: 'Level 7' },\n  { id: '3557', parentId: '3555', name: 'Level 7', subtext: 'id 3557', type: 'Level 7' },\n  { id: '3558', parentId: '3547', name: 'Level 6', subtext: 'id 3558', type: 'Level 6' },\n  { id: '3559', parentId: '3558', name: 'Level 7', subtext: 'id 3559', type: 'Level 7' },\n  { id: '3560', parentId: '3558', name: 'Level 7', subtext: 'id 3560', type: 'Level 7' },\n  { id: '3561', parentId: '3547', name: 'Level 6', subtext: 'id 3561', type: 'Level 6' },\n  { id: '3562', parentId: '3561', name: 'Level 7', subtext: 'id 3562', type: 'Level 7' },\n  { id: '3563', parentId: '3561', name: 'Level 7', subtext: 'id 3563', type: 'Level 7' },\n  { id: '3564', parentId: '3561', name: 'Level 7', subtext: 'id 3564', type: 'Level 7' },\n  { id: '3565', parentId: '3546', name: 'Level 5', subtext: 'id 3565', type: 'Level 5' },\n  { id: '3566', parentId: '3565', name: 'Level 6', subtext: 'id 3566', type: 'Level 6' },\n  { id: '3567', parentId: '3566', name: 'Level 7', subtext: 'id 3567', type: 'Level 7' },\n  { id: '3568', parentId: '3565', name: 'Level 6', subtext: 'id 3568', type: 'Level 6' },\n  { id: '3569', parentId: '3568', name: 'Level 7', subtext: 'id 3569', type: 'Level 7' },\n  { id: '3570', parentId: '3568', name: 'Level 7', subtext: 'id 3570', type: 'Level 7' },\n  { id: '3571', parentId: '3489', name: 'Level 4', subtext: 'id 3571', type: 'Level 4' },\n  { id: '3572', parentId: '3571', name: 'Level 5', subtext: 'id 3572', type: 'Level 5' },\n  { id: '3573', parentId: '3572', name: 'Level 6', subtext: 'id 3573', type: 'Level 6' },\n  { id: '3574', parentId: '3573', name: 'Level 7', subtext: 'id 3574', type: 'Level 7' },\n  { id: '3575', parentId: '3573', name: 'Level 7', subtext: 'id 3575', type: 'Level 7' },\n  { id: '3576', parentId: '3573', name: 'Level 7', subtext: 'id 3576', type: 'Level 7' },\n  { id: '3577', parentId: '3572', name: 'Level 6', subtext: 'id 3577', type: 'Level 6' },\n  { id: '3578', parentId: '3577', name: 'Level 7', subtext: 'id 3578', type: 'Level 7' },\n  { id: '3579', parentId: '3577', name: 'Level 7', subtext: 'id 3579', type: 'Level 7' },\n  { id: '3580', parentId: '3577', name: 'Level 7', subtext: 'id 3580', type: 'Level 7' },\n  { id: '3581', parentId: '3577', name: 'Level 7', subtext: 'id 3581', type: 'Level 7' },\n  { id: '3582', parentId: '3577', name: 'Level 7', subtext: 'id 3582', type: 'Level 7' },\n  { id: '3583', parentId: '3572', name: 'Level 6', subtext: 'id 3583', type: 'Level 6' },\n  { id: '3584', parentId: '3583', name: 'Level 7', subtext: 'id 3584', type: 'Level 7' },\n  { id: '3585', parentId: '3583', name: 'Level 7', subtext: 'id 3585', type: 'Level 7' },\n  { id: '3586', parentId: '3583', name: 'Level 7', subtext: 'id 3586', type: 'Level 7' },\n  { id: '3587', parentId: '3572', name: 'Level 6', subtext: 'id 3587', type: 'Level 6' },\n  { id: '3588', parentId: '3587', name: 'Level 7', subtext: 'id 3588', type: 'Level 7' },\n  { id: '3589', parentId: '3587', name: 'Level 7', subtext: 'id 3589', type: 'Level 7' },\n  { id: '3590', parentId: '3572', name: 'Level 6', subtext: 'id 3590', type: 'Level 6' },\n  { id: '3591', parentId: '3590', name: 'Level 7', subtext: 'id 3591', type: 'Level 7' },\n  { id: '3592', parentId: '3590', name: 'Level 7', subtext: 'id 3592', type: 'Level 7' },\n  { id: '3593', parentId: '3590', name: 'Level 7', subtext: 'id 3593', type: 'Level 7' },\n  { id: '3594', parentId: '3571', name: 'Level 5', subtext: 'id 3594', type: 'Level 5' },\n  { id: '3595', parentId: '3594', name: 'Level 6', subtext: 'id 3595', type: 'Level 6' },\n  { id: '3596', parentId: '3595', name: 'Level 7', subtext: 'id 3596', type: 'Level 7' },\n  { id: '3597', parentId: '3595', name: 'Level 7', subtext: 'id 3597', type: 'Level 7' },\n  { id: '3598', parentId: '3595', name: 'Level 7', subtext: 'id 3598', type: 'Level 7' },\n  { id: '3599', parentId: '3595', name: 'Level 7', subtext: 'id 3599', type: 'Level 7' },\n  { id: '3600', parentId: '3594', name: 'Level 6', subtext: 'id 3600', type: 'Level 6' },\n  { id: '3601', parentId: '3600', name: 'Level 7', subtext: 'id 3601', type: 'Level 7' },\n  { id: '3602', parentId: '3600', name: 'Level 7', subtext: 'id 3602', type: 'Level 7' },\n  { id: '3603', parentId: '3600', name: 'Level 7', subtext: 'id 3603', type: 'Level 7' },\n  { id: '3604', parentId: '3594', name: 'Level 6', subtext: 'id 3604', type: 'Level 6' },\n  { id: '3605', parentId: '3604', name: 'Level 7', subtext: 'id 3605', type: 'Level 7' },\n  { id: '3606', parentId: '3604', name: 'Level 7', subtext: 'id 3606', type: 'Level 7' },\n  { id: '3607', parentId: '3604', name: 'Level 7', subtext: 'id 3607', type: 'Level 7' },\n  { id: '3608', parentId: '3604', name: 'Level 7', subtext: 'id 3608', type: 'Level 7' },\n  { id: '3609', parentId: '3604', name: 'Level 7', subtext: 'id 3609', type: 'Level 7' },\n  { id: '3610', parentId: '3594', name: 'Level 6', subtext: 'id 3610', type: 'Level 6' },\n  { id: '3611', parentId: '3610', name: 'Level 7', subtext: 'id 3611', type: 'Level 7' },\n  { id: '3612', parentId: '3610', name: 'Level 7', subtext: 'id 3612', type: 'Level 7' },\n  { id: '3613', parentId: '3610', name: 'Level 7', subtext: 'id 3613', type: 'Level 7' },\n  { id: '3614', parentId: '3594', name: 'Level 6', subtext: 'id 3614', type: 'Level 6' },\n  { id: '3615', parentId: '3614', name: 'Level 7', subtext: 'id 3615', type: 'Level 7' },\n  { id: '3616', parentId: '3614', name: 'Level 7', subtext: 'id 3616', type: 'Level 7' },\n  { id: '3617', parentId: '3614', name: 'Level 7', subtext: 'id 3617', type: 'Level 7' },\n  { id: '3618', parentId: '3614', name: 'Level 7', subtext: 'id 3618', type: 'Level 7' },\n  { id: '3619', parentId: '3571', name: 'Level 5', subtext: 'id 3619', type: 'Level 5' },\n  { id: '3620', parentId: '3619', name: 'Level 6', subtext: 'id 3620', type: 'Level 6' },\n  { id: '3621', parentId: '3620', name: 'Level 7', subtext: 'id 3621', type: 'Level 7' },\n  { id: '3622', parentId: '3620', name: 'Level 7', subtext: 'id 3622', type: 'Level 7' },\n  { id: '3623', parentId: '3620', name: 'Level 7', subtext: 'id 3623', type: 'Level 7' },\n  { id: '3624', parentId: '3620', name: 'Level 7', subtext: 'id 3624', type: 'Level 7' },\n  { id: '3625', parentId: '3620', name: 'Level 7', subtext: 'id 3625', type: 'Level 7' },\n  { id: '3626', parentId: '3619', name: 'Level 6', subtext: 'id 3626', type: 'Level 6' },\n  { id: '3627', parentId: '3626', name: 'Level 7', subtext: 'id 3627', type: 'Level 7' },\n  { id: '3628', parentId: '3626', name: 'Level 7', subtext: 'id 3628', type: 'Level 7' },\n  { id: '3629', parentId: '3619', name: 'Level 6', subtext: 'id 3629', type: 'Level 6' },\n  { id: '3630', parentId: '3629', name: 'Level 7', subtext: 'id 3630', type: 'Level 7' },\n  { id: '3631', parentId: '3619', name: 'Level 6', subtext: 'id 3631', type: 'Level 6' },\n  { id: '3632', parentId: '3631', name: 'Level 7', subtext: 'id 3632', type: 'Level 7' },\n  { id: '3633', parentId: '3631', name: 'Level 7', subtext: 'id 3633', type: 'Level 7' },\n  { id: '3634', parentId: '3631', name: 'Level 7', subtext: 'id 3634', type: 'Level 7' },\n  { id: '3635', parentId: '3571', name: 'Level 5', subtext: 'id 3635', type: 'Level 5' },\n  { id: '3636', parentId: '3635', name: 'Level 6', subtext: 'id 3636', type: 'Level 6' },\n  { id: '3637', parentId: '3636', name: 'Level 7', subtext: 'id 3637', type: 'Level 7' },\n  { id: '3638', parentId: '3636', name: 'Level 7', subtext: 'id 3638', type: 'Level 7' },\n  { id: '3639', parentId: '3636', name: 'Level 7', subtext: 'id 3639', type: 'Level 7' },\n  { id: '3640', parentId: '3636', name: 'Level 7', subtext: 'id 3640', type: 'Level 7' },\n  { id: '3641', parentId: '3636', name: 'Level 7', subtext: 'id 3641', type: 'Level 7' },\n  { id: '3642', parentId: '3635', name: 'Level 6', subtext: 'id 3642', type: 'Level 6' },\n  { id: '3643', parentId: '3642', name: 'Level 7', subtext: 'id 3643', type: 'Level 7' },\n  { id: '3644', parentId: '3642', name: 'Level 7', subtext: 'id 3644', type: 'Level 7' },\n  { id: '3645', parentId: '3635', name: 'Level 6', subtext: 'id 3645', type: 'Level 6' },\n  { id: '3646', parentId: '3645', name: 'Level 7', subtext: 'id 3646', type: 'Level 7' },\n  { id: '3647', parentId: '3645', name: 'Level 7', subtext: 'id 3647', type: 'Level 7' },\n  { id: '3648', parentId: '3645', name: 'Level 7', subtext: 'id 3648', type: 'Level 7' },\n  { id: '3649', parentId: '3645', name: 'Level 7', subtext: 'id 3649', type: 'Level 7' },\n  { id: '3650', parentId: '3489', name: 'Level 4', subtext: 'id 3650', type: 'Level 4' },\n  { id: '3651', parentId: '3650', name: 'Level 5', subtext: 'id 3651', type: 'Level 5' },\n  { id: '3652', parentId: '3651', name: 'Level 6', subtext: 'id 3652', type: 'Level 6' },\n  { id: '3653', parentId: '3652', name: 'Level 7', subtext: 'id 3653', type: 'Level 7' },\n  { id: '3654', parentId: '3652', name: 'Level 7', subtext: 'id 3654', type: 'Level 7' },\n  { id: '3655', parentId: '3650', name: 'Level 5', subtext: 'id 3655', type: 'Level 5' },\n  { id: '3656', parentId: '3655', name: 'Level 6', subtext: 'id 3656', type: 'Level 6' },\n  { id: '3657', parentId: '3656', name: 'Level 7', subtext: 'id 3657', type: 'Level 7' },\n  { id: '3658', parentId: '3656', name: 'Level 7', subtext: 'id 3658', type: 'Level 7' },\n  { id: '3659', parentId: '3656', name: 'Level 7', subtext: 'id 3659', type: 'Level 7' },\n  { id: '3660', parentId: '3656', name: 'Level 7', subtext: 'id 3660', type: 'Level 7' },\n  { id: '3661', parentId: '3656', name: 'Level 7', subtext: 'id 3661', type: 'Level 7' },\n  { id: '3662', parentId: '3655', name: 'Level 6', subtext: 'id 3662', type: 'Level 6' },\n  { id: '3663', parentId: '3662', name: 'Level 7', subtext: 'id 3663', type: 'Level 7' },\n  { id: '3664', parentId: '3662', name: 'Level 7', subtext: 'id 3664', type: 'Level 7' },\n  { id: '3665', parentId: '3662', name: 'Level 7', subtext: 'id 3665', type: 'Level 7' },\n  { id: '3666', parentId: '3662', name: 'Level 7', subtext: 'id 3666', type: 'Level 7' },\n  { id: '3667', parentId: '3662', name: 'Level 7', subtext: 'id 3667', type: 'Level 7' },\n  { id: '3668', parentId: '3489', name: 'Level 4', subtext: 'id 3668', type: 'Level 4' },\n  { id: '3669', parentId: '3668', name: 'Level 5', subtext: 'id 3669', type: 'Level 5' },\n  { id: '3670', parentId: '3669', name: 'Level 6', subtext: 'id 3670', type: 'Level 6' },\n  { id: '3671', parentId: '3670', name: 'Level 7', subtext: 'id 3671', type: 'Level 7' },\n  { id: '3672', parentId: '3670', name: 'Level 7', subtext: 'id 3672', type: 'Level 7' },\n  { id: '3673', parentId: '3669', name: 'Level 6', subtext: 'id 3673', type: 'Level 6' },\n  { id: '3674', parentId: '3673', name: 'Level 7', subtext: 'id 3674', type: 'Level 7' },\n  { id: '3675', parentId: '3673', name: 'Level 7', subtext: 'id 3675', type: 'Level 7' },\n  { id: '3676', parentId: '3673', name: 'Level 7', subtext: 'id 3676', type: 'Level 7' },\n  { id: '3677', parentId: '3669', name: 'Level 6', subtext: 'id 3677', type: 'Level 6' },\n  { id: '3678', parentId: '3677', name: 'Level 7', subtext: 'id 3678', type: 'Level 7' },\n  { id: '3679', parentId: '3677', name: 'Level 7', subtext: 'id 3679', type: 'Level 7' },\n  { id: '3680', parentId: '3677', name: 'Level 7', subtext: 'id 3680', type: 'Level 7' },\n  { id: '3681', parentId: '3677', name: 'Level 7', subtext: 'id 3681', type: 'Level 7' },\n  { id: '3682', parentId: '3677', name: 'Level 7', subtext: 'id 3682', type: 'Level 7' },\n  { id: '3683', parentId: '3669', name: 'Level 6', subtext: 'id 3683', type: 'Level 6' },\n  { id: '3684', parentId: '3683', name: 'Level 7', subtext: 'id 3684', type: 'Level 7' },\n  { id: '3685', parentId: '3668', name: 'Level 5', subtext: 'id 3685', type: 'Level 5' },\n  { id: '3686', parentId: '3685', name: 'Level 6', subtext: 'id 3686', type: 'Level 6' },\n  { id: '3687', parentId: '3686', name: 'Level 7', subtext: 'id 3687', type: 'Level 7' },\n  { id: '3688', parentId: '3685', name: 'Level 6', subtext: 'id 3688', type: 'Level 6' },\n  { id: '3689', parentId: '3688', name: 'Level 7', subtext: 'id 3689', type: 'Level 7' },\n  { id: '3690', parentId: '3685', name: 'Level 6', subtext: 'id 3690', type: 'Level 6' },\n  { id: '3691', parentId: '3690', name: 'Level 7', subtext: 'id 3691', type: 'Level 7' },\n  { id: '3692', parentId: '3690', name: 'Level 7', subtext: 'id 3692', type: 'Level 7' },\n  { id: '3693', parentId: '3690', name: 'Level 7', subtext: 'id 3693', type: 'Level 7' },\n  { id: '3694', parentId: '3668', name: 'Level 5', subtext: 'id 3694', type: 'Level 5' },\n  { id: '3695', parentId: '3694', name: 'Level 6', subtext: 'id 3695', type: 'Level 6' },\n  { id: '3696', parentId: '3695', name: 'Level 7', subtext: 'id 3696', type: 'Level 7' },\n  { id: '3697', parentId: '3695', name: 'Level 7', subtext: 'id 3697', type: 'Level 7' },\n  { id: '3698', parentId: '3694', name: 'Level 6', subtext: 'id 3698', type: 'Level 6' },\n  { id: '3699', parentId: '3698', name: 'Level 7', subtext: 'id 3699', type: 'Level 7' },\n  { id: '3700', parentId: '3698', name: 'Level 7', subtext: 'id 3700', type: 'Level 7' },\n  { id: '3701', parentId: '3698', name: 'Level 7', subtext: 'id 3701', type: 'Level 7' },\n  { id: '3702', parentId: '3698', name: 'Level 7', subtext: 'id 3702', type: 'Level 7' },\n  { id: '3703', parentId: '3694', name: 'Level 6', subtext: 'id 3703', type: 'Level 6' },\n  { id: '3704', parentId: '3703', name: 'Level 7', subtext: 'id 3704', type: 'Level 7' },\n  { id: '3705', parentId: '3703', name: 'Level 7', subtext: 'id 3705', type: 'Level 7' },\n  { id: '3706', parentId: '3694', name: 'Level 6', subtext: 'id 3706', type: 'Level 6' },\n  { id: '3707', parentId: '3706', name: 'Level 7', subtext: 'id 3707', type: 'Level 7' },\n  { id: '3708', parentId: '3706', name: 'Level 7', subtext: 'id 3708', type: 'Level 7' },\n  { id: '3709', parentId: '3706', name: 'Level 7', subtext: 'id 3709', type: 'Level 7' },\n  { id: '3710', parentId: '3668', name: 'Level 5', subtext: 'id 3710', type: 'Level 5' },\n  { id: '3711', parentId: '3710', name: 'Level 6', subtext: 'id 3711', type: 'Level 6' },\n  { id: '3712', parentId: '3711', name: 'Level 7', subtext: 'id 3712', type: 'Level 7' },\n  { id: '3713', parentId: '3711', name: 'Level 7', subtext: 'id 3713', type: 'Level 7' },\n  { id: '3714', parentId: '3710', name: 'Level 6', subtext: 'id 3714', type: 'Level 6' },\n  { id: '3715', parentId: '3714', name: 'Level 7', subtext: 'id 3715', type: 'Level 7' },\n  { id: '3716', parentId: '3714', name: 'Level 7', subtext: 'id 3716', type: 'Level 7' },\n  { id: '3717', parentId: '3714', name: 'Level 7', subtext: 'id 3717', type: 'Level 7' },\n  { id: '3718', parentId: '3714', name: 'Level 7', subtext: 'id 3718', type: 'Level 7' },\n  { id: '3719', parentId: '3714', name: 'Level 7', subtext: 'id 3719', type: 'Level 7' },\n  { id: '3720', parentId: '3710', name: 'Level 6', subtext: 'id 3720', type: 'Level 6' },\n  { id: '3721', parentId: '3720', name: 'Level 7', subtext: 'id 3721', type: 'Level 7' },\n  { id: '3722', parentId: '3710', name: 'Level 6', subtext: 'id 3722', type: 'Level 6' },\n  { id: '3723', parentId: '3722', name: 'Level 7', subtext: 'id 3723', type: 'Level 7' },\n  { id: '3724', parentId: '3722', name: 'Level 7', subtext: 'id 3724', type: 'Level 7' },\n  { id: '3725', parentId: '3722', name: 'Level 7', subtext: 'id 3725', type: 'Level 7' },\n  { id: '3726', parentId: '3722', name: 'Level 7', subtext: 'id 3726', type: 'Level 7' },\n  { id: '3727', parentId: '3488', name: 'Level 3', subtext: 'id 3727', type: 'Level 3' },\n  { id: '3728', parentId: '3727', name: 'Level 4', subtext: 'id 3728', type: 'Level 4' },\n  { id: '3729', parentId: '3728', name: 'Level 5', subtext: 'id 3729', type: 'Level 5' },\n  { id: '3730', parentId: '3729', name: 'Level 6', subtext: 'id 3730', type: 'Level 6' },\n  { id: '3731', parentId: '3730', name: 'Level 7', subtext: 'id 3731', type: 'Level 7' },\n  { id: '3732', parentId: '3730', name: 'Level 7', subtext: 'id 3732', type: 'Level 7' },\n  { id: '3733', parentId: '3729', name: 'Level 6', subtext: 'id 3733', type: 'Level 6' },\n  { id: '3734', parentId: '3733', name: 'Level 7', subtext: 'id 3734', type: 'Level 7' },\n  { id: '3735', parentId: '3733', name: 'Level 7', subtext: 'id 3735', type: 'Level 7' },\n  { id: '3736', parentId: '3733', name: 'Level 7', subtext: 'id 3736', type: 'Level 7' },\n  { id: '3737', parentId: '3733', name: 'Level 7', subtext: 'id 3737', type: 'Level 7' },\n  { id: '3738', parentId: '3733', name: 'Level 7', subtext: 'id 3738', type: 'Level 7' },\n  { id: '3739', parentId: '3729', name: 'Level 6', subtext: 'id 3739', type: 'Level 6' },\n  { id: '3740', parentId: '3739', name: 'Level 7', subtext: 'id 3740', type: 'Level 7' },\n  { id: '3741', parentId: '3728', name: 'Level 5', subtext: 'id 3741', type: 'Level 5' },\n  { id: '3742', parentId: '3741', name: 'Level 6', subtext: 'id 3742', type: 'Level 6' },\n  { id: '3743', parentId: '3742', name: 'Level 7', subtext: 'id 3743', type: 'Level 7' },\n  { id: '3744', parentId: '3742', name: 'Level 7', subtext: 'id 3744', type: 'Level 7' },\n  { id: '3745', parentId: '3742', name: 'Level 7', subtext: 'id 3745', type: 'Level 7' },\n  { id: '3746', parentId: '3742', name: 'Level 7', subtext: 'id 3746', type: 'Level 7' },\n  { id: '3747', parentId: '3741', name: 'Level 6', subtext: 'id 3747', type: 'Level 6' },\n  { id: '3748', parentId: '3747', name: 'Level 7', subtext: 'id 3748', type: 'Level 7' },\n  { id: '3749', parentId: '3728', name: 'Level 5', subtext: 'id 3749', type: 'Level 5' },\n  { id: '3750', parentId: '3749', name: 'Level 6', subtext: 'id 3750', type: 'Level 6' },\n  { id: '3751', parentId: '3750', name: 'Level 7', subtext: 'id 3751', type: 'Level 7' },\n  { id: '3752', parentId: '3750', name: 'Level 7', subtext: 'id 3752', type: 'Level 7' },\n  { id: '3753', parentId: '3750', name: 'Level 7', subtext: 'id 3753', type: 'Level 7' },\n  { id: '3754', parentId: '3750', name: 'Level 7', subtext: 'id 3754', type: 'Level 7' },\n  { id: '3755', parentId: '3750', name: 'Level 7', subtext: 'id 3755', type: 'Level 7' },\n  { id: '3756', parentId: '3728', name: 'Level 5', subtext: 'id 3756', type: 'Level 5' },\n  { id: '3757', parentId: '3756', name: 'Level 6', subtext: 'id 3757', type: 'Level 6' },\n  { id: '3758', parentId: '3757', name: 'Level 7', subtext: 'id 3758', type: 'Level 7' },\n  { id: '3759', parentId: '3757', name: 'Level 7', subtext: 'id 3759', type: 'Level 7' },\n  { id: '3760', parentId: '3757', name: 'Level 7', subtext: 'id 3760', type: 'Level 7' },\n  { id: '3761', parentId: '3757', name: 'Level 7', subtext: 'id 3761', type: 'Level 7' },\n  { id: '3762', parentId: '3756', name: 'Level 6', subtext: 'id 3762', type: 'Level 6' },\n  { id: '3763', parentId: '3762', name: 'Level 7', subtext: 'id 3763', type: 'Level 7' },\n  { id: '3764', parentId: '3756', name: 'Level 6', subtext: 'id 3764', type: 'Level 6' },\n  { id: '3765', parentId: '3764', name: 'Level 7', subtext: 'id 3765', type: 'Level 7' },\n  { id: '3766', parentId: '3764', name: 'Level 7', subtext: 'id 3766', type: 'Level 7' },\n  { id: '3767', parentId: '3764', name: 'Level 7', subtext: 'id 3767', type: 'Level 7' },\n  { id: '3768', parentId: '3764', name: 'Level 7', subtext: 'id 3768', type: 'Level 7' },\n  { id: '3769', parentId: '3764', name: 'Level 7', subtext: 'id 3769', type: 'Level 7' },\n  { id: '3770', parentId: '3727', name: 'Level 4', subtext: 'id 3770', type: 'Level 4' },\n  { id: '3771', parentId: '3770', name: 'Level 5', subtext: 'id 3771', type: 'Level 5' },\n  { id: '3772', parentId: '3771', name: 'Level 6', subtext: 'id 3772', type: 'Level 6' },\n  { id: '3773', parentId: '3772', name: 'Level 7', subtext: 'id 3773', type: 'Level 7' },\n  { id: '3774', parentId: '3772', name: 'Level 7', subtext: 'id 3774', type: 'Level 7' },\n  { id: '3775', parentId: '3772', name: 'Level 7', subtext: 'id 3775', type: 'Level 7' },\n  { id: '3776', parentId: '3772', name: 'Level 7', subtext: 'id 3776', type: 'Level 7' },\n  { id: '3777', parentId: '3771', name: 'Level 6', subtext: 'id 3777', type: 'Level 6' },\n  { id: '3778', parentId: '3777', name: 'Level 7', subtext: 'id 3778', type: 'Level 7' },\n  { id: '3779', parentId: '3777', name: 'Level 7', subtext: 'id 3779', type: 'Level 7' },\n  { id: '3780', parentId: '3777', name: 'Level 7', subtext: 'id 3780', type: 'Level 7' },\n  { id: '3781', parentId: '3777', name: 'Level 7', subtext: 'id 3781', type: 'Level 7' },\n  { id: '3782', parentId: '3777', name: 'Level 7', subtext: 'id 3782', type: 'Level 7' },\n  { id: '3783', parentId: '3771', name: 'Level 6', subtext: 'id 3783', type: 'Level 6' },\n  { id: '3784', parentId: '3783', name: 'Level 7', subtext: 'id 3784', type: 'Level 7' },\n  { id: '3785', parentId: '3783', name: 'Level 7', subtext: 'id 3785', type: 'Level 7' },\n  { id: '3786', parentId: '3771', name: 'Level 6', subtext: 'id 3786', type: 'Level 6' },\n  { id: '3787', parentId: '3786', name: 'Level 7', subtext: 'id 3787', type: 'Level 7' },\n  { id: '3788', parentId: '3786', name: 'Level 7', subtext: 'id 3788', type: 'Level 7' },\n  { id: '3789', parentId: '3786', name: 'Level 7', subtext: 'id 3789', type: 'Level 7' },\n  { id: '3790', parentId: '3786', name: 'Level 7', subtext: 'id 3790', type: 'Level 7' },\n  { id: '3791', parentId: '3770', name: 'Level 5', subtext: 'id 3791', type: 'Level 5' },\n  { id: '3792', parentId: '3791', name: 'Level 6', subtext: 'id 3792', type: 'Level 6' },\n  { id: '3793', parentId: '3792', name: 'Level 7', subtext: 'id 3793', type: 'Level 7' },\n  { id: '3794', parentId: '3792', name: 'Level 7', subtext: 'id 3794', type: 'Level 7' },\n  { id: '3795', parentId: '3791', name: 'Level 6', subtext: 'id 3795', type: 'Level 6' },\n  { id: '3796', parentId: '3795', name: 'Level 7', subtext: 'id 3796', type: 'Level 7' },\n  { id: '3797', parentId: '3795', name: 'Level 7', subtext: 'id 3797', type: 'Level 7' },\n  { id: '3798', parentId: '3795', name: 'Level 7', subtext: 'id 3798', type: 'Level 7' },\n  { id: '3799', parentId: '3795', name: 'Level 7', subtext: 'id 3799', type: 'Level 7' },\n  { id: '3800', parentId: '3795', name: 'Level 7', subtext: 'id 3800', type: 'Level 7' },\n  { id: '3801', parentId: '3791', name: 'Level 6', subtext: 'id 3801', type: 'Level 6' },\n  { id: '3802', parentId: '3801', name: 'Level 7', subtext: 'id 3802', type: 'Level 7' },\n  { id: '3803', parentId: '3801', name: 'Level 7', subtext: 'id 3803', type: 'Level 7' },\n  { id: '3804', parentId: '3801', name: 'Level 7', subtext: 'id 3804', type: 'Level 7' },\n  { id: '3805', parentId: '3801', name: 'Level 7', subtext: 'id 3805', type: 'Level 7' },\n  { id: '3806', parentId: '3801', name: 'Level 7', subtext: 'id 3806', type: 'Level 7' },\n  { id: '3807', parentId: '3770', name: 'Level 5', subtext: 'id 3807', type: 'Level 5' },\n  { id: '3808', parentId: '3807', name: 'Level 6', subtext: 'id 3808', type: 'Level 6' },\n  { id: '3809', parentId: '3808', name: 'Level 7', subtext: 'id 3809', type: 'Level 7' },\n  { id: '3810', parentId: '3808', name: 'Level 7', subtext: 'id 3810', type: 'Level 7' },\n  { id: '3811', parentId: '3808', name: 'Level 7', subtext: 'id 3811', type: 'Level 7' },\n  { id: '3812', parentId: '3770', name: 'Level 5', subtext: 'id 3812', type: 'Level 5' },\n  { id: '3813', parentId: '3812', name: 'Level 6', subtext: 'id 3813', type: 'Level 6' },\n  { id: '3814', parentId: '3813', name: 'Level 7', subtext: 'id 3814', type: 'Level 7' },\n  { id: '3815', parentId: '3813', name: 'Level 7', subtext: 'id 3815', type: 'Level 7' },\n  { id: '3816', parentId: '3813', name: 'Level 7', subtext: 'id 3816', type: 'Level 7' },\n  { id: '3817', parentId: '3813', name: 'Level 7', subtext: 'id 3817', type: 'Level 7' },\n  { id: '3818', parentId: '3813', name: 'Level 7', subtext: 'id 3818', type: 'Level 7' },\n  { id: '3819', parentId: '3812', name: 'Level 6', subtext: 'id 3819', type: 'Level 6' },\n  { id: '3820', parentId: '3819', name: 'Level 7', subtext: 'id 3820', type: 'Level 7' },\n  { id: '3821', parentId: '3819', name: 'Level 7', subtext: 'id 3821', type: 'Level 7' },\n  { id: '3822', parentId: '3819', name: 'Level 7', subtext: 'id 3822', type: 'Level 7' },\n  { id: '3823', parentId: '3812', name: 'Level 6', subtext: 'id 3823', type: 'Level 6' },\n  { id: '3824', parentId: '3823', name: 'Level 7', subtext: 'id 3824', type: 'Level 7' },\n  { id: '3825', parentId: '3823', name: 'Level 7', subtext: 'id 3825', type: 'Level 7' },\n  { id: '3826', parentId: '3812', name: 'Level 6', subtext: 'id 3826', type: 'Level 6' },\n  { id: '3827', parentId: '3826', name: 'Level 7', subtext: 'id 3827', type: 'Level 7' },\n  { id: '3828', parentId: '3826', name: 'Level 7', subtext: 'id 3828', type: 'Level 7' },\n  { id: '3829', parentId: '3812', name: 'Level 6', subtext: 'id 3829', type: 'Level 6' },\n  { id: '3830', parentId: '3829', name: 'Level 7', subtext: 'id 3830', type: 'Level 7' },\n  { id: '3831', parentId: '3829', name: 'Level 7', subtext: 'id 3831', type: 'Level 7' },\n  { id: '3832', parentId: '3727', name: 'Level 4', subtext: 'id 3832', type: 'Level 4' },\n  { id: '3833', parentId: '3832', name: 'Level 5', subtext: 'id 3833', type: 'Level 5' },\n  { id: '3834', parentId: '3833', name: 'Level 6', subtext: 'id 3834', type: 'Level 6' },\n  { id: '3835', parentId: '3834', name: 'Level 7', subtext: 'id 3835', type: 'Level 7' },\n  { id: '3836', parentId: '3834', name: 'Level 7', subtext: 'id 3836', type: 'Level 7' },\n  { id: '3837', parentId: '3834', name: 'Level 7', subtext: 'id 3837', type: 'Level 7' },\n  { id: '3838', parentId: '3834', name: 'Level 7', subtext: 'id 3838', type: 'Level 7' },\n  { id: '3839', parentId: '3834', name: 'Level 7', subtext: 'id 3839', type: 'Level 7' },\n  { id: '3840', parentId: '3833', name: 'Level 6', subtext: 'id 3840', type: 'Level 6' },\n  { id: '3841', parentId: '3840', name: 'Level 7', subtext: 'id 3841', type: 'Level 7' },\n  { id: '3842', parentId: '3840', name: 'Level 7', subtext: 'id 3842', type: 'Level 7' },\n  { id: '3843', parentId: '3840', name: 'Level 7', subtext: 'id 3843', type: 'Level 7' },\n  { id: '3844', parentId: '3833', name: 'Level 6', subtext: 'id 3844', type: 'Level 6' },\n  { id: '3845', parentId: '3844', name: 'Level 7', subtext: 'id 3845', type: 'Level 7' },\n  { id: '3846', parentId: '3844', name: 'Level 7', subtext: 'id 3846', type: 'Level 7' },\n  { id: '3847', parentId: '3844', name: 'Level 7', subtext: 'id 3847', type: 'Level 7' },\n  { id: '3848', parentId: '3844', name: 'Level 7', subtext: 'id 3848', type: 'Level 7' },\n  { id: '3849', parentId: '3833', name: 'Level 6', subtext: 'id 3849', type: 'Level 6' },\n  { id: '3850', parentId: '3849', name: 'Level 7', subtext: 'id 3850', type: 'Level 7' },\n  { id: '3851', parentId: '3832', name: 'Level 5', subtext: 'id 3851', type: 'Level 5' },\n  { id: '3852', parentId: '3851', name: 'Level 6', subtext: 'id 3852', type: 'Level 6' },\n  { id: '3853', parentId: '3852', name: 'Level 7', subtext: 'id 3853', type: 'Level 7' },\n  { id: '3854', parentId: '3852', name: 'Level 7', subtext: 'id 3854', type: 'Level 7' },\n  { id: '3855', parentId: '3852', name: 'Level 7', subtext: 'id 3855', type: 'Level 7' },\n  { id: '3856', parentId: '3852', name: 'Level 7', subtext: 'id 3856', type: 'Level 7' },\n  { id: '3857', parentId: '3832', name: 'Level 5', subtext: 'id 3857', type: 'Level 5' },\n  { id: '3858', parentId: '3857', name: 'Level 6', subtext: 'id 3858', type: 'Level 6' },\n  { id: '3859', parentId: '3858', name: 'Level 7', subtext: 'id 3859', type: 'Level 7' },\n  { id: '3860', parentId: '2723', name: 'Level 2', subtext: 'id 3860', type: 'Level 2' },\n  { id: '3861', parentId: '3860', name: 'Level 3', subtext: 'id 3861', type: 'Level 3' },\n  { id: '3862', parentId: '3861', name: 'Level 4', subtext: 'id 3862', type: 'Level 4' },\n  { id: '3863', parentId: '3862', name: 'Level 5', subtext: 'id 3863', type: 'Level 5' },\n  { id: '3864', parentId: '3863', name: 'Level 6', subtext: 'id 3864', type: 'Level 6' },\n  { id: '3865', parentId: '3864', name: 'Level 7', subtext: 'id 3865', type: 'Level 7' },\n  { id: '3866', parentId: '3864', name: 'Level 7', subtext: 'id 3866', type: 'Level 7' },\n  { id: '3867', parentId: '3864', name: 'Level 7', subtext: 'id 3867', type: 'Level 7' },\n  { id: '3868', parentId: '3863', name: 'Level 6', subtext: 'id 3868', type: 'Level 6' },\n  { id: '3869', parentId: '3868', name: 'Level 7', subtext: 'id 3869', type: 'Level 7' },\n  { id: '3870', parentId: '3868', name: 'Level 7', subtext: 'id 3870', type: 'Level 7' },\n  { id: '3871', parentId: '3863', name: 'Level 6', subtext: 'id 3871', type: 'Level 6' },\n  { id: '3872', parentId: '3871', name: 'Level 7', subtext: 'id 3872', type: 'Level 7' },\n  { id: '3873', parentId: '3871', name: 'Level 7', subtext: 'id 3873', type: 'Level 7' },\n  { id: '3874', parentId: '3871', name: 'Level 7', subtext: 'id 3874', type: 'Level 7' },\n  { id: '3875', parentId: '3862', name: 'Level 5', subtext: 'id 3875', type: 'Level 5' },\n  { id: '3876', parentId: '3875', name: 'Level 6', subtext: 'id 3876', type: 'Level 6' },\n  { id: '3877', parentId: '3876', name: 'Level 7', subtext: 'id 3877', type: 'Level 7' },\n  { id: '3878', parentId: '3876', name: 'Level 7', subtext: 'id 3878', type: 'Level 7' },\n  { id: '3879', parentId: '3876', name: 'Level 7', subtext: 'id 3879', type: 'Level 7' },\n  { id: '3880', parentId: '3875', name: 'Level 6', subtext: 'id 3880', type: 'Level 6' },\n  { id: '3881', parentId: '3880', name: 'Level 7', subtext: 'id 3881', type: 'Level 7' },\n  { id: '3882', parentId: '3875', name: 'Level 6', subtext: 'id 3882', type: 'Level 6' },\n  { id: '3883', parentId: '3882', name: 'Level 7', subtext: 'id 3883', type: 'Level 7' },\n  { id: '3884', parentId: '3882', name: 'Level 7', subtext: 'id 3884', type: 'Level 7' },\n  { id: '3885', parentId: '3882', name: 'Level 7', subtext: 'id 3885', type: 'Level 7' },\n  { id: '3886', parentId: '3882', name: 'Level 7', subtext: 'id 3886', type: 'Level 7' },\n  { id: '3887', parentId: '3862', name: 'Level 5', subtext: 'id 3887', type: 'Level 5' },\n  { id: '3888', parentId: '3887', name: 'Level 6', subtext: 'id 3888', type: 'Level 6' },\n  { id: '3889', parentId: '3888', name: 'Level 7', subtext: 'id 3889', type: 'Level 7' },\n  { id: '3890', parentId: '3888', name: 'Level 7', subtext: 'id 3890', type: 'Level 7' },\n  { id: '3891', parentId: '3888', name: 'Level 7', subtext: 'id 3891', type: 'Level 7' },\n  { id: '3892', parentId: '3887', name: 'Level 6', subtext: 'id 3892', type: 'Level 6' },\n  { id: '3893', parentId: '3892', name: 'Level 7', subtext: 'id 3893', type: 'Level 7' },\n  { id: '3894', parentId: '3892', name: 'Level 7', subtext: 'id 3894', type: 'Level 7' },\n  { id: '3895', parentId: '3892', name: 'Level 7', subtext: 'id 3895', type: 'Level 7' },\n  { id: '3896', parentId: '3892', name: 'Level 7', subtext: 'id 3896', type: 'Level 7' },\n  { id: '3897', parentId: '3887', name: 'Level 6', subtext: 'id 3897', type: 'Level 6' },\n  { id: '3898', parentId: '3897', name: 'Level 7', subtext: 'id 3898', type: 'Level 7' },\n  { id: '3899', parentId: '3897', name: 'Level 7', subtext: 'id 3899', type: 'Level 7' },\n  { id: '3900', parentId: '3897', name: 'Level 7', subtext: 'id 3900', type: 'Level 7' },\n  { id: '3901', parentId: '3887', name: 'Level 6', subtext: 'id 3901', type: 'Level 6' },\n  { id: '3902', parentId: '3901', name: 'Level 7', subtext: 'id 3902', type: 'Level 7' },\n  { id: '3903', parentId: '3901', name: 'Level 7', subtext: 'id 3903', type: 'Level 7' },\n  { id: '3904', parentId: '3901', name: 'Level 7', subtext: 'id 3904', type: 'Level 7' },\n  { id: '3905', parentId: '3901', name: 'Level 7', subtext: 'id 3905', type: 'Level 7' },\n  { id: '3906', parentId: '3901', name: 'Level 7', subtext: 'id 3906', type: 'Level 7' },\n  { id: '3907', parentId: '3887', name: 'Level 6', subtext: 'id 3907', type: 'Level 6' },\n  { id: '3908', parentId: '3907', name: 'Level 7', subtext: 'id 3908', type: 'Level 7' },\n  { id: '3909', parentId: '3907', name: 'Level 7', subtext: 'id 3909', type: 'Level 7' },\n  { id: '3910', parentId: '3862', name: 'Level 5', subtext: 'id 3910', type: 'Level 5' },\n  { id: '3911', parentId: '3910', name: 'Level 6', subtext: 'id 3911', type: 'Level 6' },\n  { id: '3912', parentId: '3911', name: 'Level 7', subtext: 'id 3912', type: 'Level 7' },\n  { id: '3913', parentId: '3911', name: 'Level 7', subtext: 'id 3913', type: 'Level 7' },\n  { id: '3914', parentId: '3911', name: 'Level 7', subtext: 'id 3914', type: 'Level 7' },\n  { id: '3915', parentId: '3910', name: 'Level 6', subtext: 'id 3915', type: 'Level 6' },\n  { id: '3916', parentId: '3915', name: 'Level 7', subtext: 'id 3916', type: 'Level 7' },\n  { id: '3917', parentId: '3915', name: 'Level 7', subtext: 'id 3917', type: 'Level 7' },\n  { id: '3918', parentId: '3915', name: 'Level 7', subtext: 'id 3918', type: 'Level 7' },\n  { id: '3919', parentId: '3915', name: 'Level 7', subtext: 'id 3919', type: 'Level 7' },\n  { id: '3920', parentId: '3915', name: 'Level 7', subtext: 'id 3920', type: 'Level 7' },\n  { id: '3921', parentId: '3910', name: 'Level 6', subtext: 'id 3921', type: 'Level 6' },\n  { id: '3922', parentId: '3921', name: 'Level 7', subtext: 'id 3922', type: 'Level 7' },\n  { id: '3923', parentId: '3921', name: 'Level 7', subtext: 'id 3923', type: 'Level 7' },\n  { id: '3924', parentId: '3921', name: 'Level 7', subtext: 'id 3924', type: 'Level 7' },\n  { id: '3925', parentId: '3862', name: 'Level 5', subtext: 'id 3925', type: 'Level 5' },\n  { id: '3926', parentId: '3925', name: 'Level 6', subtext: 'id 3926', type: 'Level 6' },\n  { id: '3927', parentId: '3926', name: 'Level 7', subtext: 'id 3927', type: 'Level 7' },\n  { id: '3928', parentId: '3926', name: 'Level 7', subtext: 'id 3928', type: 'Level 7' },\n  { id: '3929', parentId: '3926', name: 'Level 7', subtext: 'id 3929', type: 'Level 7' },\n  { id: '3930', parentId: '3926', name: 'Level 7', subtext: 'id 3930', type: 'Level 7' },\n  { id: '3931', parentId: '3926', name: 'Level 7', subtext: 'id 3931', type: 'Level 7' },\n  { id: '3932', parentId: '3925', name: 'Level 6', subtext: 'id 3932', type: 'Level 6' },\n  { id: '3933', parentId: '3932', name: 'Level 7', subtext: 'id 3933', type: 'Level 7' },\n  { id: '3934', parentId: '3932', name: 'Level 7', subtext: 'id 3934', type: 'Level 7' },\n  { id: '3935', parentId: '3932', name: 'Level 7', subtext: 'id 3935', type: 'Level 7' },\n  { id: '3936', parentId: '3932', name: 'Level 7', subtext: 'id 3936', type: 'Level 7' },\n  { id: '3937', parentId: '3925', name: 'Level 6', subtext: 'id 3937', type: 'Level 6' },\n  { id: '3938', parentId: '3937', name: 'Level 7', subtext: 'id 3938', type: 'Level 7' },\n  { id: '3939', parentId: '3937', name: 'Level 7', subtext: 'id 3939', type: 'Level 7' },\n  { id: '3940', parentId: '3937', name: 'Level 7', subtext: 'id 3940', type: 'Level 7' },\n  { id: '3941', parentId: '3925', name: 'Level 6', subtext: 'id 3941', type: 'Level 6' },\n  { id: '3942', parentId: '3941', name: 'Level 7', subtext: 'id 3942', type: 'Level 7' },\n  { id: '3943', parentId: '3941', name: 'Level 7', subtext: 'id 3943', type: 'Level 7' },\n  { id: '3944', parentId: '3860', name: 'Level 3', subtext: 'id 3944', type: 'Level 3' },\n  { id: '3945', parentId: '3944', name: 'Level 4', subtext: 'id 3945', type: 'Level 4' },\n  { id: '3946', parentId: '3945', name: 'Level 5', subtext: 'id 3946', type: 'Level 5' },\n  { id: '3947', parentId: '3946', name: 'Level 6', subtext: 'id 3947', type: 'Level 6' },\n  { id: '3948', parentId: '3947', name: 'Level 7', subtext: 'id 3948', type: 'Level 7' },\n  { id: '3949', parentId: '3947', name: 'Level 7', subtext: 'id 3949', type: 'Level 7' },\n  { id: '3950', parentId: '3947', name: 'Level 7', subtext: 'id 3950', type: 'Level 7' },\n  { id: '3951', parentId: '3946', name: 'Level 6', subtext: 'id 3951', type: 'Level 6' },\n  { id: '3952', parentId: '3951', name: 'Level 7', subtext: 'id 3952', type: 'Level 7' },\n  { id: '3953', parentId: '3951', name: 'Level 7', subtext: 'id 3953', type: 'Level 7' },\n  { id: '3954', parentId: '3945', name: 'Level 5', subtext: 'id 3954', type: 'Level 5' },\n  { id: '3955', parentId: '3954', name: 'Level 6', subtext: 'id 3955', type: 'Level 6' },\n  { id: '3956', parentId: '3955', name: 'Level 7', subtext: 'id 3956', type: 'Level 7' },\n  { id: '3957', parentId: '3955', name: 'Level 7', subtext: 'id 3957', type: 'Level 7' },\n  { id: '3958', parentId: '3954', name: 'Level 6', subtext: 'id 3958', type: 'Level 6' },\n  { id: '3959', parentId: '3958', name: 'Level 7', subtext: 'id 3959', type: 'Level 7' },\n  { id: '3960', parentId: '3954', name: 'Level 6', subtext: 'id 3960', type: 'Level 6' },\n  { id: '3961', parentId: '3960', name: 'Level 7', subtext: 'id 3961', type: 'Level 7' },\n  { id: '3962', parentId: '3960', name: 'Level 7', subtext: 'id 3962', type: 'Level 7' },\n  { id: '3963', parentId: '3960', name: 'Level 7', subtext: 'id 3963', type: 'Level 7' },\n  { id: '3964', parentId: '3960', name: 'Level 7', subtext: 'id 3964', type: 'Level 7' },\n  { id: '3965', parentId: '3945', name: 'Level 5', subtext: 'id 3965', type: 'Level 5' },\n  { id: '3966', parentId: '3965', name: 'Level 6', subtext: 'id 3966', type: 'Level 6' },\n  { id: '3967', parentId: '3966', name: 'Level 7', subtext: 'id 3967', type: 'Level 7' },\n  { id: '3968', parentId: '3966', name: 'Level 7', subtext: 'id 3968', type: 'Level 7' },\n  { id: '3969', parentId: '3966', name: 'Level 7', subtext: 'id 3969', type: 'Level 7' },\n  { id: '3970', parentId: '3965', name: 'Level 6', subtext: 'id 3970', type: 'Level 6' },\n  { id: '3971', parentId: '3970', name: 'Level 7', subtext: 'id 3971', type: 'Level 7' },\n  { id: '3972', parentId: '3965', name: 'Level 6', subtext: 'id 3972', type: 'Level 6' },\n  { id: '3973', parentId: '3972', name: 'Level 7', subtext: 'id 3973', type: 'Level 7' },\n  { id: '3974', parentId: '3972', name: 'Level 7', subtext: 'id 3974', type: 'Level 7' },\n  { id: '3975', parentId: '3972', name: 'Level 7', subtext: 'id 3975', type: 'Level 7' },\n  { id: '3976', parentId: '3972', name: 'Level 7', subtext: 'id 3976', type: 'Level 7' },\n  { id: '3977', parentId: '3965', name: 'Level 6', subtext: 'id 3977', type: 'Level 6' },\n  { id: '3978', parentId: '3977', name: 'Level 7', subtext: 'id 3978', type: 'Level 7' },\n  { id: '3979', parentId: '3977', name: 'Level 7', subtext: 'id 3979', type: 'Level 7' },\n  { id: '3980', parentId: '3977', name: 'Level 7', subtext: 'id 3980', type: 'Level 7' },\n  { id: '3981', parentId: '3965', name: 'Level 6', subtext: 'id 3981', type: 'Level 6' },\n  { id: '3982', parentId: '3981', name: 'Level 7', subtext: 'id 3982', type: 'Level 7' },\n  { id: '3983', parentId: '3981', name: 'Level 7', subtext: 'id 3983', type: 'Level 7' },\n  { id: '3984', parentId: '3981', name: 'Level 7', subtext: 'id 3984', type: 'Level 7' },\n  { id: '3985', parentId: '3981', name: 'Level 7', subtext: 'id 3985', type: 'Level 7' },\n  { id: '3986', parentId: '3981', name: 'Level 7', subtext: 'id 3986', type: 'Level 7' },\n  { id: '3987', parentId: '3945', name: 'Level 5', subtext: 'id 3987', type: 'Level 5' },\n  { id: '3988', parentId: '3987', name: 'Level 6', subtext: 'id 3988', type: 'Level 6' },\n  { id: '3989', parentId: '3988', name: 'Level 7', subtext: 'id 3989', type: 'Level 7' },\n  { id: '3990', parentId: '3988', name: 'Level 7', subtext: 'id 3990', type: 'Level 7' },\n  { id: '3991', parentId: '3988', name: 'Level 7', subtext: 'id 3991', type: 'Level 7' },\n  { id: '3992', parentId: '3987', name: 'Level 6', subtext: 'id 3992', type: 'Level 6' },\n  { id: '3993', parentId: '3992', name: 'Level 7', subtext: 'id 3993', type: 'Level 7' },\n  { id: '3994', parentId: '3987', name: 'Level 6', subtext: 'id 3994', type: 'Level 6' },\n  { id: '3995', parentId: '3994', name: 'Level 7', subtext: 'id 3995', type: 'Level 7' },\n  { id: '3996', parentId: '3987', name: 'Level 6', subtext: 'id 3996', type: 'Level 6' },\n  { id: '3997', parentId: '3996', name: 'Level 7', subtext: 'id 3997', type: 'Level 7' },\n  { id: '3998', parentId: '3987', name: 'Level 6', subtext: 'id 3998', type: 'Level 6' },\n  { id: '3999', parentId: '3998', name: 'Level 7', subtext: 'id 3999', type: 'Level 7' },\n  { id: '4000', parentId: '3998', name: 'Level 7', subtext: 'id 4000', type: 'Level 7' },\n  { id: '4001', parentId: '3945', name: 'Level 5', subtext: 'id 4001', type: 'Level 5' },\n  { id: '4002', parentId: '4001', name: 'Level 6', subtext: 'id 4002', type: 'Level 6' },\n  { id: '4003', parentId: '4002', name: 'Level 7', subtext: 'id 4003', type: 'Level 7' },\n  { id: '4004', parentId: '4001', name: 'Level 6', subtext: 'id 4004', type: 'Level 6' },\n  { id: '4005', parentId: '4004', name: 'Level 7', subtext: 'id 4005', type: 'Level 7' },\n  { id: '4006', parentId: '4004', name: 'Level 7', subtext: 'id 4006', type: 'Level 7' },\n  { id: '4007', parentId: '4001', name: 'Level 6', subtext: 'id 4007', type: 'Level 6' },\n  { id: '4008', parentId: '4007', name: 'Level 7', subtext: 'id 4008', type: 'Level 7' },\n  { id: '4009', parentId: '4007', name: 'Level 7', subtext: 'id 4009', type: 'Level 7' },\n  { id: '4010', parentId: '4007', name: 'Level 7', subtext: 'id 4010', type: 'Level 7' },\n  { id: '4011', parentId: '4007', name: 'Level 7', subtext: 'id 4011', type: 'Level 7' },\n  { id: '4012', parentId: '4001', name: 'Level 6', subtext: 'id 4012', type: 'Level 6' },\n  { id: '4013', parentId: '4012', name: 'Level 7', subtext: 'id 4013', type: 'Level 7' },\n  { id: '4014', parentId: '4001', name: 'Level 6', subtext: 'id 4014', type: 'Level 6' },\n  { id: '4015', parentId: '4014', name: 'Level 7', subtext: 'id 4015', type: 'Level 7' },\n  { id: '4016', parentId: '4014', name: 'Level 7', subtext: 'id 4016', type: 'Level 7' },\n  { id: '4017', parentId: '4014', name: 'Level 7', subtext: 'id 4017', type: 'Level 7' },\n  { id: '4018', parentId: '4014', name: 'Level 7', subtext: 'id 4018', type: 'Level 7' },\n  { id: '4019', parentId: '4014', name: 'Level 7', subtext: 'id 4019', type: 'Level 7' },\n  { id: '4020', parentId: '3944', name: 'Level 4', subtext: 'id 4020', type: 'Level 4' },\n  { id: '4021', parentId: '4020', name: 'Level 5', subtext: 'id 4021', type: 'Level 5' },\n  { id: '4022', parentId: '4021', name: 'Level 6', subtext: 'id 4022', type: 'Level 6' },\n  { id: '4023', parentId: '4022', name: 'Level 7', subtext: 'id 4023', type: 'Level 7' },\n  { id: '4024', parentId: '4022', name: 'Level 7', subtext: 'id 4024', type: 'Level 7' },\n  { id: '4025', parentId: '4022', name: 'Level 7', subtext: 'id 4025', type: 'Level 7' },\n  { id: '4026', parentId: '4022', name: 'Level 7', subtext: 'id 4026', type: 'Level 7' },\n  { id: '4027', parentId: '4022', name: 'Level 7', subtext: 'id 4027', type: 'Level 7' },\n  { id: '4028', parentId: '4021', name: 'Level 6', subtext: 'id 4028', type: 'Level 6' },\n  { id: '4029', parentId: '4028', name: 'Level 7', subtext: 'id 4029', type: 'Level 7' },\n  { id: '4030', parentId: '4028', name: 'Level 7', subtext: 'id 4030', type: 'Level 7' },\n  { id: '4031', parentId: '4028', name: 'Level 7', subtext: 'id 4031', type: 'Level 7' },\n  { id: '4032', parentId: '4020', name: 'Level 5', subtext: 'id 4032', type: 'Level 5' },\n  { id: '4033', parentId: '4032', name: 'Level 6', subtext: 'id 4033', type: 'Level 6' },\n  { id: '4034', parentId: '4033', name: 'Level 7', subtext: 'id 4034', type: 'Level 7' },\n  { id: '4035', parentId: '4033', name: 'Level 7', subtext: 'id 4035', type: 'Level 7' },\n  { id: '4036', parentId: '4033', name: 'Level 7', subtext: 'id 4036', type: 'Level 7' },\n  { id: '4037', parentId: '4033', name: 'Level 7', subtext: 'id 4037', type: 'Level 7' },\n  { id: '4038', parentId: '4032', name: 'Level 6', subtext: 'id 4038', type: 'Level 6' },\n  { id: '4039', parentId: '4038', name: 'Level 7', subtext: 'id 4039', type: 'Level 7' },\n  { id: '4040', parentId: '4032', name: 'Level 6', subtext: 'id 4040', type: 'Level 6' },\n  { id: '4041', parentId: '4040', name: 'Level 7', subtext: 'id 4041', type: 'Level 7' },\n  { id: '4042', parentId: '4040', name: 'Level 7', subtext: 'id 4042', type: 'Level 7' },\n  { id: '4043', parentId: '4040', name: 'Level 7', subtext: 'id 4043', type: 'Level 7' },\n  { id: '4044', parentId: '4020', name: 'Level 5', subtext: 'id 4044', type: 'Level 5' },\n  { id: '4045', parentId: '4044', name: 'Level 6', subtext: 'id 4045', type: 'Level 6' },\n  { id: '4046', parentId: '4045', name: 'Level 7', subtext: 'id 4046', type: 'Level 7' },\n  { id: '4047', parentId: '4045', name: 'Level 7', subtext: 'id 4047', type: 'Level 7' },\n  { id: '4048', parentId: '4045', name: 'Level 7', subtext: 'id 4048', type: 'Level 7' },\n  { id: '4049', parentId: '4044', name: 'Level 6', subtext: 'id 4049', type: 'Level 6' },\n  { id: '4050', parentId: '4049', name: 'Level 7', subtext: 'id 4050', type: 'Level 7' },\n  { id: '4051', parentId: '4049', name: 'Level 7', subtext: 'id 4051', type: 'Level 7' },\n  { id: '4052', parentId: '4049', name: 'Level 7', subtext: 'id 4052', type: 'Level 7' },\n  { id: '4053', parentId: '4049', name: 'Level 7', subtext: 'id 4053', type: 'Level 7' },\n  { id: '4054', parentId: '4044', name: 'Level 6', subtext: 'id 4054', type: 'Level 6' },\n  { id: '4055', parentId: '4054', name: 'Level 7', subtext: 'id 4055', type: 'Level 7' },\n  { id: '4056', parentId: '4054', name: 'Level 7', subtext: 'id 4056', type: 'Level 7' },\n  { id: '4057', parentId: '4054', name: 'Level 7', subtext: 'id 4057', type: 'Level 7' },\n  { id: '4058', parentId: '4054', name: 'Level 7', subtext: 'id 4058', type: 'Level 7' },\n  { id: '4059', parentId: '4044', name: 'Level 6', subtext: 'id 4059', type: 'Level 6' },\n  { id: '4060', parentId: '4059', name: 'Level 7', subtext: 'id 4060', type: 'Level 7' },\n  { id: '4061', parentId: '4059', name: 'Level 7', subtext: 'id 4061', type: 'Level 7' },\n  { id: '4062', parentId: '4059', name: 'Level 7', subtext: 'id 4062', type: 'Level 7' },\n  { id: '4063', parentId: '4059', name: 'Level 7', subtext: 'id 4063', type: 'Level 7' },\n  { id: '4064', parentId: '4020', name: 'Level 5', subtext: 'id 4064', type: 'Level 5' },\n  { id: '4065', parentId: '4064', name: 'Level 6', subtext: 'id 4065', type: 'Level 6' },\n  { id: '4066', parentId: '4065', name: 'Level 7', subtext: 'id 4066', type: 'Level 7' },\n  { id: '4067', parentId: '4065', name: 'Level 7', subtext: 'id 4067', type: 'Level 7' },\n  { id: '4068', parentId: '4065', name: 'Level 7', subtext: 'id 4068', type: 'Level 7' },\n  { id: '4069', parentId: '4065', name: 'Level 7', subtext: 'id 4069', type: 'Level 7' },\n  { id: '4070', parentId: '4065', name: 'Level 7', subtext: 'id 4070', type: 'Level 7' },\n  { id: '4071', parentId: '4020', name: 'Level 5', subtext: 'id 4071', type: 'Level 5' },\n  { id: '4072', parentId: '4071', name: 'Level 6', subtext: 'id 4072', type: 'Level 6' },\n  { id: '4073', parentId: '4072', name: 'Level 7', subtext: 'id 4073', type: 'Level 7' },\n  { id: '4074', parentId: '4072', name: 'Level 7', subtext: 'id 4074', type: 'Level 7' },\n  { id: '4075', parentId: '4072', name: 'Level 7', subtext: 'id 4075', type: 'Level 7' },\n  { id: '4076', parentId: '3944', name: 'Level 4', subtext: 'id 4076', type: 'Level 4' },\n  { id: '4077', parentId: '4076', name: 'Level 5', subtext: 'id 4077', type: 'Level 5' },\n  { id: '4078', parentId: '4077', name: 'Level 6', subtext: 'id 4078', type: 'Level 6' },\n  { id: '4079', parentId: '4078', name: 'Level 7', subtext: 'id 4079', type: 'Level 7' },\n  { id: '4080', parentId: '4078', name: 'Level 7', subtext: 'id 4080', type: 'Level 7' },\n  { id: '4081', parentId: '4077', name: 'Level 6', subtext: 'id 4081', type: 'Level 6' },\n  { id: '4082', parentId: '4081', name: 'Level 7', subtext: 'id 4082', type: 'Level 7' },\n  { id: '4083', parentId: '4081', name: 'Level 7', subtext: 'id 4083', type: 'Level 7' },\n  { id: '4084', parentId: '4081', name: 'Level 7', subtext: 'id 4084', type: 'Level 7' },\n  { id: '4085', parentId: '4081', name: 'Level 7', subtext: 'id 4085', type: 'Level 7' },\n  { id: '4086', parentId: '4081', name: 'Level 7', subtext: 'id 4086', type: 'Level 7' },\n  { id: '4087', parentId: '4076', name: 'Level 5', subtext: 'id 4087', type: 'Level 5' },\n  { id: '4088', parentId: '4087', name: 'Level 6', subtext: 'id 4088', type: 'Level 6' },\n  { id: '4089', parentId: '4088', name: 'Level 7', subtext: 'id 4089', type: 'Level 7' },\n  { id: '4090', parentId: '4087', name: 'Level 6', subtext: 'id 4090', type: 'Level 6' },\n  { id: '4091', parentId: '4090', name: 'Level 7', subtext: 'id 4091', type: 'Level 7' },\n  { id: '4092', parentId: '4090', name: 'Level 7', subtext: 'id 4092', type: 'Level 7' },\n  { id: '4093', parentId: '4090', name: 'Level 7', subtext: 'id 4093', type: 'Level 7' },\n  { id: '4094', parentId: '4090', name: 'Level 7', subtext: 'id 4094', type: 'Level 7' },\n  { id: '4095', parentId: '4087', name: 'Level 6', subtext: 'id 4095', type: 'Level 6' },\n  { id: '4096', parentId: '4095', name: 'Level 7', subtext: 'id 4096', type: 'Level 7' },\n  { id: '4097', parentId: '4087', name: 'Level 6', subtext: 'id 4097', type: 'Level 6' },\n  { id: '4098', parentId: '4097', name: 'Level 7', subtext: 'id 4098', type: 'Level 7' },\n  { id: '4099', parentId: '4097', name: 'Level 7', subtext: 'id 4099', type: 'Level 7' },\n  { id: '4100', parentId: '4087', name: 'Level 6', subtext: 'id 4100', type: 'Level 6' },\n  { id: '4101', parentId: '4100', name: 'Level 7', subtext: 'id 4101', type: 'Level 7' },\n  { id: '4102', parentId: '4076', name: 'Level 5', subtext: 'id 4102', type: 'Level 5' },\n  { id: '4103', parentId: '4102', name: 'Level 6', subtext: 'id 4103', type: 'Level 6' },\n  { id: '4104', parentId: '4103', name: 'Level 7', subtext: 'id 4104', type: 'Level 7' },\n  { id: '4105', parentId: '4103', name: 'Level 7', subtext: 'id 4105', type: 'Level 7' },\n  { id: '4106', parentId: '4103', name: 'Level 7', subtext: 'id 4106', type: 'Level 7' },\n  { id: '4107', parentId: '4102', name: 'Level 6', subtext: 'id 4107', type: 'Level 6' },\n  { id: '4108', parentId: '4107', name: 'Level 7', subtext: 'id 4108', type: 'Level 7' },\n  { id: '4109', parentId: '4107', name: 'Level 7', subtext: 'id 4109', type: 'Level 7' },\n  { id: '4110', parentId: '4076', name: 'Level 5', subtext: 'id 4110', type: 'Level 5' },\n  { id: '4111', parentId: '4110', name: 'Level 6', subtext: 'id 4111', type: 'Level 6' },\n  { id: '4112', parentId: '4111', name: 'Level 7', subtext: 'id 4112', type: 'Level 7' },\n  { id: '4113', parentId: '4111', name: 'Level 7', subtext: 'id 4113', type: 'Level 7' },\n  { id: '4114', parentId: '4111', name: 'Level 7', subtext: 'id 4114', type: 'Level 7' },\n  { id: '4115', parentId: '4110', name: 'Level 6', subtext: 'id 4115', type: 'Level 6' },\n  { id: '4116', parentId: '4115', name: 'Level 7', subtext: 'id 4116', type: 'Level 7' },\n  { id: '4117', parentId: '4115', name: 'Level 7', subtext: 'id 4117', type: 'Level 7' },\n  { id: '4118', parentId: '4110', name: 'Level 6', subtext: 'id 4118', type: 'Level 6' },\n  { id: '4119', parentId: '4118', name: 'Level 7', subtext: 'id 4119', type: 'Level 7' },\n  { id: '4120', parentId: '4110', name: 'Level 6', subtext: 'id 4120', type: 'Level 6' },\n  { id: '4121', parentId: '4120', name: 'Level 7', subtext: 'id 4121', type: 'Level 7' },\n  { id: '4122', parentId: '4120', name: 'Level 7', subtext: 'id 4122', type: 'Level 7' },\n  { id: '4123', parentId: '4120', name: 'Level 7', subtext: 'id 4123', type: 'Level 7' },\n  { id: '4124', parentId: '4120', name: 'Level 7', subtext: 'id 4124', type: 'Level 7' },\n  { id: '4125', parentId: '4120', name: 'Level 7', subtext: 'id 4125', type: 'Level 7' },\n  { id: '4126', parentId: '4110', name: 'Level 6', subtext: 'id 4126', type: 'Level 6' },\n  { id: '4127', parentId: '4126', name: 'Level 7', subtext: 'id 4127', type: 'Level 7' },\n  { id: '4128', parentId: '4126', name: 'Level 7', subtext: 'id 4128', type: 'Level 7' },\n  { id: '4129', parentId: '3860', name: 'Level 3', subtext: 'id 4129', type: 'Level 3' },\n  { id: '4130', parentId: '4129', name: 'Level 4', subtext: 'id 4130', type: 'Level 4' },\n  { id: '4131', parentId: '4130', name: 'Level 5', subtext: 'id 4131', type: 'Level 5' },\n  { id: '4132', parentId: '4131', name: 'Level 6', subtext: 'id 4132', type: 'Level 6' },\n  { id: '4133', parentId: '4132', name: 'Level 7', subtext: 'id 4133', type: 'Level 7' },\n  { id: '4134', parentId: '4132', name: 'Level 7', subtext: 'id 4134', type: 'Level 7' },\n  { id: '4135', parentId: '4132', name: 'Level 7', subtext: 'id 4135', type: 'Level 7' },\n  { id: '4136', parentId: '4132', name: 'Level 7', subtext: 'id 4136', type: 'Level 7' },\n  { id: '4137', parentId: '4132', name: 'Level 7', subtext: 'id 4137', type: 'Level 7' },\n  { id: '4138', parentId: '4130', name: 'Level 5', subtext: 'id 4138', type: 'Level 5' },\n  { id: '4139', parentId: '4138', name: 'Level 6', subtext: 'id 4139', type: 'Level 6' },\n  { id: '4140', parentId: '4139', name: 'Level 7', subtext: 'id 4140', type: 'Level 7' },\n  { id: '4141', parentId: '4139', name: 'Level 7', subtext: 'id 4141', type: 'Level 7' },\n  { id: '4142', parentId: '4138', name: 'Level 6', subtext: 'id 4142', type: 'Level 6' },\n  { id: '4143', parentId: '4142', name: 'Level 7', subtext: 'id 4143', type: 'Level 7' },\n  { id: '4144', parentId: '4142', name: 'Level 7', subtext: 'id 4144', type: 'Level 7' },\n  { id: '4145', parentId: '4142', name: 'Level 7', subtext: 'id 4145', type: 'Level 7' },\n  { id: '4146', parentId: '4142', name: 'Level 7', subtext: 'id 4146', type: 'Level 7' },\n  { id: '4147', parentId: '4142', name: 'Level 7', subtext: 'id 4147', type: 'Level 7' },\n  { id: '4148', parentId: '4138', name: 'Level 6', subtext: 'id 4148', type: 'Level 6' },\n  { id: '4149', parentId: '4148', name: 'Level 7', subtext: 'id 4149', type: 'Level 7' },\n  { id: '4150', parentId: '4148', name: 'Level 7', subtext: 'id 4150', type: 'Level 7' },\n  { id: '4151', parentId: '4148', name: 'Level 7', subtext: 'id 4151', type: 'Level 7' },\n  { id: '4152', parentId: '4130', name: 'Level 5', subtext: 'id 4152', type: 'Level 5' },\n  { id: '4153', parentId: '4152', name: 'Level 6', subtext: 'id 4153', type: 'Level 6' },\n  { id: '4154', parentId: '4153', name: 'Level 7', subtext: 'id 4154', type: 'Level 7' },\n  { id: '4155', parentId: '4153', name: 'Level 7', subtext: 'id 4155', type: 'Level 7' },\n  { id: '4156', parentId: '4153', name: 'Level 7', subtext: 'id 4156', type: 'Level 7' },\n  { id: '4157', parentId: '4153', name: 'Level 7', subtext: 'id 4157', type: 'Level 7' },\n  { id: '4158', parentId: '4152', name: 'Level 6', subtext: 'id 4158', type: 'Level 6' },\n  { id: '4159', parentId: '4158', name: 'Level 7', subtext: 'id 4159', type: 'Level 7' },\n  { id: '4160', parentId: '4129', name: 'Level 4', subtext: 'id 4160', type: 'Level 4' },\n  { id: '4161', parentId: '4160', name: 'Level 5', subtext: 'id 4161', type: 'Level 5' },\n  { id: '4162', parentId: '4161', name: 'Level 6', subtext: 'id 4162', type: 'Level 6' },\n  { id: '4163', parentId: '4162', name: 'Level 7', subtext: 'id 4163', type: 'Level 7' },\n  { id: '4164', parentId: '4162', name: 'Level 7', subtext: 'id 4164', type: 'Level 7' },\n  { id: '4165', parentId: '4161', name: 'Level 6', subtext: 'id 4165', type: 'Level 6' },\n  { id: '4166', parentId: '4165', name: 'Level 7', subtext: 'id 4166', type: 'Level 7' },\n  { id: '4167', parentId: '4165', name: 'Level 7', subtext: 'id 4167', type: 'Level 7' },\n  { id: '4168', parentId: '4165', name: 'Level 7', subtext: 'id 4168', type: 'Level 7' },\n  { id: '4169', parentId: '4160', name: 'Level 5', subtext: 'id 4169', type: 'Level 5' },\n  { id: '4170', parentId: '4169', name: 'Level 6', subtext: 'id 4170', type: 'Level 6' },\n  { id: '4171', parentId: '4170', name: 'Level 7', subtext: 'id 4171', type: 'Level 7' },\n  { id: '4172', parentId: '4170', name: 'Level 7', subtext: 'id 4172', type: 'Level 7' },\n  { id: '4173', parentId: '4169', name: 'Level 6', subtext: 'id 4173', type: 'Level 6' },\n  { id: '4174', parentId: '4173', name: 'Level 7', subtext: 'id 4174', type: 'Level 7' },\n  { id: '4175', parentId: '4173', name: 'Level 7', subtext: 'id 4175', type: 'Level 7' },\n  { id: '4176', parentId: '4173', name: 'Level 7', subtext: 'id 4176', type: 'Level 7' },\n  { id: '4177', parentId: '4169', name: 'Level 6', subtext: 'id 4177', type: 'Level 6' },\n  { id: '4178', parentId: '4177', name: 'Level 7', subtext: 'id 4178', type: 'Level 7' },\n  { id: '4179', parentId: '4177', name: 'Level 7', subtext: 'id 4179', type: 'Level 7' },\n  { id: '4180', parentId: '4177', name: 'Level 7', subtext: 'id 4180', type: 'Level 7' },\n  { id: '4181', parentId: '4177', name: 'Level 7', subtext: 'id 4181', type: 'Level 7' },\n  { id: '4182', parentId: '4177', name: 'Level 7', subtext: 'id 4182', type: 'Level 7' },\n  { id: '4183', parentId: '4169', name: 'Level 6', subtext: 'id 4183', type: 'Level 6' },\n  { id: '4184', parentId: '4183', name: 'Level 7', subtext: 'id 4184', type: 'Level 7' },\n  { id: '4185', parentId: '4183', name: 'Level 7', subtext: 'id 4185', type: 'Level 7' },\n  { id: '4186', parentId: '4183', name: 'Level 7', subtext: 'id 4186', type: 'Level 7' },\n  { id: '4187', parentId: '4183', name: 'Level 7', subtext: 'id 4187', type: 'Level 7' },\n  { id: '4188', parentId: '4183', name: 'Level 7', subtext: 'id 4188', type: 'Level 7' },\n  { id: '4189', parentId: '4169', name: 'Level 6', subtext: 'id 4189', type: 'Level 6' },\n  { id: '4190', parentId: '4189', name: 'Level 7', subtext: 'id 4190', type: 'Level 7' },\n  { id: '4191', parentId: '4189', name: 'Level 7', subtext: 'id 4191', type: 'Level 7' },\n  { id: '4192', parentId: '4189', name: 'Level 7', subtext: 'id 4192', type: 'Level 7' },\n  { id: '4193', parentId: '4160', name: 'Level 5', subtext: 'id 4193', type: 'Level 5' },\n  { id: '4194', parentId: '4193', name: 'Level 6', subtext: 'id 4194', type: 'Level 6' },\n  { id: '4195', parentId: '4194', name: 'Level 7', subtext: 'id 4195', type: 'Level 7' },\n  { id: '4196', parentId: '4194', name: 'Level 7', subtext: 'id 4196', type: 'Level 7' },\n  { id: '4197', parentId: '4194', name: 'Level 7', subtext: 'id 4197', type: 'Level 7' },\n  { id: '4198', parentId: '4194', name: 'Level 7', subtext: 'id 4198', type: 'Level 7' },\n  { id: '4199', parentId: '4194', name: 'Level 7', subtext: 'id 4199', type: 'Level 7' },\n  { id: '4200', parentId: '4129', name: 'Level 4', subtext: 'id 4200', type: 'Level 4' },\n  { id: '4201', parentId: '4200', name: 'Level 5', subtext: 'id 4201', type: 'Level 5' },\n  { id: '4202', parentId: '4201', name: 'Level 6', subtext: 'id 4202', type: 'Level 6' },\n  { id: '4203', parentId: '4202', name: 'Level 7', subtext: 'id 4203', type: 'Level 7' },\n  { id: '4204', parentId: '4202', name: 'Level 7', subtext: 'id 4204', type: 'Level 7' },\n  { id: '4205', parentId: '4201', name: 'Level 6', subtext: 'id 4205', type: 'Level 6' },\n  { id: '4206', parentId: '4205', name: 'Level 7', subtext: 'id 4206', type: 'Level 7' },\n  { id: '4207', parentId: '4205', name: 'Level 7', subtext: 'id 4207', type: 'Level 7' },\n  { id: '4208', parentId: '4205', name: 'Level 7', subtext: 'id 4208', type: 'Level 7' },\n  { id: '4209', parentId: '4205', name: 'Level 7', subtext: 'id 4209', type: 'Level 7' },\n  { id: '4210', parentId: '4205', name: 'Level 7', subtext: 'id 4210', type: 'Level 7' },\n  { id: '4211', parentId: '4201', name: 'Level 6', subtext: 'id 4211', type: 'Level 6' },\n  { id: '4212', parentId: '4211', name: 'Level 7', subtext: 'id 4212', type: 'Level 7' },\n  { id: '4213', parentId: '4211', name: 'Level 7', subtext: 'id 4213', type: 'Level 7' },\n  { id: '4214', parentId: '4211', name: 'Level 7', subtext: 'id 4214', type: 'Level 7' },\n  { id: '4215', parentId: '4201', name: 'Level 6', subtext: 'id 4215', type: 'Level 6' },\n  { id: '4216', parentId: '4215', name: 'Level 7', subtext: 'id 4216', type: 'Level 7' },\n  { id: '4217', parentId: '4215', name: 'Level 7', subtext: 'id 4217', type: 'Level 7' },\n  { id: '4218', parentId: '4215', name: 'Level 7', subtext: 'id 4218', type: 'Level 7' },\n  { id: '4219', parentId: '4201', name: 'Level 6', subtext: 'id 4219', type: 'Level 6' },\n  { id: '4220', parentId: '4219', name: 'Level 7', subtext: 'id 4220', type: 'Level 7' },\n  { id: '4221', parentId: '4219', name: 'Level 7', subtext: 'id 4221', type: 'Level 7' },\n  { id: '4222', parentId: '4219', name: 'Level 7', subtext: 'id 4222', type: 'Level 7' },\n  { id: '4223', parentId: '4219', name: 'Level 7', subtext: 'id 4223', type: 'Level 7' },\n  { id: '4224', parentId: '4200', name: 'Level 5', subtext: 'id 4224', type: 'Level 5' },\n  { id: '4225', parentId: '4224', name: 'Level 6', subtext: 'id 4225', type: 'Level 6' },\n  { id: '4226', parentId: '4225', name: 'Level 7', subtext: 'id 4226', type: 'Level 7' },\n  { id: '4227', parentId: '4225', name: 'Level 7', subtext: 'id 4227', type: 'Level 7' },\n  { id: '4228', parentId: '4225', name: 'Level 7', subtext: 'id 4228', type: 'Level 7' },\n  { id: '4229', parentId: '4225', name: 'Level 7', subtext: 'id 4229', type: 'Level 7' },\n  { id: '4230', parentId: '4225', name: 'Level 7', subtext: 'id 4230', type: 'Level 7' },\n  { id: '4231', parentId: '4200', name: 'Level 5', subtext: 'id 4231', type: 'Level 5' },\n  { id: '4232', parentId: '4231', name: 'Level 6', subtext: 'id 4232', type: 'Level 6' },\n  { id: '4233', parentId: '4232', name: 'Level 7', subtext: 'id 4233', type: 'Level 7' },\n  { id: '4234', parentId: '4232', name: 'Level 7', subtext: 'id 4234', type: 'Level 7' },\n  { id: '4235', parentId: '4231', name: 'Level 6', subtext: 'id 4235', type: 'Level 6' },\n  { id: '4236', parentId: '4235', name: 'Level 7', subtext: 'id 4236', type: 'Level 7' },\n  { id: '4237', parentId: '4235', name: 'Level 7', subtext: 'id 4237', type: 'Level 7' },\n  { id: '4238', parentId: '4231', name: 'Level 6', subtext: 'id 4238', type: 'Level 6' },\n  { id: '4239', parentId: '4238', name: 'Level 7', subtext: 'id 4239', type: 'Level 7' },\n  { id: '4240', parentId: '4238', name: 'Level 7', subtext: 'id 4240', type: 'Level 7' },\n  { id: '4241', parentId: '4238', name: 'Level 7', subtext: 'id 4241', type: 'Level 7' },\n  { id: '4242', parentId: '4238', name: 'Level 7', subtext: 'id 4242', type: 'Level 7' },\n  { id: '4243', parentId: '4238', name: 'Level 7', subtext: 'id 4243', type: 'Level 7' },\n  { id: '4244', parentId: '4231', name: 'Level 6', subtext: 'id 4244', type: 'Level 6' },\n  { id: '4245', parentId: '4244', name: 'Level 7', subtext: 'id 4245', type: 'Level 7' },\n  { id: '4246', parentId: '4244', name: 'Level 7', subtext: 'id 4246', type: 'Level 7' },\n  { id: '4247', parentId: '4244', name: 'Level 7', subtext: 'id 4247', type: 'Level 7' },\n  { id: '4248', parentId: '4244', name: 'Level 7', subtext: 'id 4248', type: 'Level 7' },\n  { id: '4249', parentId: '4200', name: 'Level 5', subtext: 'id 4249', type: 'Level 5' },\n  { id: '4250', parentId: '4249', name: 'Level 6', subtext: 'id 4250', type: 'Level 6' },\n  { id: '4251', parentId: '4250', name: 'Level 7', subtext: 'id 4251', type: 'Level 7' },\n  { id: '4252', parentId: '4250', name: 'Level 7', subtext: 'id 4252', type: 'Level 7' },\n  { id: '4253', parentId: '4250', name: 'Level 7', subtext: 'id 4253', type: 'Level 7' },\n  { id: '4254', parentId: '4250', name: 'Level 7', subtext: 'id 4254', type: 'Level 7' },\n  { id: '4255', parentId: '4250', name: 'Level 7', subtext: 'id 4255', type: 'Level 7' },\n  { id: '4256', parentId: '4249', name: 'Level 6', subtext: 'id 4256', type: 'Level 6' },\n  { id: '4257', parentId: '4256', name: 'Level 7', subtext: 'id 4257', type: 'Level 7' },\n  { id: '4258', parentId: '4256', name: 'Level 7', subtext: 'id 4258', type: 'Level 7' },\n  { id: '4259', parentId: '4256', name: 'Level 7', subtext: 'id 4259', type: 'Level 7' },\n  { id: '4260', parentId: '4256', name: 'Level 7', subtext: 'id 4260', type: 'Level 7' },\n  { id: '4261', parentId: '4256', name: 'Level 7', subtext: 'id 4261', type: 'Level 7' },\n  { id: '4262', parentId: '4249', name: 'Level 6', subtext: 'id 4262', type: 'Level 6' },\n  { id: '4263', parentId: '4262', name: 'Level 7', subtext: 'id 4263', type: 'Level 7' },\n  { id: '4264', parentId: '4262', name: 'Level 7', subtext: 'id 4264', type: 'Level 7' },\n  { id: '4265', parentId: '4262', name: 'Level 7', subtext: 'id 4265', type: 'Level 7' },\n  { id: '4266', parentId: '4262', name: 'Level 7', subtext: 'id 4266', type: 'Level 7' },\n  { id: '4267', parentId: '4249', name: 'Level 6', subtext: 'id 4267', type: 'Level 6' },\n  { id: '4268', parentId: '4267', name: 'Level 7', subtext: 'id 4268', type: 'Level 7' },\n  { id: '4269', parentId: '4267', name: 'Level 7', subtext: 'id 4269', type: 'Level 7' },\n  { id: '4270', parentId: '4267', name: 'Level 7', subtext: 'id 4270', type: 'Level 7' },\n  { id: '4271', parentId: '4249', name: 'Level 6', subtext: 'id 4271', type: 'Level 6' },\n  { id: '4272', parentId: '4271', name: 'Level 7', subtext: 'id 4272', type: 'Level 7' },\n  { id: '4273', parentId: '4271', name: 'Level 7', subtext: 'id 4273', type: 'Level 7' },\n  { id: '4274', parentId: '4271', name: 'Level 7', subtext: 'id 4274', type: 'Level 7' },\n  { id: '4275', parentId: '4271', name: 'Level 7', subtext: 'id 4275', type: 'Level 7' },\n  { id: '4276', parentId: '4271', name: 'Level 7', subtext: 'id 4276', type: 'Level 7' },\n  { id: '4277', parentId: '3860', name: 'Level 3', subtext: 'id 4277', type: 'Level 3' },\n  { id: '4278', parentId: '4277', name: 'Level 4', subtext: 'id 4278', type: 'Level 4' },\n  { id: '4279', parentId: '4278', name: 'Level 5', subtext: 'id 4279', type: 'Level 5' },\n  { id: '4280', parentId: '4279', name: 'Level 6', subtext: 'id 4280', type: 'Level 6' },\n  { id: '4281', parentId: '4280', name: 'Level 7', subtext: 'id 4281', type: 'Level 7' },\n  { id: '4282', parentId: '4280', name: 'Level 7', subtext: 'id 4282', type: 'Level 7' },\n  { id: '4283', parentId: '4280', name: 'Level 7', subtext: 'id 4283', type: 'Level 7' },\n  { id: '4284', parentId: '4279', name: 'Level 6', subtext: 'id 4284', type: 'Level 6' },\n  { id: '4285', parentId: '4284', name: 'Level 7', subtext: 'id 4285', type: 'Level 7' },\n  { id: '4286', parentId: '4284', name: 'Level 7', subtext: 'id 4286', type: 'Level 7' },\n  { id: '4287', parentId: '4284', name: 'Level 7', subtext: 'id 4287', type: 'Level 7' },\n  { id: '4288', parentId: '4284', name: 'Level 7', subtext: 'id 4288', type: 'Level 7' },\n  { id: '4289', parentId: '4279', name: 'Level 6', subtext: 'id 4289', type: 'Level 6' },\n  { id: '4290', parentId: '4289', name: 'Level 7', subtext: 'id 4290', type: 'Level 7' },\n  { id: '4291', parentId: '4279', name: 'Level 6', subtext: 'id 4291', type: 'Level 6' },\n  { id: '4292', parentId: '4291', name: 'Level 7', subtext: 'id 4292', type: 'Level 7' },\n  { id: '4293', parentId: '4291', name: 'Level 7', subtext: 'id 4293', type: 'Level 7' },\n  { id: '4294', parentId: '4291', name: 'Level 7', subtext: 'id 4294', type: 'Level 7' },\n  { id: '4295', parentId: '4279', name: 'Level 6', subtext: 'id 4295', type: 'Level 6' },\n  { id: '4296', parentId: '4295', name: 'Level 7', subtext: 'id 4296', type: 'Level 7' },\n  { id: '4297', parentId: '4295', name: 'Level 7', subtext: 'id 4297', type: 'Level 7' },\n  { id: '4298', parentId: '4278', name: 'Level 5', subtext: 'id 4298', type: 'Level 5' },\n  { id: '4299', parentId: '4298', name: 'Level 6', subtext: 'id 4299', type: 'Level 6' },\n  { id: '4300', parentId: '4299', name: 'Level 7', subtext: 'id 4300', type: 'Level 7' },\n  { id: '4301', parentId: '4299', name: 'Level 7', subtext: 'id 4301', type: 'Level 7' },\n  { id: '4302', parentId: '4299', name: 'Level 7', subtext: 'id 4302', type: 'Level 7' },\n  { id: '4303', parentId: '4299', name: 'Level 7', subtext: 'id 4303', type: 'Level 7' },\n  { id: '4304', parentId: '4298', name: 'Level 6', subtext: 'id 4304', type: 'Level 6' },\n  { id: '4305', parentId: '4304', name: 'Level 7', subtext: 'id 4305', type: 'Level 7' },\n  { id: '4306', parentId: '4304', name: 'Level 7', subtext: 'id 4306', type: 'Level 7' },\n  { id: '4307', parentId: '4304', name: 'Level 7', subtext: 'id 4307', type: 'Level 7' },\n  { id: '4308', parentId: '4304', name: 'Level 7', subtext: 'id 4308', type: 'Level 7' },\n  { id: '4309', parentId: '4304', name: 'Level 7', subtext: 'id 4309', type: 'Level 7' },\n  { id: '4310', parentId: '4298', name: 'Level 6', subtext: 'id 4310', type: 'Level 6' },\n  { id: '4311', parentId: '4310', name: 'Level 7', subtext: 'id 4311', type: 'Level 7' },\n  { id: '4312', parentId: '4310', name: 'Level 7', subtext: 'id 4312', type: 'Level 7' },\n  { id: '4313', parentId: '4310', name: 'Level 7', subtext: 'id 4313', type: 'Level 7' },\n  { id: '4314', parentId: '4298', name: 'Level 6', subtext: 'id 4314', type: 'Level 6' },\n  { id: '4315', parentId: '4314', name: 'Level 7', subtext: 'id 4315', type: 'Level 7' },\n  { id: '4316', parentId: '4314', name: 'Level 7', subtext: 'id 4316', type: 'Level 7' },\n  { id: '4317', parentId: '4298', name: 'Level 6', subtext: 'id 4317', type: 'Level 6' },\n  { id: '4318', parentId: '4317', name: 'Level 7', subtext: 'id 4318', type: 'Level 7' },\n  { id: '4319', parentId: '4317', name: 'Level 7', subtext: 'id 4319', type: 'Level 7' },\n  { id: '4320', parentId: '4317', name: 'Level 7', subtext: 'id 4320', type: 'Level 7' },\n  { id: '4321', parentId: '4277', name: 'Level 4', subtext: 'id 4321', type: 'Level 4' },\n  { id: '4322', parentId: '4321', name: 'Level 5', subtext: 'id 4322', type: 'Level 5' },\n  { id: '4323', parentId: '4322', name: 'Level 6', subtext: 'id 4323', type: 'Level 6' },\n  { id: '4324', parentId: '4323', name: 'Level 7', subtext: 'id 4324', type: 'Level 7' },\n  { id: '4325', parentId: '4323', name: 'Level 7', subtext: 'id 4325', type: 'Level 7' },\n  { id: '4326', parentId: '4322', name: 'Level 6', subtext: 'id 4326', type: 'Level 6' },\n  { id: '4327', parentId: '4326', name: 'Level 7', subtext: 'id 4327', type: 'Level 7' },\n  { id: '4328', parentId: '4326', name: 'Level 7', subtext: 'id 4328', type: 'Level 7' },\n  { id: '4329', parentId: '4326', name: 'Level 7', subtext: 'id 4329', type: 'Level 7' },\n  { id: '4330', parentId: '4326', name: 'Level 7', subtext: 'id 4330', type: 'Level 7' },\n  { id: '4331', parentId: '4326', name: 'Level 7', subtext: 'id 4331', type: 'Level 7' },\n  { id: '4332', parentId: '4322', name: 'Level 6', subtext: 'id 4332', type: 'Level 6' },\n  { id: '4333', parentId: '4332', name: 'Level 7', subtext: 'id 4333', type: 'Level 7' },\n  { id: '4334', parentId: '4332', name: 'Level 7', subtext: 'id 4334', type: 'Level 7' },\n  { id: '4335', parentId: '4332', name: 'Level 7', subtext: 'id 4335', type: 'Level 7' },\n  { id: '4336', parentId: '4322', name: 'Level 6', subtext: 'id 4336', type: 'Level 6' },\n  { id: '4337', parentId: '4336', name: 'Level 7', subtext: 'id 4337', type: 'Level 7' },\n  { id: '4338', parentId: '4336', name: 'Level 7', subtext: 'id 4338', type: 'Level 7' },\n  { id: '4339', parentId: '4321', name: 'Level 5', subtext: 'id 4339', type: 'Level 5' },\n  { id: '4340', parentId: '4339', name: 'Level 6', subtext: 'id 4340', type: 'Level 6' },\n  { id: '4341', parentId: '4340', name: 'Level 7', subtext: 'id 4341', type: 'Level 7' },\n  { id: '4342', parentId: '4340', name: 'Level 7', subtext: 'id 4342', type: 'Level 7' },\n  { id: '4343', parentId: '4339', name: 'Level 6', subtext: 'id 4343', type: 'Level 6' },\n  { id: '4344', parentId: '4343', name: 'Level 7', subtext: 'id 4344', type: 'Level 7' },\n  { id: '4345', parentId: '4343', name: 'Level 7', subtext: 'id 4345', type: 'Level 7' },\n  { id: '4346', parentId: '4343', name: 'Level 7', subtext: 'id 4346', type: 'Level 7' },\n  { id: '4347', parentId: '4343', name: 'Level 7', subtext: 'id 4347', type: 'Level 7' },\n  { id: '4348', parentId: '4343', name: 'Level 7', subtext: 'id 4348', type: 'Level 7' },\n  { id: '4349', parentId: '4321', name: 'Level 5', subtext: 'id 4349', type: 'Level 5' },\n  { id: '4350', parentId: '4349', name: 'Level 6', subtext: 'id 4350', type: 'Level 6' },\n  { id: '4351', parentId: '4350', name: 'Level 7', subtext: 'id 4351', type: 'Level 7' },\n  { id: '4352', parentId: '4350', name: 'Level 7', subtext: 'id 4352', type: 'Level 7' },\n  { id: '4353', parentId: '4350', name: 'Level 7', subtext: 'id 4353', type: 'Level 7' },\n  { id: '4354', parentId: '4350', name: 'Level 7', subtext: 'id 4354', type: 'Level 7' },\n  { id: '4355', parentId: '4349', name: 'Level 6', subtext: 'id 4355', type: 'Level 6' },\n  { id: '4356', parentId: '4355', name: 'Level 7', subtext: 'id 4356', type: 'Level 7' },\n  { id: '4357', parentId: '3860', name: 'Level 3', subtext: 'id 4357', type: 'Level 3' },\n  { id: '4358', parentId: '4357', name: 'Level 4', subtext: 'id 4358', type: 'Level 4' },\n  { id: '4359', parentId: '4358', name: 'Level 5', subtext: 'id 4359', type: 'Level 5' },\n  { id: '4360', parentId: '4359', name: 'Level 6', subtext: 'id 4360', type: 'Level 6' },\n  { id: '4361', parentId: '4360', name: 'Level 7', subtext: 'id 4361', type: 'Level 7' },\n  { id: '4362', parentId: '4359', name: 'Level 6', subtext: 'id 4362', type: 'Level 6' },\n  { id: '4363', parentId: '4362', name: 'Level 7', subtext: 'id 4363', type: 'Level 7' },\n  { id: '4364', parentId: '4359', name: 'Level 6', subtext: 'id 4364', type: 'Level 6' },\n  { id: '4365', parentId: '4364', name: 'Level 7', subtext: 'id 4365', type: 'Level 7' },\n  { id: '4366', parentId: '4364', name: 'Level 7', subtext: 'id 4366', type: 'Level 7' },\n  { id: '4367', parentId: '4364', name: 'Level 7', subtext: 'id 4367', type: 'Level 7' },\n  { id: '4368', parentId: '4364', name: 'Level 7', subtext: 'id 4368', type: 'Level 7' },\n  { id: '4369', parentId: '4359', name: 'Level 6', subtext: 'id 4369', type: 'Level 6' },\n  { id: '4370', parentId: '4369', name: 'Level 7', subtext: 'id 4370', type: 'Level 7' },\n  { id: '4371', parentId: '4369', name: 'Level 7', subtext: 'id 4371', type: 'Level 7' },\n  { id: '4372', parentId: '4369', name: 'Level 7', subtext: 'id 4372', type: 'Level 7' },\n  { id: '4373', parentId: '4369', name: 'Level 7', subtext: 'id 4373', type: 'Level 7' },\n  { id: '4374', parentId: '4359', name: 'Level 6', subtext: 'id 4374', type: 'Level 6' },\n  { id: '4375', parentId: '4374', name: 'Level 7', subtext: 'id 4375', type: 'Level 7' },\n  { id: '4376', parentId: '4374', name: 'Level 7', subtext: 'id 4376', type: 'Level 7' },\n  { id: '4377', parentId: '4357', name: 'Level 4', subtext: 'id 4377', type: 'Level 4' },\n  { id: '4378', parentId: '4377', name: 'Level 5', subtext: 'id 4378', type: 'Level 5' },\n  { id: '4379', parentId: '4378', name: 'Level 6', subtext: 'id 4379', type: 'Level 6' },\n  { id: '4380', parentId: '4379', name: 'Level 7', subtext: 'id 4380', type: 'Level 7' },\n  { id: '4381', parentId: '4379', name: 'Level 7', subtext: 'id 4381', type: 'Level 7' },\n  { id: '4382', parentId: '4377', name: 'Level 5', subtext: 'id 4382', type: 'Level 5' },\n  { id: '4383', parentId: '4382', name: 'Level 6', subtext: 'id 4383', type: 'Level 6' },\n  { id: '4384', parentId: '4383', name: 'Level 7', subtext: 'id 4384', type: 'Level 7' },\n  { id: '4385', parentId: '4383', name: 'Level 7', subtext: 'id 4385', type: 'Level 7' },\n  { id: '4386', parentId: '4383', name: 'Level 7', subtext: 'id 4386', type: 'Level 7' },\n  { id: '4387', parentId: '4383', name: 'Level 7', subtext: 'id 4387', type: 'Level 7' },\n  { id: '4388', parentId: '4383', name: 'Level 7', subtext: 'id 4388', type: 'Level 7' },\n  { id: '4389', parentId: '4382', name: 'Level 6', subtext: 'id 4389', type: 'Level 6' },\n  { id: '4390', parentId: '4389', name: 'Level 7', subtext: 'id 4390', type: 'Level 7' },\n  { id: '4391', parentId: '4389', name: 'Level 7', subtext: 'id 4391', type: 'Level 7' },\n  { id: '4392', parentId: '4389', name: 'Level 7', subtext: 'id 4392', type: 'Level 7' },\n  { id: '4393', parentId: '4389', name: 'Level 7', subtext: 'id 4393', type: 'Level 7' },\n  { id: '4394', parentId: '4389', name: 'Level 7', subtext: 'id 4394', type: 'Level 7' },\n  { id: '4395', parentId: '4377', name: 'Level 5', subtext: 'id 4395', type: 'Level 5' },\n  { id: '4396', parentId: '4395', name: 'Level 6', subtext: 'id 4396', type: 'Level 6' },\n  { id: '4397', parentId: '4396', name: 'Level 7', subtext: 'id 4397', type: 'Level 7' },\n  { id: '4398', parentId: '4396', name: 'Level 7', subtext: 'id 4398', type: 'Level 7' },\n  { id: '4399', parentId: '4396', name: 'Level 7', subtext: 'id 4399', type: 'Level 7' },\n  { id: '4400', parentId: '4396', name: 'Level 7', subtext: 'id 4400', type: 'Level 7' },\n  { id: '4401', parentId: '4395', name: 'Level 6', subtext: 'id 4401', type: 'Level 6' },\n  { id: '4402', parentId: '4401', name: 'Level 7', subtext: 'id 4402', type: 'Level 7' },\n  { id: '4403', parentId: '4401', name: 'Level 7', subtext: 'id 4403', type: 'Level 7' },\n  { id: '4404', parentId: '4401', name: 'Level 7', subtext: 'id 4404', type: 'Level 7' },\n  { id: '4405', parentId: '4395', name: 'Level 6', subtext: 'id 4405', type: 'Level 6' },\n  { id: '4406', parentId: '4405', name: 'Level 7', subtext: 'id 4406', type: 'Level 7' },\n  { id: '4407', parentId: '4405', name: 'Level 7', subtext: 'id 4407', type: 'Level 7' },\n  { id: '4408', parentId: '4405', name: 'Level 7', subtext: 'id 4408', type: 'Level 7' },\n  { id: '4409', parentId: '4395', name: 'Level 6', subtext: 'id 4409', type: 'Level 6' },\n  { id: '4410', parentId: '4409', name: 'Level 7', subtext: 'id 4410', type: 'Level 7' },\n  { id: '4411', parentId: '4377', name: 'Level 5', subtext: 'id 4411', type: 'Level 5' },\n  { id: '4412', parentId: '4411', name: 'Level 6', subtext: 'id 4412', type: 'Level 6' },\n  { id: '4413', parentId: '4412', name: 'Level 7', subtext: 'id 4413', type: 'Level 7' },\n  { id: '4414', parentId: '4412', name: 'Level 7', subtext: 'id 4414', type: 'Level 7' },\n  { id: '4415', parentId: '4412', name: 'Level 7', subtext: 'id 4415', type: 'Level 7' },\n  { id: '4416', parentId: '4412', name: 'Level 7', subtext: 'id 4416', type: 'Level 7' },\n  { id: '4417', parentId: '4412', name: 'Level 7', subtext: 'id 4417', type: 'Level 7' },\n  { id: '4418', parentId: '4411', name: 'Level 6', subtext: 'id 4418', type: 'Level 6' },\n  { id: '4419', parentId: '4418', name: 'Level 7', subtext: 'id 4419', type: 'Level 7' },\n  { id: '4420', parentId: '4411', name: 'Level 6', subtext: 'id 4420', type: 'Level 6' },\n  { id: '4421', parentId: '4420', name: 'Level 7', subtext: 'id 4421', type: 'Level 7' },\n  { id: '4422', parentId: '4411', name: 'Level 6', subtext: 'id 4422', type: 'Level 6' },\n  { id: '4423', parentId: '4422', name: 'Level 7', subtext: 'id 4423', type: 'Level 7' },\n  { id: '4424', parentId: '4411', name: 'Level 6', subtext: 'id 4424', type: 'Level 6' },\n  { id: '4425', parentId: '4424', name: 'Level 7', subtext: 'id 4425', type: 'Level 7' },\n  { id: '4426', parentId: '4424', name: 'Level 7', subtext: 'id 4426', type: 'Level 7' },\n  { id: '4427', parentId: '4357', name: 'Level 4', subtext: 'id 4427', type: 'Level 4' },\n  { id: '4428', parentId: '4427', name: 'Level 5', subtext: 'id 4428', type: 'Level 5' },\n  { id: '4429', parentId: '4428', name: 'Level 6', subtext: 'id 4429', type: 'Level 6' },\n  { id: '4430', parentId: '4429', name: 'Level 7', subtext: 'id 4430', type: 'Level 7' },\n  { id: '4431', parentId: '4428', name: 'Level 6', subtext: 'id 4431', type: 'Level 6' },\n  { id: '4432', parentId: '4431', name: 'Level 7', subtext: 'id 4432', type: 'Level 7' },\n  { id: '4433', parentId: '4431', name: 'Level 7', subtext: 'id 4433', type: 'Level 7' },\n  { id: '4434', parentId: '4431', name: 'Level 7', subtext: 'id 4434', type: 'Level 7' },\n  { id: '4435', parentId: '4431', name: 'Level 7', subtext: 'id 4435', type: 'Level 7' },\n  { id: '4436', parentId: '4427', name: 'Level 5', subtext: 'id 4436', type: 'Level 5' },\n  { id: '4437', parentId: '4436', name: 'Level 6', subtext: 'id 4437', type: 'Level 6' },\n  { id: '4438', parentId: '4437', name: 'Level 7', subtext: 'id 4438', type: 'Level 7' },\n  { id: '4439', parentId: '4437', name: 'Level 7', subtext: 'id 4439', type: 'Level 7' },\n  { id: '4440', parentId: '4437', name: 'Level 7', subtext: 'id 4440', type: 'Level 7' },\n  { id: '4441', parentId: '4437', name: 'Level 7', subtext: 'id 4441', type: 'Level 7' },\n  { id: '4442', parentId: '4436', name: 'Level 6', subtext: 'id 4442', type: 'Level 6' },\n  { id: '4443', parentId: '4442', name: 'Level 7', subtext: 'id 4443', type: 'Level 7' },\n  { id: '4444', parentId: '4442', name: 'Level 7', subtext: 'id 4444', type: 'Level 7' },\n  { id: '4445', parentId: '4442', name: 'Level 7', subtext: 'id 4445', type: 'Level 7' },\n  { id: '4446', parentId: '4442', name: 'Level 7', subtext: 'id 4446', type: 'Level 7' },\n  { id: '4447', parentId: '4436', name: 'Level 6', subtext: 'id 4447', type: 'Level 6' },\n  { id: '4448', parentId: '4447', name: 'Level 7', subtext: 'id 4448', type: 'Level 7' },\n  { id: '4449', parentId: '4447', name: 'Level 7', subtext: 'id 4449', type: 'Level 7' },\n  { id: '4450', parentId: '4447', name: 'Level 7', subtext: 'id 4450', type: 'Level 7' },\n  { id: '4451', parentId: '4436', name: 'Level 6', subtext: 'id 4451', type: 'Level 6' },\n  { id: '4452', parentId: '4451', name: 'Level 7', subtext: 'id 4452', type: 'Level 7' },\n  { id: '4453', parentId: '4451', name: 'Level 7', subtext: 'id 4453', type: 'Level 7' },\n  { id: '4454', parentId: '4451', name: 'Level 7', subtext: 'id 4454', type: 'Level 7' },\n  { id: '4455', parentId: '4436', name: 'Level 6', subtext: 'id 4455', type: 'Level 6' },\n  { id: '4456', parentId: '4455', name: 'Level 7', subtext: 'id 4456', type: 'Level 7' },\n  { id: '4457', parentId: '4455', name: 'Level 7', subtext: 'id 4457', type: 'Level 7' },\n  { id: '4458', parentId: '4455', name: 'Level 7', subtext: 'id 4458', type: 'Level 7' },\n  { id: '4459', parentId: '4455', name: 'Level 7', subtext: 'id 4459', type: 'Level 7' },\n  { id: '4460', parentId: '4455', name: 'Level 7', subtext: 'id 4460', type: 'Level 7' },\n  { id: '4461', parentId: '4357', name: 'Level 4', subtext: 'id 4461', type: 'Level 4' },\n  { id: '4462', parentId: '4461', name: 'Level 5', subtext: 'id 4462', type: 'Level 5' },\n  { id: '4463', parentId: '4462', name: 'Level 6', subtext: 'id 4463', type: 'Level 6' },\n  { id: '4464', parentId: '4463', name: 'Level 7', subtext: 'id 4464', type: 'Level 7' },\n  { id: '4465', parentId: '4463', name: 'Level 7', subtext: 'id 4465', type: 'Level 7' },\n  { id: '4466', parentId: '4463', name: 'Level 7', subtext: 'id 4466', type: 'Level 7' },\n  { id: '4467', parentId: '4463', name: 'Level 7', subtext: 'id 4467', type: 'Level 7' },\n  { id: '4468', parentId: '4462', name: 'Level 6', subtext: 'id 4468', type: 'Level 6' },\n  { id: '4469', parentId: '4468', name: 'Level 7', subtext: 'id 4469', type: 'Level 7' },\n  { id: '4470', parentId: '4468', name: 'Level 7', subtext: 'id 4470', type: 'Level 7' },\n  { id: '4471', parentId: '4468', name: 'Level 7', subtext: 'id 4471', type: 'Level 7' },\n  { id: '4472', parentId: '4468', name: 'Level 7', subtext: 'id 4472', type: 'Level 7' },\n  { id: '4473', parentId: '4468', name: 'Level 7', subtext: 'id 4473', type: 'Level 7' },\n  { id: '4474', parentId: '4461', name: 'Level 5', subtext: 'id 4474', type: 'Level 5' },\n  { id: '4475', parentId: '4474', name: 'Level 6', subtext: 'id 4475', type: 'Level 6' },\n  { id: '4476', parentId: '4475', name: 'Level 7', subtext: 'id 4476', type: 'Level 7' },\n  { id: '4477', parentId: '4475', name: 'Level 7', subtext: 'id 4477', type: 'Level 7' },\n  { id: '4478', parentId: '4475', name: 'Level 7', subtext: 'id 4478', type: 'Level 7' },\n  { id: '4479', parentId: '4475', name: 'Level 7', subtext: 'id 4479', type: 'Level 7' },\n  { id: '4480', parentId: '4475', name: 'Level 7', subtext: 'id 4480', type: 'Level 7' },\n  { id: '4481', parentId: '4474', name: 'Level 6', subtext: 'id 4481', type: 'Level 6' },\n  { id: '4482', parentId: '4481', name: 'Level 7', subtext: 'id 4482', type: 'Level 7' },\n  { id: '4483', parentId: '4481', name: 'Level 7', subtext: 'id 4483', type: 'Level 7' },\n  { id: '4484', parentId: '4481', name: 'Level 7', subtext: 'id 4484', type: 'Level 7' },\n  { id: '4485', parentId: '4474', name: 'Level 6', subtext: 'id 4485', type: 'Level 6' },\n  { id: '4486', parentId: '4485', name: 'Level 7', subtext: 'id 4486', type: 'Level 7' },\n  { id: '4487', parentId: '4485', name: 'Level 7', subtext: 'id 4487', type: 'Level 7' },\n  { id: '4488', parentId: '4485', name: 'Level 7', subtext: 'id 4488', type: 'Level 7' },\n  { id: '4489', parentId: '4485', name: 'Level 7', subtext: 'id 4489', type: 'Level 7' },\n  { id: '4490', parentId: '4485', name: 'Level 7', subtext: 'id 4490', type: 'Level 7' },\n  { id: '4491', parentId: '4474', name: 'Level 6', subtext: 'id 4491', type: 'Level 6' },\n  { id: '4492', parentId: '4491', name: 'Level 7', subtext: 'id 4492', type: 'Level 7' },\n  { id: '4493', parentId: '4491', name: 'Level 7', subtext: 'id 4493', type: 'Level 7' },\n  { id: '4494', parentId: '4491', name: 'Level 7', subtext: 'id 4494', type: 'Level 7' },\n  { id: '4495', parentId: '4461', name: 'Level 5', subtext: 'id 4495', type: 'Level 5' },\n  { id: '4496', parentId: '4495', name: 'Level 6', subtext: 'id 4496', type: 'Level 6' },\n  { id: '4497', parentId: '4496', name: 'Level 7', subtext: 'id 4497', type: 'Level 7' },\n  { id: '4498', parentId: '4496', name: 'Level 7', subtext: 'id 4498', type: 'Level 7' },\n  { id: '4499', parentId: '4496', name: 'Level 7', subtext: 'id 4499', type: 'Level 7' },\n  { id: '4500', parentId: '4496', name: 'Level 7', subtext: 'id 4500', type: 'Level 7' },\n  { id: '4501', parentId: '4496', name: 'Level 7', subtext: 'id 4501', type: 'Level 7' },\n  { id: '4502', parentId: '4495', name: 'Level 6', subtext: 'id 4502', type: 'Level 6' },\n  { id: '4503', parentId: '4502', name: 'Level 7', subtext: 'id 4503', type: 'Level 7' },\n  { id: '4504', parentId: '4502', name: 'Level 7', subtext: 'id 4504', type: 'Level 7' },\n  { id: '4505', parentId: '4495', name: 'Level 6', subtext: 'id 4505', type: 'Level 6' },\n  { id: '4506', parentId: '4505', name: 'Level 7', subtext: 'id 4506', type: 'Level 7' },\n  { id: '4507', parentId: '4505', name: 'Level 7', subtext: 'id 4507', type: 'Level 7' },\n  { id: '4508', parentId: '4505', name: 'Level 7', subtext: 'id 4508', type: 'Level 7' },\n  { id: '4509', parentId: '4495', name: 'Level 6', subtext: 'id 4509', type: 'Level 6' },\n  { id: '4510', parentId: '4509', name: 'Level 7', subtext: 'id 4510', type: 'Level 7' },\n  { id: '4511', parentId: '4495', name: 'Level 6', subtext: 'id 4511', type: 'Level 6' },\n  { id: '4512', parentId: '4511', name: 'Level 7', subtext: 'id 4512', type: 'Level 7' },\n  { id: '4513', parentId: '4511', name: 'Level 7', subtext: 'id 4513', type: 'Level 7' },\n  { id: '4514', parentId: '4461', name: 'Level 5', subtext: 'id 4514', type: 'Level 5' },\n  { id: '4515', parentId: '4514', name: 'Level 6', subtext: 'id 4515', type: 'Level 6' },\n  { id: '4516', parentId: '4515', name: 'Level 7', subtext: 'id 4516', type: 'Level 7' },\n  { id: '4517', parentId: '4515', name: 'Level 7', subtext: 'id 4517', type: 'Level 7' },\n  { id: '4518', parentId: '4515', name: 'Level 7', subtext: 'id 4518', type: 'Level 7' },\n  { id: '4519', parentId: '4515', name: 'Level 7', subtext: 'id 4519', type: 'Level 7' },\n  { id: '4520', parentId: '4514', name: 'Level 6', subtext: 'id 4520', type: 'Level 6' },\n  { id: '4521', parentId: '4520', name: 'Level 7', subtext: 'id 4521', type: 'Level 7' },\n  { id: '4522', parentId: '4514', name: 'Level 6', subtext: 'id 4522', type: 'Level 6' },\n  { id: '4523', parentId: '4522', name: 'Level 7', subtext: 'id 4523', type: 'Level 7' },\n  { id: '4524', parentId: '4522', name: 'Level 7', subtext: 'id 4524', type: 'Level 7' },\n  { id: '4525', parentId: '4522', name: 'Level 7', subtext: 'id 4525', type: 'Level 7' },\n  { id: '4526', parentId: '4522', name: 'Level 7', subtext: 'id 4526', type: 'Level 7' },\n  { id: '4527', parentId: '4522', name: 'Level 7', subtext: 'id 4527', type: 'Level 7' },\n  { id: '4528', parentId: '4514', name: 'Level 6', subtext: 'id 4528', type: 'Level 6' },\n  { id: '4529', parentId: '4528', name: 'Level 7', subtext: 'id 4529', type: 'Level 7' },\n  { id: '4530', parentId: '4528', name: 'Level 7', subtext: 'id 4530', type: 'Level 7' },\n  { id: '4531', parentId: '4528', name: 'Level 7', subtext: 'id 4531', type: 'Level 7' },\n  { id: '4532', parentId: '4528', name: 'Level 7', subtext: 'id 4532', type: 'Level 7' },\n  { id: '4533', parentId: '4528', name: 'Level 7', subtext: 'id 4533', type: 'Level 7' },\n  { id: '4534', parentId: '4514', name: 'Level 6', subtext: 'id 4534', type: 'Level 6' },\n  { id: '4535', parentId: '4534', name: 'Level 7', subtext: 'id 4535', type: 'Level 7' },\n  { id: '4536', parentId: '4461', name: 'Level 5', subtext: 'id 4536', type: 'Level 5' },\n  { id: '4537', parentId: '4536', name: 'Level 6', subtext: 'id 4537', type: 'Level 6' },\n  { id: '4538', parentId: '4537', name: 'Level 7', subtext: 'id 4538', type: 'Level 7' },\n  { id: '4539', parentId: '4537', name: 'Level 7', subtext: 'id 4539', type: 'Level 7' },\n  { id: '4540', parentId: '4537', name: 'Level 7', subtext: 'id 4540', type: 'Level 7' },\n  { id: '4541', parentId: '4537', name: 'Level 7', subtext: 'id 4541', type: 'Level 7' },\n  { id: '4542', parentId: '4537', name: 'Level 7', subtext: 'id 4542', type: 'Level 7' },\n  { id: '4543', parentId: '4536', name: 'Level 6', subtext: 'id 4543', type: 'Level 6' },\n  { id: '4544', parentId: '4543', name: 'Level 7', subtext: 'id 4544', type: 'Level 7' },\n  { id: '4545', parentId: '4543', name: 'Level 7', subtext: 'id 4545', type: 'Level 7' },\n  { id: '4546', parentId: '4543', name: 'Level 7', subtext: 'id 4546', type: 'Level 7' },\n  { id: '4547', parentId: '4543', name: 'Level 7', subtext: 'id 4547', type: 'Level 7' },\n  { id: '4548', parentId: '4543', name: 'Level 7', subtext: 'id 4548', type: 'Level 7' },\n  { id: '4549', parentId: null, name: 'Level 1', subtext: 'id 4549', type: 'Level 1' },\n  { id: '4550', parentId: '4549', name: 'Level 2', subtext: 'id 4550', type: 'Level 2' },\n  { id: '4551', parentId: '4550', name: 'Level 3', subtext: 'id 4551', type: 'Level 3' },\n  { id: '4552', parentId: '4551', name: 'Level 4', subtext: 'id 4552', type: 'Level 4' },\n  { id: '4553', parentId: '4552', name: 'Level 5', subtext: 'id 4553', type: 'Level 5' },\n  { id: '4554', parentId: '4553', name: 'Level 6', subtext: 'id 4554', type: 'Level 6' },\n  { id: '4555', parentId: '4554', name: 'Level 7', subtext: 'id 4555', type: 'Level 7' },\n  { id: '4556', parentId: '4554', name: 'Level 7', subtext: 'id 4556', type: 'Level 7' },\n  { id: '4557', parentId: '4553', name: 'Level 6', subtext: 'id 4557', type: 'Level 6' },\n  { id: '4558', parentId: '4557', name: 'Level 7', subtext: 'id 4558', type: 'Level 7' },\n  { id: '4559', parentId: '4557', name: 'Level 7', subtext: 'id 4559', type: 'Level 7' },\n  { id: '4560', parentId: '4557', name: 'Level 7', subtext: 'id 4560', type: 'Level 7' },\n  { id: '4561', parentId: '4557', name: 'Level 7', subtext: 'id 4561', type: 'Level 7' },\n  { id: '4562', parentId: '4553', name: 'Level 6', subtext: 'id 4562', type: 'Level 6' },\n  { id: '4563', parentId: '4562', name: 'Level 7', subtext: 'id 4563', type: 'Level 7' },\n  { id: '4564', parentId: '4562', name: 'Level 7', subtext: 'id 4564', type: 'Level 7' },\n  { id: '4565', parentId: '4562', name: 'Level 7', subtext: 'id 4565', type: 'Level 7' },\n  { id: '4566', parentId: '4553', name: 'Level 6', subtext: 'id 4566', type: 'Level 6' },\n  { id: '4567', parentId: '4566', name: 'Level 7', subtext: 'id 4567', type: 'Level 7' },\n  { id: '4568', parentId: '4566', name: 'Level 7', subtext: 'id 4568', type: 'Level 7' },\n  { id: '4569', parentId: '4566', name: 'Level 7', subtext: 'id 4569', type: 'Level 7' },\n  { id: '4570', parentId: '4566', name: 'Level 7', subtext: 'id 4570', type: 'Level 7' },\n  { id: '4571', parentId: '4552', name: 'Level 5', subtext: 'id 4571', type: 'Level 5' },\n  { id: '4572', parentId: '4571', name: 'Level 6', subtext: 'id 4572', type: 'Level 6' },\n  { id: '4573', parentId: '4572', name: 'Level 7', subtext: 'id 4573', type: 'Level 7' },\n  { id: '4574', parentId: '4572', name: 'Level 7', subtext: 'id 4574', type: 'Level 7' },\n  { id: '4575', parentId: '4572', name: 'Level 7', subtext: 'id 4575', type: 'Level 7' },\n  { id: '4576', parentId: '4571', name: 'Level 6', subtext: 'id 4576', type: 'Level 6' },\n  { id: '4577', parentId: '4576', name: 'Level 7', subtext: 'id 4577', type: 'Level 7' },\n  { id: '4578', parentId: '4571', name: 'Level 6', subtext: 'id 4578', type: 'Level 6' },\n  { id: '4579', parentId: '4578', name: 'Level 7', subtext: 'id 4579', type: 'Level 7' },\n  { id: '4580', parentId: '4571', name: 'Level 6', subtext: 'id 4580', type: 'Level 6' },\n  { id: '4581', parentId: '4580', name: 'Level 7', subtext: 'id 4581', type: 'Level 7' },\n  { id: '4582', parentId: '4580', name: 'Level 7', subtext: 'id 4582', type: 'Level 7' },\n  { id: '4583', parentId: '4552', name: 'Level 5', subtext: 'id 4583', type: 'Level 5' },\n  { id: '4584', parentId: '4583', name: 'Level 6', subtext: 'id 4584', type: 'Level 6' },\n  { id: '4585', parentId: '4584', name: 'Level 7', subtext: 'id 4585', type: 'Level 7' },\n  { id: '4586', parentId: '4584', name: 'Level 7', subtext: 'id 4586', type: 'Level 7' },\n\n  { id: '4587', parentId: null, name: 'Level 1', subtext: 'id 4587', type: 'Level 1' },\n  { id: '4588', parentId: null, name: 'Level 1', subtext: 'id 4588', type: 'Level 1' },\n  { id: '4589', parentId: null, name: 'Level 1', subtext: 'id 4589', type: 'Level 1' },\n  { id: '4590', parentId: null, name: 'Level 1', subtext: 'id 4590', type: 'Level 1' },\n  { id: '4591', parentId: null, name: 'Level 1', subtext: 'id 4591', type: 'Level 1' },\n  { id: '4592', parentId: null, name: 'Level 1', subtext: 'id 4592', type: 'Level 1' },\n  { id: '4593', parentId: null, name: 'Level 1', subtext: 'id 4593', type: 'Level 1' },\n  { id: '4594', parentId: null, name: 'Level 1', subtext: 'id 4594', type: 'Level 1' },\n  { id: '4595', parentId: null, name: 'Level 1', subtext: 'id 4595', type: 'Level 1' },\n  { id: '4596', parentId: null, name: 'Level 1', subtext: 'id 4596', type: 'Level 1' },\n  { id: '4597', parentId: null, name: 'Level 1', subtext: 'id 4597', type: 'Level 1' },\n  { id: '4598', parentId: null, name: 'Level 1', subtext: 'id 4598', type: 'Level 1' },\n  { id: '4599', parentId: null, name: 'Level 1', subtext: 'id 4599', type: 'Level 1' },\n  { id: '4600', parentId: null, name: 'Level 1', subtext: 'id 4600', type: 'Level 1' },\n  { id: '4601', parentId: null, name: 'Level 1', subtext: 'id 4601', type: 'Level 1' },\n  { id: '4602', parentId: null, name: 'Level 1', subtext: 'id 4602', type: 'Level 1' },\n  { id: '4603', parentId: null, name: 'Level 1', subtext: 'id 4603', type: 'Level 1' },\n  { id: '4604', parentId: null, name: 'Level 1', subtext: 'id 4604', type: 'Level 1' },\n  { id: '4605', parentId: null, name: 'Level 1', subtext: 'id 4605', type: 'Level 1' },\n  { id: '4606', parentId: null, name: 'Level 1', subtext: 'id 4606', type: 'Level 1' },\n  { id: '4607', parentId: null, name: 'Level 1', subtext: 'id 4607', type: 'Level 1' },\n  { id: '4608', parentId: null, name: 'Level 1', subtext: 'id 4608', type: 'Level 1' },\n  { id: '4609', parentId: null, name: 'Level 1', subtext: 'id 4609', type: 'Level 1' },\n  { id: '4610', parentId: null, name: 'Level 1', subtext: 'id 4610', type: 'Level 1' },\n  { id: '4611', parentId: null, name: 'Level 1', subtext: 'id 4611', type: 'Level 1' },\n  { id: '4612', parentId: null, name: 'Level 1', subtext: 'id 4612', type: 'Level 1' },\n  { id: '4613', parentId: null, name: 'Level 1', subtext: 'id 4613', type: 'Level 1' },\n  { id: '4614', parentId: null, name: 'Level 1', subtext: 'id 4614', type: 'Level 1' },\n  { id: '4615', parentId: null, name: 'Level 1', subtext: 'id 4615', type: 'Level 1' },\n  { id: '4616', parentId: null, name: 'Level 1', subtext: 'id 4616', type: 'Level 1' },\n  { id: '4617', parentId: null, name: 'Level 1', subtext: 'id 4617', type: 'Level 1' },\n  { id: '4618', parentId: null, name: 'Level 1', subtext: 'id 4618', type: 'Level 1' },\n  { id: '4619', parentId: null, name: 'Level 1', subtext: 'id 4619', type: 'Level 1' },\n  { id: '4620', parentId: null, name: 'Level 1', subtext: 'id 4620', type: 'Level 1' },\n  { id: '4621', parentId: null, name: 'Level 1', subtext: 'id 4621', type: 'Level 1' },\n  { id: '4622', parentId: null, name: 'Level 1', subtext: 'id 4622', type: 'Level 1' },\n  { id: '4623', parentId: null, name: 'Level 1', subtext: 'id 4623', type: 'Level 1' },\n  { id: '4624', parentId: null, name: 'Level 1', subtext: 'id 4624', type: 'Level 1' },\n  { id: '4625', parentId: null, name: 'Level 1', subtext: 'id 4625', type: 'Level 1' },\n  { id: '4626', parentId: null, name: 'Level 1', subtext: 'id 4626', type: 'Level 1' },\n  { id: '4627', parentId: null, name: 'Level 1', subtext: 'id 4627', type: 'Level 1' },\n  { id: '4628', parentId: null, name: 'Level 1', subtext: 'id 4628', type: 'Level 1' },\n  { id: '4629', parentId: null, name: 'Level 1', subtext: 'id 4629', type: 'Level 1' },\n  { id: '4630', parentId: null, name: 'Level 1', subtext: 'id 4630', type: 'Level 1' },\n  { id: '4631', parentId: null, name: 'Level 1', subtext: 'id 4631', type: 'Level 1' },\n  { id: '4632', parentId: null, name: 'Level 1', subtext: 'id 4632', type: 'Level 1' },\n  { id: '4633', parentId: null, name: 'Level 1', subtext: 'id 4633', type: 'Level 1' },\n  { id: '4634', parentId: null, name: 'Level 1', subtext: 'id 4634', type: 'Level 1' },\n  { id: '4635', parentId: null, name: 'Level 1', subtext: 'id 4635', type: 'Level 1' },\n  { id: '4636', parentId: null, name: 'Level 1', subtext: 'id 4636', type: 'Level 1' },\n  { id: '4637', parentId: null, name: 'Level 1', subtext: 'id 4637', type: 'Level 1' },\n  { id: '4638', parentId: null, name: 'Level 1', subtext: 'id 4638', type: 'Level 1' },\n  { id: '4639', parentId: null, name: 'Level 1', subtext: 'id 4639', type: 'Level 1' },\n  { id: '4640', parentId: null, name: 'Level 1', subtext: 'id 4640', type: 'Level 1' },\n  { id: '4641', parentId: null, name: 'Level 1', subtext: 'id 4641', type: 'Level 1' },\n  { id: '4642', parentId: null, name: 'Level 1', subtext: 'id 4642', type: 'Level 1' },\n  { id: '4643', parentId: null, name: 'Level 1', subtext: 'id 4643', type: 'Level 1' },\n  { id: '4644', parentId: null, name: 'Level 1', subtext: 'id 4644', type: 'Level 1' },\n  { id: '4645', parentId: null, name: 'Level 1', subtext: 'id 4645', type: 'Level 1' },\n  { id: '4646', parentId: null, name: 'Level 1', subtext: 'id 4646', type: 'Level 1' },\n  { id: '4647', parentId: null, name: 'Level 1', subtext: 'id 4647', type: 'Level 1' },\n  { id: '4648', parentId: null, name: 'Level 1', subtext: 'id 4648', type: 'Level 1' },\n  { id: '4649', parentId: null, name: 'Level 1', subtext: 'id 4649', type: 'Level 1' },\n  { id: '4650', parentId: null, name: 'Level 1', subtext: 'id 4650', type: 'Level 1' },\n  { id: '4651', parentId: null, name: 'Level 1', subtext: 'id 4651', type: 'Level 1' },\n  { id: '4652', parentId: null, name: 'Level 1', subtext: 'id 4652', type: 'Level 1' },\n  { id: '4653', parentId: null, name: 'Level 1', subtext: 'id 4653', type: 'Level 1' },\n  { id: '4654', parentId: null, name: 'Level 1', subtext: 'id 4654', type: 'Level 1' },\n  { id: '4655', parentId: null, name: 'Level 1', subtext: 'id 4655', type: 'Level 1' },\n  { id: '4656', parentId: null, name: 'Level 1', subtext: 'id 4656', type: 'Level 1' },\n  { id: '4657', parentId: null, name: 'Level 1', subtext: 'id 4657', type: 'Level 1' },\n  { id: '4658', parentId: null, name: 'Level 1', subtext: 'id 4658', type: 'Level 1' },\n  { id: '4659', parentId: null, name: 'Level 1', subtext: 'id 4659', type: 'Level 1' },\n]"
            },
            {
                "name": "sdsFieldWrapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/sds-formly-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['readonly', 'label', 'description', 'validation']"
            },
            {
                "name": "sdsGroupWrapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/sds-formly-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "['group']"
            },
            {
                "name": "sdsWrappers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/sds-formly-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[...sdsGroupWrapper, ...sdsFieldWrapper]"
            },
            {
                "name": "SlideInOutAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/packages/sam-formly/src/lib/formly/wrappers/form-field.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  trigger('slideInOut', [\n    state(\n      'in',\n      style({\n        'max-height': 'auto',\n        opacity: '1',\n        visibility: 'visible',\n      })\n    ),\n    state(\n      'out',\n      style({\n        'max-height': '0px',\n        opacity: '0',\n        visibility: 'hidden',\n      })\n    ),\n    transition('in => out', [\n      group([\n        animate(\n          '400ms ease-in-out',\n          style({\n            opacity: '0',\n          })\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '0px',\n          })\n        ),\n        animate(\n          '700ms ease-in-out',\n          style({\n            visibility: 'hidden',\n          })\n        ),\n      ]),\n    ]),\n    transition('out => in', [\n      group([\n        animate(\n          '1ms ease-in-out',\n          style({\n            visibility: 'visible',\n          })\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '500px',\n          })\n        ),\n        animate(\n          '800ms ease-in-out',\n          style({\n            opacity: '1',\n          })\n        ),\n      ]),\n    ]),\n  ]),\n]"
            }
        ],
        "functions": [
            {
                "name": "animationExtension",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "autocompleteRequired",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Usage:\n Override the required validator to allow autocompletes to behave more like\n the other inputs regarding error messages</p>\n<p>// In the formly config\n{\n   type: &#39;autocomplete&#39;,\n   props: {\n     required: true,\n   },\n   validators: {\n     required: autocompleteRequired\n   },</p>\n",
                "args": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "betweenDateValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "dateRangeValidator",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "deepCopy",
                "file": "libs/packages/sam-formly/src/lib/formly/services/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Given an object, create a deep copy such that no references in the two objects\noverlap</p>\n",
                "args": [
                    {
                        "name": "obj",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 107,
                            "end": 110,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "obj"
                        },
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 101,
                            "end": 106,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<ul>\n<li>object to deep copy</li>\n</ul>\n"
                    },
                    {
                        "tagName": {
                            "pos": 137,
                            "end": 144,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "returns"
                        },
                        "comment": "<ul>\n<li>the cloned object</li>\n</ul>\n"
                    }
                ]
            },
            {
                "name": "getParentHideOptional",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "invalidDateFormatValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "matDateInBetweenValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "matDatepickerMaxValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "matDatepickerMinValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "maxDateFromDateRangePicker",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "maxDateToDateRangePicker",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "maxDateValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "maxDateValidator",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 2036,
                            "end": 2043,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "control"
                        },
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2030,
                            "end": 2035,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 2054,
                            "end": 2059,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "field"
                        },
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 2048,
                            "end": 2053,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            {
                "name": "maxlengthValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "maxValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "minDateFromDateRangePicker",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "minDateToDateRangePicker",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "model",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formState",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "minDateValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "minDateValidator",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors",
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 143,
                            "end": 150,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "control"
                        },
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 137,
                            "end": 142,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    },
                    {
                        "name": {
                            "pos": 161,
                            "end": 166,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "field"
                        },
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 155,
                            "end": 160,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": ""
                    }
                ]
            },
            {
                "name": "minlengthValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "minValidationMessage",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "err",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "field",
                        "type": "FormlyFieldConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "multiCheckboxRequired",
                "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Usage:\n Override the required validator to allow multicheckbox to behave more like required atleast one item is selected\n the other inputs regarding error messages</p>\n<p>// In the formly config\n{\n   type: &#39;multicheckbox&#39;,\n   props: {\n     required: true,\n   },\n   validators: {\n     required: multiCheckboxRequired\n   },</p>\n",
                "args": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "UntypedFormControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "SdsFormlyTypes",
                "childs": [
                    {
                        "name": "INPUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "input"
                    },
                    {
                        "name": "BUTTON",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "button"
                    },
                    {
                        "name": "CHECKBOX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "checkbox"
                    },
                    {
                        "name": "MULTICHECKBOX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "multicheckbox"
                    },
                    {
                        "name": "RADIO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "radio"
                    },
                    {
                        "name": "AUTOCOMPLETE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "autocomplete"
                    },
                    {
                        "name": "DATEPICKER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "datepicker"
                    },
                    {
                        "name": "SELECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "select"
                    },
                    {
                        "name": "TEXTAREA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "textarea"
                    },
                    {
                        "name": "READONLY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "readonly"
                    },
                    {
                        "name": "DATERANGEPICKER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "daterangepicker"
                    },
                    {
                        "name": "DATERANGEPICKERV2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "daterangepickerv2"
                    },
                    {
                        "name": "FORMLYGROUP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "formly-group"
                    },
                    {
                        "name": "CUSTOMTEXT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "customtext"
                    },
                    {
                        "name": "EDITOR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "editor"
                    },
                    {
                        "name": "FILEINFO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "fileinfo"
                    },
                    {
                        "name": "SEARCH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "search"
                    },
                    {
                        "name": "FILEINPUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "fileinput"
                    },
                    {
                        "name": "TABS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "tabs"
                    },
                    {
                        "name": "RICHTEXTEDITOR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "rich-text-editor"
                    },
                    {
                        "name": "STEPARROW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "step-arrow"
                    },
                    {
                        "name": "TABLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "table"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/packages/sam-formly/src/lib/formly/models/formly-types.ts"
            },
            {
                "name": "SdsReadonlyTypes",
                "childs": [
                    {
                        "name": "INPUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "input"
                    },
                    {
                        "name": "CHECKBOX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "checkbox"
                    },
                    {
                        "name": "MULTICHECKBOX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "multicheckbox"
                    },
                    {
                        "name": "RADIO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "radio"
                    },
                    {
                        "name": "AUTOCOMPLETE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "autocomplete"
                    },
                    {
                        "name": "DATEPICKER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "datepicker"
                    },
                    {
                        "name": "SELECT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "select"
                    },
                    {
                        "name": "TEXTAREA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "textarea"
                    },
                    {
                        "name": "READONLY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "readonly"
                    },
                    {
                        "name": "DATERANGEPICKER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "daterangepicker"
                    },
                    {
                        "name": "DATERANGEPICKERV2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "daterangepickerv2"
                    },
                    {
                        "name": "FILEINFO",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "fileinfo"
                    },
                    {
                        "name": "SEARCH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "search"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "libs/packages/sam-formly/src/lib/formly/models/formly-types.ts"
            }
        ],
        "groupedVariables": {
            "libs/packages/sam-formly/src/lib/formly/formly.module.ts": [
                {
                    "name": "DATE_FORMAT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDateFormats",
                    "defaultValue": "{\n  ...MAT_NATIVE_DATE_FORMATS,\n  display: {\n    ...MAT_NATIVE_DATE_FORMATS.display,\n    dateInput: {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    } as Intl.DateTimeFormatOptions,\n  },\n}"
                }
            ],
            "libs/packages/sam-formly/src/lib/formly/formly.config.ts": [
                {
                    "name": "FIELD_TYPE_COMPONENTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  FormlyFieldInputComponent,\n  FormlyFieldCheckboxComponent,\n  FormlyFieldFileInfoComponent,\n  FormlyFieldRadioComponent,\n  FormlyFieldSelectComponent,\n  FormlyFieldTextAreaComponent,\n  FormlyFieldMultiCheckboxComponent,\n  FormlyWrapperFormFieldComponent,\n  FormlyAccordianFormFieldComponent,\n  FormlyFieldAutoCompleteComponent,\n  FormlyFieldDatePickerComponent,\n  FormlyFieldDateRangePickerComponent,\n  FormlyFormFieldFilterWrapperComponent,\n  FormlyFieldButtonComponent,\n  FormlyLabelWrapperComponent,\n  FormlyDescriptionWrapperComponent,\n  FormlyValidationWrapperComponent,\n  FormlyFieldTextComponent,\n  FormlyGroupWrapperComponent,\n  FormlyFieldSearchComponent,\n  FormlyReadonlyWrapperComponent,\n  FormlyFieldFileInputComponent,\n  FormlyTabsWrapperComponent,\n  FormlyFieldTableComponent,\n  FormlyFieldEditorComponent,\n  FormlyFieldRichTextEditorComponent,\n  FormlyFieldStepArrowComponent,\n]"
                },
                {
                    "name": "FORMLY_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigOption",
                    "defaultValue": "{\n  types: [\n    {\n      name: SdsFormlyTypes.FORMLYGROUP,\n      wrappers: sdsGroupWrapper,\n    },\n    {\n      name: SdsFormlyTypes.READONLY,\n      wrappers: sdsGroupWrapper,\n      component: FormlyReadonlyWrapperComponent,\n    },\n    {\n      name: SdsFormlyTypes.BUTTON,\n      component: FormlyFieldButtonComponent,\n    },\n    {\n      name: SdsFormlyTypes.CUSTOMTEXT,\n      component: FormlyFieldTextComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.EDITOR,\n      component: FormlyFieldEditorComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.INPUT,\n      component: FormlyFieldInputComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.CHECKBOX,\n      component: FormlyFieldCheckboxComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.FILEINFO,\n      component: FormlyFieldFileInfoComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.RADIO,\n      component: FormlyFieldRadioComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.SELECT,\n      component: FormlyFieldSelectComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.TEXTAREA,\n      component: FormlyFieldTextAreaComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.MULTICHECKBOX,\n      component: FormlyFieldMultiCheckboxComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.AUTOCOMPLETE,\n      component: FormlyFieldAutoCompleteComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.DATEPICKER,\n      component: FormlyFieldDatePickerComponent,\n      wrappers: sdsWrappers,\n      defaultOptions: {\n        validators: {\n          validation: [maxDateValidator, minDateValidator],\n        },\n      },\n    },\n    {\n      name: SdsFormlyTypes.DATERANGEPICKER,\n      extends: SdsFormlyTypes.FORMLYGROUP,\n      wrappers: sdsWrappers,\n      defaultOptions: {\n        fieldGroup: [\n          {\n            type: SdsFormlyTypes.DATEPICKER,\n            key: 'fromDate',\n            props: {\n              label: 'From',\n              placeholder:\n                'eg: ' +\n                new Date().toLocaleString('en-US', {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                }),\n            },\n            expressionProperties: {\n              'props.minDate': minDateFromDateRangePicker,\n              'props.maxDate': maxDateFromDateRangePicker,\n              'props.hideOptional': getParentHideOptional,\n            },\n          },\n          {\n            type: SdsFormlyTypes.DATEPICKER,\n            key: 'toDate',\n            props: {\n              label: 'To',\n              placeholder:\n                'eg: ' +\n                new Date().toLocaleString('en-US', {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                }),\n            },\n            expressionProperties: {\n              'props.minDate': minDateToDateRangePicker,\n              'props.maxDate': maxDateToDateRangePicker,\n              'props.hideOptional': getParentHideOptional,\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: 'daterangepickerv2',\n      component: FormlyFieldDateRangePickerComponent,\n      wrappers: sdsWrappers,\n      defaultOptions: {\n        validators: {\n          validation: [dateRangeValidator],\n        },\n        fieldGroup: [\n          {\n            key: 'fromDate',\n            props: {\n              placeholder:\n                'eg: ' +\n                new Date().toLocaleString('en-US', {\n                  month: 'short',\n                  day: 'numeric',\n                  year: 'numeric',\n                }),\n            },\n          },\n          {\n            key: 'toDate',\n            props: {\n              placeholder: new Date().toLocaleString('en-US', {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n              }),\n            },\n          },\n        ],\n      },\n    },\n    {\n      name: SdsFormlyTypes.SEARCH,\n      component: FormlyFieldSearchComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.FILEINPUT,\n      component: FormlyFieldFileInputComponent,\n      wrappers: sdsWrappers,\n    },\n    {\n      name: SdsFormlyTypes.TABLE,\n      component: FormlyFieldTableComponent,\n    },\n    {\n      name: SdsFormlyTypes.RICHTEXTEDITOR,\n      component: FormlyFieldRichTextEditorComponent,\n      wrappers: sdsWrappers,\n    },\n    { name: SdsFormlyTypes.STEPARROW, component: FormlyFieldStepArrowComponent, wrappers: sdsWrappers },\n  ],\n  wrappers: [\n    { name: 'label', component: FormlyLabelWrapperComponent },\n    { name: 'description', component: FormlyDescriptionWrapperComponent },\n    { name: 'validation', component: FormlyValidationWrapperComponent },\n    { name: 'group', component: FormlyGroupWrapperComponent },\n    { name: 'form-field', component: FormlyWrapperFormFieldComponent },\n    { name: 'accordionwrapper', component: FormlyAccordianFormFieldComponent },\n    { name: 'filterwrapper', component: FormlyFormFieldFilterWrapperComponent },\n    { name: 'readonly', component: FormlyReadonlyWrapperComponent },\n    { name: 'tabs', component: FormlyTabsWrapperComponent },\n  ],\n}"
                },
                {
                    "name": "FORMLY_WRAPPERS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "[\n  {\n    name: 'form-field',\n    component: FormlyWrapperFormFieldComponent,\n    componentName: 'FormlyWrapperFormFieldComponent',\n  },\n  {\n    name: 'accordionwrapper',\n    component: FormlyAccordianFormFieldComponent,\n    componentName: 'FormlyAccordianFormFieldComponent',\n  },\n  {\n    name: 'filterwrapper',\n    component: FormlyFormFieldFilterWrapperComponent,\n    componentName: 'FormlyFormFieldFilterWrapperComponent',\n  },\n\n  {\n    name: 'label',\n    component: FormlyLabelWrapperComponent,\n    componentName: 'FormlyLabelWrapperComponent',\n  },\n  {\n    name: 'description',\n    component: FormlyDescriptionWrapperComponent,\n    componentName: 'FormlyDescriptionWrapperComponent',\n  },\n  {\n    name: 'validation',\n    component: FormlyValidationWrapperComponent,\n    componentName: 'FormlyValidationWrapperComponent',\n  },\n  {\n    name: 'group',\n    component: FormlyGroupWrapperComponent,\n    componentName: 'FormlyGroupWrapperComponent',\n  },\n  {\n    name: 'readonly',\n    component: FormlyReadonlyWrapperComponent,\n    componentName: 'FormlyReadonlyWrapperComponent',\n  },\n  {\n    name: 'tabs',\n    component: FormlyTabsWrapperComponent,\n    componentName: 'FormlyTabsWrapperComponent',\n  },\n]"
                }
            ],
            "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.ts": [
                {
                    "name": "nextId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly-stepper/sds-stepper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "0"
                }
            ],
            "libs/packages/sam-formly/src/lib/formly/services/autocomplete-sample.data.ts": [
                {
                    "name": "SampleAutocompleteData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/services/autocomplete-sample.data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  { id: '1', parentId: null, name: 'Level 1', subtext: 'id 1', type: 'Level 1' },\n  { id: '2', parentId: '1', name: 'Level 2', subtext: 'id 2', type: 'Level 2' },\n  { id: '3', parentId: '2', name: 'Level 3', subtext: 'id 3', type: 'Level 3' },\n  { id: '4', parentId: '3', name: 'Level 4', subtext: 'id 4', type: 'Level 4' },\n  { id: '5', parentId: '4', name: 'Level 5', subtext: 'id 5', type: 'Level 5' },\n  { id: '6', parentId: '5', name: 'Level 6', subtext: 'id 6', type: 'Level 6' },\n  { id: '7', parentId: '6', name: 'Level 7', subtext: 'id 7', type: 'Level 7' },\n  { id: '8', parentId: '5', name: 'Level 6', subtext: 'id 8', type: 'Level 6' },\n  { id: '9', parentId: '8', name: 'Level 7', subtext: 'id 9', type: 'Level 7' },\n  { id: '10', parentId: '8', name: 'Level 7', subtext: 'id 10', type: 'Level 7' },\n  { id: '11', parentId: '5', name: 'Level 6', subtext: 'id 11', type: 'Level 6' },\n  { id: '12', parentId: '11', name: 'Level 7', subtext: 'id 12', type: 'Level 7' },\n  { id: '13', parentId: '11', name: 'Level 7', subtext: 'id 13', type: 'Level 7' },\n  { id: '14', parentId: '11', name: 'Level 7', subtext: 'id 14', type: 'Level 7' },\n  { id: '15', parentId: '11', name: 'Level 7', subtext: 'id 15', type: 'Level 7' },\n  { id: '16', parentId: '5', name: 'Level 6', subtext: 'id 16', type: 'Level 6' },\n  { id: '17', parentId: '16', name: 'Level 7', subtext: 'id 17', type: 'Level 7' },\n  { id: '18', parentId: '16', name: 'Level 7', subtext: 'id 18', type: 'Level 7' },\n  { id: '19', parentId: '16', name: 'Level 7', subtext: 'id 19', type: 'Level 7' },\n  { id: '20', parentId: '3', name: 'Level 4', subtext: 'id 20', type: 'Level 4' },\n  { id: '21', parentId: '20', name: 'Level 5', subtext: 'id 21', type: 'Level 5' },\n  { id: '22', parentId: '21', name: 'Level 6', subtext: 'id 22', type: 'Level 6' },\n  { id: '23', parentId: '22', name: 'Level 7', subtext: 'id 23', type: 'Level 7' },\n  { id: '24', parentId: '21', name: 'Level 6', subtext: 'id 24', type: 'Level 6' },\n  { id: '25', parentId: '24', name: 'Level 7', subtext: 'id 25', type: 'Level 7' },\n  { id: '26', parentId: '24', name: 'Level 7', subtext: 'id 26', type: 'Level 7' },\n  { id: '27', parentId: '21', name: 'Level 6', subtext: 'id 27', type: 'Level 6' },\n  { id: '28', parentId: '27', name: 'Level 7', subtext: 'id 28', type: 'Level 7' },\n  { id: '29', parentId: '27', name: 'Level 7', subtext: 'id 29', type: 'Level 7' },\n  { id: '30', parentId: '27', name: 'Level 7', subtext: 'id 30', type: 'Level 7' },\n  { id: '31', parentId: '27', name: 'Level 7', subtext: 'id 31', type: 'Level 7' },\n  { id: '32', parentId: '20', name: 'Level 5', subtext: 'id 32', type: 'Level 5' },\n  { id: '33', parentId: '32', name: 'Level 6', subtext: 'id 33', type: 'Level 6' },\n  { id: '34', parentId: '33', name: 'Level 7', subtext: 'id 34', type: 'Level 7' },\n  { id: '35', parentId: '33', name: 'Level 7', subtext: 'id 35', type: 'Level 7' },\n  { id: '36', parentId: '33', name: 'Level 7', subtext: 'id 36', type: 'Level 7' },\n  { id: '37', parentId: '32', name: 'Level 6', subtext: 'id 37', type: 'Level 6' },\n  { id: '38', parentId: '37', name: 'Level 7', subtext: 'id 38', type: 'Level 7' },\n  { id: '39', parentId: '37', name: 'Level 7', subtext: 'id 39', type: 'Level 7' },\n  { id: '40', parentId: '37', name: 'Level 7', subtext: 'id 40', type: 'Level 7' },\n  { id: '41', parentId: '20', name: 'Level 5', subtext: 'id 41', type: 'Level 5' },\n  { id: '42', parentId: '41', name: 'Level 6', subtext: 'id 42', type: 'Level 6' },\n  { id: '43', parentId: '42', name: 'Level 7', subtext: 'id 43', type: 'Level 7' },\n  { id: '44', parentId: '42', name: 'Level 7', subtext: 'id 44', type: 'Level 7' },\n  { id: '45', parentId: '42', name: 'Level 7', subtext: 'id 45', type: 'Level 7' },\n  { id: '46', parentId: '41', name: 'Level 6', subtext: 'id 46', type: 'Level 6' },\n  { id: '47', parentId: '46', name: 'Level 7', subtext: 'id 47', type: 'Level 7' },\n  { id: '48', parentId: '46', name: 'Level 7', subtext: 'id 48', type: 'Level 7' },\n  { id: '49', parentId: '46', name: 'Level 7', subtext: 'id 49', type: 'Level 7' },\n  { id: '50', parentId: '41', name: 'Level 6', subtext: 'id 50', type: 'Level 6' },\n  { id: '51', parentId: '50', name: 'Level 7', subtext: 'id 51', type: 'Level 7' },\n  { id: '52', parentId: '50', name: 'Level 7', subtext: 'id 52', type: 'Level 7' },\n  { id: '53', parentId: '2', name: 'Level 3', subtext: 'id 53', type: 'Level 3' },\n  { id: '54', parentId: '53', name: 'Level 4', subtext: 'id 54', type: 'Level 4' },\n  { id: '55', parentId: '54', name: 'Level 5', subtext: 'id 55', type: 'Level 5' },\n  { id: '56', parentId: '55', name: 'Level 6', subtext: 'id 56', type: 'Level 6' },\n  { id: '57', parentId: '56', name: 'Level 7', subtext: 'id 57', type: 'Level 7' },\n  { id: '58', parentId: '55', name: 'Level 6', subtext: 'id 58', type: 'Level 6' },\n  { id: '59', parentId: '58', name: 'Level 7', subtext: 'id 59', type: 'Level 7' },\n  { id: '60', parentId: '55', name: 'Level 6', subtext: 'id 60', type: 'Level 6' },\n  { id: '61', parentId: '60', name: 'Level 7', subtext: 'id 61', type: 'Level 7' },\n  { id: '62', parentId: '60', name: 'Level 7', subtext: 'id 62', type: 'Level 7' },\n  { id: '63', parentId: '55', name: 'Level 6', subtext: 'id 63', type: 'Level 6' },\n  { id: '64', parentId: '63', name: 'Level 7', subtext: 'id 64', type: 'Level 7' },\n  { id: '65', parentId: '63', name: 'Level 7', subtext: 'id 65', type: 'Level 7' },\n  { id: '66', parentId: '54', name: 'Level 5', subtext: 'id 66', type: 'Level 5' },\n  { id: '67', parentId: '66', name: 'Level 6', subtext: 'id 67', type: 'Level 6' },\n  { id: '68', parentId: '67', name: 'Level 7', subtext: 'id 68', type: 'Level 7' },\n  { id: '69', parentId: '67', name: 'Level 7', subtext: 'id 69', type: 'Level 7' },\n  { id: '70', parentId: '67', name: 'Level 7', subtext: 'id 70', type: 'Level 7' },\n  { id: '71', parentId: '67', name: 'Level 7', subtext: 'id 71', type: 'Level 7' },\n  { id: '72', parentId: '66', name: 'Level 6', subtext: 'id 72', type: 'Level 6' },\n  { id: '73', parentId: '72', name: 'Level 7', subtext: 'id 73', type: 'Level 7' },\n  { id: '74', parentId: '72', name: 'Level 7', subtext: 'id 74', type: 'Level 7' },\n  { id: '75', parentId: '72', name: 'Level 7', subtext: 'id 75', type: 'Level 7' },\n  { id: '76', parentId: '72', name: 'Level 7', subtext: 'id 76', type: 'Level 7' },\n  { id: '77', parentId: '72', name: 'Level 7', subtext: 'id 77', type: 'Level 7' },\n  { id: '78', parentId: '66', name: 'Level 6', subtext: 'id 78', type: 'Level 6' },\n  { id: '79', parentId: '78', name: 'Level 7', subtext: 'id 79', type: 'Level 7' },\n  { id: '80', parentId: '78', name: 'Level 7', subtext: 'id 80', type: 'Level 7' },\n  { id: '81', parentId: '78', name: 'Level 7', subtext: 'id 81', type: 'Level 7' },\n  { id: '82', parentId: '54', name: 'Level 5', subtext: 'id 82', type: 'Level 5' },\n  { id: '83', parentId: '82', name: 'Level 6', subtext: 'id 83', type: 'Level 6' },\n  { id: '84', parentId: '83', name: 'Level 7', subtext: 'id 84', type: 'Level 7' },\n  { id: '85', parentId: '83', name: 'Level 7', subtext: 'id 85', type: 'Level 7' },\n  { id: '86', parentId: '82', name: 'Level 6', subtext: 'id 86', type: 'Level 6' },\n  { id: '87', parentId: '86', name: 'Level 7', subtext: 'id 87', type: 'Level 7' },\n  { id: '88', parentId: '86', name: 'Level 7', subtext: 'id 88', type: 'Level 7' },\n  { id: '89', parentId: '86', name: 'Level 7', subtext: 'id 89', type: 'Level 7' },\n  { id: '90', parentId: '86', name: 'Level 7', subtext: 'id 90', type: 'Level 7' },\n  { id: '91', parentId: '86', name: 'Level 7', subtext: 'id 91', type: 'Level 7' },\n  { id: '92', parentId: '82', name: 'Level 6', subtext: 'id 92', type: 'Level 6' },\n  { id: '93', parentId: '92', name: 'Level 7', subtext: 'id 93', type: 'Level 7' },\n  { id: '94', parentId: '92', name: 'Level 7', subtext: 'id 94', type: 'Level 7' },\n  { id: '95', parentId: '53', name: 'Level 4', subtext: 'id 95', type: 'Level 4' },\n  { id: '96', parentId: '95', name: 'Level 5', subtext: 'id 96', type: 'Level 5' },\n  { id: '97', parentId: '96', name: 'Level 6', subtext: 'id 97', type: 'Level 6' },\n  { id: '98', parentId: '97', name: 'Level 7', subtext: 'id 98', type: 'Level 7' },\n  { id: '99', parentId: '97', name: 'Level 7', subtext: 'id 99', type: 'Level 7' },\n  { id: '100', parentId: '96', name: 'Level 6', subtext: 'id 100', type: 'Level 6' },\n  { id: '101', parentId: '100', name: 'Level 7', subtext: 'id 101', type: 'Level 7' },\n  { id: '102', parentId: '100', name: 'Level 7', subtext: 'id 102', type: 'Level 7' },\n  { id: '103', parentId: '100', name: 'Level 7', subtext: 'id 103', type: 'Level 7' },\n  { id: '104', parentId: '100', name: 'Level 7', subtext: 'id 104', type: 'Level 7' },\n  { id: '105', parentId: '100', name: 'Level 7', subtext: 'id 105', type: 'Level 7' },\n  { id: '106', parentId: '96', name: 'Level 6', subtext: 'id 106', type: 'Level 6' },\n  { id: '107', parentId: '106', name: 'Level 7', subtext: 'id 107', type: 'Level 7' },\n  { id: '108', parentId: '95', name: 'Level 5', subtext: 'id 108', type: 'Level 5' },\n  { id: '109', parentId: '108', name: 'Level 6', subtext: 'id 109', type: 'Level 6' },\n  { id: '110', parentId: '109', name: 'Level 7', subtext: 'id 110', type: 'Level 7' },\n  { id: '111', parentId: '108', name: 'Level 6', subtext: 'id 111', type: 'Level 6' },\n  { id: '112', parentId: '111', name: 'Level 7', subtext: 'id 112', type: 'Level 7' },\n  { id: '113', parentId: '111', name: 'Level 7', subtext: 'id 113', type: 'Level 7' },\n  { id: '114', parentId: '111', name: 'Level 7', subtext: 'id 114', type: 'Level 7' },\n  { id: '115', parentId: '108', name: 'Level 6', subtext: 'id 115', type: 'Level 6' },\n  { id: '116', parentId: '115', name: 'Level 7', subtext: 'id 116', type: 'Level 7' },\n  { id: '117', parentId: '115', name: 'Level 7', subtext: 'id 117', type: 'Level 7' },\n  { id: '118', parentId: '115', name: 'Level 7', subtext: 'id 118', type: 'Level 7' },\n  { id: '119', parentId: '115', name: 'Level 7', subtext: 'id 119', type: 'Level 7' },\n  { id: '120', parentId: '108', name: 'Level 6', subtext: 'id 120', type: 'Level 6' },\n  { id: '121', parentId: '120', name: 'Level 7', subtext: 'id 121', type: 'Level 7' },\n  { id: '122', parentId: '95', name: 'Level 5', subtext: 'id 122', type: 'Level 5' },\n  { id: '123', parentId: '122', name: 'Level 6', subtext: 'id 123', type: 'Level 6' },\n  { id: '124', parentId: '123', name: 'Level 7', subtext: 'id 124', type: 'Level 7' },\n  { id: '125', parentId: '123', name: 'Level 7', subtext: 'id 125', type: 'Level 7' },\n  { id: '126', parentId: '123', name: 'Level 7', subtext: 'id 126', type: 'Level 7' },\n  { id: '127', parentId: '123', name: 'Level 7', subtext: 'id 127', type: 'Level 7' },\n  { id: '128', parentId: '123', name: 'Level 7', subtext: 'id 128', type: 'Level 7' },\n  { id: '129', parentId: '122', name: 'Level 6', subtext: 'id 129', type: 'Level 6' },\n  { id: '130', parentId: '129', name: 'Level 7', subtext: 'id 130', type: 'Level 7' },\n  { id: '131', parentId: '129', name: 'Level 7', subtext: 'id 131', type: 'Level 7' },\n  { id: '132', parentId: '129', name: 'Level 7', subtext: 'id 132', type: 'Level 7' },\n  { id: '133', parentId: '129', name: 'Level 7', subtext: 'id 133', type: 'Level 7' },\n  { id: '134', parentId: '122', name: 'Level 6', subtext: 'id 134', type: 'Level 6' },\n  { id: '135', parentId: '134', name: 'Level 7', subtext: 'id 135', type: 'Level 7' },\n  { id: '136', parentId: '134', name: 'Level 7', subtext: 'id 136', type: 'Level 7' },\n  { id: '137', parentId: '95', name: 'Level 5', subtext: 'id 137', type: 'Level 5' },\n  { id: '138', parentId: '137', name: 'Level 6', subtext: 'id 138', type: 'Level 6' },\n  { id: '139', parentId: '138', name: 'Level 7', subtext: 'id 139', type: 'Level 7' },\n  { id: '140', parentId: '138', name: 'Level 7', subtext: 'id 140', type: 'Level 7' },\n  { id: '141', parentId: '138', name: 'Level 7', subtext: 'id 141', type: 'Level 7' },\n  { id: '142', parentId: '138', name: 'Level 7', subtext: 'id 142', type: 'Level 7' },\n  { id: '143', parentId: '137', name: 'Level 6', subtext: 'id 143', type: 'Level 6' },\n  { id: '144', parentId: '143', name: 'Level 7', subtext: 'id 144', type: 'Level 7' },\n  { id: '145', parentId: '143', name: 'Level 7', subtext: 'id 145', type: 'Level 7' },\n  { id: '146', parentId: '137', name: 'Level 6', subtext: 'id 146', type: 'Level 6' },\n  { id: '147', parentId: '146', name: 'Level 7', subtext: 'id 147', type: 'Level 7' },\n  { id: '148', parentId: '146', name: 'Level 7', subtext: 'id 148', type: 'Level 7' },\n  { id: '149', parentId: '146', name: 'Level 7', subtext: 'id 149', type: 'Level 7' },\n  { id: '150', parentId: '137', name: 'Level 6', subtext: 'id 150', type: 'Level 6' },\n  { id: '151', parentId: '150', name: 'Level 7', subtext: 'id 151', type: 'Level 7' },\n  { id: '152', parentId: '150', name: 'Level 7', subtext: 'id 152', type: 'Level 7' },\n  { id: '153', parentId: '137', name: 'Level 6', subtext: 'id 153', type: 'Level 6' },\n  { id: '154', parentId: '153', name: 'Level 7', subtext: 'id 154', type: 'Level 7' },\n  { id: '155', parentId: '153', name: 'Level 7', subtext: 'id 155', type: 'Level 7' },\n  { id: '156', parentId: '153', name: 'Level 7', subtext: 'id 156', type: 'Level 7' },\n  { id: '157', parentId: '95', name: 'Level 5', subtext: 'id 157', type: 'Level 5' },\n  { id: '158', parentId: '157', name: 'Level 6', subtext: 'id 158', type: 'Level 6' },\n  { id: '159', parentId: '158', name: 'Level 7', subtext: 'id 159', type: 'Level 7' },\n  { id: '160', parentId: '157', name: 'Level 6', subtext: 'id 160', type: 'Level 6' },\n  { id: '161', parentId: '160', name: 'Level 7', subtext: 'id 161', type: 'Level 7' },\n  { id: '162', parentId: '160', name: 'Level 7', subtext: 'id 162', type: 'Level 7' },\n  { id: '163', parentId: '160', name: 'Level 7', subtext: 'id 163', type: 'Level 7' },\n  { id: '164', parentId: '53', name: 'Level 4', subtext: 'id 164', type: 'Level 4' },\n  { id: '165', parentId: '164', name: 'Level 5', subtext: 'id 165', type: 'Level 5' },\n  { id: '166', parentId: '165', name: 'Level 6', subtext: 'id 166', type: 'Level 6' },\n  { id: '167', parentId: '166', name: 'Level 7', subtext: 'id 167', type: 'Level 7' },\n  { id: '168', parentId: '166', name: 'Level 7', subtext: 'id 168', type: 'Level 7' },\n  { id: '169', parentId: '166', name: 'Level 7', subtext: 'id 169', type: 'Level 7' },\n  { id: '170', parentId: '166', name: 'Level 7', subtext: 'id 170', type: 'Level 7' },\n  { id: '171', parentId: '166', name: 'Level 7', subtext: 'id 171', type: 'Level 7' },\n  { id: '172', parentId: '164', name: 'Level 5', subtext: 'id 172', type: 'Level 5' },\n  { id: '173', parentId: '172', name: 'Level 6', subtext: 'id 173', type: 'Level 6' },\n  { id: '174', parentId: '173', name: 'Level 7', subtext: 'id 174', type: 'Level 7' },\n  { id: '175', parentId: '173', name: 'Level 7', subtext: 'id 175', type: 'Level 7' },\n  { id: '176', parentId: '173', name: 'Level 7', subtext: 'id 176', type: 'Level 7' },\n  { id: '177', parentId: '173', name: 'Level 7', subtext: 'id 177', type: 'Level 7' },\n  { id: '178', parentId: '173', name: 'Level 7', subtext: 'id 178', type: 'Level 7' },\n  { id: '179', parentId: '172', name: 'Level 6', subtext: 'id 179', type: 'Level 6' },\n  { id: '180', parentId: '179', name: 'Level 7', subtext: 'id 180', type: 'Level 7' },\n  { id: '181', parentId: '179', name: 'Level 7', subtext: 'id 181', type: 'Level 7' },\n  { id: '182', parentId: '179', name: 'Level 7', subtext: 'id 182', type: 'Level 7' },\n  { id: '183', parentId: '179', name: 'Level 7', subtext: 'id 183', type: 'Level 7' },\n  { id: '184', parentId: '164', name: 'Level 5', subtext: 'id 184', type: 'Level 5' },\n  { id: '185', parentId: '184', name: 'Level 6', subtext: 'id 185', type: 'Level 6' },\n  { id: '186', parentId: '185', name: 'Level 7', subtext: 'id 186', type: 'Level 7' },\n  { id: '187', parentId: '185', name: 'Level 7', subtext: 'id 187', type: 'Level 7' },\n  { id: '188', parentId: '185', name: 'Level 7', subtext: 'id 188', type: 'Level 7' },\n  { id: '189', parentId: '185', name: 'Level 7', subtext: 'id 189', type: 'Level 7' },\n  { id: '190', parentId: '185', name: 'Level 7', subtext: 'id 190', type: 'Level 7' },\n  { id: '191', parentId: '184', name: 'Level 6', subtext: 'id 191', type: 'Level 6' },\n  { id: '192', parentId: '191', name: 'Level 7', subtext: 'id 192', type: 'Level 7' },\n  { id: '193', parentId: '191', name: 'Level 7', subtext: 'id 193', type: 'Level 7' },\n  { id: '194', parentId: '191', name: 'Level 7', subtext: 'id 194', type: 'Level 7' },\n  { id: '195', parentId: '191', name: 'Level 7', subtext: 'id 195', type: 'Level 7' },\n  { id: '196', parentId: '184', name: 'Level 6', subtext: 'id 196', type: 'Level 6' },\n  { id: '197', parentId: '196', name: 'Level 7', subtext: 'id 197', type: 'Level 7' },\n  { id: '198', parentId: '196', name: 'Level 7', subtext: 'id 198', type: 'Level 7' },\n  { id: '199', parentId: '196', name: 'Level 7', subtext: 'id 199', type: 'Level 7' },\n  { id: '200', parentId: '196', name: 'Level 7', subtext: 'id 200', type: 'Level 7' },\n  { id: '201', parentId: '196', name: 'Level 7', subtext: 'id 201', type: 'Level 7' },\n  { id: '202', parentId: '164', name: 'Level 5', subtext: 'id 202', type: 'Level 5' },\n  { id: '203', parentId: '202', name: 'Level 6', subtext: 'id 203', type: 'Level 6' },\n  { id: '204', parentId: '203', name: 'Level 7', subtext: 'id 204', type: 'Level 7' },\n  { id: '205', parentId: '203', name: 'Level 7', subtext: 'id 205', type: 'Level 7' },\n  { id: '206', parentId: '203', name: 'Level 7', subtext: 'id 206', type: 'Level 7' },\n  { id: '207', parentId: '203', name: 'Level 7', subtext: 'id 207', type: 'Level 7' },\n  { id: '208', parentId: '202', name: 'Level 6', subtext: 'id 208', type: 'Level 6' },\n  { id: '209', parentId: '208', name: 'Level 7', subtext: 'id 209', type: 'Level 7' },\n  { id: '210', parentId: '208', name: 'Level 7', subtext: 'id 210', type: 'Level 7' },\n  { id: '211', parentId: '53', name: 'Level 4', subtext: 'id 211', type: 'Level 4' },\n  { id: '212', parentId: '211', name: 'Level 5', subtext: 'id 212', type: 'Level 5' },\n  { id: '213', parentId: '212', name: 'Level 6', subtext: 'id 213', type: 'Level 6' },\n  { id: '214', parentId: '213', name: 'Level 7', subtext: 'id 214', type: 'Level 7' },\n  { id: '215', parentId: '212', name: 'Level 6', subtext: 'id 215', type: 'Level 6' },\n  { id: '216', parentId: '215', name: 'Level 7', subtext: 'id 216', type: 'Level 7' },\n  { id: '217', parentId: '215', name: 'Level 7', subtext: 'id 217', type: 'Level 7' },\n  { id: '218', parentId: '215', name: 'Level 7', subtext: 'id 218', type: 'Level 7' },\n  { id: '219', parentId: '215', name: 'Level 7', subtext: 'id 219', type: 'Level 7' },\n  { id: '220', parentId: '215', name: 'Level 7', subtext: 'id 220', type: 'Level 7' },\n  { id: '221', parentId: '212', name: 'Level 6', subtext: 'id 221', type: 'Level 6' },\n  { id: '222', parentId: '221', name: 'Level 7', subtext: 'id 222', type: 'Level 7' },\n  { id: '223', parentId: '221', name: 'Level 7', subtext: 'id 223', type: 'Level 7' },\n  { id: '224', parentId: '221', name: 'Level 7', subtext: 'id 224', type: 'Level 7' },\n  { id: '225', parentId: '221', name: 'Level 7', subtext: 'id 225', type: 'Level 7' },\n  { id: '226', parentId: '221', name: 'Level 7', subtext: 'id 226', type: 'Level 7' },\n  { id: '227', parentId: '212', name: 'Level 6', subtext: 'id 227', type: 'Level 6' },\n  { id: '228', parentId: '227', name: 'Level 7', subtext: 'id 228', type: 'Level 7' },\n  { id: '229', parentId: '227', name: 'Level 7', subtext: 'id 229', type: 'Level 7' },\n  { id: '230', parentId: '227', name: 'Level 7', subtext: 'id 230', type: 'Level 7' },\n  { id: '231', parentId: '227', name: 'Level 7', subtext: 'id 231', type: 'Level 7' },\n  { id: '232', parentId: '212', name: 'Level 6', subtext: 'id 232', type: 'Level 6' },\n  { id: '233', parentId: '232', name: 'Level 7', subtext: 'id 233', type: 'Level 7' },\n  { id: '234', parentId: '232', name: 'Level 7', subtext: 'id 234', type: 'Level 7' },\n  { id: '235', parentId: '232', name: 'Level 7', subtext: 'id 235', type: 'Level 7' },\n  { id: '236', parentId: '232', name: 'Level 7', subtext: 'id 236', type: 'Level 7' },\n  { id: '237', parentId: '1', name: 'Level 2', subtext: 'id 237', type: 'Level 2' },\n  { id: '238', parentId: '237', name: 'Level 3', subtext: 'id 238', type: 'Level 3' },\n  { id: '239', parentId: '238', name: 'Level 4', subtext: 'id 239', type: 'Level 4' },\n  { id: '240', parentId: '239', name: 'Level 5', subtext: 'id 240', type: 'Level 5' },\n  { id: '241', parentId: '240', name: 'Level 6', subtext: 'id 241', type: 'Level 6' },\n  { id: '242', parentId: '241', name: 'Level 7', subtext: 'id 242', type: 'Level 7' },\n  { id: '243', parentId: '241', name: 'Level 7', subtext: 'id 243', type: 'Level 7' },\n  { id: '244', parentId: '241', name: 'Level 7', subtext: 'id 244', type: 'Level 7' },\n  { id: '245', parentId: '241', name: 'Level 7', subtext: 'id 245', type: 'Level 7' },\n  { id: '246', parentId: '240', name: 'Level 6', subtext: 'id 246', type: 'Level 6' },\n  { id: '247', parentId: '246', name: 'Level 7', subtext: 'id 247', type: 'Level 7' },\n  { id: '248', parentId: '246', name: 'Level 7', subtext: 'id 248', type: 'Level 7' },\n  { id: '249', parentId: '246', name: 'Level 7', subtext: 'id 249', type: 'Level 7' },\n  { id: '250', parentId: '246', name: 'Level 7', subtext: 'id 250', type: 'Level 7' },\n  { id: '251', parentId: '239', name: 'Level 5', subtext: 'id 251', type: 'Level 5' },\n  { id: '252', parentId: '251', name: 'Level 6', subtext: 'id 252', type: 'Level 6' },\n  { id: '253', parentId: '252', name: 'Level 7', subtext: 'id 253', type: 'Level 7' },\n  { id: '254', parentId: '252', name: 'Level 7', subtext: 'id 254', type: 'Level 7' },\n  { id: '255', parentId: '252', name: 'Level 7', subtext: 'id 255', type: 'Level 7' },\n  { id: '256', parentId: '252', name: 'Level 7', subtext: 'id 256', type: 'Level 7' },\n  { id: '257', parentId: '252', name: 'Level 7', subtext: 'id 257', type: 'Level 7' },\n  { id: '258', parentId: '251', name: 'Level 6', subtext: 'id 258', type: 'Level 6' },\n  { id: '259', parentId: '258', name: 'Level 7', subtext: 'id 259', type: 'Level 7' },\n  { id: '260', parentId: '258', name: 'Level 7', subtext: 'id 260', type: 'Level 7' },\n  { id: '261', parentId: '258', name: 'Level 7', subtext: 'id 261', type: 'Level 7' },\n  { id: '262', parentId: '258', name: 'Level 7', subtext: 'id 262', type: 'Level 7' },\n  { id: '263', parentId: '258', name: 'Level 7', subtext: 'id 263', type: 'Level 7' },\n  { id: '264', parentId: '251', name: 'Level 6', subtext: 'id 264', type: 'Level 6' },\n  { id: '265', parentId: '264', name: 'Level 7', subtext: 'id 265', type: 'Level 7' },\n  { id: '266', parentId: '264', name: 'Level 7', subtext: 'id 266', type: 'Level 7' },\n  { id: '267', parentId: '251', name: 'Level 6', subtext: 'id 267', type: 'Level 6' },\n  { id: '268', parentId: '267', name: 'Level 7', subtext: 'id 268', type: 'Level 7' },\n  { id: '269', parentId: '267', name: 'Level 7', subtext: 'id 269', type: 'Level 7' },\n  { id: '270', parentId: '267', name: 'Level 7', subtext: 'id 270', type: 'Level 7' },\n  { id: '271', parentId: '267', name: 'Level 7', subtext: 'id 271', type: 'Level 7' },\n  { id: '272', parentId: '251', name: 'Level 6', subtext: 'id 272', type: 'Level 6' },\n  { id: '273', parentId: '272', name: 'Level 7', subtext: 'id 273', type: 'Level 7' },\n  { id: '274', parentId: '239', name: 'Level 5', subtext: 'id 274', type: 'Level 5' },\n  { id: '275', parentId: '274', name: 'Level 6', subtext: 'id 275', type: 'Level 6' },\n  { id: '276', parentId: '275', name: 'Level 7', subtext: 'id 276', type: 'Level 7' },\n  { id: '277', parentId: '275', name: 'Level 7', subtext: 'id 277', type: 'Level 7' },\n  { id: '278', parentId: '275', name: 'Level 7', subtext: 'id 278', type: 'Level 7' },\n  { id: '279', parentId: '275', name: 'Level 7', subtext: 'id 279', type: 'Level 7' },\n  { id: '280', parentId: '274', name: 'Level 6', subtext: 'id 280', type: 'Level 6' },\n  { id: '281', parentId: '280', name: 'Level 7', subtext: 'id 281', type: 'Level 7' },\n  { id: '282', parentId: '280', name: 'Level 7', subtext: 'id 282', type: 'Level 7' },\n  { id: '283', parentId: '280', name: 'Level 7', subtext: 'id 283', type: 'Level 7' },\n  { id: '284', parentId: '280', name: 'Level 7', subtext: 'id 284', type: 'Level 7' },\n  { id: '285', parentId: '274', name: 'Level 6', subtext: 'id 285', type: 'Level 6' },\n  { id: '286', parentId: '285', name: 'Level 7', subtext: 'id 286', type: 'Level 7' },\n  { id: '287', parentId: '285', name: 'Level 7', subtext: 'id 287', type: 'Level 7' },\n  { id: '288', parentId: '285', name: 'Level 7', subtext: 'id 288', type: 'Level 7' },\n  { id: '289', parentId: '285', name: 'Level 7', subtext: 'id 289', type: 'Level 7' },\n  { id: '290', parentId: '285', name: 'Level 7', subtext: 'id 290', type: 'Level 7' },\n  { id: '291', parentId: '238', name: 'Level 4', subtext: 'id 291', type: 'Level 4' },\n  { id: '292', parentId: '291', name: 'Level 5', subtext: 'id 292', type: 'Level 5' },\n  { id: '293', parentId: '292', name: 'Level 6', subtext: 'id 293', type: 'Level 6' },\n  { id: '294', parentId: '293', name: 'Level 7', subtext: 'id 294', type: 'Level 7' },\n  { id: '295', parentId: '293', name: 'Level 7', subtext: 'id 295', type: 'Level 7' },\n  { id: '296', parentId: '293', name: 'Level 7', subtext: 'id 296', type: 'Level 7' },\n  { id: '297', parentId: '291', name: 'Level 5', subtext: 'id 297', type: 'Level 5' },\n  { id: '298', parentId: '297', name: 'Level 6', subtext: 'id 298', type: 'Level 6' },\n  { id: '299', parentId: '298', name: 'Level 7', subtext: 'id 299', type: 'Level 7' },\n  { id: '300', parentId: '298', name: 'Level 7', subtext: 'id 300', type: 'Level 7' },\n  { id: '301', parentId: '297', name: 'Level 6', subtext: 'id 301', type: 'Level 6' },\n  { id: '302', parentId: '301', name: 'Level 7', subtext: 'id 302', type: 'Level 7' },\n  { id: '303', parentId: '301', name: 'Level 7', subtext: 'id 303', type: 'Level 7' },\n  { id: '304', parentId: '297', name: 'Level 6', subtext: 'id 304', type: 'Level 6' },\n  { id: '305', parentId: '304', name: 'Level 7', subtext: 'id 305', type: 'Level 7' },\n  { id: '306', parentId: '291', name: 'Level 5', subtext: 'id 306', type: 'Level 5' },\n  { id: '307', parentId: '306', name: 'Level 6', subtext: 'id 307', type: 'Level 6' },\n  { id: '308', parentId: '307', name: 'Level 7', subtext: 'id 308', type: 'Level 7' },\n  { id: '309', parentId: '307', name: 'Level 7', subtext: 'id 309', type: 'Level 7' },\n  { id: '310', parentId: '307', name: 'Level 7', subtext: 'id 310', type: 'Level 7' },\n  { id: '311', parentId: '307', name: 'Level 7', subtext: 'id 311', type: 'Level 7' },\n  { id: '312', parentId: '238', name: 'Level 4', subtext: 'id 312', type: 'Level 4' },\n  { id: '313', parentId: '312', name: 'Level 5', subtext: 'id 313', type: 'Level 5' },\n  { id: '314', parentId: '313', name: 'Level 6', subtext: 'id 314', type: 'Level 6' },\n  { id: '315', parentId: '314', name: 'Level 7', subtext: 'id 315', type: 'Level 7' },\n  { id: '316', parentId: '314', name: 'Level 7', subtext: 'id 316', type: 'Level 7' },\n  { id: '317', parentId: '314', name: 'Level 7', subtext: 'id 317', type: 'Level 7' },\n  { id: '318', parentId: '313', name: 'Level 6', subtext: 'id 318', type: 'Level 6' },\n  { id: '319', parentId: '318', name: 'Level 7', subtext: 'id 319', type: 'Level 7' },\n  { id: '320', parentId: '312', name: 'Level 5', subtext: 'id 320', type: 'Level 5' },\n  { id: '321', parentId: '320', name: 'Level 6', subtext: 'id 321', type: 'Level 6' },\n  { id: '322', parentId: '321', name: 'Level 7', subtext: 'id 322', type: 'Level 7' },\n  { id: '323', parentId: '321', name: 'Level 7', subtext: 'id 323', type: 'Level 7' },\n  { id: '324', parentId: '321', name: 'Level 7', subtext: 'id 324', type: 'Level 7' },\n  { id: '325', parentId: '321', name: 'Level 7', subtext: 'id 325', type: 'Level 7' },\n  { id: '326', parentId: '321', name: 'Level 7', subtext: 'id 326', type: 'Level 7' },\n  { id: '327', parentId: '312', name: 'Level 5', subtext: 'id 327', type: 'Level 5' },\n  { id: '328', parentId: '327', name: 'Level 6', subtext: 'id 328', type: 'Level 6' },\n  { id: '329', parentId: '328', name: 'Level 7', subtext: 'id 329', type: 'Level 7' },\n  { id: '330', parentId: '328', name: 'Level 7', subtext: 'id 330', type: 'Level 7' },\n  { id: '331', parentId: '328', name: 'Level 7', subtext: 'id 331', type: 'Level 7' },\n  { id: '332', parentId: '327', name: 'Level 6', subtext: 'id 332', type: 'Level 6' },\n  { id: '333', parentId: '332', name: 'Level 7', subtext: 'id 333', type: 'Level 7' },\n  { id: '334', parentId: '312', name: 'Level 5', subtext: 'id 334', type: 'Level 5' },\n  { id: '335', parentId: '334', name: 'Level 6', subtext: 'id 335', type: 'Level 6' },\n  { id: '336', parentId: '335', name: 'Level 7', subtext: 'id 336', type: 'Level 7' },\n  { id: '337', parentId: '335', name: 'Level 7', subtext: 'id 337', type: 'Level 7' },\n  { id: '338', parentId: '334', name: 'Level 6', subtext: 'id 338', type: 'Level 6' },\n  { id: '339', parentId: '338', name: 'Level 7', subtext: 'id 339', type: 'Level 7' },\n  { id: '340', parentId: '334', name: 'Level 6', subtext: 'id 340', type: 'Level 6' },\n  { id: '341', parentId: '340', name: 'Level 7', subtext: 'id 341', type: 'Level 7' },\n  { id: '342', parentId: '340', name: 'Level 7', subtext: 'id 342', type: 'Level 7' },\n  { id: '343', parentId: '340', name: 'Level 7', subtext: 'id 343', type: 'Level 7' },\n  { id: '344', parentId: '340', name: 'Level 7', subtext: 'id 344', type: 'Level 7' },\n  { id: '345', parentId: '340', name: 'Level 7', subtext: 'id 345', type: 'Level 7' },\n  { id: '346', parentId: '334', name: 'Level 6', subtext: 'id 346', type: 'Level 6' },\n  { id: '347', parentId: '346', name: 'Level 7', subtext: 'id 347', type: 'Level 7' },\n  { id: '348', parentId: '346', name: 'Level 7', subtext: 'id 348', type: 'Level 7' },\n  { id: '349', parentId: '346', name: 'Level 7', subtext: 'id 349', type: 'Level 7' },\n  { id: '350', parentId: '346', name: 'Level 7', subtext: 'id 350', type: 'Level 7' },\n  { id: '351', parentId: '238', name: 'Level 4', subtext: 'id 351', type: 'Level 4' },\n  { id: '352', parentId: '351', name: 'Level 5', subtext: 'id 352', type: 'Level 5' },\n  { id: '353', parentId: '352', name: 'Level 6', subtext: 'id 353', type: 'Level 6' },\n  { id: '354', parentId: '353', name: 'Level 7', subtext: 'id 354', type: 'Level 7' },\n  { id: '355', parentId: '237', name: 'Level 3', subtext: 'id 355', type: 'Level 3' },\n  { id: '356', parentId: '355', name: 'Level 4', subtext: 'id 356', type: 'Level 4' },\n  { id: '357', parentId: '356', name: 'Level 5', subtext: 'id 357', type: 'Level 5' },\n  { id: '358', parentId: '357', name: 'Level 6', subtext: 'id 358', type: 'Level 6' },\n  { id: '359', parentId: '358', name: 'Level 7', subtext: 'id 359', type: 'Level 7' },\n  { id: '360', parentId: '358', name: 'Level 7', subtext: 'id 360', type: 'Level 7' },\n  { id: '361', parentId: '358', name: 'Level 7', subtext: 'id 361', type: 'Level 7' },\n  { id: '362', parentId: '358', name: 'Level 7', subtext: 'id 362', type: 'Level 7' },\n  { id: '363', parentId: '358', name: 'Level 7', subtext: 'id 363', type: 'Level 7' },\n  { id: '364', parentId: '357', name: 'Level 6', subtext: 'id 364', type: 'Level 6' },\n  { id: '365', parentId: '364', name: 'Level 7', subtext: 'id 365', type: 'Level 7' },\n  { id: '366', parentId: '356', name: 'Level 5', subtext: 'id 366', type: 'Level 5' },\n  { id: '367', parentId: '366', name: 'Level 6', subtext: 'id 367', type: 'Level 6' },\n  { id: '368', parentId: '367', name: 'Level 7', subtext: 'id 368', type: 'Level 7' },\n  { id: '369', parentId: '355', name: 'Level 4', subtext: 'id 369', type: 'Level 4' },\n  { id: '370', parentId: '369', name: 'Level 5', subtext: 'id 370', type: 'Level 5' },\n  { id: '371', parentId: '370', name: 'Level 6', subtext: 'id 371', type: 'Level 6' },\n  { id: '372', parentId: '371', name: 'Level 7', subtext: 'id 372', type: 'Level 7' },\n  { id: '373', parentId: '371', name: 'Level 7', subtext: 'id 373', type: 'Level 7' },\n  { id: '374', parentId: '371', name: 'Level 7', subtext: 'id 374', type: 'Level 7' },\n  { id: '375', parentId: '371', name: 'Level 7', subtext: 'id 375', type: 'Level 7' },\n  { id: '376', parentId: '370', name: 'Level 6', subtext: 'id 376', type: 'Level 6' },\n  { id: '377', parentId: '376', name: 'Level 7', subtext: 'id 377', type: 'Level 7' },\n  { id: '378', parentId: '376', name: 'Level 7', subtext: 'id 378', type: 'Level 7' },\n  { id: '379', parentId: '376', name: 'Level 7', subtext: 'id 379', type: 'Level 7' },\n  { id: '380', parentId: '376', name: 'Level 7', subtext: 'id 380', type: 'Level 7' },\n  { id: '381', parentId: '376', name: 'Level 7', subtext: 'id 381', type: 'Level 7' },\n  { id: '382', parentId: '370', name: 'Level 6', subtext: 'id 382', type: 'Level 6' },\n  { id: '383', parentId: '382', name: 'Level 7', subtext: 'id 383', type: 'Level 7' },\n  { id: '384', parentId: '369', name: 'Level 5', subtext: 'id 384', type: 'Level 5' },\n  { id: '385', parentId: '384', name: 'Level 6', subtext: 'id 385', type: 'Level 6' },\n  { id: '386', parentId: '385', name: 'Level 7', subtext: 'id 386', type: 'Level 7' },\n  { id: '387', parentId: '385', name: 'Level 7', subtext: 'id 387', type: 'Level 7' },\n  { id: '388', parentId: '385', name: 'Level 7', subtext: 'id 388', type: 'Level 7' },\n  { id: '389', parentId: '385', name: 'Level 7', subtext: 'id 389', type: 'Level 7' },\n  { id: '390', parentId: '385', name: 'Level 7', subtext: 'id 390', type: 'Level 7' },\n  { id: '391', parentId: '384', name: 'Level 6', subtext: 'id 391', type: 'Level 6' },\n  { id: '392', parentId: '391', name: 'Level 7', subtext: 'id 392', type: 'Level 7' },\n  { id: '393', parentId: '391', name: 'Level 7', subtext: 'id 393', type: 'Level 7' },\n  { id: '394', parentId: '391', name: 'Level 7', subtext: 'id 394', type: 'Level 7' },\n  { id: '395', parentId: '391', name: 'Level 7', subtext: 'id 395', type: 'Level 7' },\n  { id: '396', parentId: '369', name: 'Level 5', subtext: 'id 396', type: 'Level 5' },\n  { id: '397', parentId: '396', name: 'Level 6', subtext: 'id 397', type: 'Level 6' },\n  { id: '398', parentId: '397', name: 'Level 7', subtext: 'id 398', type: 'Level 7' },\n  { id: '399', parentId: '397', name: 'Level 7', subtext: 'id 399', type: 'Level 7' },\n  { id: '400', parentId: '397', name: 'Level 7', subtext: 'id 400', type: 'Level 7' },\n  { id: '401', parentId: '397', name: 'Level 7', subtext: 'id 401', type: 'Level 7' },\n  { id: '402', parentId: '396', name: 'Level 6', subtext: 'id 402', type: 'Level 6' },\n  { id: '403', parentId: '402', name: 'Level 7', subtext: 'id 403', type: 'Level 7' },\n  { id: '404', parentId: '402', name: 'Level 7', subtext: 'id 404', type: 'Level 7' },\n  { id: '405', parentId: '402', name: 'Level 7', subtext: 'id 405', type: 'Level 7' },\n  { id: '406', parentId: '402', name: 'Level 7', subtext: 'id 406', type: 'Level 7' },\n  { id: '407', parentId: '402', name: 'Level 7', subtext: 'id 407', type: 'Level 7' },\n  { id: '408', parentId: '396', name: 'Level 6', subtext: 'id 408', type: 'Level 6' },\n  { id: '409', parentId: '408', name: 'Level 7', subtext: 'id 409', type: 'Level 7' },\n  { id: '410', parentId: '396', name: 'Level 6', subtext: 'id 410', type: 'Level 6' },\n  { id: '411', parentId: '410', name: 'Level 7', subtext: 'id 411', type: 'Level 7' },\n  { id: '412', parentId: '410', name: 'Level 7', subtext: 'id 412', type: 'Level 7' },\n  { id: '413', parentId: '410', name: 'Level 7', subtext: 'id 413', type: 'Level 7' },\n  { id: '414', parentId: '410', name: 'Level 7', subtext: 'id 414', type: 'Level 7' },\n  { id: '415', parentId: '369', name: 'Level 5', subtext: 'id 415', type: 'Level 5' },\n  { id: '416', parentId: '415', name: 'Level 6', subtext: 'id 416', type: 'Level 6' },\n  { id: '417', parentId: '416', name: 'Level 7', subtext: 'id 417', type: 'Level 7' },\n  { id: '418', parentId: '416', name: 'Level 7', subtext: 'id 418', type: 'Level 7' },\n  { id: '419', parentId: '416', name: 'Level 7', subtext: 'id 419', type: 'Level 7' },\n  { id: '420', parentId: '416', name: 'Level 7', subtext: 'id 420', type: 'Level 7' },\n  { id: '421', parentId: '415', name: 'Level 6', subtext: 'id 421', type: 'Level 6' },\n  { id: '422', parentId: '421', name: 'Level 7', subtext: 'id 422', type: 'Level 7' },\n  { id: '423', parentId: '421', name: 'Level 7', subtext: 'id 423', type: 'Level 7' },\n  { id: '424', parentId: '421', name: 'Level 7', subtext: 'id 424', type: 'Level 7' },\n  { id: '425', parentId: '421', name: 'Level 7', subtext: 'id 425', type: 'Level 7' },\n  { id: '426', parentId: '421', name: 'Level 7', subtext: 'id 426', type: 'Level 7' },\n  { id: '427', parentId: '415', name: 'Level 6', subtext: 'id 427', type: 'Level 6' },\n  { id: '428', parentId: '427', name: 'Level 7', subtext: 'id 428', type: 'Level 7' },\n  { id: '429', parentId: '427', name: 'Level 7', subtext: 'id 429', type: 'Level 7' },\n  { id: '430', parentId: '427', name: 'Level 7', subtext: 'id 430', type: 'Level 7' },\n  { id: '431', parentId: '415', name: 'Level 6', subtext: 'id 431', type: 'Level 6' },\n  { id: '432', parentId: '431', name: 'Level 7', subtext: 'id 432', type: 'Level 7' },\n  { id: '433', parentId: '431', name: 'Level 7', subtext: 'id 433', type: 'Level 7' },\n  { id: '434', parentId: '431', name: 'Level 7', subtext: 'id 434', type: 'Level 7' },\n  { id: '435', parentId: '431', name: 'Level 7', subtext: 'id 435', type: 'Level 7' },\n  { id: '436', parentId: '355', name: 'Level 4', subtext: 'id 436', type: 'Level 4' },\n  { id: '437', parentId: '436', name: 'Level 5', subtext: 'id 437', type: 'Level 5' },\n  { id: '438', parentId: '437', name: 'Level 6', subtext: 'id 438', type: 'Level 6' },\n  { id: '439', parentId: '438', name: 'Level 7', subtext: 'id 439', type: 'Level 7' },\n  { id: '440', parentId: '438', name: 'Level 7', subtext: 'id 440', type: 'Level 7' },\n  { id: '441', parentId: '438', name: 'Level 7', subtext: 'id 441', type: 'Level 7' },\n  { id: '442', parentId: '438', name: 'Level 7', subtext: 'id 442', type: 'Level 7' },\n  { id: '443', parentId: '438', name: 'Level 7', subtext: 'id 443', type: 'Level 7' },\n  { id: '444', parentId: '437', name: 'Level 6', subtext: 'id 444', type: 'Level 6' },\n  { id: '445', parentId: '444', name: 'Level 7', subtext: 'id 445', type: 'Level 7' },\n  { id: '446', parentId: '444', name: 'Level 7', subtext: 'id 446', type: 'Level 7' },\n  { id: '447', parentId: '444', name: 'Level 7', subtext: 'id 447', type: 'Level 7' },\n  { id: '448', parentId: '436', name: 'Level 5', subtext: 'id 448', type: 'Level 5' },\n  { id: '449', parentId: '448', name: 'Level 6', subtext: 'id 449', type: 'Level 6' },\n  { id: '450', parentId: '449', name: 'Level 7', subtext: 'id 450', type: 'Level 7' },\n  { id: '451', parentId: '449', name: 'Level 7', subtext: 'id 451', type: 'Level 7' },\n  { id: '452', parentId: '448', name: 'Level 6', subtext: 'id 452', type: 'Level 6' },\n  { id: '453', parentId: '452', name: 'Level 7', subtext: 'id 453', type: 'Level 7' },\n  { id: '454', parentId: '452', name: 'Level 7', subtext: 'id 454', type: 'Level 7' },\n  { id: '455', parentId: '452', name: 'Level 7', subtext: 'id 455', type: 'Level 7' },\n  { id: '456', parentId: '436', name: 'Level 5', subtext: 'id 456', type: 'Level 5' },\n  { id: '457', parentId: '456', name: 'Level 6', subtext: 'id 457', type: 'Level 6' },\n  { id: '458', parentId: '457', name: 'Level 7', subtext: 'id 458', type: 'Level 7' },\n  { id: '459', parentId: '436', name: 'Level 5', subtext: 'id 459', type: 'Level 5' },\n  { id: '460', parentId: '459', name: 'Level 6', subtext: 'id 460', type: 'Level 6' },\n  { id: '461', parentId: '460', name: 'Level 7', subtext: 'id 461', type: 'Level 7' },\n  { id: '462', parentId: '460', name: 'Level 7', subtext: 'id 462', type: 'Level 7' },\n  { id: '463', parentId: '460', name: 'Level 7', subtext: 'id 463', type: 'Level 7' },\n  { id: '464', parentId: '460', name: 'Level 7', subtext: 'id 464', type: 'Level 7' },\n  { id: '465', parentId: '460', name: 'Level 7', subtext: 'id 465', type: 'Level 7' },\n  { id: '466', parentId: '436', name: 'Level 5', subtext: 'id 466', type: 'Level 5' },\n  { id: '467', parentId: '466', name: 'Level 6', subtext: 'id 467', type: 'Level 6' },\n  { id: '468', parentId: '467', name: 'Level 7', subtext: 'id 468', type: 'Level 7' },\n  { id: '469', parentId: '467', name: 'Level 7', subtext: 'id 469', type: 'Level 7' },\n  { id: '470', parentId: '467', name: 'Level 7', subtext: 'id 470', type: 'Level 7' },\n  { id: '471', parentId: '467', name: 'Level 7', subtext: 'id 471', type: 'Level 7' },\n  { id: '472', parentId: '466', name: 'Level 6', subtext: 'id 472', type: 'Level 6' },\n  { id: '473', parentId: '472', name: 'Level 7', subtext: 'id 473', type: 'Level 7' },\n  { id: '474', parentId: '472', name: 'Level 7', subtext: 'id 474', type: 'Level 7' },\n  { id: '475', parentId: '472', name: 'Level 7', subtext: 'id 475', type: 'Level 7' },\n  { id: '476', parentId: '472', name: 'Level 7', subtext: 'id 476', type: 'Level 7' },\n  { id: '477', parentId: '472', name: 'Level 7', subtext: 'id 477', type: 'Level 7' },\n  { id: '478', parentId: null, name: 'Level 1', subtext: 'id 478', type: 'Level 1' },\n  { id: '479', parentId: '478', name: 'Level 2', subtext: 'id 479', type: 'Level 2' },\n  { id: '480', parentId: '479', name: 'Level 3', subtext: 'id 480', type: 'Level 3' },\n  { id: '481', parentId: '480', name: 'Level 4', subtext: 'id 481', type: 'Level 4' },\n  { id: '482', parentId: '481', name: 'Level 5', subtext: 'id 482', type: 'Level 5' },\n  { id: '483', parentId: '482', name: 'Level 6', subtext: 'id 483', type: 'Level 6' },\n  { id: '484', parentId: '483', name: 'Level 7', subtext: 'id 484', type: 'Level 7' },\n  { id: '485', parentId: '483', name: 'Level 7', subtext: 'id 485', type: 'Level 7' },\n  { id: '486', parentId: '483', name: 'Level 7', subtext: 'id 486', type: 'Level 7' },\n  { id: '487', parentId: '482', name: 'Level 6', subtext: 'id 487', type: 'Level 6' },\n  { id: '488', parentId: '487', name: 'Level 7', subtext: 'id 488', type: 'Level 7' },\n  { id: '489', parentId: '487', name: 'Level 7', subtext: 'id 489', type: 'Level 7' },\n  { id: '490', parentId: '487', name: 'Level 7', subtext: 'id 490', type: 'Level 7' },\n  { id: '491', parentId: '482', name: 'Level 6', subtext: 'id 491', type: 'Level 6' },\n  { id: '492', parentId: '491', name: 'Level 7', subtext: 'id 492', type: 'Level 7' },\n  { id: '493', parentId: '481', name: 'Level 5', subtext: 'id 493', type: 'Level 5' },\n  { id: '494', parentId: '493', name: 'Level 6', subtext: 'id 494', type: 'Level 6' },\n  { id: '495', parentId: '494', name: 'Level 7', subtext: 'id 495', type: 'Level 7' },\n  { id: '496', parentId: '494', name: 'Level 7', subtext: 'id 496', type: 'Level 7' },\n  { id: '497', parentId: '494', name: 'Level 7', subtext: 'id 497', type: 'Level 7' },\n  { id: '498', parentId: '494', name: 'Level 7', subtext: 'id 498', type: 'Level 7' },\n  { id: '499', parentId: '493', name: 'Level 6', subtext: 'id 499', type: 'Level 6' },\n  { id: '500', parentId: '499', name: 'Level 7', subtext: 'id 500', type: 'Level 7' },\n  { id: '501', parentId: '499', name: 'Level 7', subtext: 'id 501', type: 'Level 7' },\n  { id: '502', parentId: '499', name: 'Level 7', subtext: 'id 502', type: 'Level 7' },\n  { id: '503', parentId: '481', name: 'Level 5', subtext: 'id 503', type: 'Level 5' },\n  { id: '504', parentId: '503', name: 'Level 6', subtext: 'id 504', type: 'Level 6' },\n  { id: '505', parentId: '504', name: 'Level 7', subtext: 'id 505', type: 'Level 7' },\n  { id: '506', parentId: '504', name: 'Level 7', subtext: 'id 506', type: 'Level 7' },\n  { id: '507', parentId: '504', name: 'Level 7', subtext: 'id 507', type: 'Level 7' },\n  { id: '508', parentId: '504', name: 'Level 7', subtext: 'id 508', type: 'Level 7' },\n  { id: '509', parentId: '481', name: 'Level 5', subtext: 'id 509', type: 'Level 5' },\n  { id: '510', parentId: '509', name: 'Level 6', subtext: 'id 510', type: 'Level 6' },\n  { id: '511', parentId: '510', name: 'Level 7', subtext: 'id 511', type: 'Level 7' },\n  { id: '512', parentId: '510', name: 'Level 7', subtext: 'id 512', type: 'Level 7' },\n  { id: '513', parentId: '510', name: 'Level 7', subtext: 'id 513', type: 'Level 7' },\n  { id: '514', parentId: '510', name: 'Level 7', subtext: 'id 514', type: 'Level 7' },\n  { id: '515', parentId: '481', name: 'Level 5', subtext: 'id 515', type: 'Level 5' },\n  { id: '516', parentId: '515', name: 'Level 6', subtext: 'id 516', type: 'Level 6' },\n  { id: '517', parentId: '516', name: 'Level 7', subtext: 'id 517', type: 'Level 7' },\n  { id: '518', parentId: '516', name: 'Level 7', subtext: 'id 518', type: 'Level 7' },\n  { id: '519', parentId: '515', name: 'Level 6', subtext: 'id 519', type: 'Level 6' },\n  { id: '520', parentId: '519', name: 'Level 7', subtext: 'id 520', type: 'Level 7' },\n  { id: '521', parentId: '519', name: 'Level 7', subtext: 'id 521', type: 'Level 7' },\n  { id: '522', parentId: '519', name: 'Level 7', subtext: 'id 522', type: 'Level 7' },\n  { id: '523', parentId: '519', name: 'Level 7', subtext: 'id 523', type: 'Level 7' },\n  { id: '524', parentId: '515', name: 'Level 6', subtext: 'id 524', type: 'Level 6' },\n  { id: '525', parentId: '524', name: 'Level 7', subtext: 'id 525', type: 'Level 7' },\n  { id: '526', parentId: '524', name: 'Level 7', subtext: 'id 526', type: 'Level 7' },\n  { id: '527', parentId: '524', name: 'Level 7', subtext: 'id 527', type: 'Level 7' },\n  { id: '528', parentId: '524', name: 'Level 7', subtext: 'id 528', type: 'Level 7' },\n  { id: '529', parentId: '515', name: 'Level 6', subtext: 'id 529', type: 'Level 6' },\n  { id: '530', parentId: '529', name: 'Level 7', subtext: 'id 530', type: 'Level 7' },\n  { id: '531', parentId: '529', name: 'Level 7', subtext: 'id 531', type: 'Level 7' },\n  { id: '532', parentId: '515', name: 'Level 6', subtext: 'id 532', type: 'Level 6' },\n  { id: '533', parentId: '532', name: 'Level 7', subtext: 'id 533', type: 'Level 7' },\n  { id: '534', parentId: '532', name: 'Level 7', subtext: 'id 534', type: 'Level 7' },\n  { id: '535', parentId: '532', name: 'Level 7', subtext: 'id 535', type: 'Level 7' },\n  { id: '536', parentId: '532', name: 'Level 7', subtext: 'id 536', type: 'Level 7' },\n  { id: '537', parentId: '479', name: 'Level 3', subtext: 'id 537', type: 'Level 3' },\n  { id: '538', parentId: '537', name: 'Level 4', subtext: 'id 538', type: 'Level 4' },\n  { id: '539', parentId: '538', name: 'Level 5', subtext: 'id 539', type: 'Level 5' },\n  { id: '540', parentId: '539', name: 'Level 6', subtext: 'id 540', type: 'Level 6' },\n  { id: '541', parentId: '540', name: 'Level 7', subtext: 'id 541', type: 'Level 7' },\n  { id: '542', parentId: '540', name: 'Level 7', subtext: 'id 542', type: 'Level 7' },\n  { id: '543', parentId: '540', name: 'Level 7', subtext: 'id 543', type: 'Level 7' },\n  { id: '544', parentId: '540', name: 'Level 7', subtext: 'id 544', type: 'Level 7' },\n  { id: '545', parentId: '539', name: 'Level 6', subtext: 'id 545', type: 'Level 6' },\n  { id: '546', parentId: '545', name: 'Level 7', subtext: 'id 546', type: 'Level 7' },\n  { id: '547', parentId: '545', name: 'Level 7', subtext: 'id 547', type: 'Level 7' },\n  { id: '548', parentId: '539', name: 'Level 6', subtext: 'id 548', type: 'Level 6' },\n  { id: '549', parentId: '548', name: 'Level 7', subtext: 'id 549', type: 'Level 7' },\n  { id: '550', parentId: '548', name: 'Level 7', subtext: 'id 550', type: 'Level 7' },\n  { id: '551', parentId: '548', name: 'Level 7', subtext: 'id 551', type: 'Level 7' },\n  { id: '552', parentId: '539', name: 'Level 6', subtext: 'id 552', type: 'Level 6' },\n  { id: '553', parentId: '552', name: 'Level 7', subtext: 'id 553', type: 'Level 7' },\n  { id: '554', parentId: '537', name: 'Level 4', subtext: 'id 554', type: 'Level 4' },\n  { id: '555', parentId: '554', name: 'Level 5', subtext: 'id 555', type: 'Level 5' },\n  { id: '556', parentId: '555', name: 'Level 6', subtext: 'id 556', type: 'Level 6' },\n  { id: '557', parentId: '556', name: 'Level 7', subtext: 'id 557', type: 'Level 7' },\n  { id: '558', parentId: '556', name: 'Level 7', subtext: 'id 558', type: 'Level 7' },\n  { id: '559', parentId: '556', name: 'Level 7', subtext: 'id 559', type: 'Level 7' },\n  { id: '560', parentId: '556', name: 'Level 7', subtext: 'id 560', type: 'Level 7' },\n  { id: '561', parentId: '555', name: 'Level 6', subtext: 'id 561', type: 'Level 6' },\n  { id: '562', parentId: '561', name: 'Level 7', subtext: 'id 562', type: 'Level 7' },\n  { id: '563', parentId: '561', name: 'Level 7', subtext: 'id 563', type: 'Level 7' },\n  { id: '564', parentId: '561', name: 'Level 7', subtext: 'id 564', type: 'Level 7' },\n  { id: '565', parentId: '561', name: 'Level 7', subtext: 'id 565', type: 'Level 7' },\n  { id: '566', parentId: '561', name: 'Level 7', subtext: 'id 566', type: 'Level 7' },\n  { id: '567', parentId: '555', name: 'Level 6', subtext: 'id 567', type: 'Level 6' },\n  { id: '568', parentId: '567', name: 'Level 7', subtext: 'id 568', type: 'Level 7' },\n  { id: '569', parentId: '555', name: 'Level 6', subtext: 'id 569', type: 'Level 6' },\n  { id: '570', parentId: '569', name: 'Level 7', subtext: 'id 570', type: 'Level 7' },\n  { id: '571', parentId: '555', name: 'Level 6', subtext: 'id 571', type: 'Level 6' },\n  { id: '572', parentId: '571', name: 'Level 7', subtext: 'id 572', type: 'Level 7' },\n  { id: '573', parentId: '571', name: 'Level 7', subtext: 'id 573', type: 'Level 7' },\n  { id: '574', parentId: '571', name: 'Level 7', subtext: 'id 574', type: 'Level 7' },\n  { id: '575', parentId: '571', name: 'Level 7', subtext: 'id 575', type: 'Level 7' },\n  { id: '576', parentId: '571', name: 'Level 7', subtext: 'id 576', type: 'Level 7' },\n  { id: '577', parentId: '554', name: 'Level 5', subtext: 'id 577', type: 'Level 5' },\n  { id: '578', parentId: '577', name: 'Level 6', subtext: 'id 578', type: 'Level 6' },\n  { id: '579', parentId: '578', name: 'Level 7', subtext: 'id 579', type: 'Level 7' },\n  { id: '580', parentId: '578', name: 'Level 7', subtext: 'id 580', type: 'Level 7' },\n  { id: '581', parentId: '578', name: 'Level 7', subtext: 'id 581', type: 'Level 7' },\n  { id: '582', parentId: '578', name: 'Level 7', subtext: 'id 582', type: 'Level 7' },\n  { id: '583', parentId: '578', name: 'Level 7', subtext: 'id 583', type: 'Level 7' },\n  { id: '584', parentId: '577', name: 'Level 6', subtext: 'id 584', type: 'Level 6' },\n  { id: '585', parentId: '584', name: 'Level 7', subtext: 'id 585', type: 'Level 7' },\n  { id: '586', parentId: '577', name: 'Level 6', subtext: 'id 586', type: 'Level 6' },\n  { id: '587', parentId: '586', name: 'Level 7', subtext: 'id 587', type: 'Level 7' },\n  { id: '588', parentId: '586', name: 'Level 7', subtext: 'id 588', type: 'Level 7' },\n  { id: '589', parentId: '586', name: 'Level 7', subtext: 'id 589', type: 'Level 7' },\n  { id: '590', parentId: '537', name: 'Level 4', subtext: 'id 590', type: 'Level 4' },\n  { id: '591', parentId: '590', name: 'Level 5', subtext: 'id 591', type: 'Level 5' },\n  { id: '592', parentId: '591', name: 'Level 6', subtext: 'id 592', type: 'Level 6' },\n  { id: '593', parentId: '592', name: 'Level 7', subtext: 'id 593', type: 'Level 7' },\n  { id: '594', parentId: '592', name: 'Level 7', subtext: 'id 594', type: 'Level 7' },\n  { id: '595', parentId: '592', name: 'Level 7', subtext: 'id 595', type: 'Level 7' },\n  { id: '596', parentId: '590', name: 'Level 5', subtext: 'id 596', type: 'Level 5' },\n  { id: '597', parentId: '596', name: 'Level 6', subtext: 'id 597', type: 'Level 6' },\n  { id: '598', parentId: '597', name: 'Level 7', subtext: 'id 598', type: 'Level 7' },\n  { id: '599', parentId: '597', name: 'Level 7', subtext: 'id 599', type: 'Level 7' },\n  { id: '600', parentId: '597', name: 'Level 7', subtext: 'id 600', type: 'Level 7' },\n  { id: '601', parentId: '597', name: 'Level 7', subtext: 'id 601', type: 'Level 7' },\n  { id: '602', parentId: '597', name: 'Level 7', subtext: 'id 602', type: 'Level 7' },\n  { id: '603', parentId: '596', name: 'Level 6', subtext: 'id 603', type: 'Level 6' },\n  { id: '604', parentId: '603', name: 'Level 7', subtext: 'id 604', type: 'Level 7' },\n  { id: '605', parentId: '603', name: 'Level 7', subtext: 'id 605', type: 'Level 7' },\n  { id: '606', parentId: '603', name: 'Level 7', subtext: 'id 606', type: 'Level 7' },\n  { id: '607', parentId: '603', name: 'Level 7', subtext: 'id 607', type: 'Level 7' },\n  { id: '608', parentId: '596', name: 'Level 6', subtext: 'id 608', type: 'Level 6' },\n  { id: '609', parentId: '608', name: 'Level 7', subtext: 'id 609', type: 'Level 7' },\n  { id: '610', parentId: '608', name: 'Level 7', subtext: 'id 610', type: 'Level 7' },\n  { id: '611', parentId: '608', name: 'Level 7', subtext: 'id 611', type: 'Level 7' },\n  { id: '612', parentId: '608', name: 'Level 7', subtext: 'id 612', type: 'Level 7' },\n  { id: '613', parentId: '608', name: 'Level 7', subtext: 'id 613', type: 'Level 7' },\n  { id: '614', parentId: '596', name: 'Level 6', subtext: 'id 614', type: 'Level 6' },\n  { id: '615', parentId: '614', name: 'Level 7', subtext: 'id 615', type: 'Level 7' },\n  { id: '616', parentId: '614', name: 'Level 7', subtext: 'id 616', type: 'Level 7' },\n  { id: '617', parentId: '614', name: 'Level 7', subtext: 'id 617', type: 'Level 7' },\n  { id: '618', parentId: '537', name: 'Level 4', subtext: 'id 618', type: 'Level 4' },\n  { id: '619', parentId: '618', name: 'Level 5', subtext: 'id 619', type: 'Level 5' },\n  { id: '620', parentId: '619', name: 'Level 6', subtext: 'id 620', type: 'Level 6' },\n  { id: '621', parentId: '620', name: 'Level 7', subtext: 'id 621', type: 'Level 7' },\n  { id: '622', parentId: '618', name: 'Level 5', subtext: 'id 622', type: 'Level 5' },\n  { id: '623', parentId: '622', name: 'Level 6', subtext: 'id 623', type: 'Level 6' },\n  { id: '624', parentId: '623', name: 'Level 7', subtext: 'id 624', type: 'Level 7' },\n  { id: '625', parentId: '623', name: 'Level 7', subtext: 'id 625', type: 'Level 7' },\n  { id: '626', parentId: '623', name: 'Level 7', subtext: 'id 626', type: 'Level 7' },\n  { id: '627', parentId: '623', name: 'Level 7', subtext: 'id 627', type: 'Level 7' },\n  { id: '628', parentId: '622', name: 'Level 6', subtext: 'id 628', type: 'Level 6' },\n  { id: '629', parentId: '628', name: 'Level 7', subtext: 'id 629', type: 'Level 7' },\n  { id: '630', parentId: '628', name: 'Level 7', subtext: 'id 630', type: 'Level 7' },\n  { id: '631', parentId: '628', name: 'Level 7', subtext: 'id 631', type: 'Level 7' },\n  { id: '632', parentId: '622', name: 'Level 6', subtext: 'id 632', type: 'Level 6' },\n  { id: '633', parentId: '632', name: 'Level 7', subtext: 'id 633', type: 'Level 7' },\n  { id: '634', parentId: '632', name: 'Level 7', subtext: 'id 634', type: 'Level 7' },\n  { id: '635', parentId: '632', name: 'Level 7', subtext: 'id 635', type: 'Level 7' },\n  { id: '636', parentId: '632', name: 'Level 7', subtext: 'id 636', type: 'Level 7' },\n  { id: '637', parentId: '622', name: 'Level 6', subtext: 'id 637', type: 'Level 6' },\n  { id: '638', parentId: '637', name: 'Level 7', subtext: 'id 638', type: 'Level 7' },\n  { id: '639', parentId: '637', name: 'Level 7', subtext: 'id 639', type: 'Level 7' },\n  { id: '640', parentId: '637', name: 'Level 7', subtext: 'id 640', type: 'Level 7' },\n  { id: '641', parentId: '637', name: 'Level 7', subtext: 'id 641', type: 'Level 7' },\n  { id: '642', parentId: '637', name: 'Level 7', subtext: 'id 642', type: 'Level 7' },\n  { id: '643', parentId: '618', name: 'Level 5', subtext: 'id 643', type: 'Level 5' },\n  { id: '644', parentId: '643', name: 'Level 6', subtext: 'id 644', type: 'Level 6' },\n  { id: '645', parentId: '644', name: 'Level 7', subtext: 'id 645', type: 'Level 7' },\n  { id: '646', parentId: '644', name: 'Level 7', subtext: 'id 646', type: 'Level 7' },\n  { id: '647', parentId: '643', name: 'Level 6', subtext: 'id 647', type: 'Level 6' },\n  { id: '648', parentId: '647', name: 'Level 7', subtext: 'id 648', type: 'Level 7' },\n  { id: '649', parentId: '643', name: 'Level 6', subtext: 'id 649', type: 'Level 6' },\n  { id: '650', parentId: '649', name: 'Level 7', subtext: 'id 650', type: 'Level 7' },\n  { id: '651', parentId: '649', name: 'Level 7', subtext: 'id 651', type: 'Level 7' },\n  { id: '652', parentId: '649', name: 'Level 7', subtext: 'id 652', type: 'Level 7' },\n  { id: '653', parentId: '643', name: 'Level 6', subtext: 'id 653', type: 'Level 6' },\n  { id: '654', parentId: '653', name: 'Level 7', subtext: 'id 654', type: 'Level 7' },\n  { id: '655', parentId: '643', name: 'Level 6', subtext: 'id 655', type: 'Level 6' },\n  { id: '656', parentId: '655', name: 'Level 7', subtext: 'id 656', type: 'Level 7' },\n  { id: '657', parentId: '655', name: 'Level 7', subtext: 'id 657', type: 'Level 7' },\n  { id: '658', parentId: '655', name: 'Level 7', subtext: 'id 658', type: 'Level 7' },\n  { id: '659', parentId: '655', name: 'Level 7', subtext: 'id 659', type: 'Level 7' },\n  { id: '660', parentId: '655', name: 'Level 7', subtext: 'id 660', type: 'Level 7' },\n  { id: '661', parentId: '618', name: 'Level 5', subtext: 'id 661', type: 'Level 5' },\n  { id: '662', parentId: '661', name: 'Level 6', subtext: 'id 662', type: 'Level 6' },\n  { id: '663', parentId: '662', name: 'Level 7', subtext: 'id 663', type: 'Level 7' },\n  { id: '664', parentId: '662', name: 'Level 7', subtext: 'id 664', type: 'Level 7' },\n  { id: '665', parentId: '661', name: 'Level 6', subtext: 'id 665', type: 'Level 6' },\n  { id: '666', parentId: '665', name: 'Level 7', subtext: 'id 666', type: 'Level 7' },\n  { id: '667', parentId: '665', name: 'Level 7', subtext: 'id 667', type: 'Level 7' },\n  { id: '668', parentId: '661', name: 'Level 6', subtext: 'id 668', type: 'Level 6' },\n  { id: '669', parentId: '668', name: 'Level 7', subtext: 'id 669', type: 'Level 7' },\n  { id: '670', parentId: '478', name: 'Level 2', subtext: 'id 670', type: 'Level 2' },\n  { id: '671', parentId: '670', name: 'Level 3', subtext: 'id 671', type: 'Level 3' },\n  { id: '672', parentId: '671', name: 'Level 4', subtext: 'id 672', type: 'Level 4' },\n  { id: '673', parentId: '672', name: 'Level 5', subtext: 'id 673', type: 'Level 5' },\n  { id: '674', parentId: '673', name: 'Level 6', subtext: 'id 674', type: 'Level 6' },\n  { id: '675', parentId: '674', name: 'Level 7', subtext: 'id 675', type: 'Level 7' },\n  { id: '676', parentId: '674', name: 'Level 7', subtext: 'id 676', type: 'Level 7' },\n  { id: '677', parentId: '674', name: 'Level 7', subtext: 'id 677', type: 'Level 7' },\n  { id: '678', parentId: '672', name: 'Level 5', subtext: 'id 678', type: 'Level 5' },\n  { id: '679', parentId: '678', name: 'Level 6', subtext: 'id 679', type: 'Level 6' },\n  { id: '680', parentId: '679', name: 'Level 7', subtext: 'id 680', type: 'Level 7' },\n  { id: '681', parentId: '679', name: 'Level 7', subtext: 'id 681', type: 'Level 7' },\n  { id: '682', parentId: '679', name: 'Level 7', subtext: 'id 682', type: 'Level 7' },\n  { id: '683', parentId: '679', name: 'Level 7', subtext: 'id 683', type: 'Level 7' },\n  { id: '684', parentId: '678', name: 'Level 6', subtext: 'id 684', type: 'Level 6' },\n  { id: '685', parentId: '684', name: 'Level 7', subtext: 'id 685', type: 'Level 7' },\n  { id: '686', parentId: '684', name: 'Level 7', subtext: 'id 686', type: 'Level 7' },\n  { id: '687', parentId: '684', name: 'Level 7', subtext: 'id 687', type: 'Level 7' },\n  { id: '688', parentId: '678', name: 'Level 6', subtext: 'id 688', type: 'Level 6' },\n  { id: '689', parentId: '688', name: 'Level 7', subtext: 'id 689', type: 'Level 7' },\n  { id: '690', parentId: '672', name: 'Level 5', subtext: 'id 690', type: 'Level 5' },\n  { id: '691', parentId: '690', name: 'Level 6', subtext: 'id 691', type: 'Level 6' },\n  { id: '692', parentId: '691', name: 'Level 7', subtext: 'id 692', type: 'Level 7' },\n  { id: '693', parentId: '691', name: 'Level 7', subtext: 'id 693', type: 'Level 7' },\n  { id: '694', parentId: '691', name: 'Level 7', subtext: 'id 694', type: 'Level 7' },\n  { id: '695', parentId: '691', name: 'Level 7', subtext: 'id 695', type: 'Level 7' },\n  { id: '696', parentId: '691', name: 'Level 7', subtext: 'id 696', type: 'Level 7' },\n  { id: '697', parentId: '690', name: 'Level 6', subtext: 'id 697', type: 'Level 6' },\n  { id: '698', parentId: '697', name: 'Level 7', subtext: 'id 698', type: 'Level 7' },\n  { id: '699', parentId: '672', name: 'Level 5', subtext: 'id 699', type: 'Level 5' },\n  { id: '700', parentId: '699', name: 'Level 6', subtext: 'id 700', type: 'Level 6' },\n  { id: '701', parentId: '700', name: 'Level 7', subtext: 'id 701', type: 'Level 7' },\n  { id: '702', parentId: '700', name: 'Level 7', subtext: 'id 702', type: 'Level 7' },\n  { id: '703', parentId: '700', name: 'Level 7', subtext: 'id 703', type: 'Level 7' },\n  { id: '704', parentId: '700', name: 'Level 7', subtext: 'id 704', type: 'Level 7' },\n  { id: '705', parentId: '700', name: 'Level 7', subtext: 'id 705', type: 'Level 7' },\n  { id: '706', parentId: '699', name: 'Level 6', subtext: 'id 706', type: 'Level 6' },\n  { id: '707', parentId: '706', name: 'Level 7', subtext: 'id 707', type: 'Level 7' },\n  { id: '708', parentId: '706', name: 'Level 7', subtext: 'id 708', type: 'Level 7' },\n  { id: '709', parentId: '671', name: 'Level 4', subtext: 'id 709', type: 'Level 4' },\n  { id: '710', parentId: '709', name: 'Level 5', subtext: 'id 710', type: 'Level 5' },\n  { id: '711', parentId: '710', name: 'Level 6', subtext: 'id 711', type: 'Level 6' },\n  { id: '712', parentId: '711', name: 'Level 7', subtext: 'id 712', type: 'Level 7' },\n  { id: '713', parentId: '711', name: 'Level 7', subtext: 'id 713', type: 'Level 7' },\n  { id: '714', parentId: '711', name: 'Level 7', subtext: 'id 714', type: 'Level 7' },\n  { id: '715', parentId: '711', name: 'Level 7', subtext: 'id 715', type: 'Level 7' },\n  { id: '716', parentId: '710', name: 'Level 6', subtext: 'id 716', type: 'Level 6' },\n  { id: '717', parentId: '716', name: 'Level 7', subtext: 'id 717', type: 'Level 7' },\n  { id: '718', parentId: '716', name: 'Level 7', subtext: 'id 718', type: 'Level 7' },\n  { id: '719', parentId: '716', name: 'Level 7', subtext: 'id 719', type: 'Level 7' },\n  { id: '720', parentId: '710', name: 'Level 6', subtext: 'id 720', type: 'Level 6' },\n  { id: '721', parentId: '720', name: 'Level 7', subtext: 'id 721', type: 'Level 7' },\n  { id: '722', parentId: '710', name: 'Level 6', subtext: 'id 722', type: 'Level 6' },\n  { id: '723', parentId: '722', name: 'Level 7', subtext: 'id 723', type: 'Level 7' },\n  { id: '724', parentId: '710', name: 'Level 6', subtext: 'id 724', type: 'Level 6' },\n  { id: '725', parentId: '724', name: 'Level 7', subtext: 'id 725', type: 'Level 7' },\n  { id: '726', parentId: '724', name: 'Level 7', subtext: 'id 726', type: 'Level 7' },\n  { id: '727', parentId: '724', name: 'Level 7', subtext: 'id 727', type: 'Level 7' },\n  { id: '728', parentId: '724', name: 'Level 7', subtext: 'id 728', type: 'Level 7' },\n  { id: '729', parentId: '724', name: 'Level 7', subtext: 'id 729', type: 'Level 7' },\n  { id: '730', parentId: '709', name: 'Level 5', subtext: 'id 730', type: 'Level 5' },\n  { id: '731', parentId: '730', name: 'Level 6', subtext: 'id 731', type: 'Level 6' },\n  { id: '732', parentId: '731', name: 'Level 7', subtext: 'id 732', type: 'Level 7' },\n  { id: '733', parentId: '731', name: 'Level 7', subtext: 'id 733', type: 'Level 7' },\n  { id: '734', parentId: '731', name: 'Level 7', subtext: 'id 734', type: 'Level 7' },\n  { id: '735', parentId: '731', name: 'Level 7', subtext: 'id 735', type: 'Level 7' },\n  { id: '736', parentId: '730', name: 'Level 6', subtext: 'id 736', type: 'Level 6' },\n  { id: '737', parentId: '736', name: 'Level 7', subtext: 'id 737', type: 'Level 7' },\n  { id: '738', parentId: '736', name: 'Level 7', subtext: 'id 738', type: 'Level 7' },\n  { id: '739', parentId: '736', name: 'Level 7', subtext: 'id 739', type: 'Level 7' },\n  { id: '740', parentId: '736', name: 'Level 7', subtext: 'id 740', type: 'Level 7' },\n  { id: '741', parentId: '730', name: 'Level 6', subtext: 'id 741', type: 'Level 6' },\n  { id: '742', parentId: '741', name: 'Level 7', subtext: 'id 742', type: 'Level 7' },\n  { id: '743', parentId: '730', name: 'Level 6', subtext: 'id 743', type: 'Level 6' },\n  { id: '744', parentId: '743', name: 'Level 7', subtext: 'id 744', type: 'Level 7' },\n  { id: '745', parentId: '671', name: 'Level 4', subtext: 'id 745', type: 'Level 4' },\n  { id: '746', parentId: '745', name: 'Level 5', subtext: 'id 746', type: 'Level 5' },\n  { id: '747', parentId: '746', name: 'Level 6', subtext: 'id 747', type: 'Level 6' },\n  { id: '748', parentId: '747', name: 'Level 7', subtext: 'id 748', type: 'Level 7' },\n  { id: '749', parentId: '747', name: 'Level 7', subtext: 'id 749', type: 'Level 7' },\n  { id: '750', parentId: '747', name: 'Level 7', subtext: 'id 750', type: 'Level 7' },\n  { id: '751', parentId: '747', name: 'Level 7', subtext: 'id 751', type: 'Level 7' },\n  { id: '752', parentId: '746', name: 'Level 6', subtext: 'id 752', type: 'Level 6' },\n  { id: '753', parentId: '752', name: 'Level 7', subtext: 'id 753', type: 'Level 7' },\n  { id: '754', parentId: '752', name: 'Level 7', subtext: 'id 754', type: 'Level 7' },\n  { id: '755', parentId: '752', name: 'Level 7', subtext: 'id 755', type: 'Level 7' },\n  { id: '756', parentId: '745', name: 'Level 5', subtext: 'id 756', type: 'Level 5' },\n  { id: '757', parentId: '756', name: 'Level 6', subtext: 'id 757', type: 'Level 6' },\n  { id: '758', parentId: '757', name: 'Level 7', subtext: 'id 758', type: 'Level 7' },\n  { id: '759', parentId: '757', name: 'Level 7', subtext: 'id 759', type: 'Level 7' },\n  { id: '760', parentId: '757', name: 'Level 7', subtext: 'id 760', type: 'Level 7' },\n  { id: '761', parentId: '757', name: 'Level 7', subtext: 'id 761', type: 'Level 7' },\n  { id: '762', parentId: '757', name: 'Level 7', subtext: 'id 762', type: 'Level 7' },\n  { id: '763', parentId: '756', name: 'Level 6', subtext: 'id 763', type: 'Level 6' },\n  { id: '764', parentId: '763', name: 'Level 7', subtext: 'id 764', type: 'Level 7' },\n  { id: '765', parentId: '763', name: 'Level 7', subtext: 'id 765', type: 'Level 7' },\n  { id: '766', parentId: '756', name: 'Level 6', subtext: 'id 766', type: 'Level 6' },\n  { id: '767', parentId: '766', name: 'Level 7', subtext: 'id 767', type: 'Level 7' },\n  { id: '768', parentId: '766', name: 'Level 7', subtext: 'id 768', type: 'Level 7' },\n  { id: '769', parentId: '766', name: 'Level 7', subtext: 'id 769', type: 'Level 7' },\n  { id: '770', parentId: '766', name: 'Level 7', subtext: 'id 770', type: 'Level 7' },\n  { id: '771', parentId: '756', name: 'Level 6', subtext: 'id 771', type: 'Level 6' },\n  { id: '772', parentId: '771', name: 'Level 7', subtext: 'id 772', type: 'Level 7' },\n  { id: '773', parentId: '771', name: 'Level 7', subtext: 'id 773', type: 'Level 7' },\n  { id: '774', parentId: '745', name: 'Level 5', subtext: 'id 774', type: 'Level 5' },\n  { id: '775', parentId: '774', name: 'Level 6', subtext: 'id 775', type: 'Level 6' },\n  { id: '776', parentId: '775', name: 'Level 7', subtext: 'id 776', type: 'Level 7' },\n  { id: '777', parentId: '774', name: 'Level 6', subtext: 'id 777', type: 'Level 6' },\n  { id: '778', parentId: '777', name: 'Level 7', subtext: 'id 778', type: 'Level 7' },\n  { id: '779', parentId: '777', name: 'Level 7', subtext: 'id 779', type: 'Level 7' },\n  { id: '780', parentId: '777', name: 'Level 7', subtext: 'id 780', type: 'Level 7' },\n  { id: '781', parentId: '777', name: 'Level 7', subtext: 'id 781', type: 'Level 7' },\n  { id: '782', parentId: '774', name: 'Level 6', subtext: 'id 782', type: 'Level 6' },\n  { id: '783', parentId: '782', name: 'Level 7', subtext: 'id 783', type: 'Level 7' },\n  { id: '784', parentId: '782', name: 'Level 7', subtext: 'id 784', type: 'Level 7' },\n  { id: '785', parentId: '774', name: 'Level 6', subtext: 'id 785', type: 'Level 6' },\n  { id: '786', parentId: '785', name: 'Level 7', subtext: 'id 786', type: 'Level 7' },\n  { id: '787', parentId: '785', name: 'Level 7', subtext: 'id 787', type: 'Level 7' },\n  { id: '788', parentId: '671', name: 'Level 4', subtext: 'id 788', type: 'Level 4' },\n  { id: '789', parentId: '788', name: 'Level 5', subtext: 'id 789', type: 'Level 5' },\n  { id: '790', parentId: '789', name: 'Level 6', subtext: 'id 790', type: 'Level 6' },\n  { id: '791', parentId: '790', name: 'Level 7', subtext: 'id 791', type: 'Level 7' },\n  { id: '792', parentId: '790', name: 'Level 7', subtext: 'id 792', type: 'Level 7' },\n  { id: '793', parentId: '789', name: 'Level 6', subtext: 'id 793', type: 'Level 6' },\n  { id: '794', parentId: '793', name: 'Level 7', subtext: 'id 794', type: 'Level 7' },\n  { id: '795', parentId: '793', name: 'Level 7', subtext: 'id 795', type: 'Level 7' },\n  { id: '796', parentId: '793', name: 'Level 7', subtext: 'id 796', type: 'Level 7' },\n  { id: '797', parentId: '788', name: 'Level 5', subtext: 'id 797', type: 'Level 5' },\n  { id: '798', parentId: '797', name: 'Level 6', subtext: 'id 798', type: 'Level 6' },\n  { id: '799', parentId: '798', name: 'Level 7', subtext: 'id 799', type: 'Level 7' },\n  { id: '800', parentId: '798', name: 'Level 7', subtext: 'id 800', type: 'Level 7' },\n  { id: '801', parentId: '797', name: 'Level 6', subtext: 'id 801', type: 'Level 6' },\n  { id: '802', parentId: '801', name: 'Level 7', subtext: 'id 802', type: 'Level 7' },\n  { id: '803', parentId: '801', name: 'Level 7', subtext: 'id 803', type: 'Level 7' },\n  { id: '804', parentId: '801', name: 'Level 7', subtext: 'id 804', type: 'Level 7' },\n  { id: '805', parentId: '801', name: 'Level 7', subtext: 'id 805', type: 'Level 7' },\n  { id: '806', parentId: '788', name: 'Level 5', subtext: 'id 806', type: 'Level 5' },\n  { id: '807', parentId: '806', name: 'Level 6', subtext: 'id 807', type: 'Level 6' },\n  { id: '808', parentId: '807', name: 'Level 7', subtext: 'id 808', type: 'Level 7' },\n  { id: '809', parentId: '807', name: 'Level 7', subtext: 'id 809', type: 'Level 7' },\n  { id: '810', parentId: '806', name: 'Level 6', subtext: 'id 810', type: 'Level 6' },\n  { id: '811', parentId: '810', name: 'Level 7', subtext: 'id 811', type: 'Level 7' },\n  { id: '812', parentId: '806', name: 'Level 6', subtext: 'id 812', type: 'Level 6' },\n  { id: '813', parentId: '812', name: 'Level 7', subtext: 'id 813', type: 'Level 7' },\n  { id: '814', parentId: '806', name: 'Level 6', subtext: 'id 814', type: 'Level 6' },\n  { id: '815', parentId: '814', name: 'Level 7', subtext: 'id 815', type: 'Level 7' },\n  { id: '816', parentId: '814', name: 'Level 7', subtext: 'id 816', type: 'Level 7' },\n  { id: '817', parentId: '814', name: 'Level 7', subtext: 'id 817', type: 'Level 7' },\n  { id: '818', parentId: '814', name: 'Level 7', subtext: 'id 818', type: 'Level 7' },\n  { id: '819', parentId: '806', name: 'Level 6', subtext: 'id 819', type: 'Level 6' },\n  { id: '820', parentId: '819', name: 'Level 7', subtext: 'id 820', type: 'Level 7' },\n  { id: '821', parentId: '788', name: 'Level 5', subtext: 'id 821', type: 'Level 5' },\n  { id: '822', parentId: '821', name: 'Level 6', subtext: 'id 822', type: 'Level 6' },\n  { id: '823', parentId: '822', name: 'Level 7', subtext: 'id 823', type: 'Level 7' },\n  { id: '824', parentId: '822', name: 'Level 7', subtext: 'id 824', type: 'Level 7' },\n  { id: '825', parentId: '822', name: 'Level 7', subtext: 'id 825', type: 'Level 7' },\n  { id: '826', parentId: '821', name: 'Level 6', subtext: 'id 826', type: 'Level 6' },\n  { id: '827', parentId: '826', name: 'Level 7', subtext: 'id 827', type: 'Level 7' },\n  { id: '828', parentId: '821', name: 'Level 6', subtext: 'id 828', type: 'Level 6' },\n  { id: '829', parentId: '828', name: 'Level 7', subtext: 'id 829', type: 'Level 7' },\n  { id: '830', parentId: '821', name: 'Level 6', subtext: 'id 830', type: 'Level 6' },\n  { id: '831', parentId: '830', name: 'Level 7', subtext: 'id 831', type: 'Level 7' },\n  { id: '832', parentId: '830', name: 'Level 7', subtext: 'id 832', type: 'Level 7' },\n  { id: '833', parentId: '671', name: 'Level 4', subtext: 'id 833', type: 'Level 4' },\n  { id: '834', parentId: '833', name: 'Level 5', subtext: 'id 834', type: 'Level 5' },\n  { id: '835', parentId: '834', name: 'Level 6', subtext: 'id 835', type: 'Level 6' },\n  { id: '836', parentId: '835', name: 'Level 7', subtext: 'id 836', type: 'Level 7' },\n  { id: '837', parentId: '834', name: 'Level 6', subtext: 'id 837', type: 'Level 6' },\n  { id: '838', parentId: '837', name: 'Level 7', subtext: 'id 838', type: 'Level 7' },\n  { id: '839', parentId: '837', name: 'Level 7', subtext: 'id 839', type: 'Level 7' },\n  { id: '840', parentId: '837', name: 'Level 7', subtext: 'id 840', type: 'Level 7' },\n  { id: '841', parentId: '837', name: 'Level 7', subtext: 'id 841', type: 'Level 7' },\n  { id: '842', parentId: '837', name: 'Level 7', subtext: 'id 842', type: 'Level 7' },\n  { id: '843', parentId: '833', name: 'Level 5', subtext: 'id 843', type: 'Level 5' },\n  { id: '844', parentId: '843', name: 'Level 6', subtext: 'id 844', type: 'Level 6' },\n  { id: '845', parentId: '844', name: 'Level 7', subtext: 'id 845', type: 'Level 7' },\n  { id: '846', parentId: '833', name: 'Level 5', subtext: 'id 846', type: 'Level 5' },\n  { id: '847', parentId: '846', name: 'Level 6', subtext: 'id 847', type: 'Level 6' },\n  { id: '848', parentId: '847', name: 'Level 7', subtext: 'id 848', type: 'Level 7' },\n  { id: '849', parentId: '847', name: 'Level 7', subtext: 'id 849', type: 'Level 7' },\n  { id: '850', parentId: '847', name: 'Level 7', subtext: 'id 850', type: 'Level 7' },\n  { id: '851', parentId: '846', name: 'Level 6', subtext: 'id 851', type: 'Level 6' },\n  { id: '852', parentId: '851', name: 'Level 7', subtext: 'id 852', type: 'Level 7' },\n  { id: '853', parentId: '851', name: 'Level 7', subtext: 'id 853', type: 'Level 7' },\n  { id: '854', parentId: '851', name: 'Level 7', subtext: 'id 854', type: 'Level 7' },\n  { id: '855', parentId: '851', name: 'Level 7', subtext: 'id 855', type: 'Level 7' },\n  { id: '856', parentId: '851', name: 'Level 7', subtext: 'id 856', type: 'Level 7' },\n  { id: '857', parentId: '846', name: 'Level 6', subtext: 'id 857', type: 'Level 6' },\n  { id: '858', parentId: '857', name: 'Level 7', subtext: 'id 858', type: 'Level 7' },\n  { id: '859', parentId: '857', name: 'Level 7', subtext: 'id 859', type: 'Level 7' },\n  { id: '860', parentId: '846', name: 'Level 6', subtext: 'id 860', type: 'Level 6' },\n  { id: '861', parentId: '860', name: 'Level 7', subtext: 'id 861', type: 'Level 7' },\n  { id: '862', parentId: '860', name: 'Level 7', subtext: 'id 862', type: 'Level 7' },\n  { id: '863', parentId: '860', name: 'Level 7', subtext: 'id 863', type: 'Level 7' },\n  { id: '864', parentId: '860', name: 'Level 7', subtext: 'id 864', type: 'Level 7' },\n  { id: '865', parentId: '860', name: 'Level 7', subtext: 'id 865', type: 'Level 7' },\n  { id: '866', parentId: '833', name: 'Level 5', subtext: 'id 866', type: 'Level 5' },\n  { id: '867', parentId: '866', name: 'Level 6', subtext: 'id 867', type: 'Level 6' },\n  { id: '868', parentId: '867', name: 'Level 7', subtext: 'id 868', type: 'Level 7' },\n  { id: '869', parentId: '867', name: 'Level 7', subtext: 'id 869', type: 'Level 7' },\n  { id: '870', parentId: '867', name: 'Level 7', subtext: 'id 870', type: 'Level 7' },\n  { id: '871', parentId: '867', name: 'Level 7', subtext: 'id 871', type: 'Level 7' },\n  { id: '872', parentId: '867', name: 'Level 7', subtext: 'id 872', type: 'Level 7' },\n  { id: '873', parentId: '866', name: 'Level 6', subtext: 'id 873', type: 'Level 6' },\n  { id: '874', parentId: '873', name: 'Level 7', subtext: 'id 874', type: 'Level 7' },\n  { id: '875', parentId: '873', name: 'Level 7', subtext: 'id 875', type: 'Level 7' },\n  { id: '876', parentId: '873', name: 'Level 7', subtext: 'id 876', type: 'Level 7' },\n  { id: '877', parentId: '873', name: 'Level 7', subtext: 'id 877', type: 'Level 7' },\n  { id: '878', parentId: '670', name: 'Level 3', subtext: 'id 878', type: 'Level 3' },\n  { id: '879', parentId: '878', name: 'Level 4', subtext: 'id 879', type: 'Level 4' },\n  { id: '880', parentId: '879', name: 'Level 5', subtext: 'id 880', type: 'Level 5' },\n  { id: '881', parentId: '880', name: 'Level 6', subtext: 'id 881', type: 'Level 6' },\n  { id: '882', parentId: '881', name: 'Level 7', subtext: 'id 882', type: 'Level 7' },\n  { id: '883', parentId: '881', name: 'Level 7', subtext: 'id 883', type: 'Level 7' },\n  { id: '884', parentId: '880', name: 'Level 6', subtext: 'id 884', type: 'Level 6' },\n  { id: '885', parentId: '884', name: 'Level 7', subtext: 'id 885', type: 'Level 7' },\n  { id: '886', parentId: '880', name: 'Level 6', subtext: 'id 886', type: 'Level 6' },\n  { id: '887', parentId: '886', name: 'Level 7', subtext: 'id 887', type: 'Level 7' },\n  { id: '888', parentId: '886', name: 'Level 7', subtext: 'id 888', type: 'Level 7' },\n  { id: '889', parentId: '886', name: 'Level 7', subtext: 'id 889', type: 'Level 7' },\n  { id: '890', parentId: '886', name: 'Level 7', subtext: 'id 890', type: 'Level 7' },\n  { id: '891', parentId: '880', name: 'Level 6', subtext: 'id 891', type: 'Level 6' },\n  { id: '892', parentId: '891', name: 'Level 7', subtext: 'id 892', type: 'Level 7' },\n  { id: '893', parentId: '891', name: 'Level 7', subtext: 'id 893', type: 'Level 7' },\n  { id: '894', parentId: '891', name: 'Level 7', subtext: 'id 894', type: 'Level 7' },\n  { id: '895', parentId: '880', name: 'Level 6', subtext: 'id 895', type: 'Level 6' },\n  { id: '896', parentId: '895', name: 'Level 7', subtext: 'id 896', type: 'Level 7' },\n  { id: '897', parentId: '895', name: 'Level 7', subtext: 'id 897', type: 'Level 7' },\n  { id: '898', parentId: '895', name: 'Level 7', subtext: 'id 898', type: 'Level 7' },\n  { id: '899', parentId: '895', name: 'Level 7', subtext: 'id 899', type: 'Level 7' },\n  { id: '900', parentId: '879', name: 'Level 5', subtext: 'id 900', type: 'Level 5' },\n  { id: '901', parentId: '900', name: 'Level 6', subtext: 'id 901', type: 'Level 6' },\n  { id: '902', parentId: '901', name: 'Level 7', subtext: 'id 902', type: 'Level 7' },\n  { id: '903', parentId: '879', name: 'Level 5', subtext: 'id 903', type: 'Level 5' },\n  { id: '904', parentId: '903', name: 'Level 6', subtext: 'id 904', type: 'Level 6' },\n  { id: '905', parentId: '904', name: 'Level 7', subtext: 'id 905', type: 'Level 7' },\n  { id: '906', parentId: '903', name: 'Level 6', subtext: 'id 906', type: 'Level 6' },\n  { id: '907', parentId: '906', name: 'Level 7', subtext: 'id 907', type: 'Level 7' },\n  { id: '908', parentId: '906', name: 'Level 7', subtext: 'id 908', type: 'Level 7' },\n  { id: '909', parentId: '906', name: 'Level 7', subtext: 'id 909', type: 'Level 7' },\n  { id: '910', parentId: '903', name: 'Level 6', subtext: 'id 910', type: 'Level 6' },\n  { id: '911', parentId: '910', name: 'Level 7', subtext: 'id 911', type: 'Level 7' },\n  { id: '912', parentId: '910', name: 'Level 7', subtext: 'id 912', type: 'Level 7' },\n  { id: '913', parentId: '910', name: 'Level 7', subtext: 'id 913', type: 'Level 7' },\n  { id: '914', parentId: '903', name: 'Level 6', subtext: 'id 914', type: 'Level 6' },\n  { id: '915', parentId: '914', name: 'Level 7', subtext: 'id 915', type: 'Level 7' },\n  { id: '916', parentId: '914', name: 'Level 7', subtext: 'id 916', type: 'Level 7' },\n  { id: '917', parentId: '879', name: 'Level 5', subtext: 'id 917', type: 'Level 5' },\n  { id: '918', parentId: '917', name: 'Level 6', subtext: 'id 918', type: 'Level 6' },\n  { id: '919', parentId: '918', name: 'Level 7', subtext: 'id 919', type: 'Level 7' },\n  { id: '920', parentId: '918', name: 'Level 7', subtext: 'id 920', type: 'Level 7' },\n  { id: '921', parentId: '917', name: 'Level 6', subtext: 'id 921', type: 'Level 6' },\n  { id: '922', parentId: '921', name: 'Level 7', subtext: 'id 922', type: 'Level 7' },\n  { id: '923', parentId: '921', name: 'Level 7', subtext: 'id 923', type: 'Level 7' },\n  { id: '924', parentId: '921', name: 'Level 7', subtext: 'id 924', type: 'Level 7' },\n  { id: '925', parentId: '879', name: 'Level 5', subtext: 'id 925', type: 'Level 5' },\n  { id: '926', parentId: '925', name: 'Level 6', subtext: 'id 926', type: 'Level 6' },\n  { id: '927', parentId: '926', name: 'Level 7', subtext: 'id 927', type: 'Level 7' },\n  { id: '928', parentId: '926', name: 'Level 7', subtext: 'id 928', type: 'Level 7' },\n  { id: '929', parentId: '878', name: 'Level 4', subtext: 'id 929', type: 'Level 4' },\n  { id: '930', parentId: '929', name: 'Level 5', subtext: 'id 930', type: 'Level 5' },\n  { id: '931', parentId: '930', name: 'Level 6', subtext: 'id 931', type: 'Level 6' },\n  { id: '932', parentId: '931', name: 'Level 7', subtext: 'id 932', type: 'Level 7' },\n  { id: '933', parentId: '931', name: 'Level 7', subtext: 'id 933', type: 'Level 7' },\n  { id: '934', parentId: '930', name: 'Level 6', subtext: 'id 934', type: 'Level 6' },\n  { id: '935', parentId: '934', name: 'Level 7', subtext: 'id 935', type: 'Level 7' },\n  { id: '936', parentId: '934', name: 'Level 7', subtext: 'id 936', type: 'Level 7' },\n  { id: '937', parentId: '930', name: 'Level 6', subtext: 'id 937', type: 'Level 6' },\n  { id: '938', parentId: '937', name: 'Level 7', subtext: 'id 938', type: 'Level 7' },\n  { id: '939', parentId: '937', name: 'Level 7', subtext: 'id 939', type: 'Level 7' },\n  { id: '940', parentId: '930', name: 'Level 6', subtext: 'id 940', type: 'Level 6' },\n  { id: '941', parentId: '940', name: 'Level 7', subtext: 'id 941', type: 'Level 7' },\n  { id: '942', parentId: '940', name: 'Level 7', subtext: 'id 942', type: 'Level 7' },\n  { id: '943', parentId: '940', name: 'Level 7', subtext: 'id 943', type: 'Level 7' },\n  { id: '944', parentId: '940', name: 'Level 7', subtext: 'id 944', type: 'Level 7' },\n  { id: '945', parentId: '940', name: 'Level 7', subtext: 'id 945', type: 'Level 7' },\n  { id: '946', parentId: '930', name: 'Level 6', subtext: 'id 946', type: 'Level 6' },\n  { id: '947', parentId: '946', name: 'Level 7', subtext: 'id 947', type: 'Level 7' },\n  { id: '948', parentId: '946', name: 'Level 7', subtext: 'id 948', type: 'Level 7' },\n  { id: '949', parentId: '929', name: 'Level 5', subtext: 'id 949', type: 'Level 5' },\n  { id: '950', parentId: '949', name: 'Level 6', subtext: 'id 950', type: 'Level 6' },\n  { id: '951', parentId: '950', name: 'Level 7', subtext: 'id 951', type: 'Level 7' },\n  { id: '952', parentId: '950', name: 'Level 7', subtext: 'id 952', type: 'Level 7' },\n  { id: '953', parentId: '950', name: 'Level 7', subtext: 'id 953', type: 'Level 7' },\n  { id: '954', parentId: '950', name: 'Level 7', subtext: 'id 954', type: 'Level 7' },\n  { id: '955', parentId: '949', name: 'Level 6', subtext: 'id 955', type: 'Level 6' },\n  { id: '956', parentId: '955', name: 'Level 7', subtext: 'id 956', type: 'Level 7' },\n  { id: '957', parentId: '955', name: 'Level 7', subtext: 'id 957', type: 'Level 7' },\n  { id: '958', parentId: '955', name: 'Level 7', subtext: 'id 958', type: 'Level 7' },\n  { id: '959', parentId: '955', name: 'Level 7', subtext: 'id 959', type: 'Level 7' },\n  { id: '960', parentId: '949', name: 'Level 6', subtext: 'id 960', type: 'Level 6' },\n  { id: '961', parentId: '960', name: 'Level 7', subtext: 'id 961', type: 'Level 7' },\n  { id: '962', parentId: '949', name: 'Level 6', subtext: 'id 962', type: 'Level 6' },\n  { id: '963', parentId: '962', name: 'Level 7', subtext: 'id 963', type: 'Level 7' },\n  { id: '964', parentId: '962', name: 'Level 7', subtext: 'id 964', type: 'Level 7' },\n  { id: '965', parentId: '878', name: 'Level 4', subtext: 'id 965', type: 'Level 4' },\n  { id: '966', parentId: '965', name: 'Level 5', subtext: 'id 966', type: 'Level 5' },\n  { id: '967', parentId: '966', name: 'Level 6', subtext: 'id 967', type: 'Level 6' },\n  { id: '968', parentId: '967', name: 'Level 7', subtext: 'id 968', type: 'Level 7' },\n  { id: '969', parentId: '967', name: 'Level 7', subtext: 'id 969', type: 'Level 7' },\n  { id: '970', parentId: '967', name: 'Level 7', subtext: 'id 970', type: 'Level 7' },\n  { id: '971', parentId: '966', name: 'Level 6', subtext: 'id 971', type: 'Level 6' },\n  { id: '972', parentId: '971', name: 'Level 7', subtext: 'id 972', type: 'Level 7' },\n  { id: '973', parentId: '971', name: 'Level 7', subtext: 'id 973', type: 'Level 7' },\n  { id: '974', parentId: '878', name: 'Level 4', subtext: 'id 974', type: 'Level 4' },\n  { id: '975', parentId: '974', name: 'Level 5', subtext: 'id 975', type: 'Level 5' },\n  { id: '976', parentId: '975', name: 'Level 6', subtext: 'id 976', type: 'Level 6' },\n  { id: '977', parentId: '976', name: 'Level 7', subtext: 'id 977', type: 'Level 7' },\n  { id: '978', parentId: '976', name: 'Level 7', subtext: 'id 978', type: 'Level 7' },\n  { id: '979', parentId: '976', name: 'Level 7', subtext: 'id 979', type: 'Level 7' },\n  { id: '980', parentId: '975', name: 'Level 6', subtext: 'id 980', type: 'Level 6' },\n  { id: '981', parentId: '980', name: 'Level 7', subtext: 'id 981', type: 'Level 7' },\n  { id: '982', parentId: '980', name: 'Level 7', subtext: 'id 982', type: 'Level 7' },\n  { id: '983', parentId: '975', name: 'Level 6', subtext: 'id 983', type: 'Level 6' },\n  { id: '984', parentId: '983', name: 'Level 7', subtext: 'id 984', type: 'Level 7' },\n  { id: '985', parentId: '983', name: 'Level 7', subtext: 'id 985', type: 'Level 7' },\n  { id: '986', parentId: '983', name: 'Level 7', subtext: 'id 986', type: 'Level 7' },\n  { id: '987', parentId: '974', name: 'Level 5', subtext: 'id 987', type: 'Level 5' },\n  { id: '988', parentId: '987', name: 'Level 6', subtext: 'id 988', type: 'Level 6' },\n  { id: '989', parentId: '988', name: 'Level 7', subtext: 'id 989', type: 'Level 7' },\n  { id: '990', parentId: '988', name: 'Level 7', subtext: 'id 990', type: 'Level 7' },\n  { id: '991', parentId: '987', name: 'Level 6', subtext: 'id 991', type: 'Level 6' },\n  { id: '992', parentId: '991', name: 'Level 7', subtext: 'id 992', type: 'Level 7' },\n  { id: '993', parentId: '991', name: 'Level 7', subtext: 'id 993', type: 'Level 7' },\n  { id: '994', parentId: '987', name: 'Level 6', subtext: 'id 994', type: 'Level 6' },\n  { id: '995', parentId: '994', name: 'Level 7', subtext: 'id 995', type: 'Level 7' },\n  { id: '996', parentId: '994', name: 'Level 7', subtext: 'id 996', type: 'Level 7' },\n  { id: '997', parentId: '994', name: 'Level 7', subtext: 'id 997', type: 'Level 7' },\n  { id: '998', parentId: '994', name: 'Level 7', subtext: 'id 998', type: 'Level 7' },\n  { id: '999', parentId: '994', name: 'Level 7', subtext: 'id 999', type: 'Level 7' },\n  { id: '1000', parentId: '670', name: 'Level 3', subtext: 'id 1000', type: 'Level 3' },\n  { id: '1001', parentId: '1000', name: 'Level 4', subtext: 'id 1001', type: 'Level 4' },\n  { id: '1002', parentId: '1001', name: 'Level 5', subtext: 'id 1002', type: 'Level 5' },\n  { id: '1003', parentId: '1002', name: 'Level 6', subtext: 'id 1003', type: 'Level 6' },\n  { id: '1004', parentId: '1003', name: 'Level 7', subtext: 'id 1004', type: 'Level 7' },\n  { id: '1005', parentId: '1003', name: 'Level 7', subtext: 'id 1005', type: 'Level 7' },\n  { id: '1006', parentId: '1003', name: 'Level 7', subtext: 'id 1006', type: 'Level 7' },\n  { id: '1007', parentId: '1003', name: 'Level 7', subtext: 'id 1007', type: 'Level 7' },\n  { id: '1008', parentId: '1003', name: 'Level 7', subtext: 'id 1008', type: 'Level 7' },\n  { id: '1009', parentId: '1001', name: 'Level 5', subtext: 'id 1009', type: 'Level 5' },\n  { id: '1010', parentId: '1009', name: 'Level 6', subtext: 'id 1010', type: 'Level 6' },\n  { id: '1011', parentId: '1010', name: 'Level 7', subtext: 'id 1011', type: 'Level 7' },\n  { id: '1012', parentId: '1010', name: 'Level 7', subtext: 'id 1012', type: 'Level 7' },\n  { id: '1013', parentId: '1009', name: 'Level 6', subtext: 'id 1013', type: 'Level 6' },\n  { id: '1014', parentId: '1013', name: 'Level 7', subtext: 'id 1014', type: 'Level 7' },\n  { id: '1015', parentId: '1013', name: 'Level 7', subtext: 'id 1015', type: 'Level 7' },\n  { id: '1016', parentId: '1013', name: 'Level 7', subtext: 'id 1016', type: 'Level 7' },\n  { id: '1017', parentId: '1013', name: 'Level 7', subtext: 'id 1017', type: 'Level 7' },\n  { id: '1018', parentId: '1013', name: 'Level 7', subtext: 'id 1018', type: 'Level 7' },\n  { id: '1019', parentId: '1009', name: 'Level 6', subtext: 'id 1019', type: 'Level 6' },\n  { id: '1020', parentId: '1019', name: 'Level 7', subtext: 'id 1020', type: 'Level 7' },\n  { id: '1021', parentId: '1019', name: 'Level 7', subtext: 'id 1021', type: 'Level 7' },\n  { id: '1022', parentId: '1009', name: 'Level 6', subtext: 'id 1022', type: 'Level 6' },\n  { id: '1023', parentId: '1022', name: 'Level 7', subtext: 'id 1023', type: 'Level 7' },\n  { id: '1024', parentId: '1022', name: 'Level 7', subtext: 'id 1024', type: 'Level 7' },\n  { id: '1025', parentId: '1022', name: 'Level 7', subtext: 'id 1025', type: 'Level 7' },\n  { id: '1026', parentId: '1022', name: 'Level 7', subtext: 'id 1026', type: 'Level 7' },\n  { id: '1027', parentId: '1009', name: 'Level 6', subtext: 'id 1027', type: 'Level 6' },\n  { id: '1028', parentId: '1027', name: 'Level 7', subtext: 'id 1028', type: 'Level 7' },\n  { id: '1029', parentId: '1027', name: 'Level 7', subtext: 'id 1029', type: 'Level 7' },\n  { id: '1030', parentId: '1001', name: 'Level 5', subtext: 'id 1030', type: 'Level 5' },\n  { id: '1031', parentId: '1030', name: 'Level 6', subtext: 'id 1031', type: 'Level 6' },\n  { id: '1032', parentId: '1031', name: 'Level 7', subtext: 'id 1032', type: 'Level 7' },\n  { id: '1033', parentId: '1031', name: 'Level 7', subtext: 'id 1033', type: 'Level 7' },\n  { id: '1034', parentId: '1031', name: 'Level 7', subtext: 'id 1034', type: 'Level 7' },\n  { id: '1035', parentId: '1030', name: 'Level 6', subtext: 'id 1035', type: 'Level 6' },\n  { id: '1036', parentId: '1035', name: 'Level 7', subtext: 'id 1036', type: 'Level 7' },\n  { id: '1037', parentId: '1035', name: 'Level 7', subtext: 'id 1037', type: 'Level 7' },\n  { id: '1038', parentId: '1035', name: 'Level 7', subtext: 'id 1038', type: 'Level 7' },\n  { id: '1039', parentId: '1030', name: 'Level 6', subtext: 'id 1039', type: 'Level 6' },\n  { id: '1040', parentId: '1039', name: 'Level 7', subtext: 'id 1040', type: 'Level 7' },\n  { id: '1041', parentId: '1039', name: 'Level 7', subtext: 'id 1041', type: 'Level 7' },\n  { id: '1042', parentId: '1039', name: 'Level 7', subtext: 'id 1042', type: 'Level 7' },\n  { id: '1043', parentId: '1030', name: 'Level 6', subtext: 'id 1043', type: 'Level 6' },\n  { id: '1044', parentId: '1043', name: 'Level 7', subtext: 'id 1044', type: 'Level 7' },\n  { id: '1045', parentId: '1043', name: 'Level 7', subtext: 'id 1045', type: 'Level 7' },\n  { id: '1046', parentId: '1043', name: 'Level 7', subtext: 'id 1046', type: 'Level 7' },\n  { id: '1047', parentId: '1043', name: 'Level 7', subtext: 'id 1047', type: 'Level 7' },\n  { id: '1048', parentId: '1001', name: 'Level 5', subtext: 'id 1048', type: 'Level 5' },\n  { id: '1049', parentId: '1048', name: 'Level 6', subtext: 'id 1049', type: 'Level 6' },\n  { id: '1050', parentId: '1049', name: 'Level 7', subtext: 'id 1050', type: 'Level 7' },\n  { id: '1051', parentId: '1049', name: 'Level 7', subtext: 'id 1051', type: 'Level 7' },\n  { id: '1052', parentId: '1049', name: 'Level 7', subtext: 'id 1052', type: 'Level 7' },\n  { id: '1053', parentId: '1048', name: 'Level 6', subtext: 'id 1053', type: 'Level 6' },\n  { id: '1054', parentId: '1053', name: 'Level 7', subtext: 'id 1054', type: 'Level 7' },\n  { id: '1055', parentId: '1053', name: 'Level 7', subtext: 'id 1055', type: 'Level 7' },\n  { id: '1056', parentId: '1053', name: 'Level 7', subtext: 'id 1056', type: 'Level 7' },\n  { id: '1057', parentId: '1053', name: 'Level 7', subtext: 'id 1057', type: 'Level 7' },\n  { id: '1058', parentId: '1053', name: 'Level 7', subtext: 'id 1058', type: 'Level 7' },\n  { id: '1059', parentId: '1000', name: 'Level 4', subtext: 'id 1059', type: 'Level 4' },\n  { id: '1060', parentId: '1059', name: 'Level 5', subtext: 'id 1060', type: 'Level 5' },\n  { id: '1061', parentId: '1060', name: 'Level 6', subtext: 'id 1061', type: 'Level 6' },\n  { id: '1062', parentId: '1061', name: 'Level 7', subtext: 'id 1062', type: 'Level 7' },\n  { id: '1063', parentId: '1060', name: 'Level 6', subtext: 'id 1063', type: 'Level 6' },\n  { id: '1064', parentId: '1063', name: 'Level 7', subtext: 'id 1064', type: 'Level 7' },\n  { id: '1065', parentId: '1063', name: 'Level 7', subtext: 'id 1065', type: 'Level 7' },\n  { id: '1066', parentId: '1063', name: 'Level 7', subtext: 'id 1066', type: 'Level 7' },\n  { id: '1067', parentId: '1063', name: 'Level 7', subtext: 'id 1067', type: 'Level 7' },\n  { id: '1068', parentId: '1060', name: 'Level 6', subtext: 'id 1068', type: 'Level 6' },\n  { id: '1069', parentId: '1068', name: 'Level 7', subtext: 'id 1069', type: 'Level 7' },\n  { id: '1070', parentId: '1060', name: 'Level 6', subtext: 'id 1070', type: 'Level 6' },\n  { id: '1071', parentId: '1070', name: 'Level 7', subtext: 'id 1071', type: 'Level 7' },\n  { id: '1072', parentId: '1060', name: 'Level 6', subtext: 'id 1072', type: 'Level 6' },\n  { id: '1073', parentId: '1072', name: 'Level 7', subtext: 'id 1073', type: 'Level 7' },\n  { id: '1074', parentId: '1072', name: 'Level 7', subtext: 'id 1074', type: 'Level 7' },\n  { id: '1075', parentId: '1072', name: 'Level 7', subtext: 'id 1075', type: 'Level 7' },\n  { id: '1076', parentId: '1059', name: 'Level 5', subtext: 'id 1076', type: 'Level 5' },\n  { id: '1077', parentId: '1076', name: 'Level 6', subtext: 'id 1077', type: 'Level 6' },\n  { id: '1078', parentId: '1077', name: 'Level 7', subtext: 'id 1078', type: 'Level 7' },\n  { id: '1079', parentId: '1077', name: 'Level 7', subtext: 'id 1079', type: 'Level 7' },\n  { id: '1080', parentId: '1077', name: 'Level 7', subtext: 'id 1080', type: 'Level 7' },\n  { id: '1081', parentId: '1077', name: 'Level 7', subtext: 'id 1081', type: 'Level 7' },\n  { id: '1082', parentId: '1077', name: 'Level 7', subtext: 'id 1082', type: 'Level 7' },\n  { id: '1083', parentId: '1076', name: 'Level 6', subtext: 'id 1083', type: 'Level 6' },\n  { id: '1084', parentId: '1083', name: 'Level 7', subtext: 'id 1084', type: 'Level 7' },\n  { id: '1085', parentId: '1083', name: 'Level 7', subtext: 'id 1085', type: 'Level 7' },\n  { id: '1086', parentId: '1083', name: 'Level 7', subtext: 'id 1086', type: 'Level 7' },\n  { id: '1087', parentId: '1083', name: 'Level 7', subtext: 'id 1087', type: 'Level 7' },\n  { id: '1088', parentId: '1076', name: 'Level 6', subtext: 'id 1088', type: 'Level 6' },\n  { id: '1089', parentId: '1088', name: 'Level 7', subtext: 'id 1089', type: 'Level 7' },\n  { id: '1090', parentId: '1088', name: 'Level 7', subtext: 'id 1090', type: 'Level 7' },\n  { id: '1091', parentId: '1088', name: 'Level 7', subtext: 'id 1091', type: 'Level 7' },\n  { id: '1092', parentId: '1088', name: 'Level 7', subtext: 'id 1092', type: 'Level 7' },\n  { id: '1093', parentId: '1059', name: 'Level 5', subtext: 'id 1093', type: 'Level 5' },\n  { id: '1094', parentId: '1093', name: 'Level 6', subtext: 'id 1094', type: 'Level 6' },\n  { id: '1095', parentId: '1094', name: 'Level 7', subtext: 'id 1095', type: 'Level 7' },\n  { id: '1096', parentId: '1094', name: 'Level 7', subtext: 'id 1096', type: 'Level 7' },\n  { id: '1097', parentId: '1094', name: 'Level 7', subtext: 'id 1097', type: 'Level 7' },\n  { id: '1098', parentId: '1094', name: 'Level 7', subtext: 'id 1098', type: 'Level 7' },\n  { id: '1099', parentId: '1094', name: 'Level 7', subtext: 'id 1099', type: 'Level 7' },\n  { id: '1100', parentId: '1059', name: 'Level 5', subtext: 'id 1100', type: 'Level 5' },\n  { id: '1101', parentId: '1100', name: 'Level 6', subtext: 'id 1101', type: 'Level 6' },\n  { id: '1102', parentId: '1101', name: 'Level 7', subtext: 'id 1102', type: 'Level 7' },\n  { id: '1103', parentId: '1101', name: 'Level 7', subtext: 'id 1103', type: 'Level 7' },\n  { id: '1104', parentId: '1100', name: 'Level 6', subtext: 'id 1104', type: 'Level 6' },\n  { id: '1105', parentId: '1104', name: 'Level 7', subtext: 'id 1105', type: 'Level 7' },\n  { id: '1106', parentId: '1100', name: 'Level 6', subtext: 'id 1106', type: 'Level 6' },\n  { id: '1107', parentId: '1106', name: 'Level 7', subtext: 'id 1107', type: 'Level 7' },\n  { id: '1108', parentId: '1106', name: 'Level 7', subtext: 'id 1108', type: 'Level 7' },\n  { id: '1109', parentId: '1106', name: 'Level 7', subtext: 'id 1109', type: 'Level 7' },\n  { id: '1110', parentId: '1106', name: 'Level 7', subtext: 'id 1110', type: 'Level 7' },\n  { id: '1111', parentId: '1106', name: 'Level 7', subtext: 'id 1111', type: 'Level 7' },\n  { id: '1112', parentId: '1100', name: 'Level 6', subtext: 'id 1112', type: 'Level 6' },\n  { id: '1113', parentId: '1112', name: 'Level 7', subtext: 'id 1113', type: 'Level 7' },\n  { id: '1114', parentId: '1112', name: 'Level 7', subtext: 'id 1114', type: 'Level 7' },\n  { id: '1115', parentId: '1112', name: 'Level 7', subtext: 'id 1115', type: 'Level 7' },\n  { id: '1116', parentId: '1059', name: 'Level 5', subtext: 'id 1116', type: 'Level 5' },\n  { id: '1117', parentId: '1116', name: 'Level 6', subtext: 'id 1117', type: 'Level 6' },\n  { id: '1118', parentId: '1117', name: 'Level 7', subtext: 'id 1118', type: 'Level 7' },\n  { id: '1119', parentId: '1117', name: 'Level 7', subtext: 'id 1119', type: 'Level 7' },\n  { id: '1120', parentId: '1117', name: 'Level 7', subtext: 'id 1120', type: 'Level 7' },\n  { id: '1121', parentId: '1117', name: 'Level 7', subtext: 'id 1121', type: 'Level 7' },\n  { id: '1122', parentId: '1117', name: 'Level 7', subtext: 'id 1122', type: 'Level 7' },\n  { id: '1123', parentId: '1116', name: 'Level 6', subtext: 'id 1123', type: 'Level 6' },\n  { id: '1124', parentId: '1123', name: 'Level 7', subtext: 'id 1124', type: 'Level 7' },\n  { id: '1125', parentId: '1123', name: 'Level 7', subtext: 'id 1125', type: 'Level 7' },\n  { id: '1126', parentId: '1123', name: 'Level 7', subtext: 'id 1126', type: 'Level 7' },\n  { id: '1127', parentId: '1116', name: 'Level 6', subtext: 'id 1127', type: 'Level 6' },\n  { id: '1128', parentId: '1127', name: 'Level 7', subtext: 'id 1128', type: 'Level 7' },\n  { id: '1129', parentId: '1127', name: 'Level 7', subtext: 'id 1129', type: 'Level 7' },\n  { id: '1130', parentId: '1127', name: 'Level 7', subtext: 'id 1130', type: 'Level 7' },\n  { id: '1131', parentId: '1116', name: 'Level 6', subtext: 'id 1131', type: 'Level 6' },\n  { id: '1132', parentId: '1131', name: 'Level 7', subtext: 'id 1132', type: 'Level 7' },\n  { id: '1133', parentId: '1131', name: 'Level 7', subtext: 'id 1133', type: 'Level 7' },\n  { id: '1134', parentId: '1131', name: 'Level 7', subtext: 'id 1134', type: 'Level 7' },\n  { id: '1135', parentId: '1116', name: 'Level 6', subtext: 'id 1135', type: 'Level 6' },\n  { id: '1136', parentId: '1135', name: 'Level 7', subtext: 'id 1136', type: 'Level 7' },\n  { id: '1137', parentId: '1135', name: 'Level 7', subtext: 'id 1137', type: 'Level 7' },\n  { id: '1138', parentId: null, name: 'Level 1', subtext: 'id 1138', type: 'Level 1' },\n  { id: '1139', parentId: '1138', name: 'Level 2', subtext: 'id 1139', type: 'Level 2' },\n  { id: '1140', parentId: '1139', name: 'Level 3', subtext: 'id 1140', type: 'Level 3' },\n  { id: '1141', parentId: '1140', name: 'Level 4', subtext: 'id 1141', type: 'Level 4' },\n  { id: '1142', parentId: '1141', name: 'Level 5', subtext: 'id 1142', type: 'Level 5' },\n  { id: '1143', parentId: '1142', name: 'Level 6', subtext: 'id 1143', type: 'Level 6' },\n  { id: '1144', parentId: '1143', name: 'Level 7', subtext: 'id 1144', type: 'Level 7' },\n  { id: '1145', parentId: '1143', name: 'Level 7', subtext: 'id 1145', type: 'Level 7' },\n  { id: '1146', parentId: '1143', name: 'Level 7', subtext: 'id 1146', type: 'Level 7' },\n  { id: '1147', parentId: '1143', name: 'Level 7', subtext: 'id 1147', type: 'Level 7' },\n  { id: '1148', parentId: '1142', name: 'Level 6', subtext: 'id 1148', type: 'Level 6' },\n  { id: '1149', parentId: '1148', name: 'Level 7', subtext: 'id 1149', type: 'Level 7' },\n  { id: '1150', parentId: '1148', name: 'Level 7', subtext: 'id 1150', type: 'Level 7' },\n  { id: '1151', parentId: '1148', name: 'Level 7', subtext: 'id 1151', type: 'Level 7' },\n  { id: '1152', parentId: '1142', name: 'Level 6', subtext: 'id 1152', type: 'Level 6' },\n  { id: '1153', parentId: '1152', name: 'Level 7', subtext: 'id 1153', type: 'Level 7' },\n  { id: '1154', parentId: '1152', name: 'Level 7', subtext: 'id 1154', type: 'Level 7' },\n  { id: '1155', parentId: '1152', name: 'Level 7', subtext: 'id 1155', type: 'Level 7' },\n  { id: '1156', parentId: '1142', name: 'Level 6', subtext: 'id 1156', type: 'Level 6' },\n  { id: '1157', parentId: '1156', name: 'Level 7', subtext: 'id 1157', type: 'Level 7' },\n  { id: '1158', parentId: '1141', name: 'Level 5', subtext: 'id 1158', type: 'Level 5' },\n  { id: '1159', parentId: '1158', name: 'Level 6', subtext: 'id 1159', type: 'Level 6' },\n  { id: '1160', parentId: '1159', name: 'Level 7', subtext: 'id 1160', type: 'Level 7' },\n  { id: '1161', parentId: '1158', name: 'Level 6', subtext: 'id 1161', type: 'Level 6' },\n  { id: '1162', parentId: '1161', name: 'Level 7', subtext: 'id 1162', type: 'Level 7' },\n  { id: '1163', parentId: '1161', name: 'Level 7', subtext: 'id 1163', type: 'Level 7' },\n  { id: '1164', parentId: '1161', name: 'Level 7', subtext: 'id 1164', type: 'Level 7' },\n  { id: '1165', parentId: '1161', name: 'Level 7', subtext: 'id 1165', type: 'Level 7' },\n  { id: '1166', parentId: '1140', name: 'Level 4', subtext: 'id 1166', type: 'Level 4' },\n  { id: '1167', parentId: '1166', name: 'Level 5', subtext: 'id 1167', type: 'Level 5' },\n  { id: '1168', parentId: '1167', name: 'Level 6', subtext: 'id 1168', type: 'Level 6' },\n  { id: '1169', parentId: '1168', name: 'Level 7', subtext: 'id 1169', type: 'Level 7' },\n  { id: '1170', parentId: '1167', name: 'Level 6', subtext: 'id 1170', type: 'Level 6' },\n  { id: '1171', parentId: '1170', name: 'Level 7', subtext: 'id 1171', type: 'Level 7' },\n  { id: '1172', parentId: '1170', name: 'Level 7', subtext: 'id 1172', type: 'Level 7' },\n  { id: '1173', parentId: '1170', name: 'Level 7', subtext: 'id 1173', type: 'Level 7' },\n  { id: '1174', parentId: '1167', name: 'Level 6', subtext: 'id 1174', type: 'Level 6' },\n  { id: '1175', parentId: '1174', name: 'Level 7', subtext: 'id 1175', type: 'Level 7' },\n  { id: '1176', parentId: '1166', name: 'Level 5', subtext: 'id 1176', type: 'Level 5' },\n  { id: '1177', parentId: '1176', name: 'Level 6', subtext: 'id 1177', type: 'Level 6' },\n  { id: '1178', parentId: '1177', name: 'Level 7', subtext: 'id 1178', type: 'Level 7' },\n  { id: '1179', parentId: '1177', name: 'Level 7', subtext: 'id 1179', type: 'Level 7' },\n  { id: '1180', parentId: '1177', name: 'Level 7', subtext: 'id 1180', type: 'Level 7' },\n  { id: '1181', parentId: '1176', name: 'Level 6', subtext: 'id 1181', type: 'Level 6' },\n  { id: '1182', parentId: '1181', name: 'Level 7', subtext: 'id 1182', type: 'Level 7' },\n  { id: '1183', parentId: '1181', name: 'Level 7', subtext: 'id 1183', type: 'Level 7' },\n  { id: '1184', parentId: '1181', name: 'Level 7', subtext: 'id 1184', type: 'Level 7' },\n  { id: '1185', parentId: '1181', name: 'Level 7', subtext: 'id 1185', type: 'Level 7' },\n  { id: '1186', parentId: '1181', name: 'Level 7', subtext: 'id 1186', type: 'Level 7' },\n  { id: '1187', parentId: '1166', name: 'Level 5', subtext: 'id 1187', type: 'Level 5' },\n  { id: '1188', parentId: '1187', name: 'Level 6', subtext: 'id 1188', type: 'Level 6' },\n  { id: '1189', parentId: '1188', name: 'Level 7', subtext: 'id 1189', type: 'Level 7' },\n  { id: '1190', parentId: '1188', name: 'Level 7', subtext: 'id 1190', type: 'Level 7' },\n  { id: '1191', parentId: '1188', name: 'Level 7', subtext: 'id 1191', type: 'Level 7' },\n  { id: '1192', parentId: '1188', name: 'Level 7', subtext: 'id 1192', type: 'Level 7' },\n  { id: '1193', parentId: '1188', name: 'Level 7', subtext: 'id 1193', type: 'Level 7' },\n  { id: '1194', parentId: '1140', name: 'Level 4', subtext: 'id 1194', type: 'Level 4' },\n  { id: '1195', parentId: '1194', name: 'Level 5', subtext: 'id 1195', type: 'Level 5' },\n  { id: '1196', parentId: '1195', name: 'Level 6', subtext: 'id 1196', type: 'Level 6' },\n  { id: '1197', parentId: '1196', name: 'Level 7', subtext: 'id 1197', type: 'Level 7' },\n  { id: '1198', parentId: '1195', name: 'Level 6', subtext: 'id 1198', type: 'Level 6' },\n  { id: '1199', parentId: '1198', name: 'Level 7', subtext: 'id 1199', type: 'Level 7' },\n  { id: '1200', parentId: '1198', name: 'Level 7', subtext: 'id 1200', type: 'Level 7' },\n  { id: '1201', parentId: '1195', name: 'Level 6', subtext: 'id 1201', type: 'Level 6' },\n  { id: '1202', parentId: '1201', name: 'Level 7', subtext: 'id 1202', type: 'Level 7' },\n  { id: '1203', parentId: '1201', name: 'Level 7', subtext: 'id 1203', type: 'Level 7' },\n  { id: '1204', parentId: '1201', name: 'Level 7', subtext: 'id 1204', type: 'Level 7' },\n  { id: '1205', parentId: '1201', name: 'Level 7', subtext: 'id 1205', type: 'Level 7' },\n  { id: '1206', parentId: '1201', name: 'Level 7', subtext: 'id 1206', type: 'Level 7' },\n  { id: '1207', parentId: '1194', name: 'Level 5', subtext: 'id 1207', type: 'Level 5' },\n  { id: '1208', parentId: '1207', name: 'Level 6', subtext: 'id 1208', type: 'Level 6' },\n  { id: '1209', parentId: '1208', name: 'Level 7', subtext: 'id 1209', type: 'Level 7' },\n  { id: '1210', parentId: '1208', name: 'Level 7', subtext: 'id 1210', type: 'Level 7' },\n  { id: '1211', parentId: '1207', name: 'Level 6', subtext: 'id 1211', type: 'Level 6' },\n  { id: '1212', parentId: '1211', name: 'Level 7', subtext: 'id 1212', type: 'Level 7' },\n  { id: '1213', parentId: '1211', name: 'Level 7', subtext: 'id 1213', type: 'Level 7' },\n  { id: '1214', parentId: '1211', name: 'Level 7', subtext: 'id 1214', type: 'Level 7' },\n  { id: '1215', parentId: '1207', name: 'Level 6', subtext: 'id 1215', type: 'Level 6' },\n  { id: '1216', parentId: '1215', name: 'Level 7', subtext: 'id 1216', type: 'Level 7' },\n  { id: '1217', parentId: '1215', name: 'Level 7', subtext: 'id 1217', type: 'Level 7' },\n  { id: '1218', parentId: '1215', name: 'Level 7', subtext: 'id 1218', type: 'Level 7' },\n  { id: '1219', parentId: '1215', name: 'Level 7', subtext: 'id 1219', type: 'Level 7' },\n  { id: '1220', parentId: '1215', name: 'Level 7', subtext: 'id 1220', type: 'Level 7' },\n  { id: '1221', parentId: '1194', name: 'Level 5', subtext: 'id 1221', type: 'Level 5' },\n  { id: '1222', parentId: '1221', name: 'Level 6', subtext: 'id 1222', type: 'Level 6' },\n  { id: '1223', parentId: '1222', name: 'Level 7', subtext: 'id 1223', type: 'Level 7' },\n  { id: '1224', parentId: '1222', name: 'Level 7', subtext: 'id 1224', type: 'Level 7' },\n  { id: '1225', parentId: '1222', name: 'Level 7', subtext: 'id 1225', type: 'Level 7' },\n  { id: '1226', parentId: '1222', name: 'Level 7', subtext: 'id 1226', type: 'Level 7' },\n  { id: '1227', parentId: '1222', name: 'Level 7', subtext: 'id 1227', type: 'Level 7' },\n  { id: '1228', parentId: '1221', name: 'Level 6', subtext: 'id 1228', type: 'Level 6' },\n  { id: '1229', parentId: '1228', name: 'Level 7', subtext: 'id 1229', type: 'Level 7' },\n  { id: '1230', parentId: '1228', name: 'Level 7', subtext: 'id 1230', type: 'Level 7' },\n  { id: '1231', parentId: '1228', name: 'Level 7', subtext: 'id 1231', type: 'Level 7' },\n  { id: '1232', parentId: '1228', name: 'Level 7', subtext: 'id 1232', type: 'Level 7' },\n  { id: '1233', parentId: '1228', name: 'Level 7', subtext: 'id 1233', type: 'Level 7' },\n  { id: '1234', parentId: '1221', name: 'Level 6', subtext: 'id 1234', type: 'Level 6' },\n  { id: '1235', parentId: '1234', name: 'Level 7', subtext: 'id 1235', type: 'Level 7' },\n  { id: '1236', parentId: '1234', name: 'Level 7', subtext: 'id 1236', type: 'Level 7' },\n  { id: '1237', parentId: '1221', name: 'Level 6', subtext: 'id 1237', type: 'Level 6' },\n  { id: '1238', parentId: '1237', name: 'Level 7', subtext: 'id 1238', type: 'Level 7' },\n  { id: '1239', parentId: '1237', name: 'Level 7', subtext: 'id 1239', type: 'Level 7' },\n  { id: '1240', parentId: '1237', name: 'Level 7', subtext: 'id 1240', type: 'Level 7' },\n  { id: '1241', parentId: '1221', name: 'Level 6', subtext: 'id 1241', type: 'Level 6' },\n  { id: '1242', parentId: '1241', name: 'Level 7', subtext: 'id 1242', type: 'Level 7' },\n  { id: '1243', parentId: '1140', name: 'Level 4', subtext: 'id 1243', type: 'Level 4' },\n  { id: '1244', parentId: '1243', name: 'Level 5', subtext: 'id 1244', type: 'Level 5' },\n  { id: '1245', parentId: '1244', name: 'Level 6', subtext: 'id 1245', type: 'Level 6' },\n  { id: '1246', parentId: '1245', name: 'Level 7', subtext: 'id 1246', type: 'Level 7' },\n  { id: '1247', parentId: '1245', name: 'Level 7', subtext: 'id 1247', type: 'Level 7' },\n  { id: '1248', parentId: '1245', name: 'Level 7', subtext: 'id 1248', type: 'Level 7' },\n  { id: '1249', parentId: '1245', name: 'Level 7', subtext: 'id 1249', type: 'Level 7' },\n  { id: '1250', parentId: '1244', name: 'Level 6', subtext: 'id 1250', type: 'Level 6' },\n  { id: '1251', parentId: '1250', name: 'Level 7', subtext: 'id 1251', type: 'Level 7' },\n  { id: '1252', parentId: '1250', name: 'Level 7', subtext: 'id 1252', type: 'Level 7' },\n  { id: '1253', parentId: '1250', name: 'Level 7', subtext: 'id 1253', type: 'Level 7' },\n  { id: '1254', parentId: '1250', name: 'Level 7', subtext: 'id 1254', type: 'Level 7' },\n  { id: '1255', parentId: '1250', name: 'Level 7', subtext: 'id 1255', type: 'Level 7' },\n  { id: '1256', parentId: '1244', name: 'Level 6', subtext: 'id 1256', type: 'Level 6' },\n  { id: '1257', parentId: '1256', name: 'Level 7', subtext: 'id 1257', type: 'Level 7' },\n  { id: '1258', parentId: '1244', name: 'Level 6', subtext: 'id 1258', type: 'Level 6' },\n  { id: '1259', parentId: '1258', name: 'Level 7', subtext: 'id 1259', type: 'Level 7' },\n  { id: '1260', parentId: '1244', name: 'Level 6', subtext: 'id 1260', type: 'Level 6' },\n  { id: '1261', parentId: '1260', name: 'Level 7', subtext: 'id 1261', type: 'Level 7' },\n  { id: '1262', parentId: '1243', name: 'Level 5', subtext: 'id 1262', type: 'Level 5' },\n  { id: '1263', parentId: '1262', name: 'Level 6', subtext: 'id 1263', type: 'Level 6' },\n  { id: '1264', parentId: '1263', name: 'Level 7', subtext: 'id 1264', type: 'Level 7' },\n  { id: '1265', parentId: '1263', name: 'Level 7', subtext: 'id 1265', type: 'Level 7' },\n  { id: '1266', parentId: '1263', name: 'Level 7', subtext: 'id 1266', type: 'Level 7' },\n  { id: '1267', parentId: '1263', name: 'Level 7', subtext: 'id 1267', type: 'Level 7' },\n  { id: '1268', parentId: '1243', name: 'Level 5', subtext: 'id 1268', type: 'Level 5' },\n  { id: '1269', parentId: '1268', name: 'Level 6', subtext: 'id 1269', type: 'Level 6' },\n  { id: '1270', parentId: '1269', name: 'Level 7', subtext: 'id 1270', type: 'Level 7' },\n  { id: '1271', parentId: '1269', name: 'Level 7', subtext: 'id 1271', type: 'Level 7' },\n  { id: '1272', parentId: '1269', name: 'Level 7', subtext: 'id 1272', type: 'Level 7' },\n  { id: '1273', parentId: '1269', name: 'Level 7', subtext: 'id 1273', type: 'Level 7' },\n  { id: '1274', parentId: '1269', name: 'Level 7', subtext: 'id 1274', type: 'Level 7' },\n  { id: '1275', parentId: '1243', name: 'Level 5', subtext: 'id 1275', type: 'Level 5' },\n  { id: '1276', parentId: '1275', name: 'Level 6', subtext: 'id 1276', type: 'Level 6' },\n  { id: '1277', parentId: '1276', name: 'Level 7', subtext: 'id 1277', type: 'Level 7' },\n  { id: '1278', parentId: '1276', name: 'Level 7', subtext: 'id 1278', type: 'Level 7' },\n  { id: '1279', parentId: '1276', name: 'Level 7', subtext: 'id 1279', type: 'Level 7' },\n  { id: '1280', parentId: '1276', name: 'Level 7', subtext: 'id 1280', type: 'Level 7' },\n  { id: '1281', parentId: '1275', name: 'Level 6', subtext: 'id 1281', type: 'Level 6' },\n  { id: '1282', parentId: '1281', name: 'Level 7', subtext: 'id 1282', type: 'Level 7' },\n  { id: '1283', parentId: '1281', name: 'Level 7', subtext: 'id 1283', type: 'Level 7' },\n  { id: '1284', parentId: '1281', name: 'Level 7', subtext: 'id 1284', type: 'Level 7' },\n  { id: '1285', parentId: '1281', name: 'Level 7', subtext: 'id 1285', type: 'Level 7' },\n  { id: '1286', parentId: '1275', name: 'Level 6', subtext: 'id 1286', type: 'Level 6' },\n  { id: '1287', parentId: '1286', name: 'Level 7', subtext: 'id 1287', type: 'Level 7' },\n  { id: '1288', parentId: '1243', name: 'Level 5', subtext: 'id 1288', type: 'Level 5' },\n  { id: '1289', parentId: '1288', name: 'Level 6', subtext: 'id 1289', type: 'Level 6' },\n  { id: '1290', parentId: '1289', name: 'Level 7', subtext: 'id 1290', type: 'Level 7' },\n  { id: '1291', parentId: '1288', name: 'Level 6', subtext: 'id 1291', type: 'Level 6' },\n  { id: '1292', parentId: '1291', name: 'Level 7', subtext: 'id 1292', type: 'Level 7' },\n  { id: '1293', parentId: '1291', name: 'Level 7', subtext: 'id 1293', type: 'Level 7' },\n  { id: '1294', parentId: '1291', name: 'Level 7', subtext: 'id 1294', type: 'Level 7' },\n  { id: '1295', parentId: '1291', name: 'Level 7', subtext: 'id 1295', type: 'Level 7' },\n  { id: '1296', parentId: '1291', name: 'Level 7', subtext: 'id 1296', type: 'Level 7' },\n  { id: '1297', parentId: '1139', name: 'Level 3', subtext: 'id 1297', type: 'Level 3' },\n  { id: '1298', parentId: '1297', name: 'Level 4', subtext: 'id 1298', type: 'Level 4' },\n  { id: '1299', parentId: '1298', name: 'Level 5', subtext: 'id 1299', type: 'Level 5' },\n  { id: '1300', parentId: '1299', name: 'Level 6', subtext: 'id 1300', type: 'Level 6' },\n  { id: '1301', parentId: '1300', name: 'Level 7', subtext: 'id 1301', type: 'Level 7' },\n  { id: '1302', parentId: '1300', name: 'Level 7', subtext: 'id 1302', type: 'Level 7' },\n  { id: '1303', parentId: '1299', name: 'Level 6', subtext: 'id 1303', type: 'Level 6' },\n  { id: '1304', parentId: '1303', name: 'Level 7', subtext: 'id 1304', type: 'Level 7' },\n  { id: '1305', parentId: '1303', name: 'Level 7', subtext: 'id 1305', type: 'Level 7' },\n  { id: '1306', parentId: '1303', name: 'Level 7', subtext: 'id 1306', type: 'Level 7' },\n  { id: '1307', parentId: '1303', name: 'Level 7', subtext: 'id 1307', type: 'Level 7' },\n  { id: '1308', parentId: '1303', name: 'Level 7', subtext: 'id 1308', type: 'Level 7' },\n  { id: '1309', parentId: '1299', name: 'Level 6', subtext: 'id 1309', type: 'Level 6' },\n  { id: '1310', parentId: '1309', name: 'Level 7', subtext: 'id 1310', type: 'Level 7' },\n  { id: '1311', parentId: '1299', name: 'Level 6', subtext: 'id 1311', type: 'Level 6' },\n  { id: '1312', parentId: '1311', name: 'Level 7', subtext: 'id 1312', type: 'Level 7' },\n  { id: '1313', parentId: '1311', name: 'Level 7', subtext: 'id 1313', type: 'Level 7' },\n  { id: '1314', parentId: '1311', name: 'Level 7', subtext: 'id 1314', type: 'Level 7' },\n  { id: '1315', parentId: '1299', name: 'Level 6', subtext: 'id 1315', type: 'Level 6' },\n  { id: '1316', parentId: '1315', name: 'Level 7', subtext: 'id 1316', type: 'Level 7' },\n  { id: '1317', parentId: '1315', name: 'Level 7', subtext: 'id 1317', type: 'Level 7' },\n  { id: '1318', parentId: '1315', name: 'Level 7', subtext: 'id 1318', type: 'Level 7' },\n  { id: '1319', parentId: '1315', name: 'Level 7', subtext: 'id 1319', type: 'Level 7' },\n  { id: '1320', parentId: '1315', name: 'Level 7', subtext: 'id 1320', type: 'Level 7' },\n  { id: '1321', parentId: '1298', name: 'Level 5', subtext: 'id 1321', type: 'Level 5' },\n  { id: '1322', parentId: '1321', name: 'Level 6', subtext: 'id 1322', type: 'Level 6' },\n  { id: '1323', parentId: '1322', name: 'Level 7', subtext: 'id 1323', type: 'Level 7' },\n  { id: '1324', parentId: '1322', name: 'Level 7', subtext: 'id 1324', type: 'Level 7' },\n  { id: '1325', parentId: '1322', name: 'Level 7', subtext: 'id 1325', type: 'Level 7' },\n  { id: '1326', parentId: '1321', name: 'Level 6', subtext: 'id 1326', type: 'Level 6' },\n  { id: '1327', parentId: '1326', name: 'Level 7', subtext: 'id 1327', type: 'Level 7' },\n  { id: '1328', parentId: '1326', name: 'Level 7', subtext: 'id 1328', type: 'Level 7' },\n  { id: '1329', parentId: '1326', name: 'Level 7', subtext: 'id 1329', type: 'Level 7' },\n  { id: '1330', parentId: '1298', name: 'Level 5', subtext: 'id 1330', type: 'Level 5' },\n  { id: '1331', parentId: '1330', name: 'Level 6', subtext: 'id 1331', type: 'Level 6' },\n  { id: '1332', parentId: '1331', name: 'Level 7', subtext: 'id 1332', type: 'Level 7' },\n  { id: '1333', parentId: '1331', name: 'Level 7', subtext: 'id 1333', type: 'Level 7' },\n  { id: '1334', parentId: '1331', name: 'Level 7', subtext: 'id 1334', type: 'Level 7' },\n  { id: '1335', parentId: '1331', name: 'Level 7', subtext: 'id 1335', type: 'Level 7' },\n  { id: '1336', parentId: '1330', name: 'Level 6', subtext: 'id 1336', type: 'Level 6' },\n  { id: '1337', parentId: '1336', name: 'Level 7', subtext: 'id 1337', type: 'Level 7' },\n  { id: '1338', parentId: '1336', name: 'Level 7', subtext: 'id 1338', type: 'Level 7' },\n  { id: '1339', parentId: '1336', name: 'Level 7', subtext: 'id 1339', type: 'Level 7' },\n  { id: '1340', parentId: '1330', name: 'Level 6', subtext: 'id 1340', type: 'Level 6' },\n  { id: '1341', parentId: '1340', name: 'Level 7', subtext: 'id 1341', type: 'Level 7' },\n  { id: '1342', parentId: '1340', name: 'Level 7', subtext: 'id 1342', type: 'Level 7' },\n  { id: '1343', parentId: '1330', name: 'Level 6', subtext: 'id 1343', type: 'Level 6' },\n  { id: '1344', parentId: '1343', name: 'Level 7', subtext: 'id 1344', type: 'Level 7' },\n  { id: '1345', parentId: '1343', name: 'Level 7', subtext: 'id 1345', type: 'Level 7' },\n  { id: '1346', parentId: '1343', name: 'Level 7', subtext: 'id 1346', type: 'Level 7' },\n  { id: '1347', parentId: '1330', name: 'Level 6', subtext: 'id 1347', type: 'Level 6' },\n  { id: '1348', parentId: '1347', name: 'Level 7', subtext: 'id 1348', type: 'Level 7' },\n  { id: '1349', parentId: '1347', name: 'Level 7', subtext: 'id 1349', type: 'Level 7' },\n  { id: '1350', parentId: '1347', name: 'Level 7', subtext: 'id 1350', type: 'Level 7' },\n  { id: '1351', parentId: '1347', name: 'Level 7', subtext: 'id 1351', type: 'Level 7' },\n  { id: '1352', parentId: '1298', name: 'Level 5', subtext: 'id 1352', type: 'Level 5' },\n  { id: '1353', parentId: '1352', name: 'Level 6', subtext: 'id 1353', type: 'Level 6' },\n  { id: '1354', parentId: '1353', name: 'Level 7', subtext: 'id 1354', type: 'Level 7' },\n  { id: '1355', parentId: '1298', name: 'Level 5', subtext: 'id 1355', type: 'Level 5' },\n  { id: '1356', parentId: '1355', name: 'Level 6', subtext: 'id 1356', type: 'Level 6' },\n  { id: '1357', parentId: '1356', name: 'Level 7', subtext: 'id 1357', type: 'Level 7' },\n  { id: '1358', parentId: '1356', name: 'Level 7', subtext: 'id 1358', type: 'Level 7' },\n  { id: '1359', parentId: '1356', name: 'Level 7', subtext: 'id 1359', type: 'Level 7' },\n  { id: '1360', parentId: '1356', name: 'Level 7', subtext: 'id 1360', type: 'Level 7' },\n  { id: '1361', parentId: '1356', name: 'Level 7', subtext: 'id 1361', type: 'Level 7' },\n  { id: '1362', parentId: '1297', name: 'Level 4', subtext: 'id 1362', type: 'Level 4' },\n  { id: '1363', parentId: '1362', name: 'Level 5', subtext: 'id 1363', type: 'Level 5' },\n  { id: '1364', parentId: '1363', name: 'Level 6', subtext: 'id 1364', type: 'Level 6' },\n  { id: '1365', parentId: '1364', name: 'Level 7', subtext: 'id 1365', type: 'Level 7' },\n  { id: '1366', parentId: '1364', name: 'Level 7', subtext: 'id 1366', type: 'Level 7' },\n  { id: '1367', parentId: '1364', name: 'Level 7', subtext: 'id 1367', type: 'Level 7' },\n  { id: '1368', parentId: '1364', name: 'Level 7', subtext: 'id 1368', type: 'Level 7' },\n  { id: '1369', parentId: '1363', name: 'Level 6', subtext: 'id 1369', type: 'Level 6' },\n  { id: '1370', parentId: '1369', name: 'Level 7', subtext: 'id 1370', type: 'Level 7' },\n  { id: '1371', parentId: '1369', name: 'Level 7', subtext: 'id 1371', type: 'Level 7' },\n  { id: '1372', parentId: '1369', name: 'Level 7', subtext: 'id 1372', type: 'Level 7' },\n  { id: '1373', parentId: '1369', name: 'Level 7', subtext: 'id 1373', type: 'Level 7' },\n  { id: '1374', parentId: '1369', name: 'Level 7', subtext: 'id 1374', type: 'Level 7' },\n  { id: '1375', parentId: '1362', name: 'Level 5', subtext: 'id 1375', type: 'Level 5' },\n  { id: '1376', parentId: '1375', name: 'Level 6', subtext: 'id 1376', type: 'Level 6' },\n  { id: '1377', parentId: '1376', name: 'Level 7', subtext: 'id 1377', type: 'Level 7' },\n  { id: '1378', parentId: '1297', name: 'Level 4', subtext: 'id 1378', type: 'Level 4' },\n  { id: '1379', parentId: '1378', name: 'Level 5', subtext: 'id 1379', type: 'Level 5' },\n  { id: '1380', parentId: '1379', name: 'Level 6', subtext: 'id 1380', type: 'Level 6' },\n  { id: '1381', parentId: '1380', name: 'Level 7', subtext: 'id 1381', type: 'Level 7' },\n  { id: '1382', parentId: '1380', name: 'Level 7', subtext: 'id 1382', type: 'Level 7' },\n  { id: '1383', parentId: '1380', name: 'Level 7', subtext: 'id 1383', type: 'Level 7' },\n  { id: '1384', parentId: '1380', name: 'Level 7', subtext: 'id 1384', type: 'Level 7' },\n  { id: '1385', parentId: '1380', name: 'Level 7', subtext: 'id 1385', type: 'Level 7' },\n  { id: '1386', parentId: '1379', name: 'Level 6', subtext: 'id 1386', type: 'Level 6' },\n  { id: '1387', parentId: '1386', name: 'Level 7', subtext: 'id 1387', type: 'Level 7' },\n  { id: '1388', parentId: '1386', name: 'Level 7', subtext: 'id 1388', type: 'Level 7' },\n  { id: '1389', parentId: '1386', name: 'Level 7', subtext: 'id 1389', type: 'Level 7' },\n  { id: '1390', parentId: '1386', name: 'Level 7', subtext: 'id 1390', type: 'Level 7' },\n  { id: '1391', parentId: '1386', name: 'Level 7', subtext: 'id 1391', type: 'Level 7' },\n  { id: '1392', parentId: '1379', name: 'Level 6', subtext: 'id 1392', type: 'Level 6' },\n  { id: '1393', parentId: '1392', name: 'Level 7', subtext: 'id 1393', type: 'Level 7' },\n  { id: '1394', parentId: '1392', name: 'Level 7', subtext: 'id 1394', type: 'Level 7' },\n  { id: '1395', parentId: '1392', name: 'Level 7', subtext: 'id 1395', type: 'Level 7' },\n  { id: '1396', parentId: '1392', name: 'Level 7', subtext: 'id 1396', type: 'Level 7' },\n  { id: '1397', parentId: '1392', name: 'Level 7', subtext: 'id 1397', type: 'Level 7' },\n  { id: '1398', parentId: '1379', name: 'Level 6', subtext: 'id 1398', type: 'Level 6' },\n  { id: '1399', parentId: '1398', name: 'Level 7', subtext: 'id 1399', type: 'Level 7' },\n  { id: '1400', parentId: '1398', name: 'Level 7', subtext: 'id 1400', type: 'Level 7' },\n  { id: '1401', parentId: '1378', name: 'Level 5', subtext: 'id 1401', type: 'Level 5' },\n  { id: '1402', parentId: '1401', name: 'Level 6', subtext: 'id 1402', type: 'Level 6' },\n  { id: '1403', parentId: '1402', name: 'Level 7', subtext: 'id 1403', type: 'Level 7' },\n  { id: '1404', parentId: '1402', name: 'Level 7', subtext: 'id 1404', type: 'Level 7' },\n  { id: '1405', parentId: '1401', name: 'Level 6', subtext: 'id 1405', type: 'Level 6' },\n  { id: '1406', parentId: '1405', name: 'Level 7', subtext: 'id 1406', type: 'Level 7' },\n  { id: '1407', parentId: '1405', name: 'Level 7', subtext: 'id 1407', type: 'Level 7' },\n  { id: '1408', parentId: '1401', name: 'Level 6', subtext: 'id 1408', type: 'Level 6' },\n  { id: '1409', parentId: '1408', name: 'Level 7', subtext: 'id 1409', type: 'Level 7' },\n  { id: '1410', parentId: '1408', name: 'Level 7', subtext: 'id 1410', type: 'Level 7' },\n  { id: '1411', parentId: '1408', name: 'Level 7', subtext: 'id 1411', type: 'Level 7' },\n  { id: '1412', parentId: '1401', name: 'Level 6', subtext: 'id 1412', type: 'Level 6' },\n  { id: '1413', parentId: '1412', name: 'Level 7', subtext: 'id 1413', type: 'Level 7' },\n  { id: '1414', parentId: '1378', name: 'Level 5', subtext: 'id 1414', type: 'Level 5' },\n  { id: '1415', parentId: '1414', name: 'Level 6', subtext: 'id 1415', type: 'Level 6' },\n  { id: '1416', parentId: '1415', name: 'Level 7', subtext: 'id 1416', type: 'Level 7' },\n  { id: '1417', parentId: '1415', name: 'Level 7', subtext: 'id 1417', type: 'Level 7' },\n  { id: '1418', parentId: '1414', name: 'Level 6', subtext: 'id 1418', type: 'Level 6' },\n  { id: '1419', parentId: '1418', name: 'Level 7', subtext: 'id 1419', type: 'Level 7' },\n  { id: '1420', parentId: '1414', name: 'Level 6', subtext: 'id 1420', type: 'Level 6' },\n  { id: '1421', parentId: '1420', name: 'Level 7', subtext: 'id 1421', type: 'Level 7' },\n  { id: '1422', parentId: '1420', name: 'Level 7', subtext: 'id 1422', type: 'Level 7' },\n  { id: '1423', parentId: '1420', name: 'Level 7', subtext: 'id 1423', type: 'Level 7' },\n  { id: '1424', parentId: '1297', name: 'Level 4', subtext: 'id 1424', type: 'Level 4' },\n  { id: '1425', parentId: '1424', name: 'Level 5', subtext: 'id 1425', type: 'Level 5' },\n  { id: '1426', parentId: '1425', name: 'Level 6', subtext: 'id 1426', type: 'Level 6' },\n  { id: '1427', parentId: '1426', name: 'Level 7', subtext: 'id 1427', type: 'Level 7' },\n  { id: '1428', parentId: '1426', name: 'Level 7', subtext: 'id 1428', type: 'Level 7' },\n  { id: '1429', parentId: '1426', name: 'Level 7', subtext: 'id 1429', type: 'Level 7' },\n  { id: '1430', parentId: '1426', name: 'Level 7', subtext: 'id 1430', type: 'Level 7' },\n  { id: '1431', parentId: '1426', name: 'Level 7', subtext: 'id 1431', type: 'Level 7' },\n  { id: '1432', parentId: '1424', name: 'Level 5', subtext: 'id 1432', type: 'Level 5' },\n  { id: '1433', parentId: '1432', name: 'Level 6', subtext: 'id 1433', type: 'Level 6' },\n  { id: '1434', parentId: '1433', name: 'Level 7', subtext: 'id 1434', type: 'Level 7' },\n  { id: '1435', parentId: '1433', name: 'Level 7', subtext: 'id 1435', type: 'Level 7' },\n  { id: '1436', parentId: '1433', name: 'Level 7', subtext: 'id 1436', type: 'Level 7' },\n  { id: '1437', parentId: '1433', name: 'Level 7', subtext: 'id 1437', type: 'Level 7' },\n  { id: '1438', parentId: '1424', name: 'Level 5', subtext: 'id 1438', type: 'Level 5' },\n  { id: '1439', parentId: '1438', name: 'Level 6', subtext: 'id 1439', type: 'Level 6' },\n  { id: '1440', parentId: '1439', name: 'Level 7', subtext: 'id 1440', type: 'Level 7' },\n  { id: '1441', parentId: '1439', name: 'Level 7', subtext: 'id 1441', type: 'Level 7' },\n  { id: '1442', parentId: '1439', name: 'Level 7', subtext: 'id 1442', type: 'Level 7' },\n  { id: '1443', parentId: '1438', name: 'Level 6', subtext: 'id 1443', type: 'Level 6' },\n  { id: '1444', parentId: '1443', name: 'Level 7', subtext: 'id 1444', type: 'Level 7' },\n  { id: '1445', parentId: '1443', name: 'Level 7', subtext: 'id 1445', type: 'Level 7' },\n  { id: '1446', parentId: '1443', name: 'Level 7', subtext: 'id 1446', type: 'Level 7' },\n  { id: '1447', parentId: '1443', name: 'Level 7', subtext: 'id 1447', type: 'Level 7' },\n  { id: '1448', parentId: '1443', name: 'Level 7', subtext: 'id 1448', type: 'Level 7' },\n  { id: '1449', parentId: '1139', name: 'Level 3', subtext: 'id 1449', type: 'Level 3' },\n  { id: '1450', parentId: '1449', name: 'Level 4', subtext: 'id 1450', type: 'Level 4' },\n  { id: '1451', parentId: '1450', name: 'Level 5', subtext: 'id 1451', type: 'Level 5' },\n  { id: '1452', parentId: '1451', name: 'Level 6', subtext: 'id 1452', type: 'Level 6' },\n  { id: '1453', parentId: '1452', name: 'Level 7', subtext: 'id 1453', type: 'Level 7' },\n  { id: '1454', parentId: '1452', name: 'Level 7', subtext: 'id 1454', type: 'Level 7' },\n  { id: '1455', parentId: '1452', name: 'Level 7', subtext: 'id 1455', type: 'Level 7' },\n  { id: '1456', parentId: '1451', name: 'Level 6', subtext: 'id 1456', type: 'Level 6' },\n  { id: '1457', parentId: '1456', name: 'Level 7', subtext: 'id 1457', type: 'Level 7' },\n  { id: '1458', parentId: '1456', name: 'Level 7', subtext: 'id 1458', type: 'Level 7' },\n  { id: '1459', parentId: '1456', name: 'Level 7', subtext: 'id 1459', type: 'Level 7' },\n  { id: '1460', parentId: '1456', name: 'Level 7', subtext: 'id 1460', type: 'Level 7' },\n  { id: '1461', parentId: '1451', name: 'Level 6', subtext: 'id 1461', type: 'Level 6' },\n  { id: '1462', parentId: '1461', name: 'Level 7', subtext: 'id 1462', type: 'Level 7' },\n  { id: '1463', parentId: '1461', name: 'Level 7', subtext: 'id 1463', type: 'Level 7' },\n  { id: '1464', parentId: '1450', name: 'Level 5', subtext: 'id 1464', type: 'Level 5' },\n  { id: '1465', parentId: '1464', name: 'Level 6', subtext: 'id 1465', type: 'Level 6' },\n  { id: '1466', parentId: '1465', name: 'Level 7', subtext: 'id 1466', type: 'Level 7' },\n  { id: '1467', parentId: '1465', name: 'Level 7', subtext: 'id 1467', type: 'Level 7' },\n  { id: '1468', parentId: '1465', name: 'Level 7', subtext: 'id 1468', type: 'Level 7' },\n  { id: '1469', parentId: '1465', name: 'Level 7', subtext: 'id 1469', type: 'Level 7' },\n  { id: '1470', parentId: '1450', name: 'Level 5', subtext: 'id 1470', type: 'Level 5' },\n  { id: '1471', parentId: '1470', name: 'Level 6', subtext: 'id 1471', type: 'Level 6' },\n  { id: '1472', parentId: '1471', name: 'Level 7', subtext: 'id 1472', type: 'Level 7' },\n  { id: '1473', parentId: '1470', name: 'Level 6', subtext: 'id 1473', type: 'Level 6' },\n  { id: '1474', parentId: '1473', name: 'Level 7', subtext: 'id 1474', type: 'Level 7' },\n  { id: '1475', parentId: '1470', name: 'Level 6', subtext: 'id 1475', type: 'Level 6' },\n  { id: '1476', parentId: '1475', name: 'Level 7', subtext: 'id 1476', type: 'Level 7' },\n  { id: '1477', parentId: '1470', name: 'Level 6', subtext: 'id 1477', type: 'Level 6' },\n  { id: '1478', parentId: '1477', name: 'Level 7', subtext: 'id 1478', type: 'Level 7' },\n  { id: '1479', parentId: '1477', name: 'Level 7', subtext: 'id 1479', type: 'Level 7' },\n  { id: '1480', parentId: '1450', name: 'Level 5', subtext: 'id 1480', type: 'Level 5' },\n  { id: '1481', parentId: '1480', name: 'Level 6', subtext: 'id 1481', type: 'Level 6' },\n  { id: '1482', parentId: '1481', name: 'Level 7', subtext: 'id 1482', type: 'Level 7' },\n  { id: '1483', parentId: '1481', name: 'Level 7', subtext: 'id 1483', type: 'Level 7' },\n  { id: '1484', parentId: '1481', name: 'Level 7', subtext: 'id 1484', type: 'Level 7' },\n  { id: '1485', parentId: '1481', name: 'Level 7', subtext: 'id 1485', type: 'Level 7' },\n  { id: '1486', parentId: '1481', name: 'Level 7', subtext: 'id 1486', type: 'Level 7' },\n  { id: '1487', parentId: '1480', name: 'Level 6', subtext: 'id 1487', type: 'Level 6' },\n  { id: '1488', parentId: '1487', name: 'Level 7', subtext: 'id 1488', type: 'Level 7' },\n  { id: '1489', parentId: '1480', name: 'Level 6', subtext: 'id 1489', type: 'Level 6' },\n  { id: '1490', parentId: '1489', name: 'Level 7', subtext: 'id 1490', type: 'Level 7' },\n  { id: '1491', parentId: '1480', name: 'Level 6', subtext: 'id 1491', type: 'Level 6' },\n  { id: '1492', parentId: '1491', name: 'Level 7', subtext: 'id 1492', type: 'Level 7' },\n  { id: '1493', parentId: '1491', name: 'Level 7', subtext: 'id 1493', type: 'Level 7' },\n  { id: '1494', parentId: '1491', name: 'Level 7', subtext: 'id 1494', type: 'Level 7' },\n  { id: '1495', parentId: '1491', name: 'Level 7', subtext: 'id 1495', type: 'Level 7' },\n  { id: '1496', parentId: '1450', name: 'Level 5', subtext: 'id 1496', type: 'Level 5' },\n  { id: '1497', parentId: '1496', name: 'Level 6', subtext: 'id 1497', type: 'Level 6' },\n  { id: '1498', parentId: '1497', name: 'Level 7', subtext: 'id 1498', type: 'Level 7' },\n  { id: '1499', parentId: '1497', name: 'Level 7', subtext: 'id 1499', type: 'Level 7' },\n  { id: '1500', parentId: '1497', name: 'Level 7', subtext: 'id 1500', type: 'Level 7' },\n  { id: '1501', parentId: '1497', name: 'Level 7', subtext: 'id 1501', type: 'Level 7' },\n  { id: '1502', parentId: '1496', name: 'Level 6', subtext: 'id 1502', type: 'Level 6' },\n  { id: '1503', parentId: '1502', name: 'Level 7', subtext: 'id 1503', type: 'Level 7' },\n  { id: '1504', parentId: '1502', name: 'Level 7', subtext: 'id 1504', type: 'Level 7' },\n  { id: '1505', parentId: '1502', name: 'Level 7', subtext: 'id 1505', type: 'Level 7' },\n  { id: '1506', parentId: '1502', name: 'Level 7', subtext: 'id 1506', type: 'Level 7' },\n  { id: '1507', parentId: '1502', name: 'Level 7', subtext: 'id 1507', type: 'Level 7' },\n  { id: '1508', parentId: '1496', name: 'Level 6', subtext: 'id 1508', type: 'Level 6' },\n  { id: '1509', parentId: '1508', name: 'Level 7', subtext: 'id 1509', type: 'Level 7' },\n  { id: '1510', parentId: '1508', name: 'Level 7', subtext: 'id 1510', type: 'Level 7' },\n  { id: '1511', parentId: '1508', name: 'Level 7', subtext: 'id 1511', type: 'Level 7' },\n  { id: '1512', parentId: '1496', name: 'Level 6', subtext: 'id 1512', type: 'Level 6' },\n  { id: '1513', parentId: '1512', name: 'Level 7', subtext: 'id 1513', type: 'Level 7' },\n  { id: '1514', parentId: '1512', name: 'Level 7', subtext: 'id 1514', type: 'Level 7' },\n  { id: '1515', parentId: '1512', name: 'Level 7', subtext: 'id 1515', type: 'Level 7' },\n  { id: '1516', parentId: '1496', name: 'Level 6', subtext: 'id 1516', type: 'Level 6' },\n  { id: '1517', parentId: '1516', name: 'Level 7', subtext: 'id 1517', type: 'Level 7' },\n  { id: '1518', parentId: '1516', name: 'Level 7', subtext: 'id 1518', type: 'Level 7' },\n  { id: '1519', parentId: '1516', name: 'Level 7', subtext: 'id 1519', type: 'Level 7' },\n  { id: '1520', parentId: '1139', name: 'Level 3', subtext: 'id 1520', type: 'Level 3' },\n  { id: '1521', parentId: '1520', name: 'Level 4', subtext: 'id 1521', type: 'Level 4' },\n  { id: '1522', parentId: '1521', name: 'Level 5', subtext: 'id 1522', type: 'Level 5' },\n  { id: '1523', parentId: '1522', name: 'Level 6', subtext: 'id 1523', type: 'Level 6' },\n  { id: '1524', parentId: '1523', name: 'Level 7', subtext: 'id 1524', type: 'Level 7' },\n  { id: '1525', parentId: '1522', name: 'Level 6', subtext: 'id 1525', type: 'Level 6' },\n  { id: '1526', parentId: '1525', name: 'Level 7', subtext: 'id 1526', type: 'Level 7' },\n  { id: '1527', parentId: '1525', name: 'Level 7', subtext: 'id 1527', type: 'Level 7' },\n  { id: '1528', parentId: '1525', name: 'Level 7', subtext: 'id 1528', type: 'Level 7' },\n  { id: '1529', parentId: '1525', name: 'Level 7', subtext: 'id 1529', type: 'Level 7' },\n  { id: '1530', parentId: '1525', name: 'Level 7', subtext: 'id 1530', type: 'Level 7' },\n  { id: '1531', parentId: '1522', name: 'Level 6', subtext: 'id 1531', type: 'Level 6' },\n  { id: '1532', parentId: '1531', name: 'Level 7', subtext: 'id 1532', type: 'Level 7' },\n  { id: '1533', parentId: '1531', name: 'Level 7', subtext: 'id 1533', type: 'Level 7' },\n  { id: '1534', parentId: '1522', name: 'Level 6', subtext: 'id 1534', type: 'Level 6' },\n  { id: '1535', parentId: '1534', name: 'Level 7', subtext: 'id 1535', type: 'Level 7' },\n  { id: '1536', parentId: '1534', name: 'Level 7', subtext: 'id 1536', type: 'Level 7' },\n  { id: '1537', parentId: '1139', name: 'Level 3', subtext: 'id 1537', type: 'Level 3' },\n  { id: '1538', parentId: '1537', name: 'Level 4', subtext: 'id 1538', type: 'Level 4' },\n  { id: '1539', parentId: '1538', name: 'Level 5', subtext: 'id 1539', type: 'Level 5' },\n  { id: '1540', parentId: '1539', name: 'Level 6', subtext: 'id 1540', type: 'Level 6' },\n  { id: '1541', parentId: '1540', name: 'Level 7', subtext: 'id 1541', type: 'Level 7' },\n  { id: '1542', parentId: '1540', name: 'Level 7', subtext: 'id 1542', type: 'Level 7' },\n  { id: '1543', parentId: '1540', name: 'Level 7', subtext: 'id 1543', type: 'Level 7' },\n  { id: '1544', parentId: '1540', name: 'Level 7', subtext: 'id 1544', type: 'Level 7' },\n  { id: '1545', parentId: '1539', name: 'Level 6', subtext: 'id 1545', type: 'Level 6' },\n  { id: '1546', parentId: '1545', name: 'Level 7', subtext: 'id 1546', type: 'Level 7' },\n  { id: '1547', parentId: '1545', name: 'Level 7', subtext: 'id 1547', type: 'Level 7' },\n  { id: '1548', parentId: '1545', name: 'Level 7', subtext: 'id 1548', type: 'Level 7' },\n  { id: '1549', parentId: '1539', name: 'Level 6', subtext: 'id 1549', type: 'Level 6' },\n  { id: '1550', parentId: '1549', name: 'Level 7', subtext: 'id 1550', type: 'Level 7' },\n  { id: '1551', parentId: '1549', name: 'Level 7', subtext: 'id 1551', type: 'Level 7' },\n  { id: '1552', parentId: '1539', name: 'Level 6', subtext: 'id 1552', type: 'Level 6' },\n  { id: '1553', parentId: '1552', name: 'Level 7', subtext: 'id 1553', type: 'Level 7' },\n  { id: '1554', parentId: '1552', name: 'Level 7', subtext: 'id 1554', type: 'Level 7' },\n  { id: '1555', parentId: '1539', name: 'Level 6', subtext: 'id 1555', type: 'Level 6' },\n  { id: '1556', parentId: '1555', name: 'Level 7', subtext: 'id 1556', type: 'Level 7' },\n  { id: '1557', parentId: '1555', name: 'Level 7', subtext: 'id 1557', type: 'Level 7' },\n  { id: '1558', parentId: '1555', name: 'Level 7', subtext: 'id 1558', type: 'Level 7' },\n  { id: '1559', parentId: '1538', name: 'Level 5', subtext: 'id 1559', type: 'Level 5' },\n  { id: '1560', parentId: '1559', name: 'Level 6', subtext: 'id 1560', type: 'Level 6' },\n  { id: '1561', parentId: '1560', name: 'Level 7', subtext: 'id 1561', type: 'Level 7' },\n  { id: '1562', parentId: '1560', name: 'Level 7', subtext: 'id 1562', type: 'Level 7' },\n  { id: '1563', parentId: '1560', name: 'Level 7', subtext: 'id 1563', type: 'Level 7' },\n  { id: '1564', parentId: '1560', name: 'Level 7', subtext: 'id 1564', type: 'Level 7' },\n  { id: '1565', parentId: '1560', name: 'Level 7', subtext: 'id 1565', type: 'Level 7' },\n  { id: '1566', parentId: '1559', name: 'Level 6', subtext: 'id 1566', type: 'Level 6' },\n  { id: '1567', parentId: '1566', name: 'Level 7', subtext: 'id 1567', type: 'Level 7' },\n  { id: '1568', parentId: '1566', name: 'Level 7', subtext: 'id 1568', type: 'Level 7' },\n  { id: '1569', parentId: '1566', name: 'Level 7', subtext: 'id 1569', type: 'Level 7' },\n  { id: '1570', parentId: '1566', name: 'Level 7', subtext: 'id 1570', type: 'Level 7' },\n  { id: '1571', parentId: '1559', name: 'Level 6', subtext: 'id 1571', type: 'Level 6' },\n  { id: '1572', parentId: '1571', name: 'Level 7', subtext: 'id 1572', type: 'Level 7' },\n  { id: '1573', parentId: '1571', name: 'Level 7', subtext: 'id 1573', type: 'Level 7' },\n  { id: '1574', parentId: '1571', name: 'Level 7', subtext: 'id 1574', type: 'Level 7' },\n  { id: '1575', parentId: '1571', name: 'Level 7', subtext: 'id 1575', type: 'Level 7' },\n  { id: '1576', parentId: '1571', name: 'Level 7', subtext: 'id 1576', type: 'Level 7' },\n  { id: '1577', parentId: '1538', name: 'Level 5', subtext: 'id 1577', type: 'Level 5' },\n  { id: '1578', parentId: '1577', name: 'Level 6', subtext: 'id 1578', type: 'Level 6' },\n  { id: '1579', parentId: '1578', name: 'Level 7', subtext: 'id 1579', type: 'Level 7' },\n  { id: '1580', parentId: '1578', name: 'Level 7', subtext: 'id 1580', type: 'Level 7' },\n  { id: '1581', parentId: '1578', name: 'Level 7', subtext: 'id 1581', type: 'Level 7' },\n  { id: '1582', parentId: '1578', name: 'Level 7', subtext: 'id 1582', type: 'Level 7' },\n  { id: '1583', parentId: '1577', name: 'Level 6', subtext: 'id 1583', type: 'Level 6' },\n  { id: '1584', parentId: '1583', name: 'Level 7', subtext: 'id 1584', type: 'Level 7' },\n  { id: '1585', parentId: '1577', name: 'Level 6', subtext: 'id 1585', type: 'Level 6' },\n  { id: '1586', parentId: '1585', name: 'Level 7', subtext: 'id 1586', type: 'Level 7' },\n  { id: '1587', parentId: '1585', name: 'Level 7', subtext: 'id 1587', type: 'Level 7' },\n  { id: '1588', parentId: '1577', name: 'Level 6', subtext: 'id 1588', type: 'Level 6' },\n  { id: '1589', parentId: '1588', name: 'Level 7', subtext: 'id 1589', type: 'Level 7' },\n  { id: '1590', parentId: '1588', name: 'Level 7', subtext: 'id 1590', type: 'Level 7' },\n  { id: '1591', parentId: '1588', name: 'Level 7', subtext: 'id 1591', type: 'Level 7' },\n  { id: '1592', parentId: '1577', name: 'Level 6', subtext: 'id 1592', type: 'Level 6' },\n  { id: '1593', parentId: '1592', name: 'Level 7', subtext: 'id 1593', type: 'Level 7' },\n  { id: '1594', parentId: '1538', name: 'Level 5', subtext: 'id 1594', type: 'Level 5' },\n  { id: '1595', parentId: '1594', name: 'Level 6', subtext: 'id 1595', type: 'Level 6' },\n  { id: '1596', parentId: '1595', name: 'Level 7', subtext: 'id 1596', type: 'Level 7' },\n  { id: '1597', parentId: '1594', name: 'Level 6', subtext: 'id 1597', type: 'Level 6' },\n  { id: '1598', parentId: '1597', name: 'Level 7', subtext: 'id 1598', type: 'Level 7' },\n  { id: '1599', parentId: '1597', name: 'Level 7', subtext: 'id 1599', type: 'Level 7' },\n  { id: '1600', parentId: '1597', name: 'Level 7', subtext: 'id 1600', type: 'Level 7' },\n  { id: '1601', parentId: '1597', name: 'Level 7', subtext: 'id 1601', type: 'Level 7' },\n  { id: '1602', parentId: '1594', name: 'Level 6', subtext: 'id 1602', type: 'Level 6' },\n  { id: '1603', parentId: '1602', name: 'Level 7', subtext: 'id 1603', type: 'Level 7' },\n  { id: '1604', parentId: '1602', name: 'Level 7', subtext: 'id 1604', type: 'Level 7' },\n  { id: '1605', parentId: '1602', name: 'Level 7', subtext: 'id 1605', type: 'Level 7' },\n  { id: '1606', parentId: '1594', name: 'Level 6', subtext: 'id 1606', type: 'Level 6' },\n  { id: '1607', parentId: '1606', name: 'Level 7', subtext: 'id 1607', type: 'Level 7' },\n  { id: '1608', parentId: '1606', name: 'Level 7', subtext: 'id 1608', type: 'Level 7' },\n  { id: '1609', parentId: '1594', name: 'Level 6', subtext: 'id 1609', type: 'Level 6' },\n  { id: '1610', parentId: '1609', name: 'Level 7', subtext: 'id 1610', type: 'Level 7' },\n  { id: '1611', parentId: '1609', name: 'Level 7', subtext: 'id 1611', type: 'Level 7' },\n  { id: '1612', parentId: '1609', name: 'Level 7', subtext: 'id 1612', type: 'Level 7' },\n  { id: '1613', parentId: '1609', name: 'Level 7', subtext: 'id 1613', type: 'Level 7' },\n  { id: '1614', parentId: '1538', name: 'Level 5', subtext: 'id 1614', type: 'Level 5' },\n  { id: '1615', parentId: '1614', name: 'Level 6', subtext: 'id 1615', type: 'Level 6' },\n  { id: '1616', parentId: '1615', name: 'Level 7', subtext: 'id 1616', type: 'Level 7' },\n  { id: '1617', parentId: '1615', name: 'Level 7', subtext: 'id 1617', type: 'Level 7' },\n  { id: '1618', parentId: '1615', name: 'Level 7', subtext: 'id 1618', type: 'Level 7' },\n  { id: '1619', parentId: '1615', name: 'Level 7', subtext: 'id 1619', type: 'Level 7' },\n  { id: '1620', parentId: '1614', name: 'Level 6', subtext: 'id 1620', type: 'Level 6' },\n  { id: '1621', parentId: '1620', name: 'Level 7', subtext: 'id 1621', type: 'Level 7' },\n  { id: '1622', parentId: '1620', name: 'Level 7', subtext: 'id 1622', type: 'Level 7' },\n  { id: '1623', parentId: '1620', name: 'Level 7', subtext: 'id 1623', type: 'Level 7' },\n  { id: '1624', parentId: '1620', name: 'Level 7', subtext: 'id 1624', type: 'Level 7' },\n  { id: '1625', parentId: '1620', name: 'Level 7', subtext: 'id 1625', type: 'Level 7' },\n  { id: '1626', parentId: '1614', name: 'Level 6', subtext: 'id 1626', type: 'Level 6' },\n  { id: '1627', parentId: '1626', name: 'Level 7', subtext: 'id 1627', type: 'Level 7' },\n  { id: '1628', parentId: '1614', name: 'Level 6', subtext: 'id 1628', type: 'Level 6' },\n  { id: '1629', parentId: '1628', name: 'Level 7', subtext: 'id 1629', type: 'Level 7' },\n  { id: '1630', parentId: '1628', name: 'Level 7', subtext: 'id 1630', type: 'Level 7' },\n  { id: '1631', parentId: '1614', name: 'Level 6', subtext: 'id 1631', type: 'Level 6' },\n  { id: '1632', parentId: '1631', name: 'Level 7', subtext: 'id 1632', type: 'Level 7' },\n  { id: '1633', parentId: '1631', name: 'Level 7', subtext: 'id 1633', type: 'Level 7' },\n  { id: '1634', parentId: '1631', name: 'Level 7', subtext: 'id 1634', type: 'Level 7' },\n  { id: '1635', parentId: '1537', name: 'Level 4', subtext: 'id 1635', type: 'Level 4' },\n  { id: '1636', parentId: '1635', name: 'Level 5', subtext: 'id 1636', type: 'Level 5' },\n  { id: '1637', parentId: '1636', name: 'Level 6', subtext: 'id 1637', type: 'Level 6' },\n  { id: '1638', parentId: '1637', name: 'Level 7', subtext: 'id 1638', type: 'Level 7' },\n  { id: '1639', parentId: '1637', name: 'Level 7', subtext: 'id 1639', type: 'Level 7' },\n  { id: '1640', parentId: '1637', name: 'Level 7', subtext: 'id 1640', type: 'Level 7' },\n  { id: '1641', parentId: '1637', name: 'Level 7', subtext: 'id 1641', type: 'Level 7' },\n  { id: '1642', parentId: '1636', name: 'Level 6', subtext: 'id 1642', type: 'Level 6' },\n  { id: '1643', parentId: '1642', name: 'Level 7', subtext: 'id 1643', type: 'Level 7' },\n  { id: '1644', parentId: '1642', name: 'Level 7', subtext: 'id 1644', type: 'Level 7' },\n  { id: '1645', parentId: '1642', name: 'Level 7', subtext: 'id 1645', type: 'Level 7' },\n  { id: '1646', parentId: '1636', name: 'Level 6', subtext: 'id 1646', type: 'Level 6' },\n  { id: '1647', parentId: '1646', name: 'Level 7', subtext: 'id 1647', type: 'Level 7' },\n  { id: '1648', parentId: '1646', name: 'Level 7', subtext: 'id 1648', type: 'Level 7' },\n  { id: '1649', parentId: '1635', name: 'Level 5', subtext: 'id 1649', type: 'Level 5' },\n  { id: '1650', parentId: '1649', name: 'Level 6', subtext: 'id 1650', type: 'Level 6' },\n  { id: '1651', parentId: '1650', name: 'Level 7', subtext: 'id 1651', type: 'Level 7' },\n  { id: '1652', parentId: '1650', name: 'Level 7', subtext: 'id 1652', type: 'Level 7' },\n  { id: '1653', parentId: '1650', name: 'Level 7', subtext: 'id 1653', type: 'Level 7' },\n  { id: '1654', parentId: '1649', name: 'Level 6', subtext: 'id 1654', type: 'Level 6' },\n  { id: '1655', parentId: '1654', name: 'Level 7', subtext: 'id 1655', type: 'Level 7' },\n  { id: '1656', parentId: '1635', name: 'Level 5', subtext: 'id 1656', type: 'Level 5' },\n  { id: '1657', parentId: '1656', name: 'Level 6', subtext: 'id 1657', type: 'Level 6' },\n  { id: '1658', parentId: '1657', name: 'Level 7', subtext: 'id 1658', type: 'Level 7' },\n  { id: '1659', parentId: '1657', name: 'Level 7', subtext: 'id 1659', type: 'Level 7' },\n  { id: '1660', parentId: '1656', name: 'Level 6', subtext: 'id 1660', type: 'Level 6' },\n  { id: '1661', parentId: '1660', name: 'Level 7', subtext: 'id 1661', type: 'Level 7' },\n  { id: '1662', parentId: '1660', name: 'Level 7', subtext: 'id 1662', type: 'Level 7' },\n  { id: '1663', parentId: '1660', name: 'Level 7', subtext: 'id 1663', type: 'Level 7' },\n  { id: '1664', parentId: '1656', name: 'Level 6', subtext: 'id 1664', type: 'Level 6' },\n  { id: '1665', parentId: '1664', name: 'Level 7', subtext: 'id 1665', type: 'Level 7' },\n  { id: '1666', parentId: '1664', name: 'Level 7', subtext: 'id 1666', type: 'Level 7' },\n  { id: '1667', parentId: '1664', name: 'Level 7', subtext: 'id 1667', type: 'Level 7' },\n  { id: '1668', parentId: '1537', name: 'Level 4', subtext: 'id 1668', type: 'Level 4' },\n  { id: '1669', parentId: '1668', name: 'Level 5', subtext: 'id 1669', type: 'Level 5' },\n  { id: '1670', parentId: '1669', name: 'Level 6', subtext: 'id 1670', type: 'Level 6' },\n  { id: '1671', parentId: '1670', name: 'Level 7', subtext: 'id 1671', type: 'Level 7' },\n  { id: '1672', parentId: '1670', name: 'Level 7', subtext: 'id 1672', type: 'Level 7' },\n  { id: '1673', parentId: '1669', name: 'Level 6', subtext: 'id 1673', type: 'Level 6' },\n  { id: '1674', parentId: '1673', name: 'Level 7', subtext: 'id 1674', type: 'Level 7' },\n  { id: '1675', parentId: '1673', name: 'Level 7', subtext: 'id 1675', type: 'Level 7' },\n  { id: '1676', parentId: '1673', name: 'Level 7', subtext: 'id 1676', type: 'Level 7' },\n  { id: '1677', parentId: '1673', name: 'Level 7', subtext: 'id 1677', type: 'Level 7' },\n  { id: '1678', parentId: '1673', name: 'Level 7', subtext: 'id 1678', type: 'Level 7' },\n  { id: '1679', parentId: '1668', name: 'Level 5', subtext: 'id 1679', type: 'Level 5' },\n  { id: '1680', parentId: '1679', name: 'Level 6', subtext: 'id 1680', type: 'Level 6' },\n  { id: '1681', parentId: '1680', name: 'Level 7', subtext: 'id 1681', type: 'Level 7' },\n  { id: '1682', parentId: '1680', name: 'Level 7', subtext: 'id 1682', type: 'Level 7' },\n  { id: '1683', parentId: '1680', name: 'Level 7', subtext: 'id 1683', type: 'Level 7' },\n  { id: '1684', parentId: '1680', name: 'Level 7', subtext: 'id 1684', type: 'Level 7' },\n  { id: '1685', parentId: '1680', name: 'Level 7', subtext: 'id 1685', type: 'Level 7' },\n  { id: '1686', parentId: '1679', name: 'Level 6', subtext: 'id 1686', type: 'Level 6' },\n  { id: '1687', parentId: '1686', name: 'Level 7', subtext: 'id 1687', type: 'Level 7' },\n  { id: '1688', parentId: '1679', name: 'Level 6', subtext: 'id 1688', type: 'Level 6' },\n  { id: '1689', parentId: '1688', name: 'Level 7', subtext: 'id 1689', type: 'Level 7' },\n  { id: '1690', parentId: '1688', name: 'Level 7', subtext: 'id 1690', type: 'Level 7' },\n  { id: '1691', parentId: '1688', name: 'Level 7', subtext: 'id 1691', type: 'Level 7' },\n  { id: '1692', parentId: '1688', name: 'Level 7', subtext: 'id 1692', type: 'Level 7' },\n  { id: '1693', parentId: '1679', name: 'Level 6', subtext: 'id 1693', type: 'Level 6' },\n  { id: '1694', parentId: '1693', name: 'Level 7', subtext: 'id 1694', type: 'Level 7' },\n  { id: '1695', parentId: '1693', name: 'Level 7', subtext: 'id 1695', type: 'Level 7' },\n  { id: '1696', parentId: '1693', name: 'Level 7', subtext: 'id 1696', type: 'Level 7' },\n  { id: '1697', parentId: '1693', name: 'Level 7', subtext: 'id 1697', type: 'Level 7' },\n  { id: '1698', parentId: '1693', name: 'Level 7', subtext: 'id 1698', type: 'Level 7' },\n  { id: '1699', parentId: '1138', name: 'Level 2', subtext: 'id 1699', type: 'Level 2' },\n  { id: '1700', parentId: '1699', name: 'Level 3', subtext: 'id 1700', type: 'Level 3' },\n  { id: '1701', parentId: '1700', name: 'Level 4', subtext: 'id 1701', type: 'Level 4' },\n  { id: '1702', parentId: '1701', name: 'Level 5', subtext: 'id 1702', type: 'Level 5' },\n  { id: '1703', parentId: '1702', name: 'Level 6', subtext: 'id 1703', type: 'Level 6' },\n  { id: '1704', parentId: '1703', name: 'Level 7', subtext: 'id 1704', type: 'Level 7' },\n  { id: '1705', parentId: '1703', name: 'Level 7', subtext: 'id 1705', type: 'Level 7' },\n  { id: '1706', parentId: '1702', name: 'Level 6', subtext: 'id 1706', type: 'Level 6' },\n  { id: '1707', parentId: '1706', name: 'Level 7', subtext: 'id 1707', type: 'Level 7' },\n  { id: '1708', parentId: '1706', name: 'Level 7', subtext: 'id 1708', type: 'Level 7' },\n  { id: '1709', parentId: '1706', name: 'Level 7', subtext: 'id 1709', type: 'Level 7' },\n  { id: '1710', parentId: '1706', name: 'Level 7', subtext: 'id 1710', type: 'Level 7' },\n  { id: '1711', parentId: '1702', name: 'Level 6', subtext: 'id 1711', type: 'Level 6' },\n  { id: '1712', parentId: '1711', name: 'Level 7', subtext: 'id 1712', type: 'Level 7' },\n  { id: '1713', parentId: '1711', name: 'Level 7', subtext: 'id 1713', type: 'Level 7' },\n  { id: '1714', parentId: '1711', name: 'Level 7', subtext: 'id 1714', type: 'Level 7' },\n  { id: '1715', parentId: '1711', name: 'Level 7', subtext: 'id 1715', type: 'Level 7' },\n  { id: '1716', parentId: '1702', name: 'Level 6', subtext: 'id 1716', type: 'Level 6' },\n  { id: '1717', parentId: '1716', name: 'Level 7', subtext: 'id 1717', type: 'Level 7' },\n  { id: '1718', parentId: '1716', name: 'Level 7', subtext: 'id 1718', type: 'Level 7' },\n  { id: '1719', parentId: '1716', name: 'Level 7', subtext: 'id 1719', type: 'Level 7' },\n  { id: '1720', parentId: '1716', name: 'Level 7', subtext: 'id 1720', type: 'Level 7' },\n  { id: '1721', parentId: '1716', name: 'Level 7', subtext: 'id 1721', type: 'Level 7' },\n  { id: '1722', parentId: '1699', name: 'Level 3', subtext: 'id 1722', type: 'Level 3' },\n  { id: '1723', parentId: '1722', name: 'Level 4', subtext: 'id 1723', type: 'Level 4' },\n  { id: '1724', parentId: '1723', name: 'Level 5', subtext: 'id 1724', type: 'Level 5' },\n  { id: '1725', parentId: '1724', name: 'Level 6', subtext: 'id 1725', type: 'Level 6' },\n  { id: '1726', parentId: '1725', name: 'Level 7', subtext: 'id 1726', type: 'Level 7' },\n  { id: '1727', parentId: '1725', name: 'Level 7', subtext: 'id 1727', type: 'Level 7' },\n  { id: '1728', parentId: '1724', name: 'Level 6', subtext: 'id 1728', type: 'Level 6' },\n  { id: '1729', parentId: '1728', name: 'Level 7', subtext: 'id 1729', type: 'Level 7' },\n  { id: '1730', parentId: '1728', name: 'Level 7', subtext: 'id 1730', type: 'Level 7' },\n  { id: '1731', parentId: '1728', name: 'Level 7', subtext: 'id 1731', type: 'Level 7' },\n  { id: '1732', parentId: '1724', name: 'Level 6', subtext: 'id 1732', type: 'Level 6' },\n  { id: '1733', parentId: '1732', name: 'Level 7', subtext: 'id 1733', type: 'Level 7' },\n  { id: '1734', parentId: '1724', name: 'Level 6', subtext: 'id 1734', type: 'Level 6' },\n  { id: '1735', parentId: '1734', name: 'Level 7', subtext: 'id 1735', type: 'Level 7' },\n  { id: '1736', parentId: '1723', name: 'Level 5', subtext: 'id 1736', type: 'Level 5' },\n  { id: '1737', parentId: '1736', name: 'Level 6', subtext: 'id 1737', type: 'Level 6' },\n  { id: '1738', parentId: '1737', name: 'Level 7', subtext: 'id 1738', type: 'Level 7' },\n  { id: '1739', parentId: '1737', name: 'Level 7', subtext: 'id 1739', type: 'Level 7' },\n  { id: '1740', parentId: '1737', name: 'Level 7', subtext: 'id 1740', type: 'Level 7' },\n  { id: '1741', parentId: '1737', name: 'Level 7', subtext: 'id 1741', type: 'Level 7' },\n  { id: '1742', parentId: '1737', name: 'Level 7', subtext: 'id 1742', type: 'Level 7' },\n  { id: '1743', parentId: '1736', name: 'Level 6', subtext: 'id 1743', type: 'Level 6' },\n  { id: '1744', parentId: '1743', name: 'Level 7', subtext: 'id 1744', type: 'Level 7' },\n  { id: '1745', parentId: '1736', name: 'Level 6', subtext: 'id 1745', type: 'Level 6' },\n  { id: '1746', parentId: '1745', name: 'Level 7', subtext: 'id 1746', type: 'Level 7' },\n  { id: '1747', parentId: '1745', name: 'Level 7', subtext: 'id 1747', type: 'Level 7' },\n  { id: '1748', parentId: '1745', name: 'Level 7', subtext: 'id 1748', type: 'Level 7' },\n  { id: '1749', parentId: '1745', name: 'Level 7', subtext: 'id 1749', type: 'Level 7' },\n  { id: '1750', parentId: '1745', name: 'Level 7', subtext: 'id 1750', type: 'Level 7' },\n  { id: '1751', parentId: '1723', name: 'Level 5', subtext: 'id 1751', type: 'Level 5' },\n  { id: '1752', parentId: '1751', name: 'Level 6', subtext: 'id 1752', type: 'Level 6' },\n  { id: '1753', parentId: '1752', name: 'Level 7', subtext: 'id 1753', type: 'Level 7' },\n  { id: '1754', parentId: '1752', name: 'Level 7', subtext: 'id 1754', type: 'Level 7' },\n  { id: '1755', parentId: '1752', name: 'Level 7', subtext: 'id 1755', type: 'Level 7' },\n  { id: '1756', parentId: '1752', name: 'Level 7', subtext: 'id 1756', type: 'Level 7' },\n  { id: '1757', parentId: '1752', name: 'Level 7', subtext: 'id 1757', type: 'Level 7' },\n  { id: '1758', parentId: '1751', name: 'Level 6', subtext: 'id 1758', type: 'Level 6' },\n  { id: '1759', parentId: '1758', name: 'Level 7', subtext: 'id 1759', type: 'Level 7' },\n  { id: '1760', parentId: '1758', name: 'Level 7', subtext: 'id 1760', type: 'Level 7' },\n  { id: '1761', parentId: '1758', name: 'Level 7', subtext: 'id 1761', type: 'Level 7' },\n  { id: '1762', parentId: '1751', name: 'Level 6', subtext: 'id 1762', type: 'Level 6' },\n  { id: '1763', parentId: '1762', name: 'Level 7', subtext: 'id 1763', type: 'Level 7' },\n  { id: '1764', parentId: '1751', name: 'Level 6', subtext: 'id 1764', type: 'Level 6' },\n  { id: '1765', parentId: '1764', name: 'Level 7', subtext: 'id 1765', type: 'Level 7' },\n  { id: '1766', parentId: '1764', name: 'Level 7', subtext: 'id 1766', type: 'Level 7' },\n  { id: '1767', parentId: '1723', name: 'Level 5', subtext: 'id 1767', type: 'Level 5' },\n  { id: '1768', parentId: '1767', name: 'Level 6', subtext: 'id 1768', type: 'Level 6' },\n  { id: '1769', parentId: '1768', name: 'Level 7', subtext: 'id 1769', type: 'Level 7' },\n  { id: '1770', parentId: '1722', name: 'Level 4', subtext: 'id 1770', type: 'Level 4' },\n  { id: '1771', parentId: '1770', name: 'Level 5', subtext: 'id 1771', type: 'Level 5' },\n  { id: '1772', parentId: '1771', name: 'Level 6', subtext: 'id 1772', type: 'Level 6' },\n  { id: '1773', parentId: '1772', name: 'Level 7', subtext: 'id 1773', type: 'Level 7' },\n  { id: '1774', parentId: '1772', name: 'Level 7', subtext: 'id 1774', type: 'Level 7' },\n  { id: '1775', parentId: '1772', name: 'Level 7', subtext: 'id 1775', type: 'Level 7' },\n  { id: '1776', parentId: '1772', name: 'Level 7', subtext: 'id 1776', type: 'Level 7' },\n  { id: '1777', parentId: '1772', name: 'Level 7', subtext: 'id 1777', type: 'Level 7' },\n  { id: '1778', parentId: '1771', name: 'Level 6', subtext: 'id 1778', type: 'Level 6' },\n  { id: '1779', parentId: '1778', name: 'Level 7', subtext: 'id 1779', type: 'Level 7' },\n  { id: '1780', parentId: '1771', name: 'Level 6', subtext: 'id 1780', type: 'Level 6' },\n  { id: '1781', parentId: '1780', name: 'Level 7', subtext: 'id 1781', type: 'Level 7' },\n  { id: '1782', parentId: '1780', name: 'Level 7', subtext: 'id 1782', type: 'Level 7' },\n  { id: '1783', parentId: '1780', name: 'Level 7', subtext: 'id 1783', type: 'Level 7' },\n  { id: '1784', parentId: '1770', name: 'Level 5', subtext: 'id 1784', type: 'Level 5' },\n  { id: '1785', parentId: '1784', name: 'Level 6', subtext: 'id 1785', type: 'Level 6' },\n  { id: '1786', parentId: '1785', name: 'Level 7', subtext: 'id 1786', type: 'Level 7' },\n  { id: '1787', parentId: '1785', name: 'Level 7', subtext: 'id 1787', type: 'Level 7' },\n  { id: '1788', parentId: '1785', name: 'Level 7', subtext: 'id 1788', type: 'Level 7' },\n  { id: '1789', parentId: '1784', name: 'Level 6', subtext: 'id 1789', type: 'Level 6' },\n  { id: '1790', parentId: '1789', name: 'Level 7', subtext: 'id 1790', type: 'Level 7' },\n  { id: '1791', parentId: '1789', name: 'Level 7', subtext: 'id 1791', type: 'Level 7' },\n  { id: '1792', parentId: '1789', name: 'Level 7', subtext: 'id 1792', type: 'Level 7' },\n  { id: '1793', parentId: '1784', name: 'Level 6', subtext: 'id 1793', type: 'Level 6' },\n  { id: '1794', parentId: '1793', name: 'Level 7', subtext: 'id 1794', type: 'Level 7' },\n  { id: '1795', parentId: '1793', name: 'Level 7', subtext: 'id 1795', type: 'Level 7' },\n  { id: '1796', parentId: '1793', name: 'Level 7', subtext: 'id 1796', type: 'Level 7' },\n  { id: '1797', parentId: '1793', name: 'Level 7', subtext: 'id 1797', type: 'Level 7' },\n  { id: '1798', parentId: '1793', name: 'Level 7', subtext: 'id 1798', type: 'Level 7' },\n  { id: '1799', parentId: '1784', name: 'Level 6', subtext: 'id 1799', type: 'Level 6' },\n  { id: '1800', parentId: '1799', name: 'Level 7', subtext: 'id 1800', type: 'Level 7' },\n  { id: '1801', parentId: '1799', name: 'Level 7', subtext: 'id 1801', type: 'Level 7' },\n  { id: '1802', parentId: '1799', name: 'Level 7', subtext: 'id 1802', type: 'Level 7' },\n  { id: '1803', parentId: '1799', name: 'Level 7', subtext: 'id 1803', type: 'Level 7' },\n  { id: '1804', parentId: '1799', name: 'Level 7', subtext: 'id 1804', type: 'Level 7' },\n  { id: '1805', parentId: '1784', name: 'Level 6', subtext: 'id 1805', type: 'Level 6' },\n  { id: '1806', parentId: '1805', name: 'Level 7', subtext: 'id 1806', type: 'Level 7' },\n  { id: '1807', parentId: '1805', name: 'Level 7', subtext: 'id 1807', type: 'Level 7' },\n  { id: '1808', parentId: '1805', name: 'Level 7', subtext: 'id 1808', type: 'Level 7' },\n  { id: '1809', parentId: '1805', name: 'Level 7', subtext: 'id 1809', type: 'Level 7' },\n  { id: '1810', parentId: '1805', name: 'Level 7', subtext: 'id 1810', type: 'Level 7' },\n  { id: '1811', parentId: '1770', name: 'Level 5', subtext: 'id 1811', type: 'Level 5' },\n  { id: '1812', parentId: '1811', name: 'Level 6', subtext: 'id 1812', type: 'Level 6' },\n  { id: '1813', parentId: '1812', name: 'Level 7', subtext: 'id 1813', type: 'Level 7' },\n  { id: '1814', parentId: '1812', name: 'Level 7', subtext: 'id 1814', type: 'Level 7' },\n  { id: '1815', parentId: '1811', name: 'Level 6', subtext: 'id 1815', type: 'Level 6' },\n  { id: '1816', parentId: '1815', name: 'Level 7', subtext: 'id 1816', type: 'Level 7' },\n  { id: '1817', parentId: '1815', name: 'Level 7', subtext: 'id 1817', type: 'Level 7' },\n  { id: '1818', parentId: '1815', name: 'Level 7', subtext: 'id 1818', type: 'Level 7' },\n  { id: '1819', parentId: '1815', name: 'Level 7', subtext: 'id 1819', type: 'Level 7' },\n  { id: '1820', parentId: '1815', name: 'Level 7', subtext: 'id 1820', type: 'Level 7' },\n  { id: '1821', parentId: '1811', name: 'Level 6', subtext: 'id 1821', type: 'Level 6' },\n  { id: '1822', parentId: '1821', name: 'Level 7', subtext: 'id 1822', type: 'Level 7' },\n  { id: '1823', parentId: '1821', name: 'Level 7', subtext: 'id 1823', type: 'Level 7' },\n  { id: '1824', parentId: '1811', name: 'Level 6', subtext: 'id 1824', type: 'Level 6' },\n  { id: '1825', parentId: '1824', name: 'Level 7', subtext: 'id 1825', type: 'Level 7' },\n  { id: '1826', parentId: '1824', name: 'Level 7', subtext: 'id 1826', type: 'Level 7' },\n  { id: '1827', parentId: '1824', name: 'Level 7', subtext: 'id 1827', type: 'Level 7' },\n  { id: '1828', parentId: '1824', name: 'Level 7', subtext: 'id 1828', type: 'Level 7' },\n  { id: '1829', parentId: '1811', name: 'Level 6', subtext: 'id 1829', type: 'Level 6' },\n  { id: '1830', parentId: '1829', name: 'Level 7', subtext: 'id 1830', type: 'Level 7' },\n  { id: '1831', parentId: '1829', name: 'Level 7', subtext: 'id 1831', type: 'Level 7' },\n  { id: '1832', parentId: '1829', name: 'Level 7', subtext: 'id 1832', type: 'Level 7' },\n  { id: '1833', parentId: '1829', name: 'Level 7', subtext: 'id 1833', type: 'Level 7' },\n  { id: '1834', parentId: '1829', name: 'Level 7', subtext: 'id 1834', type: 'Level 7' },\n  { id: '1835', parentId: '1722', name: 'Level 4', subtext: 'id 1835', type: 'Level 4' },\n  { id: '1836', parentId: '1835', name: 'Level 5', subtext: 'id 1836', type: 'Level 5' },\n  { id: '1837', parentId: '1836', name: 'Level 6', subtext: 'id 1837', type: 'Level 6' },\n  { id: '1838', parentId: '1837', name: 'Level 7', subtext: 'id 1838', type: 'Level 7' },\n  { id: '1839', parentId: '1837', name: 'Level 7', subtext: 'id 1839', type: 'Level 7' },\n  { id: '1840', parentId: '1837', name: 'Level 7', subtext: 'id 1840', type: 'Level 7' },\n  { id: '1841', parentId: '1837', name: 'Level 7', subtext: 'id 1841', type: 'Level 7' },\n  { id: '1842', parentId: '1837', name: 'Level 7', subtext: 'id 1842', type: 'Level 7' },\n  { id: '1843', parentId: '1835', name: 'Level 5', subtext: 'id 1843', type: 'Level 5' },\n  { id: '1844', parentId: '1843', name: 'Level 6', subtext: 'id 1844', type: 'Level 6' },\n  { id: '1845', parentId: '1844', name: 'Level 7', subtext: 'id 1845', type: 'Level 7' },\n  { id: '1846', parentId: '1844', name: 'Level 7', subtext: 'id 1846', type: 'Level 7' },\n  { id: '1847', parentId: '1844', name: 'Level 7', subtext: 'id 1847', type: 'Level 7' },\n  { id: '1848', parentId: '1843', name: 'Level 6', subtext: 'id 1848', type: 'Level 6' },\n  { id: '1849', parentId: '1848', name: 'Level 7', subtext: 'id 1849', type: 'Level 7' },\n  { id: '1850', parentId: '1848', name: 'Level 7', subtext: 'id 1850', type: 'Level 7' },\n  { id: '1851', parentId: '1848', name: 'Level 7', subtext: 'id 1851', type: 'Level 7' },\n  { id: '1852', parentId: '1843', name: 'Level 6', subtext: 'id 1852', type: 'Level 6' },\n  { id: '1853', parentId: '1852', name: 'Level 7', subtext: 'id 1853', type: 'Level 7' },\n  { id: '1854', parentId: '1852', name: 'Level 7', subtext: 'id 1854', type: 'Level 7' },\n  { id: '1855', parentId: '1852', name: 'Level 7', subtext: 'id 1855', type: 'Level 7' },\n  { id: '1856', parentId: '1852', name: 'Level 7', subtext: 'id 1856', type: 'Level 7' },\n  { id: '1857', parentId: '1843', name: 'Level 6', subtext: 'id 1857', type: 'Level 6' },\n  { id: '1858', parentId: '1857', name: 'Level 7', subtext: 'id 1858', type: 'Level 7' },\n  { id: '1859', parentId: '1857', name: 'Level 7', subtext: 'id 1859', type: 'Level 7' },\n  { id: '1860', parentId: '1835', name: 'Level 5', subtext: 'id 1860', type: 'Level 5' },\n  { id: '1861', parentId: '1860', name: 'Level 6', subtext: 'id 1861', type: 'Level 6' },\n  { id: '1862', parentId: '1861', name: 'Level 7', subtext: 'id 1862', type: 'Level 7' },\n  { id: '1863', parentId: '1860', name: 'Level 6', subtext: 'id 1863', type: 'Level 6' },\n  { id: '1864', parentId: '1863', name: 'Level 7', subtext: 'id 1864', type: 'Level 7' },\n  { id: '1865', parentId: '1863', name: 'Level 7', subtext: 'id 1865', type: 'Level 7' },\n  { id: '1866', parentId: '1863', name: 'Level 7', subtext: 'id 1866', type: 'Level 7' },\n  { id: '1867', parentId: '1860', name: 'Level 6', subtext: 'id 1867', type: 'Level 6' },\n  { id: '1868', parentId: '1867', name: 'Level 7', subtext: 'id 1868', type: 'Level 7' },\n  { id: '1869', parentId: '1867', name: 'Level 7', subtext: 'id 1869', type: 'Level 7' },\n  { id: '1870', parentId: '1867', name: 'Level 7', subtext: 'id 1870', type: 'Level 7' },\n  { id: '1871', parentId: '1860', name: 'Level 6', subtext: 'id 1871', type: 'Level 6' },\n  { id: '1872', parentId: '1871', name: 'Level 7', subtext: 'id 1872', type: 'Level 7' },\n  { id: '1873', parentId: '1871', name: 'Level 7', subtext: 'id 1873', type: 'Level 7' },\n  { id: '1874', parentId: '1871', name: 'Level 7', subtext: 'id 1874', type: 'Level 7' },\n  { id: '1875', parentId: '1871', name: 'Level 7', subtext: 'id 1875', type: 'Level 7' },\n  { id: '1876', parentId: '1860', name: 'Level 6', subtext: 'id 1876', type: 'Level 6' },\n  { id: '1877', parentId: '1876', name: 'Level 7', subtext: 'id 1877', type: 'Level 7' },\n  { id: '1878', parentId: '1876', name: 'Level 7', subtext: 'id 1878', type: 'Level 7' },\n  { id: '1879', parentId: '1876', name: 'Level 7', subtext: 'id 1879', type: 'Level 7' },\n  { id: '1880', parentId: '1876', name: 'Level 7', subtext: 'id 1880', type: 'Level 7' },\n  { id: '1881', parentId: '1876', name: 'Level 7', subtext: 'id 1881', type: 'Level 7' },\n  { id: '1882', parentId: '1835', name: 'Level 5', subtext: 'id 1882', type: 'Level 5' },\n  { id: '1883', parentId: '1882', name: 'Level 6', subtext: 'id 1883', type: 'Level 6' },\n  { id: '1884', parentId: '1883', name: 'Level 7', subtext: 'id 1884', type: 'Level 7' },\n  { id: '1885', parentId: '1883', name: 'Level 7', subtext: 'id 1885', type: 'Level 7' },\n  { id: '1886', parentId: '1883', name: 'Level 7', subtext: 'id 1886', type: 'Level 7' },\n  { id: '1887', parentId: '1883', name: 'Level 7', subtext: 'id 1887', type: 'Level 7' },\n  { id: '1888', parentId: '1883', name: 'Level 7', subtext: 'id 1888', type: 'Level 7' },\n  { id: '1889', parentId: '1882', name: 'Level 6', subtext: 'id 1889', type: 'Level 6' },\n  { id: '1890', parentId: '1889', name: 'Level 7', subtext: 'id 1890', type: 'Level 7' },\n  { id: '1891', parentId: '1889', name: 'Level 7', subtext: 'id 1891', type: 'Level 7' },\n  { id: '1892', parentId: '1889', name: 'Level 7', subtext: 'id 1892', type: 'Level 7' },\n  { id: '1893', parentId: '1889', name: 'Level 7', subtext: 'id 1893', type: 'Level 7' },\n  { id: '1894', parentId: '1882', name: 'Level 6', subtext: 'id 1894', type: 'Level 6' },\n  { id: '1895', parentId: '1894', name: 'Level 7', subtext: 'id 1895', type: 'Level 7' },\n  { id: '1896', parentId: '1882', name: 'Level 6', subtext: 'id 1896', type: 'Level 6' },\n  { id: '1897', parentId: '1896', name: 'Level 7', subtext: 'id 1897', type: 'Level 7' },\n  { id: '1898', parentId: '1896', name: 'Level 7', subtext: 'id 1898', type: 'Level 7' },\n  { id: '1899', parentId: '1896', name: 'Level 7', subtext: 'id 1899', type: 'Level 7' },\n  { id: '1900', parentId: '1896', name: 'Level 7', subtext: 'id 1900', type: 'Level 7' },\n  { id: '1901', parentId: '1138', name: 'Level 2', subtext: 'id 1901', type: 'Level 2' },\n  { id: '1902', parentId: '1901', name: 'Level 3', subtext: 'id 1902', type: 'Level 3' },\n  { id: '1903', parentId: '1902', name: 'Level 4', subtext: 'id 1903', type: 'Level 4' },\n  { id: '1904', parentId: '1903', name: 'Level 5', subtext: 'id 1904', type: 'Level 5' },\n  { id: '1905', parentId: '1904', name: 'Level 6', subtext: 'id 1905', type: 'Level 6' },\n  { id: '1906', parentId: '1905', name: 'Level 7', subtext: 'id 1906', type: 'Level 7' },\n  { id: '1907', parentId: '1905', name: 'Level 7', subtext: 'id 1907', type: 'Level 7' },\n  { id: '1908', parentId: '1905', name: 'Level 7', subtext: 'id 1908', type: 'Level 7' },\n  { id: '1909', parentId: '1905', name: 'Level 7', subtext: 'id 1909', type: 'Level 7' },\n  { id: '1910', parentId: '1905', name: 'Level 7', subtext: 'id 1910', type: 'Level 7' },\n  { id: '1911', parentId: '1904', name: 'Level 6', subtext: 'id 1911', type: 'Level 6' },\n  { id: '1912', parentId: '1911', name: 'Level 7', subtext: 'id 1912', type: 'Level 7' },\n  { id: '1913', parentId: '1911', name: 'Level 7', subtext: 'id 1913', type: 'Level 7' },\n  { id: '1914', parentId: '1911', name: 'Level 7', subtext: 'id 1914', type: 'Level 7' },\n  { id: '1915', parentId: '1911', name: 'Level 7', subtext: 'id 1915', type: 'Level 7' },\n  { id: '1916', parentId: '1904', name: 'Level 6', subtext: 'id 1916', type: 'Level 6' },\n  { id: '1917', parentId: '1916', name: 'Level 7', subtext: 'id 1917', type: 'Level 7' },\n  { id: '1918', parentId: '1916', name: 'Level 7', subtext: 'id 1918', type: 'Level 7' },\n  { id: '1919', parentId: '1916', name: 'Level 7', subtext: 'id 1919', type: 'Level 7' },\n  { id: '1920', parentId: '1916', name: 'Level 7', subtext: 'id 1920', type: 'Level 7' },\n  { id: '1921', parentId: '1904', name: 'Level 6', subtext: 'id 1921', type: 'Level 6' },\n  { id: '1922', parentId: '1921', name: 'Level 7', subtext: 'id 1922', type: 'Level 7' },\n  { id: '1923', parentId: '1921', name: 'Level 7', subtext: 'id 1923', type: 'Level 7' },\n  { id: '1924', parentId: '1921', name: 'Level 7', subtext: 'id 1924', type: 'Level 7' },\n  { id: '1925', parentId: '1921', name: 'Level 7', subtext: 'id 1925', type: 'Level 7' },\n  { id: '1926', parentId: '1921', name: 'Level 7', subtext: 'id 1926', type: 'Level 7' },\n  { id: '1927', parentId: '1903', name: 'Level 5', subtext: 'id 1927', type: 'Level 5' },\n  { id: '1928', parentId: '1927', name: 'Level 6', subtext: 'id 1928', type: 'Level 6' },\n  { id: '1929', parentId: '1928', name: 'Level 7', subtext: 'id 1929', type: 'Level 7' },\n  { id: '1930', parentId: '1928', name: 'Level 7', subtext: 'id 1930', type: 'Level 7' },\n  { id: '1931', parentId: '1928', name: 'Level 7', subtext: 'id 1931', type: 'Level 7' },\n  { id: '1932', parentId: '1928', name: 'Level 7', subtext: 'id 1932', type: 'Level 7' },\n  { id: '1933', parentId: '1928', name: 'Level 7', subtext: 'id 1933', type: 'Level 7' },\n  { id: '1934', parentId: '1903', name: 'Level 5', subtext: 'id 1934', type: 'Level 5' },\n  { id: '1935', parentId: '1934', name: 'Level 6', subtext: 'id 1935', type: 'Level 6' },\n  { id: '1936', parentId: '1935', name: 'Level 7', subtext: 'id 1936', type: 'Level 7' },\n  { id: '1937', parentId: '1934', name: 'Level 6', subtext: 'id 1937', type: 'Level 6' },\n  { id: '1938', parentId: '1937', name: 'Level 7', subtext: 'id 1938', type: 'Level 7' },\n  { id: '1939', parentId: '1937', name: 'Level 7', subtext: 'id 1939', type: 'Level 7' },\n  { id: '1940', parentId: '1937', name: 'Level 7', subtext: 'id 1940', type: 'Level 7' },\n  { id: '1941', parentId: '1937', name: 'Level 7', subtext: 'id 1941', type: 'Level 7' },\n  { id: '1942', parentId: '1934', name: 'Level 6', subtext: 'id 1942', type: 'Level 6' },\n  { id: '1943', parentId: '1942', name: 'Level 7', subtext: 'id 1943', type: 'Level 7' },\n  { id: '1944', parentId: '1934', name: 'Level 6', subtext: 'id 1944', type: 'Level 6' },\n  { id: '1945', parentId: '1944', name: 'Level 7', subtext: 'id 1945', type: 'Level 7' },\n  { id: '1946', parentId: '1903', name: 'Level 5', subtext: 'id 1946', type: 'Level 5' },\n  { id: '1947', parentId: '1946', name: 'Level 6', subtext: 'id 1947', type: 'Level 6' },\n  { id: '1948', parentId: '1947', name: 'Level 7', subtext: 'id 1948', type: 'Level 7' },\n  { id: '1949', parentId: '1947', name: 'Level 7', subtext: 'id 1949', type: 'Level 7' },\n  { id: '1950', parentId: '1947', name: 'Level 7', subtext: 'id 1950', type: 'Level 7' },\n  { id: '1951', parentId: '1947', name: 'Level 7', subtext: 'id 1951', type: 'Level 7' },\n  { id: '1952', parentId: '1946', name: 'Level 6', subtext: 'id 1952', type: 'Level 6' },\n  { id: '1953', parentId: '1952', name: 'Level 7', subtext: 'id 1953', type: 'Level 7' },\n  { id: '1954', parentId: '1952', name: 'Level 7', subtext: 'id 1954', type: 'Level 7' },\n  { id: '1955', parentId: '1946', name: 'Level 6', subtext: 'id 1955', type: 'Level 6' },\n  { id: '1956', parentId: '1955', name: 'Level 7', subtext: 'id 1956', type: 'Level 7' },\n  { id: '1957', parentId: '1903', name: 'Level 5', subtext: 'id 1957', type: 'Level 5' },\n  { id: '1958', parentId: '1957', name: 'Level 6', subtext: 'id 1958', type: 'Level 6' },\n  { id: '1959', parentId: '1958', name: 'Level 7', subtext: 'id 1959', type: 'Level 7' },\n  { id: '1960', parentId: '1958', name: 'Level 7', subtext: 'id 1960', type: 'Level 7' },\n  { id: '1961', parentId: '1958', name: 'Level 7', subtext: 'id 1961', type: 'Level 7' },\n  { id: '1962', parentId: '1957', name: 'Level 6', subtext: 'id 1962', type: 'Level 6' },\n  { id: '1963', parentId: '1962', name: 'Level 7', subtext: 'id 1963', type: 'Level 7' },\n  { id: '1964', parentId: '1962', name: 'Level 7', subtext: 'id 1964', type: 'Level 7' },\n  { id: '1965', parentId: '1962', name: 'Level 7', subtext: 'id 1965', type: 'Level 7' },\n  { id: '1966', parentId: '1957', name: 'Level 6', subtext: 'id 1966', type: 'Level 6' },\n  { id: '1967', parentId: '1966', name: 'Level 7', subtext: 'id 1967', type: 'Level 7' },\n  { id: '1968', parentId: '1966', name: 'Level 7', subtext: 'id 1968', type: 'Level 7' },\n  { id: '1969', parentId: '1966', name: 'Level 7', subtext: 'id 1969', type: 'Level 7' },\n  { id: '1970', parentId: '1966', name: 'Level 7', subtext: 'id 1970', type: 'Level 7' },\n  { id: '1971', parentId: '1957', name: 'Level 6', subtext: 'id 1971', type: 'Level 6' },\n  { id: '1972', parentId: '1971', name: 'Level 7', subtext: 'id 1972', type: 'Level 7' },\n  { id: '1973', parentId: '1971', name: 'Level 7', subtext: 'id 1973', type: 'Level 7' },\n  { id: '1974', parentId: '1971', name: 'Level 7', subtext: 'id 1974', type: 'Level 7' },\n  { id: '1975', parentId: '1971', name: 'Level 7', subtext: 'id 1975', type: 'Level 7' },\n  { id: '1976', parentId: '1957', name: 'Level 6', subtext: 'id 1976', type: 'Level 6' },\n  { id: '1977', parentId: '1976', name: 'Level 7', subtext: 'id 1977', type: 'Level 7' },\n  { id: '1978', parentId: '1976', name: 'Level 7', subtext: 'id 1978', type: 'Level 7' },\n  { id: '1979', parentId: '1976', name: 'Level 7', subtext: 'id 1979', type: 'Level 7' },\n  { id: '1980', parentId: '1976', name: 'Level 7', subtext: 'id 1980', type: 'Level 7' },\n  { id: '1981', parentId: '1902', name: 'Level 4', subtext: 'id 1981', type: 'Level 4' },\n  { id: '1982', parentId: '1981', name: 'Level 5', subtext: 'id 1982', type: 'Level 5' },\n  { id: '1983', parentId: '1982', name: 'Level 6', subtext: 'id 1983', type: 'Level 6' },\n  { id: '1984', parentId: '1983', name: 'Level 7', subtext: 'id 1984', type: 'Level 7' },\n  { id: '1985', parentId: '1983', name: 'Level 7', subtext: 'id 1985', type: 'Level 7' },\n  { id: '1986', parentId: '1983', name: 'Level 7', subtext: 'id 1986', type: 'Level 7' },\n  { id: '1987', parentId: '1983', name: 'Level 7', subtext: 'id 1987', type: 'Level 7' },\n  { id: '1988', parentId: '1982', name: 'Level 6', subtext: 'id 1988', type: 'Level 6' },\n  { id: '1989', parentId: '1988', name: 'Level 7', subtext: 'id 1989', type: 'Level 7' },\n  { id: '1990', parentId: '1988', name: 'Level 7', subtext: 'id 1990', type: 'Level 7' },\n  { id: '1991', parentId: '1988', name: 'Level 7', subtext: 'id 1991', type: 'Level 7' },\n  { id: '1992', parentId: '1988', name: 'Level 7', subtext: 'id 1992', type: 'Level 7' },\n  { id: '1993', parentId: '1981', name: 'Level 5', subtext: 'id 1993', type: 'Level 5' },\n  { id: '1994', parentId: '1993', name: 'Level 6', subtext: 'id 1994', type: 'Level 6' },\n  { id: '1995', parentId: '1994', name: 'Level 7', subtext: 'id 1995', type: 'Level 7' },\n  { id: '1996', parentId: '1993', name: 'Level 6', subtext: 'id 1996', type: 'Level 6' },\n  { id: '1997', parentId: '1996', name: 'Level 7', subtext: 'id 1997', type: 'Level 7' },\n  { id: '1998', parentId: '1996', name: 'Level 7', subtext: 'id 1998', type: 'Level 7' },\n  { id: '1999', parentId: '1996', name: 'Level 7', subtext: 'id 1999', type: 'Level 7' },\n  { id: '2000', parentId: '1996', name: 'Level 7', subtext: 'id 2000', type: 'Level 7' },\n  { id: '2001', parentId: '1996', name: 'Level 7', subtext: 'id 2001', type: 'Level 7' },\n  { id: '2002', parentId: '1993', name: 'Level 6', subtext: 'id 2002', type: 'Level 6' },\n  { id: '2003', parentId: '2002', name: 'Level 7', subtext: 'id 2003', type: 'Level 7' },\n  { id: '2004', parentId: '1993', name: 'Level 6', subtext: 'id 2004', type: 'Level 6' },\n  { id: '2005', parentId: '2004', name: 'Level 7', subtext: 'id 2005', type: 'Level 7' },\n  { id: '2006', parentId: '2004', name: 'Level 7', subtext: 'id 2006', type: 'Level 7' },\n  { id: '2007', parentId: '2004', name: 'Level 7', subtext: 'id 2007', type: 'Level 7' },\n  { id: '2008', parentId: '2004', name: 'Level 7', subtext: 'id 2008', type: 'Level 7' },\n  { id: '2009', parentId: '1993', name: 'Level 6', subtext: 'id 2009', type: 'Level 6' },\n  { id: '2010', parentId: '2009', name: 'Level 7', subtext: 'id 2010', type: 'Level 7' },\n  { id: '2011', parentId: '1981', name: 'Level 5', subtext: 'id 2011', type: 'Level 5' },\n  { id: '2012', parentId: '2011', name: 'Level 6', subtext: 'id 2012', type: 'Level 6' },\n  { id: '2013', parentId: '2012', name: 'Level 7', subtext: 'id 2013', type: 'Level 7' },\n  { id: '2014', parentId: '2012', name: 'Level 7', subtext: 'id 2014', type: 'Level 7' },\n  { id: '2015', parentId: '2012', name: 'Level 7', subtext: 'id 2015', type: 'Level 7' },\n  { id: '2016', parentId: '2012', name: 'Level 7', subtext: 'id 2016', type: 'Level 7' },\n  { id: '2017', parentId: '2011', name: 'Level 6', subtext: 'id 2017', type: 'Level 6' },\n  { id: '2018', parentId: '2017', name: 'Level 7', subtext: 'id 2018', type: 'Level 7' },\n  { id: '2019', parentId: '2017', name: 'Level 7', subtext: 'id 2019', type: 'Level 7' },\n  { id: '2020', parentId: '2017', name: 'Level 7', subtext: 'id 2020', type: 'Level 7' },\n  { id: '2021', parentId: '2017', name: 'Level 7', subtext: 'id 2021', type: 'Level 7' },\n  { id: '2022', parentId: '2011', name: 'Level 6', subtext: 'id 2022', type: 'Level 6' },\n  { id: '2023', parentId: '2022', name: 'Level 7', subtext: 'id 2023', type: 'Level 7' },\n  { id: '2024', parentId: '2022', name: 'Level 7', subtext: 'id 2024', type: 'Level 7' },\n  { id: '2025', parentId: '2022', name: 'Level 7', subtext: 'id 2025', type: 'Level 7' },\n  { id: '2026', parentId: '2022', name: 'Level 7', subtext: 'id 2026', type: 'Level 7' },\n  { id: '2027', parentId: '2022', name: 'Level 7', subtext: 'id 2027', type: 'Level 7' },\n  { id: '2028', parentId: '2011', name: 'Level 6', subtext: 'id 2028', type: 'Level 6' },\n  { id: '2029', parentId: '2028', name: 'Level 7', subtext: 'id 2029', type: 'Level 7' },\n  { id: '2030', parentId: '2028', name: 'Level 7', subtext: 'id 2030', type: 'Level 7' },\n  { id: '2031', parentId: '2028', name: 'Level 7', subtext: 'id 2031', type: 'Level 7' },\n  { id: '2032', parentId: '2028', name: 'Level 7', subtext: 'id 2032', type: 'Level 7' },\n  { id: '2033', parentId: '2028', name: 'Level 7', subtext: 'id 2033', type: 'Level 7' },\n  { id: '2034', parentId: '2011', name: 'Level 6', subtext: 'id 2034', type: 'Level 6' },\n  { id: '2035', parentId: '2034', name: 'Level 7', subtext: 'id 2035', type: 'Level 7' },\n  { id: '2036', parentId: '2034', name: 'Level 7', subtext: 'id 2036', type: 'Level 7' },\n  { id: '2037', parentId: '2034', name: 'Level 7', subtext: 'id 2037', type: 'Level 7' },\n  { id: '2038', parentId: '2034', name: 'Level 7', subtext: 'id 2038', type: 'Level 7' },\n  { id: '2039', parentId: '1981', name: 'Level 5', subtext: 'id 2039', type: 'Level 5' },\n  { id: '2040', parentId: '2039', name: 'Level 6', subtext: 'id 2040', type: 'Level 6' },\n  { id: '2041', parentId: '2040', name: 'Level 7', subtext: 'id 2041', type: 'Level 7' },\n  { id: '2042', parentId: '2040', name: 'Level 7', subtext: 'id 2042', type: 'Level 7' },\n  { id: '2043', parentId: '1902', name: 'Level 4', subtext: 'id 2043', type: 'Level 4' },\n  { id: '2044', parentId: '2043', name: 'Level 5', subtext: 'id 2044', type: 'Level 5' },\n  { id: '2045', parentId: '2044', name: 'Level 6', subtext: 'id 2045', type: 'Level 6' },\n  { id: '2046', parentId: '2045', name: 'Level 7', subtext: 'id 2046', type: 'Level 7' },\n  { id: '2047', parentId: '2045', name: 'Level 7', subtext: 'id 2047', type: 'Level 7' },\n  { id: '2048', parentId: '2044', name: 'Level 6', subtext: 'id 2048', type: 'Level 6' },\n  { id: '2049', parentId: '2048', name: 'Level 7', subtext: 'id 2049', type: 'Level 7' },\n  { id: '2050', parentId: '2044', name: 'Level 6', subtext: 'id 2050', type: 'Level 6' },\n  { id: '2051', parentId: '2050', name: 'Level 7', subtext: 'id 2051', type: 'Level 7' },\n  { id: '2052', parentId: '2050', name: 'Level 7', subtext: 'id 2052', type: 'Level 7' },\n  { id: '2053', parentId: '2050', name: 'Level 7', subtext: 'id 2053', type: 'Level 7' },\n  { id: '2054', parentId: '2050', name: 'Level 7', subtext: 'id 2054', type: 'Level 7' },\n  { id: '2055', parentId: '2044', name: 'Level 6', subtext: 'id 2055', type: 'Level 6' },\n  { id: '2056', parentId: '2055', name: 'Level 7', subtext: 'id 2056', type: 'Level 7' },\n  { id: '2057', parentId: '2055', name: 'Level 7', subtext: 'id 2057', type: 'Level 7' },\n  { id: '2058', parentId: '2043', name: 'Level 5', subtext: 'id 2058', type: 'Level 5' },\n  { id: '2059', parentId: '2058', name: 'Level 6', subtext: 'id 2059', type: 'Level 6' },\n  { id: '2060', parentId: '2059', name: 'Level 7', subtext: 'id 2060', type: 'Level 7' },\n  { id: '2061', parentId: '2059', name: 'Level 7', subtext: 'id 2061', type: 'Level 7' },\n  { id: '2062', parentId: '2058', name: 'Level 6', subtext: 'id 2062', type: 'Level 6' },\n  { id: '2063', parentId: '2062', name: 'Level 7', subtext: 'id 2063', type: 'Level 7' },\n  { id: '2064', parentId: '2062', name: 'Level 7', subtext: 'id 2064', type: 'Level 7' },\n  { id: '2065', parentId: '2058', name: 'Level 6', subtext: 'id 2065', type: 'Level 6' },\n  { id: '2066', parentId: '2065', name: 'Level 7', subtext: 'id 2066', type: 'Level 7' },\n  { id: '2067', parentId: '2065', name: 'Level 7', subtext: 'id 2067', type: 'Level 7' },\n  { id: '2068', parentId: '2065', name: 'Level 7', subtext: 'id 2068', type: 'Level 7' },\n  { id: '2069', parentId: '2065', name: 'Level 7', subtext: 'id 2069', type: 'Level 7' },\n  { id: '2070', parentId: '2058', name: 'Level 6', subtext: 'id 2070', type: 'Level 6' },\n  { id: '2071', parentId: '2070', name: 'Level 7', subtext: 'id 2071', type: 'Level 7' },\n  { id: '2072', parentId: '2070', name: 'Level 7', subtext: 'id 2072', type: 'Level 7' },\n  { id: '2073', parentId: '2070', name: 'Level 7', subtext: 'id 2073', type: 'Level 7' },\n  { id: '2074', parentId: '2070', name: 'Level 7', subtext: 'id 2074', type: 'Level 7' },\n  { id: '2075', parentId: '2058', name: 'Level 6', subtext: 'id 2075', type: 'Level 6' },\n  { id: '2076', parentId: '2075', name: 'Level 7', subtext: 'id 2076', type: 'Level 7' },\n  { id: '2077', parentId: '2075', name: 'Level 7', subtext: 'id 2077', type: 'Level 7' },\n  { id: '2078', parentId: '1902', name: 'Level 4', subtext: 'id 2078', type: 'Level 4' },\n  { id: '2079', parentId: '2078', name: 'Level 5', subtext: 'id 2079', type: 'Level 5' },\n  { id: '2080', parentId: '2079', name: 'Level 6', subtext: 'id 2080', type: 'Level 6' },\n  { id: '2081', parentId: '2080', name: 'Level 7', subtext: 'id 2081', type: 'Level 7' },\n  { id: '2082', parentId: '2079', name: 'Level 6', subtext: 'id 2082', type: 'Level 6' },\n  { id: '2083', parentId: '2082', name: 'Level 7', subtext: 'id 2083', type: 'Level 7' },\n  { id: '2084', parentId: '2082', name: 'Level 7', subtext: 'id 2084', type: 'Level 7' },\n  { id: '2085', parentId: '2082', name: 'Level 7', subtext: 'id 2085', type: 'Level 7' },\n  { id: '2086', parentId: '2082', name: 'Level 7', subtext: 'id 2086', type: 'Level 7' },\n  { id: '2087', parentId: '2082', name: 'Level 7', subtext: 'id 2087', type: 'Level 7' },\n  { id: '2088', parentId: '2078', name: 'Level 5', subtext: 'id 2088', type: 'Level 5' },\n  { id: '2089', parentId: '2088', name: 'Level 6', subtext: 'id 2089', type: 'Level 6' },\n  { id: '2090', parentId: '2089', name: 'Level 7', subtext: 'id 2090', type: 'Level 7' },\n  { id: '2091', parentId: '2089', name: 'Level 7', subtext: 'id 2091', type: 'Level 7' },\n  { id: '2092', parentId: '2089', name: 'Level 7', subtext: 'id 2092', type: 'Level 7' },\n  { id: '2093', parentId: '2088', name: 'Level 6', subtext: 'id 2093', type: 'Level 6' },\n  { id: '2094', parentId: '2093', name: 'Level 7', subtext: 'id 2094', type: 'Level 7' },\n  { id: '2095', parentId: '2093', name: 'Level 7', subtext: 'id 2095', type: 'Level 7' },\n  { id: '2096', parentId: '2093', name: 'Level 7', subtext: 'id 2096', type: 'Level 7' },\n  { id: '2097', parentId: '2088', name: 'Level 6', subtext: 'id 2097', type: 'Level 6' },\n  { id: '2098', parentId: '2097', name: 'Level 7', subtext: 'id 2098', type: 'Level 7' },\n  { id: '2099', parentId: '2097', name: 'Level 7', subtext: 'id 2099', type: 'Level 7' },\n  { id: '2100', parentId: '2097', name: 'Level 7', subtext: 'id 2100', type: 'Level 7' },\n  { id: '2101', parentId: '2097', name: 'Level 7', subtext: 'id 2101', type: 'Level 7' },\n  { id: '2102', parentId: '2097', name: 'Level 7', subtext: 'id 2102', type: 'Level 7' },\n  { id: '2103', parentId: '2088', name: 'Level 6', subtext: 'id 2103', type: 'Level 6' },\n  { id: '2104', parentId: '2103', name: 'Level 7', subtext: 'id 2104', type: 'Level 7' },\n  { id: '2105', parentId: '2103', name: 'Level 7', subtext: 'id 2105', type: 'Level 7' },\n  { id: '2106', parentId: '2078', name: 'Level 5', subtext: 'id 2106', type: 'Level 5' },\n  { id: '2107', parentId: '2106', name: 'Level 6', subtext: 'id 2107', type: 'Level 6' },\n  { id: '2108', parentId: '2107', name: 'Level 7', subtext: 'id 2108', type: 'Level 7' },\n  { id: '2109', parentId: '2107', name: 'Level 7', subtext: 'id 2109', type: 'Level 7' },\n  { id: '2110', parentId: '2106', name: 'Level 6', subtext: 'id 2110', type: 'Level 6' },\n  { id: '2111', parentId: '2110', name: 'Level 7', subtext: 'id 2111', type: 'Level 7' },\n  { id: '2112', parentId: '2106', name: 'Level 6', subtext: 'id 2112', type: 'Level 6' },\n  { id: '2113', parentId: '2112', name: 'Level 7', subtext: 'id 2113', type: 'Level 7' },\n  { id: '2114', parentId: '2112', name: 'Level 7', subtext: 'id 2114', type: 'Level 7' },\n  { id: '2115', parentId: '2112', name: 'Level 7', subtext: 'id 2115', type: 'Level 7' },\n  { id: '2116', parentId: '2112', name: 'Level 7', subtext: 'id 2116', type: 'Level 7' },\n  { id: '2117', parentId: '2112', name: 'Level 7', subtext: 'id 2117', type: 'Level 7' },\n  { id: '2118', parentId: '2106', name: 'Level 6', subtext: 'id 2118', type: 'Level 6' },\n  { id: '2119', parentId: '2118', name: 'Level 7', subtext: 'id 2119', type: 'Level 7' },\n  { id: '2120', parentId: '2118', name: 'Level 7', subtext: 'id 2120', type: 'Level 7' },\n  { id: '2121', parentId: '2118', name: 'Level 7', subtext: 'id 2121', type: 'Level 7' },\n  { id: '2122', parentId: '2118', name: 'Level 7', subtext: 'id 2122', type: 'Level 7' },\n  { id: '2123', parentId: '2106', name: 'Level 6', subtext: 'id 2123', type: 'Level 6' },\n  { id: '2124', parentId: '2123', name: 'Level 7', subtext: 'id 2124', type: 'Level 7' },\n  { id: '2125', parentId: '2123', name: 'Level 7', subtext: 'id 2125', type: 'Level 7' },\n  { id: '2126', parentId: '2123', name: 'Level 7', subtext: 'id 2126', type: 'Level 7' },\n  { id: '2127', parentId: '2123', name: 'Level 7', subtext: 'id 2127', type: 'Level 7' },\n  { id: '2128', parentId: '2078', name: 'Level 5', subtext: 'id 2128', type: 'Level 5' },\n  { id: '2129', parentId: '2128', name: 'Level 6', subtext: 'id 2129', type: 'Level 6' },\n  { id: '2130', parentId: '2129', name: 'Level 7', subtext: 'id 2130', type: 'Level 7' },\n  { id: '2131', parentId: '2129', name: 'Level 7', subtext: 'id 2131', type: 'Level 7' },\n  { id: '2132', parentId: '2129', name: 'Level 7', subtext: 'id 2132', type: 'Level 7' },\n  { id: '2133', parentId: '2129', name: 'Level 7', subtext: 'id 2133', type: 'Level 7' },\n  { id: '2134', parentId: '2128', name: 'Level 6', subtext: 'id 2134', type: 'Level 6' },\n  { id: '2135', parentId: '2134', name: 'Level 7', subtext: 'id 2135', type: 'Level 7' },\n  { id: '2136', parentId: '2134', name: 'Level 7', subtext: 'id 2136', type: 'Level 7' },\n  { id: '2137', parentId: '2134', name: 'Level 7', subtext: 'id 2137', type: 'Level 7' },\n  { id: '2138', parentId: '2134', name: 'Level 7', subtext: 'id 2138', type: 'Level 7' },\n  { id: '2139', parentId: '2134', name: 'Level 7', subtext: 'id 2139', type: 'Level 7' },\n  { id: '2140', parentId: '2128', name: 'Level 6', subtext: 'id 2140', type: 'Level 6' },\n  { id: '2141', parentId: '2140', name: 'Level 7', subtext: 'id 2141', type: 'Level 7' },\n  { id: '2142', parentId: '2140', name: 'Level 7', subtext: 'id 2142', type: 'Level 7' },\n  { id: '2143', parentId: '2128', name: 'Level 6', subtext: 'id 2143', type: 'Level 6' },\n  { id: '2144', parentId: '2143', name: 'Level 7', subtext: 'id 2144', type: 'Level 7' },\n  { id: '2145', parentId: '2143', name: 'Level 7', subtext: 'id 2145', type: 'Level 7' },\n  { id: '2146', parentId: '2143', name: 'Level 7', subtext: 'id 2146', type: 'Level 7' },\n  { id: '2147', parentId: '1902', name: 'Level 4', subtext: 'id 2147', type: 'Level 4' },\n  { id: '2148', parentId: '2147', name: 'Level 5', subtext: 'id 2148', type: 'Level 5' },\n  { id: '2149', parentId: '2148', name: 'Level 6', subtext: 'id 2149', type: 'Level 6' },\n  { id: '2150', parentId: '2149', name: 'Level 7', subtext: 'id 2150', type: 'Level 7' },\n  { id: '2151', parentId: '2148', name: 'Level 6', subtext: 'id 2151', type: 'Level 6' },\n  { id: '2152', parentId: '2151', name: 'Level 7', subtext: 'id 2152', type: 'Level 7' },\n  { id: '2153', parentId: '2151', name: 'Level 7', subtext: 'id 2153', type: 'Level 7' },\n  { id: '2154', parentId: '2151', name: 'Level 7', subtext: 'id 2154', type: 'Level 7' },\n  { id: '2155', parentId: '2151', name: 'Level 7', subtext: 'id 2155', type: 'Level 7' },\n  { id: '2156', parentId: '2151', name: 'Level 7', subtext: 'id 2156', type: 'Level 7' },\n  { id: '2157', parentId: '2147', name: 'Level 5', subtext: 'id 2157', type: 'Level 5' },\n  { id: '2158', parentId: '2157', name: 'Level 6', subtext: 'id 2158', type: 'Level 6' },\n  { id: '2159', parentId: '2158', name: 'Level 7', subtext: 'id 2159', type: 'Level 7' },\n  { id: '2160', parentId: '2157', name: 'Level 6', subtext: 'id 2160', type: 'Level 6' },\n  { id: '2161', parentId: '2160', name: 'Level 7', subtext: 'id 2161', type: 'Level 7' },\n  { id: '2162', parentId: '2160', name: 'Level 7', subtext: 'id 2162', type: 'Level 7' },\n  { id: '2163', parentId: '2160', name: 'Level 7', subtext: 'id 2163', type: 'Level 7' },\n  { id: '2164', parentId: '2160', name: 'Level 7', subtext: 'id 2164', type: 'Level 7' },\n  { id: '2165', parentId: '2160', name: 'Level 7', subtext: 'id 2165', type: 'Level 7' },\n  { id: '2166', parentId: '2157', name: 'Level 6', subtext: 'id 2166', type: 'Level 6' },\n  { id: '2167', parentId: '2166', name: 'Level 7', subtext: 'id 2167', type: 'Level 7' },\n  { id: '2168', parentId: '1901', name: 'Level 3', subtext: 'id 2168', type: 'Level 3' },\n  { id: '2169', parentId: '2168', name: 'Level 4', subtext: 'id 2169', type: 'Level 4' },\n  { id: '2170', parentId: '2169', name: 'Level 5', subtext: 'id 2170', type: 'Level 5' },\n  { id: '2171', parentId: '2170', name: 'Level 6', subtext: 'id 2171', type: 'Level 6' },\n  { id: '2172', parentId: '2171', name: 'Level 7', subtext: 'id 2172', type: 'Level 7' },\n  { id: '2173', parentId: '2169', name: 'Level 5', subtext: 'id 2173', type: 'Level 5' },\n  { id: '2174', parentId: '2173', name: 'Level 6', subtext: 'id 2174', type: 'Level 6' },\n  { id: '2175', parentId: '2174', name: 'Level 7', subtext: 'id 2175', type: 'Level 7' },\n  { id: '2176', parentId: '2173', name: 'Level 6', subtext: 'id 2176', type: 'Level 6' },\n  { id: '2177', parentId: '2176', name: 'Level 7', subtext: 'id 2177', type: 'Level 7' },\n  { id: '2178', parentId: '2176', name: 'Level 7', subtext: 'id 2178', type: 'Level 7' },\n  { id: '2179', parentId: '2176', name: 'Level 7', subtext: 'id 2179', type: 'Level 7' },\n  { id: '2180', parentId: '2176', name: 'Level 7', subtext: 'id 2180', type: 'Level 7' },\n  { id: '2181', parentId: '2173', name: 'Level 6', subtext: 'id 2181', type: 'Level 6' },\n  { id: '2182', parentId: '2181', name: 'Level 7', subtext: 'id 2182', type: 'Level 7' },\n  { id: '2183', parentId: '2181', name: 'Level 7', subtext: 'id 2183', type: 'Level 7' },\n  { id: '2184', parentId: '2181', name: 'Level 7', subtext: 'id 2184', type: 'Level 7' },\n  { id: '2185', parentId: '2181', name: 'Level 7', subtext: 'id 2185', type: 'Level 7' },\n  { id: '2186', parentId: '2181', name: 'Level 7', subtext: 'id 2186', type: 'Level 7' },\n  { id: '2187', parentId: '2168', name: 'Level 4', subtext: 'id 2187', type: 'Level 4' },\n  { id: '2188', parentId: '2187', name: 'Level 5', subtext: 'id 2188', type: 'Level 5' },\n  { id: '2189', parentId: '2188', name: 'Level 6', subtext: 'id 2189', type: 'Level 6' },\n  { id: '2190', parentId: '2189', name: 'Level 7', subtext: 'id 2190', type: 'Level 7' },\n  { id: '2191', parentId: '2189', name: 'Level 7', subtext: 'id 2191', type: 'Level 7' },\n  { id: '2192', parentId: '2188', name: 'Level 6', subtext: 'id 2192', type: 'Level 6' },\n  { id: '2193', parentId: '2192', name: 'Level 7', subtext: 'id 2193', type: 'Level 7' },\n  { id: '2194', parentId: '2192', name: 'Level 7', subtext: 'id 2194', type: 'Level 7' },\n  { id: '2195', parentId: '2192', name: 'Level 7', subtext: 'id 2195', type: 'Level 7' },\n  { id: '2196', parentId: '2192', name: 'Level 7', subtext: 'id 2196', type: 'Level 7' },\n  { id: '2197', parentId: '2188', name: 'Level 6', subtext: 'id 2197', type: 'Level 6' },\n  { id: '2198', parentId: '2197', name: 'Level 7', subtext: 'id 2198', type: 'Level 7' },\n  { id: '2199', parentId: '2197', name: 'Level 7', subtext: 'id 2199', type: 'Level 7' },\n  { id: '2200', parentId: '2187', name: 'Level 5', subtext: 'id 2200', type: 'Level 5' },\n  { id: '2201', parentId: '2200', name: 'Level 6', subtext: 'id 2201', type: 'Level 6' },\n  { id: '2202', parentId: '2201', name: 'Level 7', subtext: 'id 2202', type: 'Level 7' },\n  { id: '2203', parentId: '2201', name: 'Level 7', subtext: 'id 2203', type: 'Level 7' },\n  { id: '2204', parentId: '2201', name: 'Level 7', subtext: 'id 2204', type: 'Level 7' },\n  { id: '2205', parentId: '2168', name: 'Level 4', subtext: 'id 2205', type: 'Level 4' },\n  { id: '2206', parentId: '2205', name: 'Level 5', subtext: 'id 2206', type: 'Level 5' },\n  { id: '2207', parentId: '2206', name: 'Level 6', subtext: 'id 2207', type: 'Level 6' },\n  { id: '2208', parentId: '2207', name: 'Level 7', subtext: 'id 2208', type: 'Level 7' },\n  { id: '2209', parentId: '2207', name: 'Level 7', subtext: 'id 2209', type: 'Level 7' },\n  { id: '2210', parentId: '2207', name: 'Level 7', subtext: 'id 2210', type: 'Level 7' },\n  { id: '2211', parentId: '2207', name: 'Level 7', subtext: 'id 2211', type: 'Level 7' },\n  { id: '2212', parentId: '2206', name: 'Level 6', subtext: 'id 2212', type: 'Level 6' },\n  { id: '2213', parentId: '2212', name: 'Level 7', subtext: 'id 2213', type: 'Level 7' },\n  { id: '2214', parentId: '2212', name: 'Level 7', subtext: 'id 2214', type: 'Level 7' },\n  { id: '2215', parentId: '2212', name: 'Level 7', subtext: 'id 2215', type: 'Level 7' },\n  { id: '2216', parentId: '2212', name: 'Level 7', subtext: 'id 2216', type: 'Level 7' },\n  { id: '2217', parentId: '2206', name: 'Level 6', subtext: 'id 2217', type: 'Level 6' },\n  { id: '2218', parentId: '2217', name: 'Level 7', subtext: 'id 2218', type: 'Level 7' },\n  { id: '2219', parentId: '2217', name: 'Level 7', subtext: 'id 2219', type: 'Level 7' },\n  { id: '2220', parentId: '2217', name: 'Level 7', subtext: 'id 2220', type: 'Level 7' },\n  { id: '2221', parentId: '2217', name: 'Level 7', subtext: 'id 2221', type: 'Level 7' },\n  { id: '2222', parentId: '2206', name: 'Level 6', subtext: 'id 2222', type: 'Level 6' },\n  { id: '2223', parentId: '2222', name: 'Level 7', subtext: 'id 2223', type: 'Level 7' },\n  { id: '2224', parentId: '2222', name: 'Level 7', subtext: 'id 2224', type: 'Level 7' },\n  { id: '2225', parentId: '2222', name: 'Level 7', subtext: 'id 2225', type: 'Level 7' },\n  { id: '2226', parentId: '2168', name: 'Level 4', subtext: 'id 2226', type: 'Level 4' },\n  { id: '2227', parentId: '2226', name: 'Level 5', subtext: 'id 2227', type: 'Level 5' },\n  { id: '2228', parentId: '2227', name: 'Level 6', subtext: 'id 2228', type: 'Level 6' },\n  { id: '2229', parentId: '2228', name: 'Level 7', subtext: 'id 2229', type: 'Level 7' },\n  { id: '2230', parentId: '2226', name: 'Level 5', subtext: 'id 2230', type: 'Level 5' },\n  { id: '2231', parentId: '2230', name: 'Level 6', subtext: 'id 2231', type: 'Level 6' },\n  { id: '2232', parentId: '2231', name: 'Level 7', subtext: 'id 2232', type: 'Level 7' },\n  { id: '2233', parentId: '2231', name: 'Level 7', subtext: 'id 2233', type: 'Level 7' },\n  { id: '2234', parentId: '2231', name: 'Level 7', subtext: 'id 2234', type: 'Level 7' },\n  { id: '2235', parentId: '2231', name: 'Level 7', subtext: 'id 2235', type: 'Level 7' },\n  { id: '2236', parentId: '2230', name: 'Level 6', subtext: 'id 2236', type: 'Level 6' },\n  { id: '2237', parentId: '2236', name: 'Level 7', subtext: 'id 2237', type: 'Level 7' },\n  { id: '2238', parentId: '2236', name: 'Level 7', subtext: 'id 2238', type: 'Level 7' },\n  { id: '2239', parentId: '2230', name: 'Level 6', subtext: 'id 2239', type: 'Level 6' },\n  { id: '2240', parentId: '2239', name: 'Level 7', subtext: 'id 2240', type: 'Level 7' },\n  { id: '2241', parentId: '2239', name: 'Level 7', subtext: 'id 2241', type: 'Level 7' },\n  { id: '2242', parentId: '2239', name: 'Level 7', subtext: 'id 2242', type: 'Level 7' },\n  { id: '2243', parentId: '2230', name: 'Level 6', subtext: 'id 2243', type: 'Level 6' },\n  { id: '2244', parentId: '2243', name: 'Level 7', subtext: 'id 2244', type: 'Level 7' },\n  { id: '2245', parentId: '2243', name: 'Level 7', subtext: 'id 2245', type: 'Level 7' },\n  { id: '2246', parentId: '2243', name: 'Level 7', subtext: 'id 2246', type: 'Level 7' },\n  { id: '2247', parentId: '2243', name: 'Level 7', subtext: 'id 2247', type: 'Level 7' },\n  { id: '2248', parentId: '2243', name: 'Level 7', subtext: 'id 2248', type: 'Level 7' },\n  { id: '2249', parentId: '1138', name: 'Level 2', subtext: 'id 2249', type: 'Level 2' },\n  { id: '2250', parentId: '2249', name: 'Level 3', subtext: 'id 2250', type: 'Level 3' },\n  { id: '2251', parentId: '2250', name: 'Level 4', subtext: 'id 2251', type: 'Level 4' },\n  { id: '2252', parentId: '2251', name: 'Level 5', subtext: 'id 2252', type: 'Level 5' },\n  { id: '2253', parentId: '2252', name: 'Level 6', subtext: 'id 2253', type: 'Level 6' },\n  { id: '2254', parentId: '2253', name: 'Level 7', subtext: 'id 2254', type: 'Level 7' },\n  { id: '2255', parentId: '2252', name: 'Level 6', subtext: 'id 2255', type: 'Level 6' },\n  { id: '2256', parentId: '2255', name: 'Level 7', subtext: 'id 2256', type: 'Level 7' },\n  { id: '2257', parentId: '2255', name: 'Level 7', subtext: 'id 2257', type: 'Level 7' },\n  { id: '2258', parentId: '2255', name: 'Level 7', subtext: 'id 2258', type: 'Level 7' },\n  { id: '2259', parentId: '2255', name: 'Level 7', subtext: 'id 2259', type: 'Level 7' },\n  { id: '2260', parentId: '2255', name: 'Level 7', subtext: 'id 2260', type: 'Level 7' },\n  { id: '2261', parentId: '1138', name: 'Level 2', subtext: 'id 2261', type: 'Level 2' },\n  { id: '2262', parentId: '2261', name: 'Level 3', subtext: 'id 2262', type: 'Level 3' },\n  { id: '2263', parentId: '2262', name: 'Level 4', subtext: 'id 2263', type: 'Level 4' },\n  { id: '2264', parentId: '2263', name: 'Level 5', subtext: 'id 2264', type: 'Level 5' },\n  { id: '2265', parentId: '2264', name: 'Level 6', subtext: 'id 2265', type: 'Level 6' },\n  { id: '2266', parentId: '2265', name: 'Level 7', subtext: 'id 2266', type: 'Level 7' },\n  { id: '2267', parentId: '2265', name: 'Level 7', subtext: 'id 2267', type: 'Level 7' },\n  { id: '2268', parentId: '2265', name: 'Level 7', subtext: 'id 2268', type: 'Level 7' },\n  { id: '2269', parentId: '2264', name: 'Level 6', subtext: 'id 2269', type: 'Level 6' },\n  { id: '2270', parentId: '2269', name: 'Level 7', subtext: 'id 2270', type: 'Level 7' },\n  { id: '2271', parentId: '2269', name: 'Level 7', subtext: 'id 2271', type: 'Level 7' },\n  { id: '2272', parentId: '2269', name: 'Level 7', subtext: 'id 2272', type: 'Level 7' },\n  { id: '2273', parentId: '2269', name: 'Level 7', subtext: 'id 2273', type: 'Level 7' },\n  { id: '2274', parentId: '2269', name: 'Level 7', subtext: 'id 2274', type: 'Level 7' },\n  { id: '2275', parentId: '2264', name: 'Level 6', subtext: 'id 2275', type: 'Level 6' },\n  { id: '2276', parentId: '2275', name: 'Level 7', subtext: 'id 2276', type: 'Level 7' },\n  { id: '2277', parentId: '2275', name: 'Level 7', subtext: 'id 2277', type: 'Level 7' },\n  { id: '2278', parentId: '2264', name: 'Level 6', subtext: 'id 2278', type: 'Level 6' },\n  { id: '2279', parentId: '2278', name: 'Level 7', subtext: 'id 2279', type: 'Level 7' },\n  { id: '2280', parentId: '2278', name: 'Level 7', subtext: 'id 2280', type: 'Level 7' },\n  { id: '2281', parentId: '2278', name: 'Level 7', subtext: 'id 2281', type: 'Level 7' },\n  { id: '2282', parentId: '2278', name: 'Level 7', subtext: 'id 2282', type: 'Level 7' },\n  { id: '2283', parentId: '2278', name: 'Level 7', subtext: 'id 2283', type: 'Level 7' },\n  { id: '2284', parentId: '2263', name: 'Level 5', subtext: 'id 2284', type: 'Level 5' },\n  { id: '2285', parentId: '2284', name: 'Level 6', subtext: 'id 2285', type: 'Level 6' },\n  { id: '2286', parentId: '2285', name: 'Level 7', subtext: 'id 2286', type: 'Level 7' },\n  { id: '2287', parentId: '2285', name: 'Level 7', subtext: 'id 2287', type: 'Level 7' },\n  { id: '2288', parentId: '2285', name: 'Level 7', subtext: 'id 2288', type: 'Level 7' },\n  { id: '2289', parentId: '2285', name: 'Level 7', subtext: 'id 2289', type: 'Level 7' },\n  { id: '2290', parentId: '2263', name: 'Level 5', subtext: 'id 2290', type: 'Level 5' },\n  { id: '2291', parentId: '2290', name: 'Level 6', subtext: 'id 2291', type: 'Level 6' },\n  { id: '2292', parentId: '2291', name: 'Level 7', subtext: 'id 2292', type: 'Level 7' },\n  { id: '2293', parentId: '2291', name: 'Level 7', subtext: 'id 2293', type: 'Level 7' },\n  { id: '2294', parentId: '2291', name: 'Level 7', subtext: 'id 2294', type: 'Level 7' },\n  { id: '2295', parentId: '2290', name: 'Level 6', subtext: 'id 2295', type: 'Level 6' },\n  { id: '2296', parentId: '2295', name: 'Level 7', subtext: 'id 2296', type: 'Level 7' },\n  { id: '2297', parentId: '2295', name: 'Level 7', subtext: 'id 2297', type: 'Level 7' },\n  { id: '2298', parentId: '2295', name: 'Level 7', subtext: 'id 2298', type: 'Level 7' },\n  { id: '2299', parentId: '2295', name: 'Level 7', subtext: 'id 2299', type: 'Level 7' },\n  { id: '2300', parentId: '2295', name: 'Level 7', subtext: 'id 2300', type: 'Level 7' },\n  { id: '2301', parentId: '2290', name: 'Level 6', subtext: 'id 2301', type: 'Level 6' },\n  { id: '2302', parentId: '2301', name: 'Level 7', subtext: 'id 2302', type: 'Level 7' },\n  { id: '2303', parentId: '2301', name: 'Level 7', subtext: 'id 2303', type: 'Level 7' },\n  { id: '2304', parentId: '2301', name: 'Level 7', subtext: 'id 2304', type: 'Level 7' },\n  { id: '2305', parentId: '2301', name: 'Level 7', subtext: 'id 2305', type: 'Level 7' },\n  { id: '2306', parentId: '2290', name: 'Level 6', subtext: 'id 2306', type: 'Level 6' },\n  { id: '2307', parentId: '2306', name: 'Level 7', subtext: 'id 2307', type: 'Level 7' },\n  { id: '2308', parentId: '2290', name: 'Level 6', subtext: 'id 2308', type: 'Level 6' },\n  { id: '2309', parentId: '2308', name: 'Level 7', subtext: 'id 2309', type: 'Level 7' },\n  { id: '2310', parentId: '2308', name: 'Level 7', subtext: 'id 2310', type: 'Level 7' },\n  { id: '2311', parentId: '2308', name: 'Level 7', subtext: 'id 2311', type: 'Level 7' },\n  { id: '2312', parentId: '2308', name: 'Level 7', subtext: 'id 2312', type: 'Level 7' },\n  { id: '2313', parentId: '2308', name: 'Level 7', subtext: 'id 2313', type: 'Level 7' },\n  { id: '2314', parentId: '2263', name: 'Level 5', subtext: 'id 2314', type: 'Level 5' },\n  { id: '2315', parentId: '2314', name: 'Level 6', subtext: 'id 2315', type: 'Level 6' },\n  { id: '2316', parentId: '2315', name: 'Level 7', subtext: 'id 2316', type: 'Level 7' },\n  { id: '2317', parentId: '2314', name: 'Level 6', subtext: 'id 2317', type: 'Level 6' },\n  { id: '2318', parentId: '2317', name: 'Level 7', subtext: 'id 2318', type: 'Level 7' },\n  { id: '2319', parentId: '2317', name: 'Level 7', subtext: 'id 2319', type: 'Level 7' },\n  { id: '2320', parentId: '2317', name: 'Level 7', subtext: 'id 2320', type: 'Level 7' },\n  { id: '2321', parentId: '2317', name: 'Level 7', subtext: 'id 2321', type: 'Level 7' },\n  { id: '2322', parentId: '2317', name: 'Level 7', subtext: 'id 2322', type: 'Level 7' },\n  { id: '2323', parentId: '2314', name: 'Level 6', subtext: 'id 2323', type: 'Level 6' },\n  { id: '2324', parentId: '2323', name: 'Level 7', subtext: 'id 2324', type: 'Level 7' },\n  { id: '2325', parentId: '2323', name: 'Level 7', subtext: 'id 2325', type: 'Level 7' },\n  { id: '2326', parentId: '2314', name: 'Level 6', subtext: 'id 2326', type: 'Level 6' },\n  { id: '2327', parentId: '2326', name: 'Level 7', subtext: 'id 2327', type: 'Level 7' },\n  { id: '2328', parentId: '2263', name: 'Level 5', subtext: 'id 2328', type: 'Level 5' },\n  { id: '2329', parentId: '2328', name: 'Level 6', subtext: 'id 2329', type: 'Level 6' },\n  { id: '2330', parentId: '2329', name: 'Level 7', subtext: 'id 2330', type: 'Level 7' },\n  { id: '2331', parentId: '2329', name: 'Level 7', subtext: 'id 2331', type: 'Level 7' },\n  { id: '2332', parentId: '2329', name: 'Level 7', subtext: 'id 2332', type: 'Level 7' },\n  { id: '2333', parentId: '2329', name: 'Level 7', subtext: 'id 2333', type: 'Level 7' },\n  { id: '2334', parentId: '2329', name: 'Level 7', subtext: 'id 2334', type: 'Level 7' },\n  { id: '2335', parentId: '2328', name: 'Level 6', subtext: 'id 2335', type: 'Level 6' },\n  { id: '2336', parentId: '2335', name: 'Level 7', subtext: 'id 2336', type: 'Level 7' },\n  { id: '2337', parentId: '2328', name: 'Level 6', subtext: 'id 2337', type: 'Level 6' },\n  { id: '2338', parentId: '2337', name: 'Level 7', subtext: 'id 2338', type: 'Level 7' },\n  { id: '2339', parentId: '2337', name: 'Level 7', subtext: 'id 2339', type: 'Level 7' },\n  { id: '2340', parentId: '2337', name: 'Level 7', subtext: 'id 2340', type: 'Level 7' },\n  { id: '2341', parentId: '2262', name: 'Level 4', subtext: 'id 2341', type: 'Level 4' },\n  { id: '2342', parentId: '2341', name: 'Level 5', subtext: 'id 2342', type: 'Level 5' },\n  { id: '2343', parentId: '2342', name: 'Level 6', subtext: 'id 2343', type: 'Level 6' },\n  { id: '2344', parentId: '2343', name: 'Level 7', subtext: 'id 2344', type: 'Level 7' },\n  { id: '2345', parentId: '2343', name: 'Level 7', subtext: 'id 2345', type: 'Level 7' },\n  { id: '2346', parentId: '2342', name: 'Level 6', subtext: 'id 2346', type: 'Level 6' },\n  { id: '2347', parentId: '2346', name: 'Level 7', subtext: 'id 2347', type: 'Level 7' },\n  { id: '2348', parentId: '2346', name: 'Level 7', subtext: 'id 2348', type: 'Level 7' },\n  { id: '2349', parentId: '2346', name: 'Level 7', subtext: 'id 2349', type: 'Level 7' },\n  { id: '2350', parentId: '2346', name: 'Level 7', subtext: 'id 2350', type: 'Level 7' },\n  { id: '2351', parentId: '2346', name: 'Level 7', subtext: 'id 2351', type: 'Level 7' },\n  { id: '2352', parentId: '2342', name: 'Level 6', subtext: 'id 2352', type: 'Level 6' },\n  { id: '2353', parentId: '2352', name: 'Level 7', subtext: 'id 2353', type: 'Level 7' },\n  { id: '2354', parentId: '2352', name: 'Level 7', subtext: 'id 2354', type: 'Level 7' },\n  { id: '2355', parentId: '2352', name: 'Level 7', subtext: 'id 2355', type: 'Level 7' },\n  { id: '2356', parentId: '2352', name: 'Level 7', subtext: 'id 2356', type: 'Level 7' },\n  { id: '2357', parentId: '2342', name: 'Level 6', subtext: 'id 2357', type: 'Level 6' },\n  { id: '2358', parentId: '2357', name: 'Level 7', subtext: 'id 2358', type: 'Level 7' },\n  { id: '2359', parentId: '2357', name: 'Level 7', subtext: 'id 2359', type: 'Level 7' },\n  { id: '2360', parentId: '2342', name: 'Level 6', subtext: 'id 2360', type: 'Level 6' },\n  { id: '2361', parentId: '2360', name: 'Level 7', subtext: 'id 2361', type: 'Level 7' },\n  { id: '2362', parentId: '2360', name: 'Level 7', subtext: 'id 2362', type: 'Level 7' },\n  { id: '2363', parentId: '2360', name: 'Level 7', subtext: 'id 2363', type: 'Level 7' },\n  { id: '2364', parentId: '2360', name: 'Level 7', subtext: 'id 2364', type: 'Level 7' },\n  { id: '2365', parentId: '2360', name: 'Level 7', subtext: 'id 2365', type: 'Level 7' },\n  { id: '2366', parentId: '2341', name: 'Level 5', subtext: 'id 2366', type: 'Level 5' },\n  { id: '2367', parentId: '2366', name: 'Level 6', subtext: 'id 2367', type: 'Level 6' },\n  { id: '2368', parentId: '2367', name: 'Level 7', subtext: 'id 2368', type: 'Level 7' },\n  { id: '2369', parentId: '2367', name: 'Level 7', subtext: 'id 2369', type: 'Level 7' },\n  { id: '2370', parentId: '2367', name: 'Level 7', subtext: 'id 2370', type: 'Level 7' },\n  { id: '2371', parentId: '2261', name: 'Level 3', subtext: 'id 2371', type: 'Level 3' },\n  { id: '2372', parentId: '2371', name: 'Level 4', subtext: 'id 2372', type: 'Level 4' },\n  { id: '2373', parentId: '2372', name: 'Level 5', subtext: 'id 2373', type: 'Level 5' },\n  { id: '2374', parentId: '2373', name: 'Level 6', subtext: 'id 2374', type: 'Level 6' },\n  { id: '2375', parentId: '2374', name: 'Level 7', subtext: 'id 2375', type: 'Level 7' },\n  { id: '2376', parentId: '2374', name: 'Level 7', subtext: 'id 2376', type: 'Level 7' },\n  { id: '2377', parentId: '2374', name: 'Level 7', subtext: 'id 2377', type: 'Level 7' },\n  { id: '2378', parentId: '2372', name: 'Level 5', subtext: 'id 2378', type: 'Level 5' },\n  { id: '2379', parentId: '2378', name: 'Level 6', subtext: 'id 2379', type: 'Level 6' },\n  { id: '2380', parentId: '2379', name: 'Level 7', subtext: 'id 2380', type: 'Level 7' },\n  { id: '2381', parentId: '2379', name: 'Level 7', subtext: 'id 2381', type: 'Level 7' },\n  { id: '2382', parentId: '2378', name: 'Level 6', subtext: 'id 2382', type: 'Level 6' },\n  { id: '2383', parentId: '2382', name: 'Level 7', subtext: 'id 2383', type: 'Level 7' },\n  { id: '2384', parentId: '2378', name: 'Level 6', subtext: 'id 2384', type: 'Level 6' },\n  { id: '2385', parentId: '2384', name: 'Level 7', subtext: 'id 2385', type: 'Level 7' },\n  { id: '2386', parentId: '2378', name: 'Level 6', subtext: 'id 2386', type: 'Level 6' },\n  { id: '2387', parentId: '2386', name: 'Level 7', subtext: 'id 2387', type: 'Level 7' },\n  { id: '2388', parentId: '2386', name: 'Level 7', subtext: 'id 2388', type: 'Level 7' },\n  { id: '2389', parentId: '2386', name: 'Level 7', subtext: 'id 2389', type: 'Level 7' },\n  { id: '2390', parentId: '2372', name: 'Level 5', subtext: 'id 2390', type: 'Level 5' },\n  { id: '2391', parentId: '2390', name: 'Level 6', subtext: 'id 2391', type: 'Level 6' },\n  { id: '2392', parentId: '2391', name: 'Level 7', subtext: 'id 2392', type: 'Level 7' },\n  { id: '2393', parentId: '2391', name: 'Level 7', subtext: 'id 2393', type: 'Level 7' },\n  { id: '2394', parentId: '2391', name: 'Level 7', subtext: 'id 2394', type: 'Level 7' },\n  { id: '2395', parentId: '2391', name: 'Level 7', subtext: 'id 2395', type: 'Level 7' },\n  { id: '2396', parentId: '2391', name: 'Level 7', subtext: 'id 2396', type: 'Level 7' },\n  { id: '2397', parentId: '2390', name: 'Level 6', subtext: 'id 2397', type: 'Level 6' },\n  { id: '2398', parentId: '2397', name: 'Level 7', subtext: 'id 2398', type: 'Level 7' },\n  { id: '2399', parentId: '2397', name: 'Level 7', subtext: 'id 2399', type: 'Level 7' },\n  { id: '2400', parentId: '2390', name: 'Level 6', subtext: 'id 2400', type: 'Level 6' },\n  { id: '2401', parentId: '2400', name: 'Level 7', subtext: 'id 2401', type: 'Level 7' },\n  { id: '2402', parentId: '2400', name: 'Level 7', subtext: 'id 2402', type: 'Level 7' },\n  { id: '2403', parentId: '2400', name: 'Level 7', subtext: 'id 2403', type: 'Level 7' },\n  { id: '2404', parentId: '2390', name: 'Level 6', subtext: 'id 2404', type: 'Level 6' },\n  { id: '2405', parentId: '2404', name: 'Level 7', subtext: 'id 2405', type: 'Level 7' },\n  { id: '2406', parentId: '2404', name: 'Level 7', subtext: 'id 2406', type: 'Level 7' },\n  { id: '2407', parentId: '2404', name: 'Level 7', subtext: 'id 2407', type: 'Level 7' },\n  { id: '2408', parentId: '2404', name: 'Level 7', subtext: 'id 2408', type: 'Level 7' },\n  { id: '2409', parentId: '2404', name: 'Level 7', subtext: 'id 2409', type: 'Level 7' },\n  { id: '2410', parentId: '2390', name: 'Level 6', subtext: 'id 2410', type: 'Level 6' },\n  { id: '2411', parentId: '2410', name: 'Level 7', subtext: 'id 2411', type: 'Level 7' },\n  { id: '2412', parentId: '2410', name: 'Level 7', subtext: 'id 2412', type: 'Level 7' },\n  { id: '2413', parentId: '2410', name: 'Level 7', subtext: 'id 2413', type: 'Level 7' },\n  { id: '2414', parentId: '2372', name: 'Level 5', subtext: 'id 2414', type: 'Level 5' },\n  { id: '2415', parentId: '2414', name: 'Level 6', subtext: 'id 2415', type: 'Level 6' },\n  { id: '2416', parentId: '2415', name: 'Level 7', subtext: 'id 2416', type: 'Level 7' },\n  { id: '2417', parentId: '2415', name: 'Level 7', subtext: 'id 2417', type: 'Level 7' },\n  { id: '2418', parentId: '2415', name: 'Level 7', subtext: 'id 2418', type: 'Level 7' },\n  { id: '2419', parentId: '2415', name: 'Level 7', subtext: 'id 2419', type: 'Level 7' },\n  { id: '2420', parentId: '2415', name: 'Level 7', subtext: 'id 2420', type: 'Level 7' },\n  { id: '2421', parentId: '2414', name: 'Level 6', subtext: 'id 2421', type: 'Level 6' },\n  { id: '2422', parentId: '2421', name: 'Level 7', subtext: 'id 2422', type: 'Level 7' },\n  { id: '2423', parentId: '2421', name: 'Level 7', subtext: 'id 2423', type: 'Level 7' },\n  { id: '2424', parentId: '2421', name: 'Level 7', subtext: 'id 2424', type: 'Level 7' },\n  { id: '2425', parentId: '2421', name: 'Level 7', subtext: 'id 2425', type: 'Level 7' },\n  { id: '2426', parentId: '2414', name: 'Level 6', subtext: 'id 2426', type: 'Level 6' },\n  { id: '2427', parentId: '2426', name: 'Level 7', subtext: 'id 2427', type: 'Level 7' },\n  { id: '2428', parentId: '2426', name: 'Level 7', subtext: 'id 2428', type: 'Level 7' },\n  { id: '2429', parentId: '2426', name: 'Level 7', subtext: 'id 2429', type: 'Level 7' },\n  { id: '2430', parentId: '2371', name: 'Level 4', subtext: 'id 2430', type: 'Level 4' },\n  { id: '2431', parentId: '2430', name: 'Level 5', subtext: 'id 2431', type: 'Level 5' },\n  { id: '2432', parentId: '2431', name: 'Level 6', subtext: 'id 2432', type: 'Level 6' },\n  { id: '2433', parentId: '2432', name: 'Level 7', subtext: 'id 2433', type: 'Level 7' },\n  { id: '2434', parentId: '2432', name: 'Level 7', subtext: 'id 2434', type: 'Level 7' },\n  { id: '2435', parentId: '2432', name: 'Level 7', subtext: 'id 2435', type: 'Level 7' },\n  { id: '2436', parentId: '2431', name: 'Level 6', subtext: 'id 2436', type: 'Level 6' },\n  { id: '2437', parentId: '2436', name: 'Level 7', subtext: 'id 2437', type: 'Level 7' },\n  { id: '2438', parentId: '2436', name: 'Level 7', subtext: 'id 2438', type: 'Level 7' },\n  { id: '2439', parentId: '2436', name: 'Level 7', subtext: 'id 2439', type: 'Level 7' },\n  { id: '2440', parentId: '2430', name: 'Level 5', subtext: 'id 2440', type: 'Level 5' },\n  { id: '2441', parentId: '2440', name: 'Level 6', subtext: 'id 2441', type: 'Level 6' },\n  { id: '2442', parentId: '2441', name: 'Level 7', subtext: 'id 2442', type: 'Level 7' },\n  { id: '2443', parentId: '2441', name: 'Level 7', subtext: 'id 2443', type: 'Level 7' },\n  { id: '2444', parentId: '2441', name: 'Level 7', subtext: 'id 2444', type: 'Level 7' },\n  { id: '2445', parentId: '2441', name: 'Level 7', subtext: 'id 2445', type: 'Level 7' },\n  { id: '2446', parentId: '2441', name: 'Level 7', subtext: 'id 2446', type: 'Level 7' },\n  { id: '2447', parentId: '2430', name: 'Level 5', subtext: 'id 2447', type: 'Level 5' },\n  { id: '2448', parentId: '2447', name: 'Level 6', subtext: 'id 2448', type: 'Level 6' },\n  { id: '2449', parentId: '2448', name: 'Level 7', subtext: 'id 2449', type: 'Level 7' },\n  { id: '2450', parentId: '2448', name: 'Level 7', subtext: 'id 2450', type: 'Level 7' },\n  { id: '2451', parentId: '2448', name: 'Level 7', subtext: 'id 2451', type: 'Level 7' },\n  { id: '2452', parentId: '2448', name: 'Level 7', subtext: 'id 2452', type: 'Level 7' },\n  { id: '2453', parentId: '2430', name: 'Level 5', subtext: 'id 2453', type: 'Level 5' },\n  { id: '2454', parentId: '2453', name: 'Level 6', subtext: 'id 2454', type: 'Level 6' },\n  { id: '2455', parentId: '2454', name: 'Level 7', subtext: 'id 2455', type: 'Level 7' },\n  { id: '2456', parentId: '2454', name: 'Level 7', subtext: 'id 2456', type: 'Level 7' },\n  { id: '2457', parentId: '2454', name: 'Level 7', subtext: 'id 2457', type: 'Level 7' },\n  { id: '2458', parentId: '2454', name: 'Level 7', subtext: 'id 2458', type: 'Level 7' },\n  { id: '2459', parentId: '2453', name: 'Level 6', subtext: 'id 2459', type: 'Level 6' },\n  { id: '2460', parentId: '2459', name: 'Level 7', subtext: 'id 2460', type: 'Level 7' },\n  { id: '2461', parentId: '2459', name: 'Level 7', subtext: 'id 2461', type: 'Level 7' },\n  { id: '2462', parentId: '2459', name: 'Level 7', subtext: 'id 2462', type: 'Level 7' },\n  { id: '2463', parentId: '2453', name: 'Level 6', subtext: 'id 2463', type: 'Level 6' },\n  { id: '2464', parentId: '2463', name: 'Level 7', subtext: 'id 2464', type: 'Level 7' },\n  { id: '2465', parentId: '2453', name: 'Level 6', subtext: 'id 2465', type: 'Level 6' },\n  { id: '2466', parentId: '2465', name: 'Level 7', subtext: 'id 2466', type: 'Level 7' },\n  { id: '2467', parentId: '2465', name: 'Level 7', subtext: 'id 2467', type: 'Level 7' },\n  { id: '2468', parentId: '2465', name: 'Level 7', subtext: 'id 2468', type: 'Level 7' },\n  { id: '2469', parentId: '2465', name: 'Level 7', subtext: 'id 2469', type: 'Level 7' },\n  { id: '2470', parentId: '2453', name: 'Level 6', subtext: 'id 2470', type: 'Level 6' },\n  { id: '2471', parentId: '2470', name: 'Level 7', subtext: 'id 2471', type: 'Level 7' },\n  { id: '2472', parentId: '2470', name: 'Level 7', subtext: 'id 2472', type: 'Level 7' },\n  { id: '2473', parentId: '2470', name: 'Level 7', subtext: 'id 2473', type: 'Level 7' },\n  { id: '2474', parentId: '2470', name: 'Level 7', subtext: 'id 2474', type: 'Level 7' },\n  { id: '2475', parentId: '2470', name: 'Level 7', subtext: 'id 2475', type: 'Level 7' },\n  { id: '2476', parentId: '2371', name: 'Level 4', subtext: 'id 2476', type: 'Level 4' },\n  { id: '2477', parentId: '2476', name: 'Level 5', subtext: 'id 2477', type: 'Level 5' },\n  { id: '2478', parentId: '2477', name: 'Level 6', subtext: 'id 2478', type: 'Level 6' },\n  { id: '2479', parentId: '2478', name: 'Level 7', subtext: 'id 2479', type: 'Level 7' },\n  { id: '2480', parentId: '2478', name: 'Level 7', subtext: 'id 2480', type: 'Level 7' },\n  { id: '2481', parentId: '2478', name: 'Level 7', subtext: 'id 2481', type: 'Level 7' },\n  { id: '2482', parentId: '2477', name: 'Level 6', subtext: 'id 2482', type: 'Level 6' },\n  { id: '2483', parentId: '2482', name: 'Level 7', subtext: 'id 2483', type: 'Level 7' },\n  { id: '2484', parentId: '2482', name: 'Level 7', subtext: 'id 2484', type: 'Level 7' },\n  { id: '2485', parentId: '2482', name: 'Level 7', subtext: 'id 2485', type: 'Level 7' },\n  { id: '2486', parentId: '2482', name: 'Level 7', subtext: 'id 2486', type: 'Level 7' },\n  { id: '2487', parentId: '2482', name: 'Level 7', subtext: 'id 2487', type: 'Level 7' },\n  { id: '2488', parentId: '2476', name: 'Level 5', subtext: 'id 2488', type: 'Level 5' },\n  { id: '2489', parentId: '2488', name: 'Level 6', subtext: 'id 2489', type: 'Level 6' },\n  { id: '2490', parentId: '2489', name: 'Level 7', subtext: 'id 2490', type: 'Level 7' },\n  { id: '2491', parentId: '2489', name: 'Level 7', subtext: 'id 2491', type: 'Level 7' },\n  { id: '2492', parentId: '2489', name: 'Level 7', subtext: 'id 2492', type: 'Level 7' },\n  { id: '2493', parentId: '2488', name: 'Level 6', subtext: 'id 2493', type: 'Level 6' },\n  { id: '2494', parentId: '2493', name: 'Level 7', subtext: 'id 2494', type: 'Level 7' },\n  { id: '2495', parentId: '2488', name: 'Level 6', subtext: 'id 2495', type: 'Level 6' },\n  { id: '2496', parentId: '2495', name: 'Level 7', subtext: 'id 2496', type: 'Level 7' },\n  { id: '2497', parentId: '2495', name: 'Level 7', subtext: 'id 2497', type: 'Level 7' },\n  { id: '2498', parentId: '2495', name: 'Level 7', subtext: 'id 2498', type: 'Level 7' },\n  { id: '2499', parentId: '2495', name: 'Level 7', subtext: 'id 2499', type: 'Level 7' },\n  { id: '2500', parentId: '2495', name: 'Level 7', subtext: 'id 2500', type: 'Level 7' },\n  { id: '2501', parentId: '2476', name: 'Level 5', subtext: 'id 2501', type: 'Level 5' },\n  { id: '2502', parentId: '2501', name: 'Level 6', subtext: 'id 2502', type: 'Level 6' },\n  { id: '2503', parentId: '2502', name: 'Level 7', subtext: 'id 2503', type: 'Level 7' },\n  { id: '2504', parentId: '2502', name: 'Level 7', subtext: 'id 2504', type: 'Level 7' },\n  { id: '2505', parentId: '2502', name: 'Level 7', subtext: 'id 2505', type: 'Level 7' },\n  { id: '2506', parentId: '2502', name: 'Level 7', subtext: 'id 2506', type: 'Level 7' },\n  { id: '2507', parentId: '2501', name: 'Level 6', subtext: 'id 2507', type: 'Level 6' },\n  { id: '2508', parentId: '2507', name: 'Level 7', subtext: 'id 2508', type: 'Level 7' },\n  { id: '2509', parentId: '2507', name: 'Level 7', subtext: 'id 2509', type: 'Level 7' },\n  { id: '2510', parentId: '2507', name: 'Level 7', subtext: 'id 2510', type: 'Level 7' },\n  { id: '2511', parentId: '2507', name: 'Level 7', subtext: 'id 2511', type: 'Level 7' },\n  { id: '2512', parentId: '2507', name: 'Level 7', subtext: 'id 2512', type: 'Level 7' },\n  { id: '2513', parentId: '2501', name: 'Level 6', subtext: 'id 2513', type: 'Level 6' },\n  { id: '2514', parentId: '2513', name: 'Level 7', subtext: 'id 2514', type: 'Level 7' },\n  { id: '2515', parentId: '2513', name: 'Level 7', subtext: 'id 2515', type: 'Level 7' },\n  { id: '2516', parentId: '2513', name: 'Level 7', subtext: 'id 2516', type: 'Level 7' },\n  { id: '2517', parentId: '2513', name: 'Level 7', subtext: 'id 2517', type: 'Level 7' },\n  { id: '2518', parentId: '2501', name: 'Level 6', subtext: 'id 2518', type: 'Level 6' },\n  { id: '2519', parentId: '2518', name: 'Level 7', subtext: 'id 2519', type: 'Level 7' },\n  { id: '2520', parentId: '2518', name: 'Level 7', subtext: 'id 2520', type: 'Level 7' },\n  { id: '2521', parentId: '2518', name: 'Level 7', subtext: 'id 2521', type: 'Level 7' },\n  { id: '2522', parentId: '2501', name: 'Level 6', subtext: 'id 2522', type: 'Level 6' },\n  { id: '2523', parentId: '2522', name: 'Level 7', subtext: 'id 2523', type: 'Level 7' },\n  { id: '2524', parentId: '2261', name: 'Level 3', subtext: 'id 2524', type: 'Level 3' },\n  { id: '2525', parentId: '2524', name: 'Level 4', subtext: 'id 2525', type: 'Level 4' },\n  { id: '2526', parentId: '2525', name: 'Level 5', subtext: 'id 2526', type: 'Level 5' },\n  { id: '2527', parentId: '2526', name: 'Level 6', subtext: 'id 2527', type: 'Level 6' },\n  { id: '2528', parentId: '2527', name: 'Level 7', subtext: 'id 2528', type: 'Level 7' },\n  { id: '2529', parentId: '2527', name: 'Level 7', subtext: 'id 2529', type: 'Level 7' },\n  { id: '2530', parentId: '2527', name: 'Level 7', subtext: 'id 2530', type: 'Level 7' },\n  { id: '2531', parentId: '2527', name: 'Level 7', subtext: 'id 2531', type: 'Level 7' },\n  { id: '2532', parentId: '2526', name: 'Level 6', subtext: 'id 2532', type: 'Level 6' },\n  { id: '2533', parentId: '2532', name: 'Level 7', subtext: 'id 2533', type: 'Level 7' },\n  { id: '2534', parentId: '2532', name: 'Level 7', subtext: 'id 2534', type: 'Level 7' },\n  { id: '2535', parentId: '2532', name: 'Level 7', subtext: 'id 2535', type: 'Level 7' },\n  { id: '2536', parentId: '2525', name: 'Level 5', subtext: 'id 2536', type: 'Level 5' },\n  { id: '2537', parentId: '2536', name: 'Level 6', subtext: 'id 2537', type: 'Level 6' },\n  { id: '2538', parentId: '2537', name: 'Level 7', subtext: 'id 2538', type: 'Level 7' },\n  { id: '2539', parentId: '2537', name: 'Level 7', subtext: 'id 2539', type: 'Level 7' },\n  { id: '2540', parentId: '2536', name: 'Level 6', subtext: 'id 2540', type: 'Level 6' },\n  { id: '2541', parentId: '2540', name: 'Level 7', subtext: 'id 2541', type: 'Level 7' },\n  { id: '2542', parentId: '2540', name: 'Level 7', subtext: 'id 2542', type: 'Level 7' },\n  { id: '2543', parentId: '2540', name: 'Level 7', subtext: 'id 2543', type: 'Level 7' },\n  { id: '2544', parentId: '2540', name: 'Level 7', subtext: 'id 2544', type: 'Level 7' },\n  { id: '2545', parentId: '2536', name: 'Level 6', subtext: 'id 2545', type: 'Level 6' },\n  { id: '2546', parentId: '2545', name: 'Level 7', subtext: 'id 2546', type: 'Level 7' },\n  { id: '2547', parentId: '2536', name: 'Level 6', subtext: 'id 2547', type: 'Level 6' },\n  { id: '2548', parentId: '2547', name: 'Level 7', subtext: 'id 2548', type: 'Level 7' },\n  { id: '2549', parentId: '2547', name: 'Level 7', subtext: 'id 2549', type: 'Level 7' },\n  { id: '2550', parentId: '2547', name: 'Level 7', subtext: 'id 2550', type: 'Level 7' },\n  { id: '2551', parentId: '2547', name: 'Level 7', subtext: 'id 2551', type: 'Level 7' },\n  { id: '2552', parentId: '2536', name: 'Level 6', subtext: 'id 2552', type: 'Level 6' },\n  { id: '2553', parentId: '2552', name: 'Level 7', subtext: 'id 2553', type: 'Level 7' },\n  { id: '2554', parentId: '2524', name: 'Level 4', subtext: 'id 2554', type: 'Level 4' },\n  { id: '2555', parentId: '2554', name: 'Level 5', subtext: 'id 2555', type: 'Level 5' },\n  { id: '2556', parentId: '2555', name: 'Level 6', subtext: 'id 2556', type: 'Level 6' },\n  { id: '2557', parentId: '2556', name: 'Level 7', subtext: 'id 2557', type: 'Level 7' },\n  { id: '2558', parentId: '2524', name: 'Level 4', subtext: 'id 2558', type: 'Level 4' },\n  { id: '2559', parentId: '2558', name: 'Level 5', subtext: 'id 2559', type: 'Level 5' },\n  { id: '2560', parentId: '2559', name: 'Level 6', subtext: 'id 2560', type: 'Level 6' },\n  { id: '2561', parentId: '2560', name: 'Level 7', subtext: 'id 2561', type: 'Level 7' },\n  { id: '2562', parentId: '2560', name: 'Level 7', subtext: 'id 2562', type: 'Level 7' },\n  { id: '2563', parentId: '2560', name: 'Level 7', subtext: 'id 2563', type: 'Level 7' },\n  { id: '2564', parentId: '2560', name: 'Level 7', subtext: 'id 2564', type: 'Level 7' },\n  { id: '2565', parentId: '2559', name: 'Level 6', subtext: 'id 2565', type: 'Level 6' },\n  { id: '2566', parentId: '2565', name: 'Level 7', subtext: 'id 2566', type: 'Level 7' },\n  { id: '2567', parentId: '2565', name: 'Level 7', subtext: 'id 2567', type: 'Level 7' },\n  { id: '2568', parentId: '2565', name: 'Level 7', subtext: 'id 2568', type: 'Level 7' },\n  { id: '2569', parentId: '2559', name: 'Level 6', subtext: 'id 2569', type: 'Level 6' },\n  { id: '2570', parentId: '2569', name: 'Level 7', subtext: 'id 2570', type: 'Level 7' },\n  { id: '2571', parentId: '2569', name: 'Level 7', subtext: 'id 2571', type: 'Level 7' },\n  { id: '2572', parentId: '2569', name: 'Level 7', subtext: 'id 2572', type: 'Level 7' },\n  { id: '2573', parentId: '2569', name: 'Level 7', subtext: 'id 2573', type: 'Level 7' },\n  { id: '2574', parentId: '2569', name: 'Level 7', subtext: 'id 2574', type: 'Level 7' },\n  { id: '2575', parentId: '2558', name: 'Level 5', subtext: 'id 2575', type: 'Level 5' },\n  { id: '2576', parentId: '2575', name: 'Level 6', subtext: 'id 2576', type: 'Level 6' },\n  { id: '2577', parentId: '2576', name: 'Level 7', subtext: 'id 2577', type: 'Level 7' },\n  { id: '2578', parentId: '2576', name: 'Level 7', subtext: 'id 2578', type: 'Level 7' },\n  { id: '2579', parentId: '2576', name: 'Level 7', subtext: 'id 2579', type: 'Level 7' },\n  { id: '2580', parentId: '2575', name: 'Level 6', subtext: 'id 2580', type: 'Level 6' },\n  { id: '2581', parentId: '2580', name: 'Level 7', subtext: 'id 2581', type: 'Level 7' },\n  { id: '2582', parentId: '2580', name: 'Level 7', subtext: 'id 2582', type: 'Level 7' },\n  { id: '2583', parentId: '2575', name: 'Level 6', subtext: 'id 2583', type: 'Level 6' },\n  { id: '2584', parentId: '2583', name: 'Level 7', subtext: 'id 2584', type: 'Level 7' },\n  { id: '2585', parentId: '2583', name: 'Level 7', subtext: 'id 2585', type: 'Level 7' },\n  { id: '2586', parentId: '2583', name: 'Level 7', subtext: 'id 2586', type: 'Level 7' },\n  { id: '2587', parentId: '2558', name: 'Level 5', subtext: 'id 2587', type: 'Level 5' },\n  { id: '2588', parentId: '2587', name: 'Level 6', subtext: 'id 2588', type: 'Level 6' },\n  { id: '2589', parentId: '2588', name: 'Level 7', subtext: 'id 2589', type: 'Level 7' },\n  { id: '2590', parentId: '2588', name: 'Level 7', subtext: 'id 2590', type: 'Level 7' },\n  { id: '2591', parentId: '2588', name: 'Level 7', subtext: 'id 2591', type: 'Level 7' },\n  { id: '2592', parentId: '2588', name: 'Level 7', subtext: 'id 2592', type: 'Level 7' },\n  { id: '2593', parentId: '2588', name: 'Level 7', subtext: 'id 2593', type: 'Level 7' },\n  { id: '2594', parentId: '2587', name: 'Level 6', subtext: 'id 2594', type: 'Level 6' },\n  { id: '2595', parentId: '2594', name: 'Level 7', subtext: 'id 2595', type: 'Level 7' },\n  { id: '2596', parentId: '2594', name: 'Level 7', subtext: 'id 2596', type: 'Level 7' },\n  { id: '2597', parentId: '2587', name: 'Level 6', subtext: 'id 2597', type: 'Level 6' },\n  { id: '2598', parentId: '2597', name: 'Level 7', subtext: 'id 2598', type: 'Level 7' },\n  { id: '2599', parentId: '2597', name: 'Level 7', subtext: 'id 2599', type: 'Level 7' },\n  { id: '2600', parentId: '2597', name: 'Level 7', subtext: 'id 2600', type: 'Level 7' },\n  { id: '2601', parentId: '2597', name: 'Level 7', subtext: 'id 2601', type: 'Level 7' },\n  { id: '2602', parentId: '2558', name: 'Level 5', subtext: 'id 2602', type: 'Level 5' },\n  { id: '2603', parentId: '2602', name: 'Level 6', subtext: 'id 2603', type: 'Level 6' },\n  { id: '2604', parentId: '2603', name: 'Level 7', subtext: 'id 2604', type: 'Level 7' },\n  { id: '2605', parentId: '2603', name: 'Level 7', subtext: 'id 2605', type: 'Level 7' },\n  { id: '2606', parentId: '2603', name: 'Level 7', subtext: 'id 2606', type: 'Level 7' },\n  { id: '2607', parentId: '2602', name: 'Level 6', subtext: 'id 2607', type: 'Level 6' },\n  { id: '2608', parentId: '2607', name: 'Level 7', subtext: 'id 2608', type: 'Level 7' },\n  { id: '2609', parentId: '2607', name: 'Level 7', subtext: 'id 2609', type: 'Level 7' },\n  { id: '2610', parentId: '2607', name: 'Level 7', subtext: 'id 2610', type: 'Level 7' },\n  { id: '2611', parentId: '2524', name: 'Level 4', subtext: 'id 2611', type: 'Level 4' },\n  { id: '2612', parentId: '2611', name: 'Level 5', subtext: 'id 2612', type: 'Level 5' },\n  { id: '2613', parentId: '2612', name: 'Level 6', subtext: 'id 2613', type: 'Level 6' },\n  { id: '2614', parentId: '2613', name: 'Level 7', subtext: 'id 2614', type: 'Level 7' },\n  { id: '2615', parentId: '2613', name: 'Level 7', subtext: 'id 2615', type: 'Level 7' },\n  { id: '2616', parentId: '2612', name: 'Level 6', subtext: 'id 2616', type: 'Level 6' },\n  { id: '2617', parentId: '2616', name: 'Level 7', subtext: 'id 2617', type: 'Level 7' },\n  { id: '2618', parentId: '2616', name: 'Level 7', subtext: 'id 2618', type: 'Level 7' },\n  { id: '2619', parentId: '2616', name: 'Level 7', subtext: 'id 2619', type: 'Level 7' },\n  { id: '2620', parentId: '2612', name: 'Level 6', subtext: 'id 2620', type: 'Level 6' },\n  { id: '2621', parentId: '2620', name: 'Level 7', subtext: 'id 2621', type: 'Level 7' },\n  { id: '2622', parentId: '2611', name: 'Level 5', subtext: 'id 2622', type: 'Level 5' },\n  { id: '2623', parentId: '2622', name: 'Level 6', subtext: 'id 2623', type: 'Level 6' },\n  { id: '2624', parentId: '2623', name: 'Level 7', subtext: 'id 2624', type: 'Level 7' },\n  { id: '2625', parentId: '2622', name: 'Level 6', subtext: 'id 2625', type: 'Level 6' },\n  { id: '2626', parentId: '2625', name: 'Level 7', subtext: 'id 2626', type: 'Level 7' },\n  { id: '2627', parentId: '2625', name: 'Level 7', subtext: 'id 2627', type: 'Level 7' },\n  { id: '2628', parentId: '2625', name: 'Level 7', subtext: 'id 2628', type: 'Level 7' },\n  { id: '2629', parentId: '2622', name: 'Level 6', subtext: 'id 2629', type: 'Level 6' },\n  { id: '2630', parentId: '2629', name: 'Level 7', subtext: 'id 2630', type: 'Level 7' },\n  { id: '2631', parentId: '2629', name: 'Level 7', subtext: 'id 2631', type: 'Level 7' },\n  { id: '2632', parentId: '2629', name: 'Level 7', subtext: 'id 2632', type: 'Level 7' },\n  { id: '2633', parentId: '2611', name: 'Level 5', subtext: 'id 2633', type: 'Level 5' },\n  { id: '2634', parentId: '2633', name: 'Level 6', subtext: 'id 2634', type: 'Level 6' },\n  { id: '2635', parentId: '2634', name: 'Level 7', subtext: 'id 2635', type: 'Level 7' },\n  { id: '2636', parentId: '2633', name: 'Level 6', subtext: 'id 2636', type: 'Level 6' },\n  { id: '2637', parentId: '2636', name: 'Level 7', subtext: 'id 2637', type: 'Level 7' },\n  { id: '2638', parentId: '2611', name: 'Level 5', subtext: 'id 2638', type: 'Level 5' },\n  { id: '2639', parentId: '2638', name: 'Level 6', subtext: 'id 2639', type: 'Level 6' },\n  { id: '2640', parentId: '2639', name: 'Level 7', subtext: 'id 2640', type: 'Level 7' },\n  { id: '2641', parentId: '2639', name: 'Level 7', subtext: 'id 2641', type: 'Level 7' },\n  { id: '2642', parentId: '2639', name: 'Level 7', subtext: 'id 2642', type: 'Level 7' },\n  { id: '2643', parentId: '2639', name: 'Level 7', subtext: 'id 2643', type: 'Level 7' },\n  { id: '2644', parentId: '2638', name: 'Level 6', subtext: 'id 2644', type: 'Level 6' },\n  { id: '2645', parentId: '2644', name: 'Level 7', subtext: 'id 2645', type: 'Level 7' },\n  { id: '2646', parentId: '2644', name: 'Level 7', subtext: 'id 2646', type: 'Level 7' },\n  { id: '2647', parentId: '2644', name: 'Level 7', subtext: 'id 2647', type: 'Level 7' },\n  { id: '2648', parentId: '2638', name: 'Level 6', subtext: 'id 2648', type: 'Level 6' },\n  { id: '2649', parentId: '2648', name: 'Level 7', subtext: 'id 2649', type: 'Level 7' },\n  { id: '2650', parentId: '2648', name: 'Level 7', subtext: 'id 2650', type: 'Level 7' },\n  { id: '2651', parentId: '2648', name: 'Level 7', subtext: 'id 2651', type: 'Level 7' },\n  { id: '2652', parentId: '2648', name: 'Level 7', subtext: 'id 2652', type: 'Level 7' },\n  { id: '2653', parentId: '2648', name: 'Level 7', subtext: 'id 2653', type: 'Level 7' },\n  { id: '2654', parentId: '2638', name: 'Level 6', subtext: 'id 2654', type: 'Level 6' },\n  { id: '2655', parentId: '2654', name: 'Level 7', subtext: 'id 2655', type: 'Level 7' },\n  { id: '2656', parentId: '2654', name: 'Level 7', subtext: 'id 2656', type: 'Level 7' },\n  { id: '2657', parentId: '2654', name: 'Level 7', subtext: 'id 2657', type: 'Level 7' },\n  { id: '2658', parentId: '2654', name: 'Level 7', subtext: 'id 2658', type: 'Level 7' },\n  { id: '2659', parentId: '2654', name: 'Level 7', subtext: 'id 2659', type: 'Level 7' },\n  { id: '2660', parentId: '2524', name: 'Level 4', subtext: 'id 2660', type: 'Level 4' },\n  { id: '2661', parentId: '2660', name: 'Level 5', subtext: 'id 2661', type: 'Level 5' },\n  { id: '2662', parentId: '2661', name: 'Level 6', subtext: 'id 2662', type: 'Level 6' },\n  { id: '2663', parentId: '2662', name: 'Level 7', subtext: 'id 2663', type: 'Level 7' },\n  { id: '2664', parentId: '2662', name: 'Level 7', subtext: 'id 2664', type: 'Level 7' },\n  { id: '2665', parentId: '2661', name: 'Level 6', subtext: 'id 2665', type: 'Level 6' },\n  { id: '2666', parentId: '2665', name: 'Level 7', subtext: 'id 2666', type: 'Level 7' },\n  { id: '2667', parentId: '2665', name: 'Level 7', subtext: 'id 2667', type: 'Level 7' },\n  { id: '2668', parentId: '2661', name: 'Level 6', subtext: 'id 2668', type: 'Level 6' },\n  { id: '2669', parentId: '2668', name: 'Level 7', subtext: 'id 2669', type: 'Level 7' },\n  { id: '2670', parentId: '2668', name: 'Level 7', subtext: 'id 2670', type: 'Level 7' },\n  { id: '2671', parentId: '2668', name: 'Level 7', subtext: 'id 2671', type: 'Level 7' },\n  { id: '2672', parentId: '2668', name: 'Level 7', subtext: 'id 2672', type: 'Level 7' },\n  { id: '2673', parentId: '2668', name: 'Level 7', subtext: 'id 2673', type: 'Level 7' },\n  { id: '2674', parentId: '2661', name: 'Level 6', subtext: 'id 2674', type: 'Level 6' },\n  { id: '2675', parentId: '2674', name: 'Level 7', subtext: 'id 2675', type: 'Level 7' },\n  { id: '2676', parentId: '2674', name: 'Level 7', subtext: 'id 2676', type: 'Level 7' },\n  { id: '2677', parentId: '2674', name: 'Level 7', subtext: 'id 2677', type: 'Level 7' },\n  { id: '2678', parentId: '2661', name: 'Level 6', subtext: 'id 2678', type: 'Level 6' },\n  { id: '2679', parentId: '2678', name: 'Level 7', subtext: 'id 2679', type: 'Level 7' },\n  { id: '2680', parentId: '2660', name: 'Level 5', subtext: 'id 2680', type: 'Level 5' },\n  { id: '2681', parentId: '2680', name: 'Level 6', subtext: 'id 2681', type: 'Level 6' },\n  { id: '2682', parentId: '2681', name: 'Level 7', subtext: 'id 2682', type: 'Level 7' },\n  { id: '2683', parentId: '2681', name: 'Level 7', subtext: 'id 2683', type: 'Level 7' },\n  { id: '2684', parentId: '2681', name: 'Level 7', subtext: 'id 2684', type: 'Level 7' },\n  { id: '2685', parentId: '2681', name: 'Level 7', subtext: 'id 2685', type: 'Level 7' },\n  { id: '2686', parentId: '2681', name: 'Level 7', subtext: 'id 2686', type: 'Level 7' },\n  { id: '2687', parentId: '2680', name: 'Level 6', subtext: 'id 2687', type: 'Level 6' },\n  { id: '2688', parentId: '2687', name: 'Level 7', subtext: 'id 2688', type: 'Level 7' },\n  { id: '2689', parentId: '2687', name: 'Level 7', subtext: 'id 2689', type: 'Level 7' },\n  { id: '2690', parentId: '2687', name: 'Level 7', subtext: 'id 2690', type: 'Level 7' },\n  { id: '2691', parentId: '2687', name: 'Level 7', subtext: 'id 2691', type: 'Level 7' },\n  { id: '2692', parentId: '2680', name: 'Level 6', subtext: 'id 2692', type: 'Level 6' },\n  { id: '2693', parentId: '2692', name: 'Level 7', subtext: 'id 2693', type: 'Level 7' },\n  { id: '2694', parentId: '2692', name: 'Level 7', subtext: 'id 2694', type: 'Level 7' },\n  { id: '2695', parentId: '2692', name: 'Level 7', subtext: 'id 2695', type: 'Level 7' },\n  { id: '2696', parentId: '2692', name: 'Level 7', subtext: 'id 2696', type: 'Level 7' },\n  { id: '2697', parentId: '2680', name: 'Level 6', subtext: 'id 2697', type: 'Level 6' },\n  { id: '2698', parentId: '2697', name: 'Level 7', subtext: 'id 2698', type: 'Level 7' },\n  { id: '2699', parentId: '2697', name: 'Level 7', subtext: 'id 2699', type: 'Level 7' },\n  { id: '2700', parentId: '2697', name: 'Level 7', subtext: 'id 2700', type: 'Level 7' },\n  { id: '2701', parentId: '2660', name: 'Level 5', subtext: 'id 2701', type: 'Level 5' },\n  { id: '2702', parentId: '2701', name: 'Level 6', subtext: 'id 2702', type: 'Level 6' },\n  { id: '2703', parentId: '2702', name: 'Level 7', subtext: 'id 2703', type: 'Level 7' },\n  { id: '2704', parentId: '2702', name: 'Level 7', subtext: 'id 2704', type: 'Level 7' },\n  { id: '2705', parentId: '2702', name: 'Level 7', subtext: 'id 2705', type: 'Level 7' },\n  { id: '2706', parentId: '2702', name: 'Level 7', subtext: 'id 2706', type: 'Level 7' },\n  { id: '2707', parentId: '2702', name: 'Level 7', subtext: 'id 2707', type: 'Level 7' },\n  { id: '2708', parentId: '2701', name: 'Level 6', subtext: 'id 2708', type: 'Level 6' },\n  { id: '2709', parentId: '2708', name: 'Level 7', subtext: 'id 2709', type: 'Level 7' },\n  { id: '2710', parentId: '2701', name: 'Level 6', subtext: 'id 2710', type: 'Level 6' },\n  { id: '2711', parentId: '2710', name: 'Level 7', subtext: 'id 2711', type: 'Level 7' },\n  { id: '2712', parentId: '2710', name: 'Level 7', subtext: 'id 2712', type: 'Level 7' },\n  { id: '2713', parentId: '2701', name: 'Level 6', subtext: 'id 2713', type: 'Level 6' },\n  { id: '2714', parentId: '2713', name: 'Level 7', subtext: 'id 2714', type: 'Level 7' },\n  { id: '2715', parentId: '2713', name: 'Level 7', subtext: 'id 2715', type: 'Level 7' },\n  { id: '2716', parentId: '2713', name: 'Level 7', subtext: 'id 2716', type: 'Level 7' },\n  { id: '2717', parentId: '2713', name: 'Level 7', subtext: 'id 2717', type: 'Level 7' },\n  { id: '2718', parentId: '2660', name: 'Level 5', subtext: 'id 2718', type: 'Level 5' },\n  { id: '2719', parentId: '2718', name: 'Level 6', subtext: 'id 2719', type: 'Level 6' },\n  { id: '2720', parentId: '2719', name: 'Level 7', subtext: 'id 2720', type: 'Level 7' },\n  { id: '2721', parentId: '2719', name: 'Level 7', subtext: 'id 2721', type: 'Level 7' },\n  { id: '2722', parentId: '2719', name: 'Level 7', subtext: 'id 2722', type: 'Level 7' },\n  { id: '2723', parentId: null, name: 'Level 1', subtext: 'id 2723', type: 'Level 1' },\n  { id: '2724', parentId: '2723', name: 'Level 2', subtext: 'id 2724', type: 'Level 2' },\n  { id: '2725', parentId: '2724', name: 'Level 3', subtext: 'id 2725', type: 'Level 3' },\n  { id: '2726', parentId: '2725', name: 'Level 4', subtext: 'id 2726', type: 'Level 4' },\n  { id: '2727', parentId: '2726', name: 'Level 5', subtext: 'id 2727', type: 'Level 5' },\n  { id: '2728', parentId: '2727', name: 'Level 6', subtext: 'id 2728', type: 'Level 6' },\n  { id: '2729', parentId: '2728', name: 'Level 7', subtext: 'id 2729', type: 'Level 7' },\n  { id: '2730', parentId: '2728', name: 'Level 7', subtext: 'id 2730', type: 'Level 7' },\n  { id: '2731', parentId: '2728', name: 'Level 7', subtext: 'id 2731', type: 'Level 7' },\n  { id: '2732', parentId: '2728', name: 'Level 7', subtext: 'id 2732', type: 'Level 7' },\n  { id: '2733', parentId: '2728', name: 'Level 7', subtext: 'id 2733', type: 'Level 7' },\n  { id: '2734', parentId: '2727', name: 'Level 6', subtext: 'id 2734', type: 'Level 6' },\n  { id: '2735', parentId: '2734', name: 'Level 7', subtext: 'id 2735', type: 'Level 7' },\n  { id: '2736', parentId: '2734', name: 'Level 7', subtext: 'id 2736', type: 'Level 7' },\n  { id: '2737', parentId: '2734', name: 'Level 7', subtext: 'id 2737', type: 'Level 7' },\n  { id: '2738', parentId: '2734', name: 'Level 7', subtext: 'id 2738', type: 'Level 7' },\n  { id: '2739', parentId: '2727', name: 'Level 6', subtext: 'id 2739', type: 'Level 6' },\n  { id: '2740', parentId: '2739', name: 'Level 7', subtext: 'id 2740', type: 'Level 7' },\n  { id: '2741', parentId: '2739', name: 'Level 7', subtext: 'id 2741', type: 'Level 7' },\n  { id: '2742', parentId: '2739', name: 'Level 7', subtext: 'id 2742', type: 'Level 7' },\n  { id: '2743', parentId: '2727', name: 'Level 6', subtext: 'id 2743', type: 'Level 6' },\n  { id: '2744', parentId: '2743', name: 'Level 7', subtext: 'id 2744', type: 'Level 7' },\n  { id: '2745', parentId: '2743', name: 'Level 7', subtext: 'id 2745', type: 'Level 7' },\n  { id: '2746', parentId: '2743', name: 'Level 7', subtext: 'id 2746', type: 'Level 7' },\n  { id: '2747', parentId: '2726', name: 'Level 5', subtext: 'id 2747', type: 'Level 5' },\n  { id: '2748', parentId: '2747', name: 'Level 6', subtext: 'id 2748', type: 'Level 6' },\n  { id: '2749', parentId: '2748', name: 'Level 7', subtext: 'id 2749', type: 'Level 7' },\n  { id: '2750', parentId: '2748', name: 'Level 7', subtext: 'id 2750', type: 'Level 7' },\n  { id: '2751', parentId: '2748', name: 'Level 7', subtext: 'id 2751', type: 'Level 7' },\n  { id: '2752', parentId: '2747', name: 'Level 6', subtext: 'id 2752', type: 'Level 6' },\n  { id: '2753', parentId: '2752', name: 'Level 7', subtext: 'id 2753', type: 'Level 7' },\n  { id: '2754', parentId: '2752', name: 'Level 7', subtext: 'id 2754', type: 'Level 7' },\n  { id: '2755', parentId: '2752', name: 'Level 7', subtext: 'id 2755', type: 'Level 7' },\n  { id: '2756', parentId: '2752', name: 'Level 7', subtext: 'id 2756', type: 'Level 7' },\n  { id: '2757', parentId: '2726', name: 'Level 5', subtext: 'id 2757', type: 'Level 5' },\n  { id: '2758', parentId: '2757', name: 'Level 6', subtext: 'id 2758', type: 'Level 6' },\n  { id: '2759', parentId: '2758', name: 'Level 7', subtext: 'id 2759', type: 'Level 7' },\n  { id: '2760', parentId: '2757', name: 'Level 6', subtext: 'id 2760', type: 'Level 6' },\n  { id: '2761', parentId: '2760', name: 'Level 7', subtext: 'id 2761', type: 'Level 7' },\n  { id: '2762', parentId: '2760', name: 'Level 7', subtext: 'id 2762', type: 'Level 7' },\n  { id: '2763', parentId: '2757', name: 'Level 6', subtext: 'id 2763', type: 'Level 6' },\n  { id: '2764', parentId: '2763', name: 'Level 7', subtext: 'id 2764', type: 'Level 7' },\n  { id: '2765', parentId: '2726', name: 'Level 5', subtext: 'id 2765', type: 'Level 5' },\n  { id: '2766', parentId: '2765', name: 'Level 6', subtext: 'id 2766', type: 'Level 6' },\n  { id: '2767', parentId: '2766', name: 'Level 7', subtext: 'id 2767', type: 'Level 7' },\n  { id: '2768', parentId: '2766', name: 'Level 7', subtext: 'id 2768', type: 'Level 7' },\n  { id: '2769', parentId: '2766', name: 'Level 7', subtext: 'id 2769', type: 'Level 7' },\n  { id: '2770', parentId: '2766', name: 'Level 7', subtext: 'id 2770', type: 'Level 7' },\n  { id: '2771', parentId: '2766', name: 'Level 7', subtext: 'id 2771', type: 'Level 7' },\n  { id: '2772', parentId: '2765', name: 'Level 6', subtext: 'id 2772', type: 'Level 6' },\n  { id: '2773', parentId: '2772', name: 'Level 7', subtext: 'id 2773', type: 'Level 7' },\n  { id: '2774', parentId: '2726', name: 'Level 5', subtext: 'id 2774', type: 'Level 5' },\n  { id: '2775', parentId: '2774', name: 'Level 6', subtext: 'id 2775', type: 'Level 6' },\n  { id: '2776', parentId: '2775', name: 'Level 7', subtext: 'id 2776', type: 'Level 7' },\n  { id: '2777', parentId: '2775', name: 'Level 7', subtext: 'id 2777', type: 'Level 7' },\n  { id: '2778', parentId: '2775', name: 'Level 7', subtext: 'id 2778', type: 'Level 7' },\n  { id: '2779', parentId: '2775', name: 'Level 7', subtext: 'id 2779', type: 'Level 7' },\n  { id: '2780', parentId: '2775', name: 'Level 7', subtext: 'id 2780', type: 'Level 7' },\n  { id: '2781', parentId: '2774', name: 'Level 6', subtext: 'id 2781', type: 'Level 6' },\n  { id: '2782', parentId: '2781', name: 'Level 7', subtext: 'id 2782', type: 'Level 7' },\n  { id: '2783', parentId: '2774', name: 'Level 6', subtext: 'id 2783', type: 'Level 6' },\n  { id: '2784', parentId: '2783', name: 'Level 7', subtext: 'id 2784', type: 'Level 7' },\n  { id: '2785', parentId: '2783', name: 'Level 7', subtext: 'id 2785', type: 'Level 7' },\n  { id: '2786', parentId: '2783', name: 'Level 7', subtext: 'id 2786', type: 'Level 7' },\n  { id: '2787', parentId: '2774', name: 'Level 6', subtext: 'id 2787', type: 'Level 6' },\n  { id: '2788', parentId: '2787', name: 'Level 7', subtext: 'id 2788', type: 'Level 7' },\n  { id: '2789', parentId: '2787', name: 'Level 7', subtext: 'id 2789', type: 'Level 7' },\n  { id: '2790', parentId: '2787', name: 'Level 7', subtext: 'id 2790', type: 'Level 7' },\n  { id: '2791', parentId: '2787', name: 'Level 7', subtext: 'id 2791', type: 'Level 7' },\n  { id: '2792', parentId: '2787', name: 'Level 7', subtext: 'id 2792', type: 'Level 7' },\n  { id: '2793', parentId: '2774', name: 'Level 6', subtext: 'id 2793', type: 'Level 6' },\n  { id: '2794', parentId: '2793', name: 'Level 7', subtext: 'id 2794', type: 'Level 7' },\n  { id: '2795', parentId: '2793', name: 'Level 7', subtext: 'id 2795', type: 'Level 7' },\n  { id: '2796', parentId: '2793', name: 'Level 7', subtext: 'id 2796', type: 'Level 7' },\n  { id: '2797', parentId: '2725', name: 'Level 4', subtext: 'id 2797', type: 'Level 4' },\n  { id: '2798', parentId: '2797', name: 'Level 5', subtext: 'id 2798', type: 'Level 5' },\n  { id: '2799', parentId: '2798', name: 'Level 6', subtext: 'id 2799', type: 'Level 6' },\n  { id: '2800', parentId: '2799', name: 'Level 7', subtext: 'id 2800', type: 'Level 7' },\n  { id: '2801', parentId: '2798', name: 'Level 6', subtext: 'id 2801', type: 'Level 6' },\n  { id: '2802', parentId: '2801', name: 'Level 7', subtext: 'id 2802', type: 'Level 7' },\n  { id: '2803', parentId: '2801', name: 'Level 7', subtext: 'id 2803', type: 'Level 7' },\n  { id: '2804', parentId: '2801', name: 'Level 7', subtext: 'id 2804', type: 'Level 7' },\n  { id: '2805', parentId: '2801', name: 'Level 7', subtext: 'id 2805', type: 'Level 7' },\n  { id: '2806', parentId: '2797', name: 'Level 5', subtext: 'id 2806', type: 'Level 5' },\n  { id: '2807', parentId: '2806', name: 'Level 6', subtext: 'id 2807', type: 'Level 6' },\n  { id: '2808', parentId: '2807', name: 'Level 7', subtext: 'id 2808', type: 'Level 7' },\n  { id: '2809', parentId: '2806', name: 'Level 6', subtext: 'id 2809', type: 'Level 6' },\n  { id: '2810', parentId: '2809', name: 'Level 7', subtext: 'id 2810', type: 'Level 7' },\n  { id: '2811', parentId: '2809', name: 'Level 7', subtext: 'id 2811', type: 'Level 7' },\n  { id: '2812', parentId: '2809', name: 'Level 7', subtext: 'id 2812', type: 'Level 7' },\n  { id: '2813', parentId: '2809', name: 'Level 7', subtext: 'id 2813', type: 'Level 7' },\n  { id: '2814', parentId: '2806', name: 'Level 6', subtext: 'id 2814', type: 'Level 6' },\n  { id: '2815', parentId: '2814', name: 'Level 7', subtext: 'id 2815', type: 'Level 7' },\n  { id: '2816', parentId: '2814', name: 'Level 7', subtext: 'id 2816', type: 'Level 7' },\n  { id: '2817', parentId: '2814', name: 'Level 7', subtext: 'id 2817', type: 'Level 7' },\n  { id: '2818', parentId: '2806', name: 'Level 6', subtext: 'id 2818', type: 'Level 6' },\n  { id: '2819', parentId: '2818', name: 'Level 7', subtext: 'id 2819', type: 'Level 7' },\n  { id: '2820', parentId: '2818', name: 'Level 7', subtext: 'id 2820', type: 'Level 7' },\n  { id: '2821', parentId: '2818', name: 'Level 7', subtext: 'id 2821', type: 'Level 7' },\n  { id: '2822', parentId: '2818', name: 'Level 7', subtext: 'id 2822', type: 'Level 7' },\n  { id: '2823', parentId: '2806', name: 'Level 6', subtext: 'id 2823', type: 'Level 6' },\n  { id: '2824', parentId: '2823', name: 'Level 7', subtext: 'id 2824', type: 'Level 7' },\n  { id: '2825', parentId: '2823', name: 'Level 7', subtext: 'id 2825', type: 'Level 7' },\n  { id: '2826', parentId: '2823', name: 'Level 7', subtext: 'id 2826', type: 'Level 7' },\n  { id: '2827', parentId: '2797', name: 'Level 5', subtext: 'id 2827', type: 'Level 5' },\n  { id: '2828', parentId: '2827', name: 'Level 6', subtext: 'id 2828', type: 'Level 6' },\n  { id: '2829', parentId: '2828', name: 'Level 7', subtext: 'id 2829', type: 'Level 7' },\n  { id: '2830', parentId: '2828', name: 'Level 7', subtext: 'id 2830', type: 'Level 7' },\n  { id: '2831', parentId: '2828', name: 'Level 7', subtext: 'id 2831', type: 'Level 7' },\n  { id: '2832', parentId: '2828', name: 'Level 7', subtext: 'id 2832', type: 'Level 7' },\n  { id: '2833', parentId: '2725', name: 'Level 4', subtext: 'id 2833', type: 'Level 4' },\n  { id: '2834', parentId: '2833', name: 'Level 5', subtext: 'id 2834', type: 'Level 5' },\n  { id: '2835', parentId: '2834', name: 'Level 6', subtext: 'id 2835', type: 'Level 6' },\n  { id: '2836', parentId: '2835', name: 'Level 7', subtext: 'id 2836', type: 'Level 7' },\n  { id: '2837', parentId: '2835', name: 'Level 7', subtext: 'id 2837', type: 'Level 7' },\n  { id: '2838', parentId: '2835', name: 'Level 7', subtext: 'id 2838', type: 'Level 7' },\n  { id: '2839', parentId: '2835', name: 'Level 7', subtext: 'id 2839', type: 'Level 7' },\n  { id: '2840', parentId: '2834', name: 'Level 6', subtext: 'id 2840', type: 'Level 6' },\n  { id: '2841', parentId: '2840', name: 'Level 7', subtext: 'id 2841', type: 'Level 7' },\n  { id: '2842', parentId: '2840', name: 'Level 7', subtext: 'id 2842', type: 'Level 7' },\n  { id: '2843', parentId: '2840', name: 'Level 7', subtext: 'id 2843', type: 'Level 7' },\n  { id: '2844', parentId: '2840', name: 'Level 7', subtext: 'id 2844', type: 'Level 7' },\n  { id: '2845', parentId: '2840', name: 'Level 7', subtext: 'id 2845', type: 'Level 7' },\n  { id: '2846', parentId: '2834', name: 'Level 6', subtext: 'id 2846', type: 'Level 6' },\n  { id: '2847', parentId: '2846', name: 'Level 7', subtext: 'id 2847', type: 'Level 7' },\n  { id: '2848', parentId: '2846', name: 'Level 7', subtext: 'id 2848', type: 'Level 7' },\n  { id: '2849', parentId: '2846', name: 'Level 7', subtext: 'id 2849', type: 'Level 7' },\n  { id: '2850', parentId: '2846', name: 'Level 7', subtext: 'id 2850', type: 'Level 7' },\n  { id: '2851', parentId: '2833', name: 'Level 5', subtext: 'id 2851', type: 'Level 5' },\n  { id: '2852', parentId: '2851', name: 'Level 6', subtext: 'id 2852', type: 'Level 6' },\n  { id: '2853', parentId: '2852', name: 'Level 7', subtext: 'id 2853', type: 'Level 7' },\n  { id: '2854', parentId: '2851', name: 'Level 6', subtext: 'id 2854', type: 'Level 6' },\n  { id: '2855', parentId: '2854', name: 'Level 7', subtext: 'id 2855', type: 'Level 7' },\n  { id: '2856', parentId: '2854', name: 'Level 7', subtext: 'id 2856', type: 'Level 7' },\n  { id: '2857', parentId: '2854', name: 'Level 7', subtext: 'id 2857', type: 'Level 7' },\n  { id: '2858', parentId: '2854', name: 'Level 7', subtext: 'id 2858', type: 'Level 7' },\n  { id: '2859', parentId: '2851', name: 'Level 6', subtext: 'id 2859', type: 'Level 6' },\n  { id: '2860', parentId: '2859', name: 'Level 7', subtext: 'id 2860', type: 'Level 7' },\n  { id: '2861', parentId: '2859', name: 'Level 7', subtext: 'id 2861', type: 'Level 7' },\n  { id: '2862', parentId: '2859', name: 'Level 7', subtext: 'id 2862', type: 'Level 7' },\n  { id: '2863', parentId: '2851', name: 'Level 6', subtext: 'id 2863', type: 'Level 6' },\n  { id: '2864', parentId: '2863', name: 'Level 7', subtext: 'id 2864', type: 'Level 7' },\n  { id: '2865', parentId: '2863', name: 'Level 7', subtext: 'id 2865', type: 'Level 7' },\n  { id: '2866', parentId: '2863', name: 'Level 7', subtext: 'id 2866', type: 'Level 7' },\n  { id: '2867', parentId: '2851', name: 'Level 6', subtext: 'id 2867', type: 'Level 6' },\n  { id: '2868', parentId: '2867', name: 'Level 7', subtext: 'id 2868', type: 'Level 7' },\n  { id: '2869', parentId: '2833', name: 'Level 5', subtext: 'id 2869', type: 'Level 5' },\n  { id: '2870', parentId: '2869', name: 'Level 6', subtext: 'id 2870', type: 'Level 6' },\n  { id: '2871', parentId: '2870', name: 'Level 7', subtext: 'id 2871', type: 'Level 7' },\n  { id: '2872', parentId: '2870', name: 'Level 7', subtext: 'id 2872', type: 'Level 7' },\n  { id: '2873', parentId: '2870', name: 'Level 7', subtext: 'id 2873', type: 'Level 7' },\n  { id: '2874', parentId: '2869', name: 'Level 6', subtext: 'id 2874', type: 'Level 6' },\n  { id: '2875', parentId: '2874', name: 'Level 7', subtext: 'id 2875', type: 'Level 7' },\n  { id: '2876', parentId: '2874', name: 'Level 7', subtext: 'id 2876', type: 'Level 7' },\n  { id: '2877', parentId: '2874', name: 'Level 7', subtext: 'id 2877', type: 'Level 7' },\n  { id: '2878', parentId: '2869', name: 'Level 6', subtext: 'id 2878', type: 'Level 6' },\n  { id: '2879', parentId: '2878', name: 'Level 7', subtext: 'id 2879', type: 'Level 7' },\n  { id: '2880', parentId: '2878', name: 'Level 7', subtext: 'id 2880', type: 'Level 7' },\n  { id: '2881', parentId: '2878', name: 'Level 7', subtext: 'id 2881', type: 'Level 7' },\n  { id: '2882', parentId: '2878', name: 'Level 7', subtext: 'id 2882', type: 'Level 7' },\n  { id: '2883', parentId: '2833', name: 'Level 5', subtext: 'id 2883', type: 'Level 5' },\n  { id: '2884', parentId: '2883', name: 'Level 6', subtext: 'id 2884', type: 'Level 6' },\n  { id: '2885', parentId: '2884', name: 'Level 7', subtext: 'id 2885', type: 'Level 7' },\n  { id: '2886', parentId: '2884', name: 'Level 7', subtext: 'id 2886', type: 'Level 7' },\n  { id: '2887', parentId: '2884', name: 'Level 7', subtext: 'id 2887', type: 'Level 7' },\n  { id: '2888', parentId: '2884', name: 'Level 7', subtext: 'id 2888', type: 'Level 7' },\n  { id: '2889', parentId: '2883', name: 'Level 6', subtext: 'id 2889', type: 'Level 6' },\n  { id: '2890', parentId: '2889', name: 'Level 7', subtext: 'id 2890', type: 'Level 7' },\n  { id: '2891', parentId: '2889', name: 'Level 7', subtext: 'id 2891', type: 'Level 7' },\n  { id: '2892', parentId: '2889', name: 'Level 7', subtext: 'id 2892', type: 'Level 7' },\n  { id: '2893', parentId: '2889', name: 'Level 7', subtext: 'id 2893', type: 'Level 7' },\n  { id: '2894', parentId: '2833', name: 'Level 5', subtext: 'id 2894', type: 'Level 5' },\n  { id: '2895', parentId: '2894', name: 'Level 6', subtext: 'id 2895', type: 'Level 6' },\n  { id: '2896', parentId: '2895', name: 'Level 7', subtext: 'id 2896', type: 'Level 7' },\n  { id: '2897', parentId: '2895', name: 'Level 7', subtext: 'id 2897', type: 'Level 7' },\n  { id: '2898', parentId: '2724', name: 'Level 3', subtext: 'id 2898', type: 'Level 3' },\n  { id: '2899', parentId: '2898', name: 'Level 4', subtext: 'id 2899', type: 'Level 4' },\n  { id: '2900', parentId: '2899', name: 'Level 5', subtext: 'id 2900', type: 'Level 5' },\n  { id: '2901', parentId: '2900', name: 'Level 6', subtext: 'id 2901', type: 'Level 6' },\n  { id: '2902', parentId: '2901', name: 'Level 7', subtext: 'id 2902', type: 'Level 7' },\n  { id: '2903', parentId: '2900', name: 'Level 6', subtext: 'id 2903', type: 'Level 6' },\n  { id: '2904', parentId: '2903', name: 'Level 7', subtext: 'id 2904', type: 'Level 7' },\n  { id: '2905', parentId: '2899', name: 'Level 5', subtext: 'id 2905', type: 'Level 5' },\n  { id: '2906', parentId: '2905', name: 'Level 6', subtext: 'id 2906', type: 'Level 6' },\n  { id: '2907', parentId: '2906', name: 'Level 7', subtext: 'id 2907', type: 'Level 7' },\n  { id: '2908', parentId: '2905', name: 'Level 6', subtext: 'id 2908', type: 'Level 6' },\n  { id: '2909', parentId: '2908', name: 'Level 7', subtext: 'id 2909', type: 'Level 7' },\n  { id: '2910', parentId: '2908', name: 'Level 7', subtext: 'id 2910', type: 'Level 7' },\n  { id: '2911', parentId: '2908', name: 'Level 7', subtext: 'id 2911', type: 'Level 7' },\n  { id: '2912', parentId: '2908', name: 'Level 7', subtext: 'id 2912', type: 'Level 7' },\n  { id: '2913', parentId: '2908', name: 'Level 7', subtext: 'id 2913', type: 'Level 7' },\n  { id: '2914', parentId: '2899', name: 'Level 5', subtext: 'id 2914', type: 'Level 5' },\n  { id: '2915', parentId: '2914', name: 'Level 6', subtext: 'id 2915', type: 'Level 6' },\n  { id: '2916', parentId: '2915', name: 'Level 7', subtext: 'id 2916', type: 'Level 7' },\n  { id: '2917', parentId: '2915', name: 'Level 7', subtext: 'id 2917', type: 'Level 7' },\n  { id: '2918', parentId: '2915', name: 'Level 7', subtext: 'id 2918', type: 'Level 7' },\n  { id: '2919', parentId: '2915', name: 'Level 7', subtext: 'id 2919', type: 'Level 7' },\n  { id: '2920', parentId: '2914', name: 'Level 6', subtext: 'id 2920', type: 'Level 6' },\n  { id: '2921', parentId: '2920', name: 'Level 7', subtext: 'id 2921', type: 'Level 7' },\n  { id: '2922', parentId: '2920', name: 'Level 7', subtext: 'id 2922', type: 'Level 7' },\n  { id: '2923', parentId: '2920', name: 'Level 7', subtext: 'id 2923', type: 'Level 7' },\n  { id: '2924', parentId: '2920', name: 'Level 7', subtext: 'id 2924', type: 'Level 7' },\n  { id: '2925', parentId: '2920', name: 'Level 7', subtext: 'id 2925', type: 'Level 7' },\n  { id: '2926', parentId: '2914', name: 'Level 6', subtext: 'id 2926', type: 'Level 6' },\n  { id: '2927', parentId: '2926', name: 'Level 7', subtext: 'id 2927', type: 'Level 7' },\n  { id: '2928', parentId: '2926', name: 'Level 7', subtext: 'id 2928', type: 'Level 7' },\n  { id: '2929', parentId: '2926', name: 'Level 7', subtext: 'id 2929', type: 'Level 7' },\n  { id: '2930', parentId: '2926', name: 'Level 7', subtext: 'id 2930', type: 'Level 7' },\n  { id: '2931', parentId: '2926', name: 'Level 7', subtext: 'id 2931', type: 'Level 7' },\n  { id: '2932', parentId: '2914', name: 'Level 6', subtext: 'id 2932', type: 'Level 6' },\n  { id: '2933', parentId: '2932', name: 'Level 7', subtext: 'id 2933', type: 'Level 7' },\n  { id: '2934', parentId: '2932', name: 'Level 7', subtext: 'id 2934', type: 'Level 7' },\n  { id: '2935', parentId: '2932', name: 'Level 7', subtext: 'id 2935', type: 'Level 7' },\n  { id: '2936', parentId: '2724', name: 'Level 3', subtext: 'id 2936', type: 'Level 3' },\n  { id: '2937', parentId: '2936', name: 'Level 4', subtext: 'id 2937', type: 'Level 4' },\n  { id: '2938', parentId: '2937', name: 'Level 5', subtext: 'id 2938', type: 'Level 5' },\n  { id: '2939', parentId: '2938', name: 'Level 6', subtext: 'id 2939', type: 'Level 6' },\n  { id: '2940', parentId: '2939', name: 'Level 7', subtext: 'id 2940', type: 'Level 7' },\n  { id: '2941', parentId: '2939', name: 'Level 7', subtext: 'id 2941', type: 'Level 7' },\n  { id: '2942', parentId: '2939', name: 'Level 7', subtext: 'id 2942', type: 'Level 7' },\n  { id: '2943', parentId: '2939', name: 'Level 7', subtext: 'id 2943', type: 'Level 7' },\n  { id: '2944', parentId: '2938', name: 'Level 6', subtext: 'id 2944', type: 'Level 6' },\n  { id: '2945', parentId: '2944', name: 'Level 7', subtext: 'id 2945', type: 'Level 7' },\n  { id: '2946', parentId: '2944', name: 'Level 7', subtext: 'id 2946', type: 'Level 7' },\n  { id: '2947', parentId: '2937', name: 'Level 5', subtext: 'id 2947', type: 'Level 5' },\n  { id: '2948', parentId: '2947', name: 'Level 6', subtext: 'id 2948', type: 'Level 6' },\n  { id: '2949', parentId: '2948', name: 'Level 7', subtext: 'id 2949', type: 'Level 7' },\n  { id: '2950', parentId: '2948', name: 'Level 7', subtext: 'id 2950', type: 'Level 7' },\n  { id: '2951', parentId: '2947', name: 'Level 6', subtext: 'id 2951', type: 'Level 6' },\n  { id: '2952', parentId: '2951', name: 'Level 7', subtext: 'id 2952', type: 'Level 7' },\n  { id: '2953', parentId: '2951', name: 'Level 7', subtext: 'id 2953', type: 'Level 7' },\n  { id: '2954', parentId: '2951', name: 'Level 7', subtext: 'id 2954', type: 'Level 7' },\n  { id: '2955', parentId: '2951', name: 'Level 7', subtext: 'id 2955', type: 'Level 7' },\n  { id: '2956', parentId: '2951', name: 'Level 7', subtext: 'id 2956', type: 'Level 7' },\n  { id: '2957', parentId: '2947', name: 'Level 6', subtext: 'id 2957', type: 'Level 6' },\n  { id: '2958', parentId: '2957', name: 'Level 7', subtext: 'id 2958', type: 'Level 7' },\n  { id: '2959', parentId: '2957', name: 'Level 7', subtext: 'id 2959', type: 'Level 7' },\n  { id: '2960', parentId: '2957', name: 'Level 7', subtext: 'id 2960', type: 'Level 7' },\n  { id: '2961', parentId: '2937', name: 'Level 5', subtext: 'id 2961', type: 'Level 5' },\n  { id: '2962', parentId: '2961', name: 'Level 6', subtext: 'id 2962', type: 'Level 6' },\n  { id: '2963', parentId: '2962', name: 'Level 7', subtext: 'id 2963', type: 'Level 7' },\n  { id: '2964', parentId: '2962', name: 'Level 7', subtext: 'id 2964', type: 'Level 7' },\n  { id: '2965', parentId: '2961', name: 'Level 6', subtext: 'id 2965', type: 'Level 6' },\n  { id: '2966', parentId: '2965', name: 'Level 7', subtext: 'id 2966', type: 'Level 7' },\n  { id: '2967', parentId: '2961', name: 'Level 6', subtext: 'id 2967', type: 'Level 6' },\n  { id: '2968', parentId: '2967', name: 'Level 7', subtext: 'id 2968', type: 'Level 7' },\n  { id: '2969', parentId: '2967', name: 'Level 7', subtext: 'id 2969', type: 'Level 7' },\n  { id: '2970', parentId: '2967', name: 'Level 7', subtext: 'id 2970', type: 'Level 7' },\n  { id: '2971', parentId: '2967', name: 'Level 7', subtext: 'id 2971', type: 'Level 7' },\n  { id: '2972', parentId: '2961', name: 'Level 6', subtext: 'id 2972', type: 'Level 6' },\n  { id: '2973', parentId: '2972', name: 'Level 7', subtext: 'id 2973', type: 'Level 7' },\n  { id: '2974', parentId: '2972', name: 'Level 7', subtext: 'id 2974', type: 'Level 7' },\n  { id: '2975', parentId: '2961', name: 'Level 6', subtext: 'id 2975', type: 'Level 6' },\n  { id: '2976', parentId: '2975', name: 'Level 7', subtext: 'id 2976', type: 'Level 7' },\n  { id: '2977', parentId: '2937', name: 'Level 5', subtext: 'id 2977', type: 'Level 5' },\n  { id: '2978', parentId: '2977', name: 'Level 6', subtext: 'id 2978', type: 'Level 6' },\n  { id: '2979', parentId: '2978', name: 'Level 7', subtext: 'id 2979', type: 'Level 7' },\n  { id: '2980', parentId: '2978', name: 'Level 7', subtext: 'id 2980', type: 'Level 7' },\n  { id: '2981', parentId: '2978', name: 'Level 7', subtext: 'id 2981', type: 'Level 7' },\n  { id: '2982', parentId: '2978', name: 'Level 7', subtext: 'id 2982', type: 'Level 7' },\n  { id: '2983', parentId: '2977', name: 'Level 6', subtext: 'id 2983', type: 'Level 6' },\n  { id: '2984', parentId: '2983', name: 'Level 7', subtext: 'id 2984', type: 'Level 7' },\n  { id: '2985', parentId: '2983', name: 'Level 7', subtext: 'id 2985', type: 'Level 7' },\n  { id: '2986', parentId: '2983', name: 'Level 7', subtext: 'id 2986', type: 'Level 7' },\n  { id: '2987', parentId: '2937', name: 'Level 5', subtext: 'id 2987', type: 'Level 5' },\n  { id: '2988', parentId: '2987', name: 'Level 6', subtext: 'id 2988', type: 'Level 6' },\n  { id: '2989', parentId: '2988', name: 'Level 7', subtext: 'id 2989', type: 'Level 7' },\n  { id: '2990', parentId: '2987', name: 'Level 6', subtext: 'id 2990', type: 'Level 6' },\n  { id: '2991', parentId: '2990', name: 'Level 7', subtext: 'id 2991', type: 'Level 7' },\n  { id: '2992', parentId: '2990', name: 'Level 7', subtext: 'id 2992', type: 'Level 7' },\n  { id: '2993', parentId: '2990', name: 'Level 7', subtext: 'id 2993', type: 'Level 7' },\n  { id: '2994', parentId: '2987', name: 'Level 6', subtext: 'id 2994', type: 'Level 6' },\n  { id: '2995', parentId: '2994', name: 'Level 7', subtext: 'id 2995', type: 'Level 7' },\n  { id: '2996', parentId: '2994', name: 'Level 7', subtext: 'id 2996', type: 'Level 7' },\n  { id: '2997', parentId: '2987', name: 'Level 6', subtext: 'id 2997', type: 'Level 6' },\n  { id: '2998', parentId: '2997', name: 'Level 7', subtext: 'id 2998', type: 'Level 7' },\n  { id: '2999', parentId: '2987', name: 'Level 6', subtext: 'id 2999', type: 'Level 6' },\n  { id: '3000', parentId: '2999', name: 'Level 7', subtext: 'id 3000', type: 'Level 7' },\n  { id: '3001', parentId: '2999', name: 'Level 7', subtext: 'id 3001', type: 'Level 7' },\n  { id: '3002', parentId: '2999', name: 'Level 7', subtext: 'id 3002', type: 'Level 7' },\n  { id: '3003', parentId: '2999', name: 'Level 7', subtext: 'id 3003', type: 'Level 7' },\n  { id: '3004', parentId: '2936', name: 'Level 4', subtext: 'id 3004', type: 'Level 4' },\n  { id: '3005', parentId: '3004', name: 'Level 5', subtext: 'id 3005', type: 'Level 5' },\n  { id: '3006', parentId: '3005', name: 'Level 6', subtext: 'id 3006', type: 'Level 6' },\n  { id: '3007', parentId: '3006', name: 'Level 7', subtext: 'id 3007', type: 'Level 7' },\n  { id: '3008', parentId: '3006', name: 'Level 7', subtext: 'id 3008', type: 'Level 7' },\n  { id: '3009', parentId: '3006', name: 'Level 7', subtext: 'id 3009', type: 'Level 7' },\n  { id: '3010', parentId: '3006', name: 'Level 7', subtext: 'id 3010', type: 'Level 7' },\n  { id: '3011', parentId: '3006', name: 'Level 7', subtext: 'id 3011', type: 'Level 7' },\n  { id: '3012', parentId: '3005', name: 'Level 6', subtext: 'id 3012', type: 'Level 6' },\n  { id: '3013', parentId: '3012', name: 'Level 7', subtext: 'id 3013', type: 'Level 7' },\n  { id: '3014', parentId: '3012', name: 'Level 7', subtext: 'id 3014', type: 'Level 7' },\n  { id: '3015', parentId: '3012', name: 'Level 7', subtext: 'id 3015', type: 'Level 7' },\n  { id: '3016', parentId: '3005', name: 'Level 6', subtext: 'id 3016', type: 'Level 6' },\n  { id: '3017', parentId: '3016', name: 'Level 7', subtext: 'id 3017', type: 'Level 7' },\n  { id: '3018', parentId: '3016', name: 'Level 7', subtext: 'id 3018', type: 'Level 7' },\n  { id: '3019', parentId: '3005', name: 'Level 6', subtext: 'id 3019', type: 'Level 6' },\n  { id: '3020', parentId: '3019', name: 'Level 7', subtext: 'id 3020', type: 'Level 7' },\n  { id: '3021', parentId: '3019', name: 'Level 7', subtext: 'id 3021', type: 'Level 7' },\n  { id: '3022', parentId: '3019', name: 'Level 7', subtext: 'id 3022', type: 'Level 7' },\n  { id: '3023', parentId: '3019', name: 'Level 7', subtext: 'id 3023', type: 'Level 7' },\n  { id: '3024', parentId: '3004', name: 'Level 5', subtext: 'id 3024', type: 'Level 5' },\n  { id: '3025', parentId: '3024', name: 'Level 6', subtext: 'id 3025', type: 'Level 6' },\n  { id: '3026', parentId: '3025', name: 'Level 7', subtext: 'id 3026', type: 'Level 7' },\n  { id: '3027', parentId: '3025', name: 'Level 7', subtext: 'id 3027', type: 'Level 7' },\n  { id: '3028', parentId: '3025', name: 'Level 7', subtext: 'id 3028', type: 'Level 7' },\n  { id: '3029', parentId: '3025', name: 'Level 7', subtext: 'id 3029', type: 'Level 7' },\n  { id: '3030', parentId: '3025', name: 'Level 7', subtext: 'id 3030', type: 'Level 7' },\n  { id: '3031', parentId: '3004', name: 'Level 5', subtext: 'id 3031', type: 'Level 5' },\n  { id: '3032', parentId: '3031', name: 'Level 6', subtext: 'id 3032', type: 'Level 6' },\n  { id: '3033', parentId: '3032', name: 'Level 7', subtext: 'id 3033', type: 'Level 7' },\n  { id: '3034', parentId: '3031', name: 'Level 6', subtext: 'id 3034', type: 'Level 6' },\n  { id: '3035', parentId: '3034', name: 'Level 7', subtext: 'id 3035', type: 'Level 7' },\n  { id: '3036', parentId: '3034', name: 'Level 7', subtext: 'id 3036', type: 'Level 7' },\n  { id: '3037', parentId: '3004', name: 'Level 5', subtext: 'id 3037', type: 'Level 5' },\n  { id: '3038', parentId: '3037', name: 'Level 6', subtext: 'id 3038', type: 'Level 6' },\n  { id: '3039', parentId: '3038', name: 'Level 7', subtext: 'id 3039', type: 'Level 7' },\n  { id: '3040', parentId: '3038', name: 'Level 7', subtext: 'id 3040', type: 'Level 7' },\n  { id: '3041', parentId: '3038', name: 'Level 7', subtext: 'id 3041', type: 'Level 7' },\n  { id: '3042', parentId: '3038', name: 'Level 7', subtext: 'id 3042', type: 'Level 7' },\n  { id: '3043', parentId: '3038', name: 'Level 7', subtext: 'id 3043', type: 'Level 7' },\n  { id: '3044', parentId: '3037', name: 'Level 6', subtext: 'id 3044', type: 'Level 6' },\n  { id: '3045', parentId: '3044', name: 'Level 7', subtext: 'id 3045', type: 'Level 7' },\n  { id: '3046', parentId: '3044', name: 'Level 7', subtext: 'id 3046', type: 'Level 7' },\n  { id: '3047', parentId: '3044', name: 'Level 7', subtext: 'id 3047', type: 'Level 7' },\n  { id: '3048', parentId: '3044', name: 'Level 7', subtext: 'id 3048', type: 'Level 7' },\n  { id: '3049', parentId: '3044', name: 'Level 7', subtext: 'id 3049', type: 'Level 7' },\n  { id: '3050', parentId: '3004', name: 'Level 5', subtext: 'id 3050', type: 'Level 5' },\n  { id: '3051', parentId: '3050', name: 'Level 6', subtext: 'id 3051', type: 'Level 6' },\n  { id: '3052', parentId: '3051', name: 'Level 7', subtext: 'id 3052', type: 'Level 7' },\n  { id: '3053', parentId: '3050', name: 'Level 6', subtext: 'id 3053', type: 'Level 6' },\n  { id: '3054', parentId: '3053', name: 'Level 7', subtext: 'id 3054', type: 'Level 7' },\n  { id: '3055', parentId: '3050', name: 'Level 6', subtext: 'id 3055', type: 'Level 6' },\n  { id: '3056', parentId: '3055', name: 'Level 7', subtext: 'id 3056', type: 'Level 7' },\n  { id: '3057', parentId: '3055', name: 'Level 7', subtext: 'id 3057', type: 'Level 7' },\n  { id: '3058', parentId: '3055', name: 'Level 7', subtext: 'id 3058', type: 'Level 7' },\n  { id: '3059', parentId: '3055', name: 'Level 7', subtext: 'id 3059', type: 'Level 7' },\n  { id: '3060', parentId: '3055', name: 'Level 7', subtext: 'id 3060', type: 'Level 7' },\n  { id: '3061', parentId: '3050', name: 'Level 6', subtext: 'id 3061', type: 'Level 6' },\n  { id: '3062', parentId: '3061', name: 'Level 7', subtext: 'id 3062', type: 'Level 7' },\n  { id: '3063', parentId: '3061', name: 'Level 7', subtext: 'id 3063', type: 'Level 7' },\n  { id: '3064', parentId: '3050', name: 'Level 6', subtext: 'id 3064', type: 'Level 6' },\n  { id: '3065', parentId: '3064', name: 'Level 7', subtext: 'id 3065', type: 'Level 7' },\n  { id: '3066', parentId: '3064', name: 'Level 7', subtext: 'id 3066', type: 'Level 7' },\n  { id: '3067', parentId: '2936', name: 'Level 4', subtext: 'id 3067', type: 'Level 4' },\n  { id: '3068', parentId: '3067', name: 'Level 5', subtext: 'id 3068', type: 'Level 5' },\n  { id: '3069', parentId: '3068', name: 'Level 6', subtext: 'id 3069', type: 'Level 6' },\n  { id: '3070', parentId: '3069', name: 'Level 7', subtext: 'id 3070', type: 'Level 7' },\n  { id: '3071', parentId: '3069', name: 'Level 7', subtext: 'id 3071', type: 'Level 7' },\n  { id: '3072', parentId: '3068', name: 'Level 6', subtext: 'id 3072', type: 'Level 6' },\n  { id: '3073', parentId: '3072', name: 'Level 7', subtext: 'id 3073', type: 'Level 7' },\n  { id: '3074', parentId: '3068', name: 'Level 6', subtext: 'id 3074', type: 'Level 6' },\n  { id: '3075', parentId: '3074', name: 'Level 7', subtext: 'id 3075', type: 'Level 7' },\n  { id: '3076', parentId: '3067', name: 'Level 5', subtext: 'id 3076', type: 'Level 5' },\n  { id: '3077', parentId: '3076', name: 'Level 6', subtext: 'id 3077', type: 'Level 6' },\n  { id: '3078', parentId: '3077', name: 'Level 7', subtext: 'id 3078', type: 'Level 7' },\n  { id: '3079', parentId: '3077', name: 'Level 7', subtext: 'id 3079', type: 'Level 7' },\n  { id: '3080', parentId: '3067', name: 'Level 5', subtext: 'id 3080', type: 'Level 5' },\n  { id: '3081', parentId: '3080', name: 'Level 6', subtext: 'id 3081', type: 'Level 6' },\n  { id: '3082', parentId: '3081', name: 'Level 7', subtext: 'id 3082', type: 'Level 7' },\n  { id: '3083', parentId: '3081', name: 'Level 7', subtext: 'id 3083', type: 'Level 7' },\n  { id: '3084', parentId: '3081', name: 'Level 7', subtext: 'id 3084', type: 'Level 7' },\n  { id: '3085', parentId: '3081', name: 'Level 7', subtext: 'id 3085', type: 'Level 7' },\n  { id: '3086', parentId: '3081', name: 'Level 7', subtext: 'id 3086', type: 'Level 7' },\n  { id: '3087', parentId: '3080', name: 'Level 6', subtext: 'id 3087', type: 'Level 6' },\n  { id: '3088', parentId: '3087', name: 'Level 7', subtext: 'id 3088', type: 'Level 7' },\n  { id: '3089', parentId: '3087', name: 'Level 7', subtext: 'id 3089', type: 'Level 7' },\n  { id: '3090', parentId: '3087', name: 'Level 7', subtext: 'id 3090', type: 'Level 7' },\n  { id: '3091', parentId: '3080', name: 'Level 6', subtext: 'id 3091', type: 'Level 6' },\n  { id: '3092', parentId: '3091', name: 'Level 7', subtext: 'id 3092', type: 'Level 7' },\n  { id: '3093', parentId: '3091', name: 'Level 7', subtext: 'id 3093', type: 'Level 7' },\n  { id: '3094', parentId: '3091', name: 'Level 7', subtext: 'id 3094', type: 'Level 7' },\n  { id: '3095', parentId: '3091', name: 'Level 7', subtext: 'id 3095', type: 'Level 7' },\n  { id: '3096', parentId: '3091', name: 'Level 7', subtext: 'id 3096', type: 'Level 7' },\n  { id: '3097', parentId: '2936', name: 'Level 4', subtext: 'id 3097', type: 'Level 4' },\n  { id: '3098', parentId: '3097', name: 'Level 5', subtext: 'id 3098', type: 'Level 5' },\n  { id: '3099', parentId: '3098', name: 'Level 6', subtext: 'id 3099', type: 'Level 6' },\n  { id: '3100', parentId: '3099', name: 'Level 7', subtext: 'id 3100', type: 'Level 7' },\n  { id: '3101', parentId: '3099', name: 'Level 7', subtext: 'id 3101', type: 'Level 7' },\n  { id: '3102', parentId: '3099', name: 'Level 7', subtext: 'id 3102', type: 'Level 7' },\n  { id: '3103', parentId: '3099', name: 'Level 7', subtext: 'id 3103', type: 'Level 7' },\n  { id: '3104', parentId: '3098', name: 'Level 6', subtext: 'id 3104', type: 'Level 6' },\n  { id: '3105', parentId: '3104', name: 'Level 7', subtext: 'id 3105', type: 'Level 7' },\n  { id: '3106', parentId: '3104', name: 'Level 7', subtext: 'id 3106', type: 'Level 7' },\n  { id: '3107', parentId: '3104', name: 'Level 7', subtext: 'id 3107', type: 'Level 7' },\n  { id: '3108', parentId: '3104', name: 'Level 7', subtext: 'id 3108', type: 'Level 7' },\n  { id: '3109', parentId: '3104', name: 'Level 7', subtext: 'id 3109', type: 'Level 7' },\n  { id: '3110', parentId: '3098', name: 'Level 6', subtext: 'id 3110', type: 'Level 6' },\n  { id: '3111', parentId: '3110', name: 'Level 7', subtext: 'id 3111', type: 'Level 7' },\n  { id: '3112', parentId: '3110', name: 'Level 7', subtext: 'id 3112', type: 'Level 7' },\n  { id: '3113', parentId: '3110', name: 'Level 7', subtext: 'id 3113', type: 'Level 7' },\n  { id: '3114', parentId: '3097', name: 'Level 5', subtext: 'id 3114', type: 'Level 5' },\n  { id: '3115', parentId: '3114', name: 'Level 6', subtext: 'id 3115', type: 'Level 6' },\n  { id: '3116', parentId: '3115', name: 'Level 7', subtext: 'id 3116', type: 'Level 7' },\n  { id: '3117', parentId: '3115', name: 'Level 7', subtext: 'id 3117', type: 'Level 7' },\n  { id: '3118', parentId: '3115', name: 'Level 7', subtext: 'id 3118', type: 'Level 7' },\n  { id: '3119', parentId: '3115', name: 'Level 7', subtext: 'id 3119', type: 'Level 7' },\n  { id: '3120', parentId: '3115', name: 'Level 7', subtext: 'id 3120', type: 'Level 7' },\n  { id: '3121', parentId: '3114', name: 'Level 6', subtext: 'id 3121', type: 'Level 6' },\n  { id: '3122', parentId: '3121', name: 'Level 7', subtext: 'id 3122', type: 'Level 7' },\n  { id: '3123', parentId: '3121', name: 'Level 7', subtext: 'id 3123', type: 'Level 7' },\n  { id: '3124', parentId: '3121', name: 'Level 7', subtext: 'id 3124', type: 'Level 7' },\n  { id: '3125', parentId: '3114', name: 'Level 6', subtext: 'id 3125', type: 'Level 6' },\n  { id: '3126', parentId: '3125', name: 'Level 7', subtext: 'id 3126', type: 'Level 7' },\n  { id: '3127', parentId: '3125', name: 'Level 7', subtext: 'id 3127', type: 'Level 7' },\n  { id: '3128', parentId: '3125', name: 'Level 7', subtext: 'id 3128', type: 'Level 7' },\n  { id: '3129', parentId: '3125', name: 'Level 7', subtext: 'id 3129', type: 'Level 7' },\n  { id: '3130', parentId: '2724', name: 'Level 3', subtext: 'id 3130', type: 'Level 3' },\n  { id: '3131', parentId: '3130', name: 'Level 4', subtext: 'id 3131', type: 'Level 4' },\n  { id: '3132', parentId: '3131', name: 'Level 5', subtext: 'id 3132', type: 'Level 5' },\n  { id: '3133', parentId: '3132', name: 'Level 6', subtext: 'id 3133', type: 'Level 6' },\n  { id: '3134', parentId: '3133', name: 'Level 7', subtext: 'id 3134', type: 'Level 7' },\n  { id: '3135', parentId: '3132', name: 'Level 6', subtext: 'id 3135', type: 'Level 6' },\n  { id: '3136', parentId: '3135', name: 'Level 7', subtext: 'id 3136', type: 'Level 7' },\n  { id: '3137', parentId: '3135', name: 'Level 7', subtext: 'id 3137', type: 'Level 7' },\n  { id: '3138', parentId: '3135', name: 'Level 7', subtext: 'id 3138', type: 'Level 7' },\n  { id: '3139', parentId: '3132', name: 'Level 6', subtext: 'id 3139', type: 'Level 6' },\n  { id: '3140', parentId: '3139', name: 'Level 7', subtext: 'id 3140', type: 'Level 7' },\n  { id: '3141', parentId: '3139', name: 'Level 7', subtext: 'id 3141', type: 'Level 7' },\n  { id: '3142', parentId: '3139', name: 'Level 7', subtext: 'id 3142', type: 'Level 7' },\n  { id: '3143', parentId: '3132', name: 'Level 6', subtext: 'id 3143', type: 'Level 6' },\n  { id: '3144', parentId: '3143', name: 'Level 7', subtext: 'id 3144', type: 'Level 7' },\n  { id: '3145', parentId: '3132', name: 'Level 6', subtext: 'id 3145', type: 'Level 6' },\n  { id: '3146', parentId: '3145', name: 'Level 7', subtext: 'id 3146', type: 'Level 7' },\n  { id: '3147', parentId: '3145', name: 'Level 7', subtext: 'id 3147', type: 'Level 7' },\n  { id: '3148', parentId: '3131', name: 'Level 5', subtext: 'id 3148', type: 'Level 5' },\n  { id: '3149', parentId: '3148', name: 'Level 6', subtext: 'id 3149', type: 'Level 6' },\n  { id: '3150', parentId: '3149', name: 'Level 7', subtext: 'id 3150', type: 'Level 7' },\n  { id: '3151', parentId: '3149', name: 'Level 7', subtext: 'id 3151', type: 'Level 7' },\n  { id: '3152', parentId: '3130', name: 'Level 4', subtext: 'id 3152', type: 'Level 4' },\n  { id: '3153', parentId: '3152', name: 'Level 5', subtext: 'id 3153', type: 'Level 5' },\n  { id: '3154', parentId: '3153', name: 'Level 6', subtext: 'id 3154', type: 'Level 6' },\n  { id: '3155', parentId: '3154', name: 'Level 7', subtext: 'id 3155', type: 'Level 7' },\n  { id: '3156', parentId: '3154', name: 'Level 7', subtext: 'id 3156', type: 'Level 7' },\n  { id: '3157', parentId: '3154', name: 'Level 7', subtext: 'id 3157', type: 'Level 7' },\n  { id: '3158', parentId: '3153', name: 'Level 6', subtext: 'id 3158', type: 'Level 6' },\n  { id: '3159', parentId: '3158', name: 'Level 7', subtext: 'id 3159', type: 'Level 7' },\n  { id: '3160', parentId: '3153', name: 'Level 6', subtext: 'id 3160', type: 'Level 6' },\n  { id: '3161', parentId: '3160', name: 'Level 7', subtext: 'id 3161', type: 'Level 7' },\n  { id: '3162', parentId: '3160', name: 'Level 7', subtext: 'id 3162', type: 'Level 7' },\n  { id: '3163', parentId: '3160', name: 'Level 7', subtext: 'id 3163', type: 'Level 7' },\n  { id: '3164', parentId: '3160', name: 'Level 7', subtext: 'id 3164', type: 'Level 7' },\n  { id: '3165', parentId: '3152', name: 'Level 5', subtext: 'id 3165', type: 'Level 5' },\n  { id: '3166', parentId: '3165', name: 'Level 6', subtext: 'id 3166', type: 'Level 6' },\n  { id: '3167', parentId: '3166', name: 'Level 7', subtext: 'id 3167', type: 'Level 7' },\n  { id: '3168', parentId: '3166', name: 'Level 7', subtext: 'id 3168', type: 'Level 7' },\n  { id: '3169', parentId: '3166', name: 'Level 7', subtext: 'id 3169', type: 'Level 7' },\n  { id: '3170', parentId: '3166', name: 'Level 7', subtext: 'id 3170', type: 'Level 7' },\n  { id: '3171', parentId: '3166', name: 'Level 7', subtext: 'id 3171', type: 'Level 7' },\n  { id: '3172', parentId: '3165', name: 'Level 6', subtext: 'id 3172', type: 'Level 6' },\n  { id: '3173', parentId: '3172', name: 'Level 7', subtext: 'id 3173', type: 'Level 7' },\n  { id: '3174', parentId: '3172', name: 'Level 7', subtext: 'id 3174', type: 'Level 7' },\n  { id: '3175', parentId: '3165', name: 'Level 6', subtext: 'id 3175', type: 'Level 6' },\n  { id: '3176', parentId: '3175', name: 'Level 7', subtext: 'id 3176', type: 'Level 7' },\n  { id: '3177', parentId: '3175', name: 'Level 7', subtext: 'id 3177', type: 'Level 7' },\n  { id: '3178', parentId: '3165', name: 'Level 6', subtext: 'id 3178', type: 'Level 6' },\n  { id: '3179', parentId: '3178', name: 'Level 7', subtext: 'id 3179', type: 'Level 7' },\n  { id: '3180', parentId: '3165', name: 'Level 6', subtext: 'id 3180', type: 'Level 6' },\n  { id: '3181', parentId: '3180', name: 'Level 7', subtext: 'id 3181', type: 'Level 7' },\n  { id: '3182', parentId: '3180', name: 'Level 7', subtext: 'id 3182', type: 'Level 7' },\n  { id: '3183', parentId: '3180', name: 'Level 7', subtext: 'id 3183', type: 'Level 7' },\n  { id: '3184', parentId: '3180', name: 'Level 7', subtext: 'id 3184', type: 'Level 7' },\n  { id: '3185', parentId: '3152', name: 'Level 5', subtext: 'id 3185', type: 'Level 5' },\n  { id: '3186', parentId: '3185', name: 'Level 6', subtext: 'id 3186', type: 'Level 6' },\n  { id: '3187', parentId: '3186', name: 'Level 7', subtext: 'id 3187', type: 'Level 7' },\n  { id: '3188', parentId: '3185', name: 'Level 6', subtext: 'id 3188', type: 'Level 6' },\n  { id: '3189', parentId: '3188', name: 'Level 7', subtext: 'id 3189', type: 'Level 7' },\n  { id: '3190', parentId: '3152', name: 'Level 5', subtext: 'id 3190', type: 'Level 5' },\n  { id: '3191', parentId: '3190', name: 'Level 6', subtext: 'id 3191', type: 'Level 6' },\n  { id: '3192', parentId: '3191', name: 'Level 7', subtext: 'id 3192', type: 'Level 7' },\n  { id: '3193', parentId: '3191', name: 'Level 7', subtext: 'id 3193', type: 'Level 7' },\n  { id: '3194', parentId: '3191', name: 'Level 7', subtext: 'id 3194', type: 'Level 7' },\n  { id: '3195', parentId: '3191', name: 'Level 7', subtext: 'id 3195', type: 'Level 7' },\n  { id: '3196', parentId: '3190', name: 'Level 6', subtext: 'id 3196', type: 'Level 6' },\n  { id: '3197', parentId: '3196', name: 'Level 7', subtext: 'id 3197', type: 'Level 7' },\n  { id: '3198', parentId: '3190', name: 'Level 6', subtext: 'id 3198', type: 'Level 6' },\n  { id: '3199', parentId: '3198', name: 'Level 7', subtext: 'id 3199', type: 'Level 7' },\n  { id: '3200', parentId: '3198', name: 'Level 7', subtext: 'id 3200', type: 'Level 7' },\n  { id: '3201', parentId: '3152', name: 'Level 5', subtext: 'id 3201', type: 'Level 5' },\n  { id: '3202', parentId: '3201', name: 'Level 6', subtext: 'id 3202', type: 'Level 6' },\n  { id: '3203', parentId: '3202', name: 'Level 7', subtext: 'id 3203', type: 'Level 7' },\n  { id: '3204', parentId: '3202', name: 'Level 7', subtext: 'id 3204', type: 'Level 7' },\n  { id: '3205', parentId: '3201', name: 'Level 6', subtext: 'id 3205', type: 'Level 6' },\n  { id: '3206', parentId: '3205', name: 'Level 7', subtext: 'id 3206', type: 'Level 7' },\n  { id: '3207', parentId: '2724', name: 'Level 3', subtext: 'id 3207', type: 'Level 3' },\n  { id: '3208', parentId: '3207', name: 'Level 4', subtext: 'id 3208', type: 'Level 4' },\n  { id: '3209', parentId: '3208', name: 'Level 5', subtext: 'id 3209', type: 'Level 5' },\n  { id: '3210', parentId: '3209', name: 'Level 6', subtext: 'id 3210', type: 'Level 6' },\n  { id: '3211', parentId: '3210', name: 'Level 7', subtext: 'id 3211', type: 'Level 7' },\n  { id: '3212', parentId: '3210', name: 'Level 7', subtext: 'id 3212', type: 'Level 7' },\n  { id: '3213', parentId: '3210', name: 'Level 7', subtext: 'id 3213', type: 'Level 7' },\n  { id: '3214', parentId: '3209', name: 'Level 6', subtext: 'id 3214', type: 'Level 6' },\n  { id: '3215', parentId: '3214', name: 'Level 7', subtext: 'id 3215', type: 'Level 7' },\n  { id: '3216', parentId: '3214', name: 'Level 7', subtext: 'id 3216', type: 'Level 7' },\n  { id: '3217', parentId: '3214', name: 'Level 7', subtext: 'id 3217', type: 'Level 7' },\n  { id: '3218', parentId: '3214', name: 'Level 7', subtext: 'id 3218', type: 'Level 7' },\n  { id: '3219', parentId: '3209', name: 'Level 6', subtext: 'id 3219', type: 'Level 6' },\n  { id: '3220', parentId: '3219', name: 'Level 7', subtext: 'id 3220', type: 'Level 7' },\n  { id: '3221', parentId: '3219', name: 'Level 7', subtext: 'id 3221', type: 'Level 7' },\n  { id: '3222', parentId: '3219', name: 'Level 7', subtext: 'id 3222', type: 'Level 7' },\n  { id: '3223', parentId: '3207', name: 'Level 4', subtext: 'id 3223', type: 'Level 4' },\n  { id: '3224', parentId: '3223', name: 'Level 5', subtext: 'id 3224', type: 'Level 5' },\n  { id: '3225', parentId: '3224', name: 'Level 6', subtext: 'id 3225', type: 'Level 6' },\n  { id: '3226', parentId: '3225', name: 'Level 7', subtext: 'id 3226', type: 'Level 7' },\n  { id: '3227', parentId: '3225', name: 'Level 7', subtext: 'id 3227', type: 'Level 7' },\n  { id: '3228', parentId: '3225', name: 'Level 7', subtext: 'id 3228', type: 'Level 7' },\n  { id: '3229', parentId: '3224', name: 'Level 6', subtext: 'id 3229', type: 'Level 6' },\n  { id: '3230', parentId: '3229', name: 'Level 7', subtext: 'id 3230', type: 'Level 7' },\n  { id: '3231', parentId: '3229', name: 'Level 7', subtext: 'id 3231', type: 'Level 7' },\n  { id: '3232', parentId: '3229', name: 'Level 7', subtext: 'id 3232', type: 'Level 7' },\n  { id: '3233', parentId: '3229', name: 'Level 7', subtext: 'id 3233', type: 'Level 7' },\n  { id: '3234', parentId: '3224', name: 'Level 6', subtext: 'id 3234', type: 'Level 6' },\n  { id: '3235', parentId: '3234', name: 'Level 7', subtext: 'id 3235', type: 'Level 7' },\n  { id: '3236', parentId: '3234', name: 'Level 7', subtext: 'id 3236', type: 'Level 7' },\n  { id: '3237', parentId: '3234', name: 'Level 7', subtext: 'id 3237', type: 'Level 7' },\n  { id: '3238', parentId: '3224', name: 'Level 6', subtext: 'id 3238', type: 'Level 6' },\n  { id: '3239', parentId: '3238', name: 'Level 7', subtext: 'id 3239', type: 'Level 7' },\n  { id: '3240', parentId: '3224', name: 'Level 6', subtext: 'id 3240', type: 'Level 6' },\n  { id: '3241', parentId: '3240', name: 'Level 7', subtext: 'id 3241', type: 'Level 7' },\n  { id: '3242', parentId: '3223', name: 'Level 5', subtext: 'id 3242', type: 'Level 5' },\n  { id: '3243', parentId: '3242', name: 'Level 6', subtext: 'id 3243', type: 'Level 6' },\n  { id: '3244', parentId: '3243', name: 'Level 7', subtext: 'id 3244', type: 'Level 7' },\n  { id: '3245', parentId: '3243', name: 'Level 7', subtext: 'id 3245', type: 'Level 7' },\n  { id: '3246', parentId: '3242', name: 'Level 6', subtext: 'id 3246', type: 'Level 6' },\n  { id: '3247', parentId: '3246', name: 'Level 7', subtext: 'id 3247', type: 'Level 7' },\n  { id: '3248', parentId: '3246', name: 'Level 7', subtext: 'id 3248', type: 'Level 7' },\n  { id: '3249', parentId: '3246', name: 'Level 7', subtext: 'id 3249', type: 'Level 7' },\n  { id: '3250', parentId: '3246', name: 'Level 7', subtext: 'id 3250', type: 'Level 7' },\n  { id: '3251', parentId: '3242', name: 'Level 6', subtext: 'id 3251', type: 'Level 6' },\n  { id: '3252', parentId: '3251', name: 'Level 7', subtext: 'id 3252', type: 'Level 7' },\n  { id: '3253', parentId: '3251', name: 'Level 7', subtext: 'id 3253', type: 'Level 7' },\n  { id: '3254', parentId: '3251', name: 'Level 7', subtext: 'id 3254', type: 'Level 7' },\n  { id: '3255', parentId: '3242', name: 'Level 6', subtext: 'id 3255', type: 'Level 6' },\n  { id: '3256', parentId: '3255', name: 'Level 7', subtext: 'id 3256', type: 'Level 7' },\n  { id: '3257', parentId: '3255', name: 'Level 7', subtext: 'id 3257', type: 'Level 7' },\n  { id: '3258', parentId: '3255', name: 'Level 7', subtext: 'id 3258', type: 'Level 7' },\n  { id: '3259', parentId: '3242', name: 'Level 6', subtext: 'id 3259', type: 'Level 6' },\n  { id: '3260', parentId: '3259', name: 'Level 7', subtext: 'id 3260', type: 'Level 7' },\n  { id: '3261', parentId: '3259', name: 'Level 7', subtext: 'id 3261', type: 'Level 7' },\n  { id: '3262', parentId: '3223', name: 'Level 5', subtext: 'id 3262', type: 'Level 5' },\n  { id: '3263', parentId: '3262', name: 'Level 6', subtext: 'id 3263', type: 'Level 6' },\n  { id: '3264', parentId: '3263', name: 'Level 7', subtext: 'id 3264', type: 'Level 7' },\n  { id: '3265', parentId: '3263', name: 'Level 7', subtext: 'id 3265', type: 'Level 7' },\n  { id: '3266', parentId: '3263', name: 'Level 7', subtext: 'id 3266', type: 'Level 7' },\n  { id: '3267', parentId: '3262', name: 'Level 6', subtext: 'id 3267', type: 'Level 6' },\n  { id: '3268', parentId: '3267', name: 'Level 7', subtext: 'id 3268', type: 'Level 7' },\n  { id: '3269', parentId: '3267', name: 'Level 7', subtext: 'id 3269', type: 'Level 7' },\n  { id: '3270', parentId: '3267', name: 'Level 7', subtext: 'id 3270', type: 'Level 7' },\n  { id: '3271', parentId: '3267', name: 'Level 7', subtext: 'id 3271', type: 'Level 7' },\n  { id: '3272', parentId: '3267', name: 'Level 7', subtext: 'id 3272', type: 'Level 7' },\n  { id: '3273', parentId: '3223', name: 'Level 5', subtext: 'id 3273', type: 'Level 5' },\n  { id: '3274', parentId: '3273', name: 'Level 6', subtext: 'id 3274', type: 'Level 6' },\n  { id: '3275', parentId: '3274', name: 'Level 7', subtext: 'id 3275', type: 'Level 7' },\n  { id: '3276', parentId: '3274', name: 'Level 7', subtext: 'id 3276', type: 'Level 7' },\n  { id: '3277', parentId: '3274', name: 'Level 7', subtext: 'id 3277', type: 'Level 7' },\n  { id: '3278', parentId: '3274', name: 'Level 7', subtext: 'id 3278', type: 'Level 7' },\n  { id: '3279', parentId: '3273', name: 'Level 6', subtext: 'id 3279', type: 'Level 6' },\n  { id: '3280', parentId: '3279', name: 'Level 7', subtext: 'id 3280', type: 'Level 7' },\n  { id: '3281', parentId: '3207', name: 'Level 4', subtext: 'id 3281', type: 'Level 4' },\n  { id: '3282', parentId: '3281', name: 'Level 5', subtext: 'id 3282', type: 'Level 5' },\n  { id: '3283', parentId: '3282', name: 'Level 6', subtext: 'id 3283', type: 'Level 6' },\n  { id: '3284', parentId: '3283', name: 'Level 7', subtext: 'id 3284', type: 'Level 7' },\n  { id: '3285', parentId: '3282', name: 'Level 6', subtext: 'id 3285', type: 'Level 6' },\n  { id: '3286', parentId: '3285', name: 'Level 7', subtext: 'id 3286', type: 'Level 7' },\n  { id: '3287', parentId: '3285', name: 'Level 7', subtext: 'id 3287', type: 'Level 7' },\n  { id: '3288', parentId: '3285', name: 'Level 7', subtext: 'id 3288', type: 'Level 7' },\n  { id: '3289', parentId: '3285', name: 'Level 7', subtext: 'id 3289', type: 'Level 7' },\n  { id: '3290', parentId: '3282', name: 'Level 6', subtext: 'id 3290', type: 'Level 6' },\n  { id: '3291', parentId: '3290', name: 'Level 7', subtext: 'id 3291', type: 'Level 7' },\n  { id: '3292', parentId: '3290', name: 'Level 7', subtext: 'id 3292', type: 'Level 7' },\n  { id: '3293', parentId: '3290', name: 'Level 7', subtext: 'id 3293', type: 'Level 7' },\n  { id: '3294', parentId: '3290', name: 'Level 7', subtext: 'id 3294', type: 'Level 7' },\n  { id: '3295', parentId: '3282', name: 'Level 6', subtext: 'id 3295', type: 'Level 6' },\n  { id: '3296', parentId: '3295', name: 'Level 7', subtext: 'id 3296', type: 'Level 7' },\n  { id: '3297', parentId: '3295', name: 'Level 7', subtext: 'id 3297', type: 'Level 7' },\n  { id: '3298', parentId: '3282', name: 'Level 6', subtext: 'id 3298', type: 'Level 6' },\n  { id: '3299', parentId: '3298', name: 'Level 7', subtext: 'id 3299', type: 'Level 7' },\n  { id: '3300', parentId: '3298', name: 'Level 7', subtext: 'id 3300', type: 'Level 7' },\n  { id: '3301', parentId: '3281', name: 'Level 5', subtext: 'id 3301', type: 'Level 5' },\n  { id: '3302', parentId: '3301', name: 'Level 6', subtext: 'id 3302', type: 'Level 6' },\n  { id: '3303', parentId: '3302', name: 'Level 7', subtext: 'id 3303', type: 'Level 7' },\n  { id: '3304', parentId: '3302', name: 'Level 7', subtext: 'id 3304', type: 'Level 7' },\n  { id: '3305', parentId: '3301', name: 'Level 6', subtext: 'id 3305', type: 'Level 6' },\n  { id: '3306', parentId: '3305', name: 'Level 7', subtext: 'id 3306', type: 'Level 7' },\n  { id: '3307', parentId: '3305', name: 'Level 7', subtext: 'id 3307', type: 'Level 7' },\n  { id: '3308', parentId: '3301', name: 'Level 6', subtext: 'id 3308', type: 'Level 6' },\n  { id: '3309', parentId: '3308', name: 'Level 7', subtext: 'id 3309', type: 'Level 7' },\n  { id: '3310', parentId: '3308', name: 'Level 7', subtext: 'id 3310', type: 'Level 7' },\n  { id: '3311', parentId: '3281', name: 'Level 5', subtext: 'id 3311', type: 'Level 5' },\n  { id: '3312', parentId: '3311', name: 'Level 6', subtext: 'id 3312', type: 'Level 6' },\n  { id: '3313', parentId: '3312', name: 'Level 7', subtext: 'id 3313', type: 'Level 7' },\n  { id: '3314', parentId: '3311', name: 'Level 6', subtext: 'id 3314', type: 'Level 6' },\n  { id: '3315', parentId: '3314', name: 'Level 7', subtext: 'id 3315', type: 'Level 7' },\n  { id: '3316', parentId: '3314', name: 'Level 7', subtext: 'id 3316', type: 'Level 7' },\n  { id: '3317', parentId: '3311', name: 'Level 6', subtext: 'id 3317', type: 'Level 6' },\n  { id: '3318', parentId: '3317', name: 'Level 7', subtext: 'id 3318', type: 'Level 7' },\n  { id: '3319', parentId: '3317', name: 'Level 7', subtext: 'id 3319', type: 'Level 7' },\n  { id: '3320', parentId: '3317', name: 'Level 7', subtext: 'id 3320', type: 'Level 7' },\n  { id: '3321', parentId: '3317', name: 'Level 7', subtext: 'id 3321', type: 'Level 7' },\n  { id: '3322', parentId: '3317', name: 'Level 7', subtext: 'id 3322', type: 'Level 7' },\n  { id: '3323', parentId: '3311', name: 'Level 6', subtext: 'id 3323', type: 'Level 6' },\n  { id: '3324', parentId: '3323', name: 'Level 7', subtext: 'id 3324', type: 'Level 7' },\n  { id: '3325', parentId: '3323', name: 'Level 7', subtext: 'id 3325', type: 'Level 7' },\n  { id: '3326', parentId: '3323', name: 'Level 7', subtext: 'id 3326', type: 'Level 7' },\n  { id: '3327', parentId: '3323', name: 'Level 7', subtext: 'id 3327', type: 'Level 7' },\n  { id: '3328', parentId: '3323', name: 'Level 7', subtext: 'id 3328', type: 'Level 7' },\n  { id: '3329', parentId: '3281', name: 'Level 5', subtext: 'id 3329', type: 'Level 5' },\n  { id: '3330', parentId: '3329', name: 'Level 6', subtext: 'id 3330', type: 'Level 6' },\n  { id: '3331', parentId: '3330', name: 'Level 7', subtext: 'id 3331', type: 'Level 7' },\n  { id: '3332', parentId: '3330', name: 'Level 7', subtext: 'id 3332', type: 'Level 7' },\n  { id: '3333', parentId: '3330', name: 'Level 7', subtext: 'id 3333', type: 'Level 7' },\n  { id: '3334', parentId: '3330', name: 'Level 7', subtext: 'id 3334', type: 'Level 7' },\n  { id: '3335', parentId: '3329', name: 'Level 6', subtext: 'id 3335', type: 'Level 6' },\n  { id: '3336', parentId: '3335', name: 'Level 7', subtext: 'id 3336', type: 'Level 7' },\n  { id: '3337', parentId: '3335', name: 'Level 7', subtext: 'id 3337', type: 'Level 7' },\n  { id: '3338', parentId: '3335', name: 'Level 7', subtext: 'id 3338', type: 'Level 7' },\n  { id: '3339', parentId: '3335', name: 'Level 7', subtext: 'id 3339', type: 'Level 7' },\n  { id: '3340', parentId: '3335', name: 'Level 7', subtext: 'id 3340', type: 'Level 7' },\n  { id: '3341', parentId: '3329', name: 'Level 6', subtext: 'id 3341', type: 'Level 6' },\n  { id: '3342', parentId: '3341', name: 'Level 7', subtext: 'id 3342', type: 'Level 7' },\n  { id: '3343', parentId: '3341', name: 'Level 7', subtext: 'id 3343', type: 'Level 7' },\n  { id: '3344', parentId: '3341', name: 'Level 7', subtext: 'id 3344', type: 'Level 7' },\n  { id: '3345', parentId: '3341', name: 'Level 7', subtext: 'id 3345', type: 'Level 7' },\n  { id: '3346', parentId: '3329', name: 'Level 6', subtext: 'id 3346', type: 'Level 6' },\n  { id: '3347', parentId: '3346', name: 'Level 7', subtext: 'id 3347', type: 'Level 7' },\n  { id: '3348', parentId: '3346', name: 'Level 7', subtext: 'id 3348', type: 'Level 7' },\n  { id: '3349', parentId: '3346', name: 'Level 7', subtext: 'id 3349', type: 'Level 7' },\n  { id: '3350', parentId: '3346', name: 'Level 7', subtext: 'id 3350', type: 'Level 7' },\n  { id: '3351', parentId: '3346', name: 'Level 7', subtext: 'id 3351', type: 'Level 7' },\n  { id: '3352', parentId: '3329', name: 'Level 6', subtext: 'id 3352', type: 'Level 6' },\n  { id: '3353', parentId: '3352', name: 'Level 7', subtext: 'id 3353', type: 'Level 7' },\n  { id: '3354', parentId: '3207', name: 'Level 4', subtext: 'id 3354', type: 'Level 4' },\n  { id: '3355', parentId: '3354', name: 'Level 5', subtext: 'id 3355', type: 'Level 5' },\n  { id: '3356', parentId: '3355', name: 'Level 6', subtext: 'id 3356', type: 'Level 6' },\n  { id: '3357', parentId: '3356', name: 'Level 7', subtext: 'id 3357', type: 'Level 7' },\n  { id: '3358', parentId: '3355', name: 'Level 6', subtext: 'id 3358', type: 'Level 6' },\n  { id: '3359', parentId: '3358', name: 'Level 7', subtext: 'id 3359', type: 'Level 7' },\n  { id: '3360', parentId: '3358', name: 'Level 7', subtext: 'id 3360', type: 'Level 7' },\n  { id: '3361', parentId: '3358', name: 'Level 7', subtext: 'id 3361', type: 'Level 7' },\n  { id: '3362', parentId: '3355', name: 'Level 6', subtext: 'id 3362', type: 'Level 6' },\n  { id: '3363', parentId: '3362', name: 'Level 7', subtext: 'id 3363', type: 'Level 7' },\n  { id: '3364', parentId: '3362', name: 'Level 7', subtext: 'id 3364', type: 'Level 7' },\n  { id: '3365', parentId: '3362', name: 'Level 7', subtext: 'id 3365', type: 'Level 7' },\n  { id: '3366', parentId: '3355', name: 'Level 6', subtext: 'id 3366', type: 'Level 6' },\n  { id: '3367', parentId: '3366', name: 'Level 7', subtext: 'id 3367', type: 'Level 7' },\n  { id: '3368', parentId: '3366', name: 'Level 7', subtext: 'id 3368', type: 'Level 7' },\n  { id: '3369', parentId: '3366', name: 'Level 7', subtext: 'id 3369', type: 'Level 7' },\n  { id: '3370', parentId: '3366', name: 'Level 7', subtext: 'id 3370', type: 'Level 7' },\n  { id: '3371', parentId: '3355', name: 'Level 6', subtext: 'id 3371', type: 'Level 6' },\n  { id: '3372', parentId: '3371', name: 'Level 7', subtext: 'id 3372', type: 'Level 7' },\n  { id: '3373', parentId: '3371', name: 'Level 7', subtext: 'id 3373', type: 'Level 7' },\n  { id: '3374', parentId: '3371', name: 'Level 7', subtext: 'id 3374', type: 'Level 7' },\n  { id: '3375', parentId: '3371', name: 'Level 7', subtext: 'id 3375', type: 'Level 7' },\n  { id: '3376', parentId: '3354', name: 'Level 5', subtext: 'id 3376', type: 'Level 5' },\n  { id: '3377', parentId: '3376', name: 'Level 6', subtext: 'id 3377', type: 'Level 6' },\n  { id: '3378', parentId: '3377', name: 'Level 7', subtext: 'id 3378', type: 'Level 7' },\n  { id: '3379', parentId: '3377', name: 'Level 7', subtext: 'id 3379', type: 'Level 7' },\n  { id: '3380', parentId: '3377', name: 'Level 7', subtext: 'id 3380', type: 'Level 7' },\n  { id: '3381', parentId: '3377', name: 'Level 7', subtext: 'id 3381', type: 'Level 7' },\n  { id: '3382', parentId: '3354', name: 'Level 5', subtext: 'id 3382', type: 'Level 5' },\n  { id: '3383', parentId: '3382', name: 'Level 6', subtext: 'id 3383', type: 'Level 6' },\n  { id: '3384', parentId: '3383', name: 'Level 7', subtext: 'id 3384', type: 'Level 7' },\n  { id: '3385', parentId: '3383', name: 'Level 7', subtext: 'id 3385', type: 'Level 7' },\n  { id: '3386', parentId: '3383', name: 'Level 7', subtext: 'id 3386', type: 'Level 7' },\n  { id: '3387', parentId: '3383', name: 'Level 7', subtext: 'id 3387', type: 'Level 7' },\n  { id: '3388', parentId: '3382', name: 'Level 6', subtext: 'id 3388', type: 'Level 6' },\n  { id: '3389', parentId: '3388', name: 'Level 7', subtext: 'id 3389', type: 'Level 7' },\n  { id: '3390', parentId: '3388', name: 'Level 7', subtext: 'id 3390', type: 'Level 7' },\n  { id: '3391', parentId: '3388', name: 'Level 7', subtext: 'id 3391', type: 'Level 7' },\n  { id: '3392', parentId: '3388', name: 'Level 7', subtext: 'id 3392', type: 'Level 7' },\n  { id: '3393', parentId: '3382', name: 'Level 6', subtext: 'id 3393', type: 'Level 6' },\n  { id: '3394', parentId: '3393', name: 'Level 7', subtext: 'id 3394', type: 'Level 7' },\n  { id: '3395', parentId: '3382', name: 'Level 6', subtext: 'id 3395', type: 'Level 6' },\n  { id: '3396', parentId: '3395', name: 'Level 7', subtext: 'id 3396', type: 'Level 7' },\n  { id: '3397', parentId: '3382', name: 'Level 6', subtext: 'id 3397', type: 'Level 6' },\n  { id: '3398', parentId: '3397', name: 'Level 7', subtext: 'id 3398', type: 'Level 7' },\n  { id: '3399', parentId: '3397', name: 'Level 7', subtext: 'id 3399', type: 'Level 7' },\n  { id: '3400', parentId: '3397', name: 'Level 7', subtext: 'id 3400', type: 'Level 7' },\n  { id: '3401', parentId: '3397', name: 'Level 7', subtext: 'id 3401', type: 'Level 7' },\n  { id: '3402', parentId: '3354', name: 'Level 5', subtext: 'id 3402', type: 'Level 5' },\n  { id: '3403', parentId: '3402', name: 'Level 6', subtext: 'id 3403', type: 'Level 6' },\n  { id: '3404', parentId: '3403', name: 'Level 7', subtext: 'id 3404', type: 'Level 7' },\n  { id: '3405', parentId: '3403', name: 'Level 7', subtext: 'id 3405', type: 'Level 7' },\n  { id: '3406', parentId: '3402', name: 'Level 6', subtext: 'id 3406', type: 'Level 6' },\n  { id: '3407', parentId: '3406', name: 'Level 7', subtext: 'id 3407', type: 'Level 7' },\n  { id: '3408', parentId: '3207', name: 'Level 4', subtext: 'id 3408', type: 'Level 4' },\n  { id: '3409', parentId: '3408', name: 'Level 5', subtext: 'id 3409', type: 'Level 5' },\n  { id: '3410', parentId: '3409', name: 'Level 6', subtext: 'id 3410', type: 'Level 6' },\n  { id: '3411', parentId: '3410', name: 'Level 7', subtext: 'id 3411', type: 'Level 7' },\n  { id: '3412', parentId: '3409', name: 'Level 6', subtext: 'id 3412', type: 'Level 6' },\n  { id: '3413', parentId: '3412', name: 'Level 7', subtext: 'id 3413', type: 'Level 7' },\n  { id: '3414', parentId: '3412', name: 'Level 7', subtext: 'id 3414', type: 'Level 7' },\n  { id: '3415', parentId: '3412', name: 'Level 7', subtext: 'id 3415', type: 'Level 7' },\n  { id: '3416', parentId: '3412', name: 'Level 7', subtext: 'id 3416', type: 'Level 7' },\n  { id: '3417', parentId: '3412', name: 'Level 7', subtext: 'id 3417', type: 'Level 7' },\n  { id: '3418', parentId: '3409', name: 'Level 6', subtext: 'id 3418', type: 'Level 6' },\n  { id: '3419', parentId: '3418', name: 'Level 7', subtext: 'id 3419', type: 'Level 7' },\n  { id: '3420', parentId: '3418', name: 'Level 7', subtext: 'id 3420', type: 'Level 7' },\n  { id: '3421', parentId: '3418', name: 'Level 7', subtext: 'id 3421', type: 'Level 7' },\n  { id: '3422', parentId: '3418', name: 'Level 7', subtext: 'id 3422', type: 'Level 7' },\n  { id: '3423', parentId: '3418', name: 'Level 7', subtext: 'id 3423', type: 'Level 7' },\n  { id: '3424', parentId: '3409', name: 'Level 6', subtext: 'id 3424', type: 'Level 6' },\n  { id: '3425', parentId: '3424', name: 'Level 7', subtext: 'id 3425', type: 'Level 7' },\n  { id: '3426', parentId: '3409', name: 'Level 6', subtext: 'id 3426', type: 'Level 6' },\n  { id: '3427', parentId: '3426', name: 'Level 7', subtext: 'id 3427', type: 'Level 7' },\n  { id: '3428', parentId: '3426', name: 'Level 7', subtext: 'id 3428', type: 'Level 7' },\n  { id: '3429', parentId: '3426', name: 'Level 7', subtext: 'id 3429', type: 'Level 7' },\n  { id: '3430', parentId: '3426', name: 'Level 7', subtext: 'id 3430', type: 'Level 7' },\n  { id: '3431', parentId: '3408', name: 'Level 5', subtext: 'id 3431', type: 'Level 5' },\n  { id: '3432', parentId: '3431', name: 'Level 6', subtext: 'id 3432', type: 'Level 6' },\n  { id: '3433', parentId: '3432', name: 'Level 7', subtext: 'id 3433', type: 'Level 7' },\n  { id: '3434', parentId: '3432', name: 'Level 7', subtext: 'id 3434', type: 'Level 7' },\n  { id: '3435', parentId: '3432', name: 'Level 7', subtext: 'id 3435', type: 'Level 7' },\n  { id: '3436', parentId: '3431', name: 'Level 6', subtext: 'id 3436', type: 'Level 6' },\n  { id: '3437', parentId: '3436', name: 'Level 7', subtext: 'id 3437', type: 'Level 7' },\n  { id: '3438', parentId: '3436', name: 'Level 7', subtext: 'id 3438', type: 'Level 7' },\n  { id: '3439', parentId: '3436', name: 'Level 7', subtext: 'id 3439', type: 'Level 7' },\n  { id: '3440', parentId: '3436', name: 'Level 7', subtext: 'id 3440', type: 'Level 7' },\n  { id: '3441', parentId: '3408', name: 'Level 5', subtext: 'id 3441', type: 'Level 5' },\n  { id: '3442', parentId: '3441', name: 'Level 6', subtext: 'id 3442', type: 'Level 6' },\n  { id: '3443', parentId: '3442', name: 'Level 7', subtext: 'id 3443', type: 'Level 7' },\n  { id: '3444', parentId: '3442', name: 'Level 7', subtext: 'id 3444', type: 'Level 7' },\n  { id: '3445', parentId: '3442', name: 'Level 7', subtext: 'id 3445', type: 'Level 7' },\n  { id: '3446', parentId: '3442', name: 'Level 7', subtext: 'id 3446', type: 'Level 7' },\n  { id: '3447', parentId: '3442', name: 'Level 7', subtext: 'id 3447', type: 'Level 7' },\n  { id: '3448', parentId: '3441', name: 'Level 6', subtext: 'id 3448', type: 'Level 6' },\n  { id: '3449', parentId: '3448', name: 'Level 7', subtext: 'id 3449', type: 'Level 7' },\n  { id: '3450', parentId: '3448', name: 'Level 7', subtext: 'id 3450', type: 'Level 7' },\n  { id: '3451', parentId: '3448', name: 'Level 7', subtext: 'id 3451', type: 'Level 7' },\n  { id: '3452', parentId: '3448', name: 'Level 7', subtext: 'id 3452', type: 'Level 7' },\n  { id: '3453', parentId: '3441', name: 'Level 6', subtext: 'id 3453', type: 'Level 6' },\n  { id: '3454', parentId: '3453', name: 'Level 7', subtext: 'id 3454', type: 'Level 7' },\n  { id: '3455', parentId: '3453', name: 'Level 7', subtext: 'id 3455', type: 'Level 7' },\n  { id: '3456', parentId: '3453', name: 'Level 7', subtext: 'id 3456', type: 'Level 7' },\n  { id: '3457', parentId: '3453', name: 'Level 7', subtext: 'id 3457', type: 'Level 7' },\n  { id: '3458', parentId: '3441', name: 'Level 6', subtext: 'id 3458', type: 'Level 6' },\n  { id: '3459', parentId: '3458', name: 'Level 7', subtext: 'id 3459', type: 'Level 7' },\n  { id: '3460', parentId: '3441', name: 'Level 6', subtext: 'id 3460', type: 'Level 6' },\n  { id: '3461', parentId: '3460', name: 'Level 7', subtext: 'id 3461', type: 'Level 7' },\n  { id: '3462', parentId: '3460', name: 'Level 7', subtext: 'id 3462', type: 'Level 7' },\n  { id: '3463', parentId: '3460', name: 'Level 7', subtext: 'id 3463', type: 'Level 7' },\n  { id: '3464', parentId: '3460', name: 'Level 7', subtext: 'id 3464', type: 'Level 7' },\n  { id: '3465', parentId: '3408', name: 'Level 5', subtext: 'id 3465', type: 'Level 5' },\n  { id: '3466', parentId: '3465', name: 'Level 6', subtext: 'id 3466', type: 'Level 6' },\n  { id: '3467', parentId: '3466', name: 'Level 7', subtext: 'id 3467', type: 'Level 7' },\n  { id: '3468', parentId: '3466', name: 'Level 7', subtext: 'id 3468', type: 'Level 7' },\n  { id: '3469', parentId: '3466', name: 'Level 7', subtext: 'id 3469', type: 'Level 7' },\n  { id: '3470', parentId: '3466', name: 'Level 7', subtext: 'id 3470', type: 'Level 7' },\n  { id: '3471', parentId: '3466', name: 'Level 7', subtext: 'id 3471', type: 'Level 7' },\n  { id: '3472', parentId: '3465', name: 'Level 6', subtext: 'id 3472', type: 'Level 6' },\n  { id: '3473', parentId: '3472', name: 'Level 7', subtext: 'id 3473', type: 'Level 7' },\n  { id: '3474', parentId: '3472', name: 'Level 7', subtext: 'id 3474', type: 'Level 7' },\n  { id: '3475', parentId: '3465', name: 'Level 6', subtext: 'id 3475', type: 'Level 6' },\n  { id: '3476', parentId: '3475', name: 'Level 7', subtext: 'id 3476', type: 'Level 7' },\n  { id: '3477', parentId: '3408', name: 'Level 5', subtext: 'id 3477', type: 'Level 5' },\n  { id: '3478', parentId: '3477', name: 'Level 6', subtext: 'id 3478', type: 'Level 6' },\n  { id: '3479', parentId: '3478', name: 'Level 7', subtext: 'id 3479', type: 'Level 7' },\n  { id: '3480', parentId: '3478', name: 'Level 7', subtext: 'id 3480', type: 'Level 7' },\n  { id: '3481', parentId: '3478', name: 'Level 7', subtext: 'id 3481', type: 'Level 7' },\n  { id: '3482', parentId: '3477', name: 'Level 6', subtext: 'id 3482', type: 'Level 6' },\n  { id: '3483', parentId: '3482', name: 'Level 7', subtext: 'id 3483', type: 'Level 7' },\n  { id: '3484', parentId: '3482', name: 'Level 7', subtext: 'id 3484', type: 'Level 7' },\n  { id: '3485', parentId: '3482', name: 'Level 7', subtext: 'id 3485', type: 'Level 7' },\n  { id: '3486', parentId: '3482', name: 'Level 7', subtext: 'id 3486', type: 'Level 7' },\n  { id: '3487', parentId: '3482', name: 'Level 7', subtext: 'id 3487', type: 'Level 7' },\n  { id: '3488', parentId: '2723', name: 'Level 2', subtext: 'id 3488', type: 'Level 2' },\n  { id: '3489', parentId: '3488', name: 'Level 3', subtext: 'id 3489', type: 'Level 3' },\n  { id: '3490', parentId: '3489', name: 'Level 4', subtext: 'id 3490', type: 'Level 4' },\n  { id: '3491', parentId: '3490', name: 'Level 5', subtext: 'id 3491', type: 'Level 5' },\n  { id: '3492', parentId: '3491', name: 'Level 6', subtext: 'id 3492', type: 'Level 6' },\n  { id: '3493', parentId: '3492', name: 'Level 7', subtext: 'id 3493', type: 'Level 7' },\n  { id: '3494', parentId: '3492', name: 'Level 7', subtext: 'id 3494', type: 'Level 7' },\n  { id: '3495', parentId: '3492', name: 'Level 7', subtext: 'id 3495', type: 'Level 7' },\n  { id: '3496', parentId: '3492', name: 'Level 7', subtext: 'id 3496', type: 'Level 7' },\n  { id: '3497', parentId: '3491', name: 'Level 6', subtext: 'id 3497', type: 'Level 6' },\n  { id: '3498', parentId: '3497', name: 'Level 7', subtext: 'id 3498', type: 'Level 7' },\n  { id: '3499', parentId: '3497', name: 'Level 7', subtext: 'id 3499', type: 'Level 7' },\n  { id: '3500', parentId: '3497', name: 'Level 7', subtext: 'id 3500', type: 'Level 7' },\n  { id: '3501', parentId: '3497', name: 'Level 7', subtext: 'id 3501', type: 'Level 7' },\n  { id: '3502', parentId: '3491', name: 'Level 6', subtext: 'id 3502', type: 'Level 6' },\n  { id: '3503', parentId: '3502', name: 'Level 7', subtext: 'id 3503', type: 'Level 7' },\n  { id: '3504', parentId: '3502', name: 'Level 7', subtext: 'id 3504', type: 'Level 7' },\n  { id: '3505', parentId: '3502', name: 'Level 7', subtext: 'id 3505', type: 'Level 7' },\n  { id: '3506', parentId: '3502', name: 'Level 7', subtext: 'id 3506', type: 'Level 7' },\n  { id: '3507', parentId: '3502', name: 'Level 7', subtext: 'id 3507', type: 'Level 7' },\n  { id: '3508', parentId: '3491', name: 'Level 6', subtext: 'id 3508', type: 'Level 6' },\n  { id: '3509', parentId: '3508', name: 'Level 7', subtext: 'id 3509', type: 'Level 7' },\n  { id: '3510', parentId: '3490', name: 'Level 5', subtext: 'id 3510', type: 'Level 5' },\n  { id: '3511', parentId: '3510', name: 'Level 6', subtext: 'id 3511', type: 'Level 6' },\n  { id: '3512', parentId: '3511', name: 'Level 7', subtext: 'id 3512', type: 'Level 7' },\n  { id: '3513', parentId: '3511', name: 'Level 7', subtext: 'id 3513', type: 'Level 7' },\n  { id: '3514', parentId: '3511', name: 'Level 7', subtext: 'id 3514', type: 'Level 7' },\n  { id: '3515', parentId: '3511', name: 'Level 7', subtext: 'id 3515', type: 'Level 7' },\n  { id: '3516', parentId: '3511', name: 'Level 7', subtext: 'id 3516', type: 'Level 7' },\n  { id: '3517', parentId: '3510', name: 'Level 6', subtext: 'id 3517', type: 'Level 6' },\n  { id: '3518', parentId: '3517', name: 'Level 7', subtext: 'id 3518', type: 'Level 7' },\n  { id: '3519', parentId: '3517', name: 'Level 7', subtext: 'id 3519', type: 'Level 7' },\n  { id: '3520', parentId: '3490', name: 'Level 5', subtext: 'id 3520', type: 'Level 5' },\n  { id: '3521', parentId: '3520', name: 'Level 6', subtext: 'id 3521', type: 'Level 6' },\n  { id: '3522', parentId: '3521', name: 'Level 7', subtext: 'id 3522', type: 'Level 7' },\n  { id: '3523', parentId: '3521', name: 'Level 7', subtext: 'id 3523', type: 'Level 7' },\n  { id: '3524', parentId: '3521', name: 'Level 7', subtext: 'id 3524', type: 'Level 7' },\n  { id: '3525', parentId: '3521', name: 'Level 7', subtext: 'id 3525', type: 'Level 7' },\n  { id: '3526', parentId: '3521', name: 'Level 7', subtext: 'id 3526', type: 'Level 7' },\n  { id: '3527', parentId: '3520', name: 'Level 6', subtext: 'id 3527', type: 'Level 6' },\n  { id: '3528', parentId: '3527', name: 'Level 7', subtext: 'id 3528', type: 'Level 7' },\n  { id: '3529', parentId: '3527', name: 'Level 7', subtext: 'id 3529', type: 'Level 7' },\n  { id: '3530', parentId: '3527', name: 'Level 7', subtext: 'id 3530', type: 'Level 7' },\n  { id: '3531', parentId: '3520', name: 'Level 6', subtext: 'id 3531', type: 'Level 6' },\n  { id: '3532', parentId: '3531', name: 'Level 7', subtext: 'id 3532', type: 'Level 7' },\n  { id: '3533', parentId: '3531', name: 'Level 7', subtext: 'id 3533', type: 'Level 7' },\n  { id: '3534', parentId: '3531', name: 'Level 7', subtext: 'id 3534', type: 'Level 7' },\n  { id: '3535', parentId: '3531', name: 'Level 7', subtext: 'id 3535', type: 'Level 7' },\n  { id: '3536', parentId: '3531', name: 'Level 7', subtext: 'id 3536', type: 'Level 7' },\n  { id: '3537', parentId: '3520', name: 'Level 6', subtext: 'id 3537', type: 'Level 6' },\n  { id: '3538', parentId: '3537', name: 'Level 7', subtext: 'id 3538', type: 'Level 7' },\n  { id: '3539', parentId: '3537', name: 'Level 7', subtext: 'id 3539', type: 'Level 7' },\n  { id: '3540', parentId: '3520', name: 'Level 6', subtext: 'id 3540', type: 'Level 6' },\n  { id: '3541', parentId: '3540', name: 'Level 7', subtext: 'id 3541', type: 'Level 7' },\n  { id: '3542', parentId: '3540', name: 'Level 7', subtext: 'id 3542', type: 'Level 7' },\n  { id: '3543', parentId: '3540', name: 'Level 7', subtext: 'id 3543', type: 'Level 7' },\n  { id: '3544', parentId: '3540', name: 'Level 7', subtext: 'id 3544', type: 'Level 7' },\n  { id: '3545', parentId: '3540', name: 'Level 7', subtext: 'id 3545', type: 'Level 7' },\n  { id: '3546', parentId: '3489', name: 'Level 4', subtext: 'id 3546', type: 'Level 4' },\n  { id: '3547', parentId: '3546', name: 'Level 5', subtext: 'id 3547', type: 'Level 5' },\n  { id: '3548', parentId: '3547', name: 'Level 6', subtext: 'id 3548', type: 'Level 6' },\n  { id: '3549', parentId: '3548', name: 'Level 7', subtext: 'id 3549', type: 'Level 7' },\n  { id: '3550', parentId: '3547', name: 'Level 6', subtext: 'id 3550', type: 'Level 6' },\n  { id: '3551', parentId: '3550', name: 'Level 7', subtext: 'id 3551', type: 'Level 7' },\n  { id: '3552', parentId: '3550', name: 'Level 7', subtext: 'id 3552', type: 'Level 7' },\n  { id: '3553', parentId: '3550', name: 'Level 7', subtext: 'id 3553', type: 'Level 7' },\n  { id: '3554', parentId: '3550', name: 'Level 7', subtext: 'id 3554', type: 'Level 7' },\n  { id: '3555', parentId: '3547', name: 'Level 6', subtext: 'id 3555', type: 'Level 6' },\n  { id: '3556', parentId: '3555', name: 'Level 7', subtext: 'id 3556', type: 'Level 7' },\n  { id: '3557', parentId: '3555', name: 'Level 7', subtext: 'id 3557', type: 'Level 7' },\n  { id: '3558', parentId: '3547', name: 'Level 6', subtext: 'id 3558', type: 'Level 6' },\n  { id: '3559', parentId: '3558', name: 'Level 7', subtext: 'id 3559', type: 'Level 7' },\n  { id: '3560', parentId: '3558', name: 'Level 7', subtext: 'id 3560', type: 'Level 7' },\n  { id: '3561', parentId: '3547', name: 'Level 6', subtext: 'id 3561', type: 'Level 6' },\n  { id: '3562', parentId: '3561', name: 'Level 7', subtext: 'id 3562', type: 'Level 7' },\n  { id: '3563', parentId: '3561', name: 'Level 7', subtext: 'id 3563', type: 'Level 7' },\n  { id: '3564', parentId: '3561', name: 'Level 7', subtext: 'id 3564', type: 'Level 7' },\n  { id: '3565', parentId: '3546', name: 'Level 5', subtext: 'id 3565', type: 'Level 5' },\n  { id: '3566', parentId: '3565', name: 'Level 6', subtext: 'id 3566', type: 'Level 6' },\n  { id: '3567', parentId: '3566', name: 'Level 7', subtext: 'id 3567', type: 'Level 7' },\n  { id: '3568', parentId: '3565', name: 'Level 6', subtext: 'id 3568', type: 'Level 6' },\n  { id: '3569', parentId: '3568', name: 'Level 7', subtext: 'id 3569', type: 'Level 7' },\n  { id: '3570', parentId: '3568', name: 'Level 7', subtext: 'id 3570', type: 'Level 7' },\n  { id: '3571', parentId: '3489', name: 'Level 4', subtext: 'id 3571', type: 'Level 4' },\n  { id: '3572', parentId: '3571', name: 'Level 5', subtext: 'id 3572', type: 'Level 5' },\n  { id: '3573', parentId: '3572', name: 'Level 6', subtext: 'id 3573', type: 'Level 6' },\n  { id: '3574', parentId: '3573', name: 'Level 7', subtext: 'id 3574', type: 'Level 7' },\n  { id: '3575', parentId: '3573', name: 'Level 7', subtext: 'id 3575', type: 'Level 7' },\n  { id: '3576', parentId: '3573', name: 'Level 7', subtext: 'id 3576', type: 'Level 7' },\n  { id: '3577', parentId: '3572', name: 'Level 6', subtext: 'id 3577', type: 'Level 6' },\n  { id: '3578', parentId: '3577', name: 'Level 7', subtext: 'id 3578', type: 'Level 7' },\n  { id: '3579', parentId: '3577', name: 'Level 7', subtext: 'id 3579', type: 'Level 7' },\n  { id: '3580', parentId: '3577', name: 'Level 7', subtext: 'id 3580', type: 'Level 7' },\n  { id: '3581', parentId: '3577', name: 'Level 7', subtext: 'id 3581', type: 'Level 7' },\n  { id: '3582', parentId: '3577', name: 'Level 7', subtext: 'id 3582', type: 'Level 7' },\n  { id: '3583', parentId: '3572', name: 'Level 6', subtext: 'id 3583', type: 'Level 6' },\n  { id: '3584', parentId: '3583', name: 'Level 7', subtext: 'id 3584', type: 'Level 7' },\n  { id: '3585', parentId: '3583', name: 'Level 7', subtext: 'id 3585', type: 'Level 7' },\n  { id: '3586', parentId: '3583', name: 'Level 7', subtext: 'id 3586', type: 'Level 7' },\n  { id: '3587', parentId: '3572', name: 'Level 6', subtext: 'id 3587', type: 'Level 6' },\n  { id: '3588', parentId: '3587', name: 'Level 7', subtext: 'id 3588', type: 'Level 7' },\n  { id: '3589', parentId: '3587', name: 'Level 7', subtext: 'id 3589', type: 'Level 7' },\n  { id: '3590', parentId: '3572', name: 'Level 6', subtext: 'id 3590', type: 'Level 6' },\n  { id: '3591', parentId: '3590', name: 'Level 7', subtext: 'id 3591', type: 'Level 7' },\n  { id: '3592', parentId: '3590', name: 'Level 7', subtext: 'id 3592', type: 'Level 7' },\n  { id: '3593', parentId: '3590', name: 'Level 7', subtext: 'id 3593', type: 'Level 7' },\n  { id: '3594', parentId: '3571', name: 'Level 5', subtext: 'id 3594', type: 'Level 5' },\n  { id: '3595', parentId: '3594', name: 'Level 6', subtext: 'id 3595', type: 'Level 6' },\n  { id: '3596', parentId: '3595', name: 'Level 7', subtext: 'id 3596', type: 'Level 7' },\n  { id: '3597', parentId: '3595', name: 'Level 7', subtext: 'id 3597', type: 'Level 7' },\n  { id: '3598', parentId: '3595', name: 'Level 7', subtext: 'id 3598', type: 'Level 7' },\n  { id: '3599', parentId: '3595', name: 'Level 7', subtext: 'id 3599', type: 'Level 7' },\n  { id: '3600', parentId: '3594', name: 'Level 6', subtext: 'id 3600', type: 'Level 6' },\n  { id: '3601', parentId: '3600', name: 'Level 7', subtext: 'id 3601', type: 'Level 7' },\n  { id: '3602', parentId: '3600', name: 'Level 7', subtext: 'id 3602', type: 'Level 7' },\n  { id: '3603', parentId: '3600', name: 'Level 7', subtext: 'id 3603', type: 'Level 7' },\n  { id: '3604', parentId: '3594', name: 'Level 6', subtext: 'id 3604', type: 'Level 6' },\n  { id: '3605', parentId: '3604', name: 'Level 7', subtext: 'id 3605', type: 'Level 7' },\n  { id: '3606', parentId: '3604', name: 'Level 7', subtext: 'id 3606', type: 'Level 7' },\n  { id: '3607', parentId: '3604', name: 'Level 7', subtext: 'id 3607', type: 'Level 7' },\n  { id: '3608', parentId: '3604', name: 'Level 7', subtext: 'id 3608', type: 'Level 7' },\n  { id: '3609', parentId: '3604', name: 'Level 7', subtext: 'id 3609', type: 'Level 7' },\n  { id: '3610', parentId: '3594', name: 'Level 6', subtext: 'id 3610', type: 'Level 6' },\n  { id: '3611', parentId: '3610', name: 'Level 7', subtext: 'id 3611', type: 'Level 7' },\n  { id: '3612', parentId: '3610', name: 'Level 7', subtext: 'id 3612', type: 'Level 7' },\n  { id: '3613', parentId: '3610', name: 'Level 7', subtext: 'id 3613', type: 'Level 7' },\n  { id: '3614', parentId: '3594', name: 'Level 6', subtext: 'id 3614', type: 'Level 6' },\n  { id: '3615', parentId: '3614', name: 'Level 7', subtext: 'id 3615', type: 'Level 7' },\n  { id: '3616', parentId: '3614', name: 'Level 7', subtext: 'id 3616', type: 'Level 7' },\n  { id: '3617', parentId: '3614', name: 'Level 7', subtext: 'id 3617', type: 'Level 7' },\n  { id: '3618', parentId: '3614', name: 'Level 7', subtext: 'id 3618', type: 'Level 7' },\n  { id: '3619', parentId: '3571', name: 'Level 5', subtext: 'id 3619', type: 'Level 5' },\n  { id: '3620', parentId: '3619', name: 'Level 6', subtext: 'id 3620', type: 'Level 6' },\n  { id: '3621', parentId: '3620', name: 'Level 7', subtext: 'id 3621', type: 'Level 7' },\n  { id: '3622', parentId: '3620', name: 'Level 7', subtext: 'id 3622', type: 'Level 7' },\n  { id: '3623', parentId: '3620', name: 'Level 7', subtext: 'id 3623', type: 'Level 7' },\n  { id: '3624', parentId: '3620', name: 'Level 7', subtext: 'id 3624', type: 'Level 7' },\n  { id: '3625', parentId: '3620', name: 'Level 7', subtext: 'id 3625', type: 'Level 7' },\n  { id: '3626', parentId: '3619', name: 'Level 6', subtext: 'id 3626', type: 'Level 6' },\n  { id: '3627', parentId: '3626', name: 'Level 7', subtext: 'id 3627', type: 'Level 7' },\n  { id: '3628', parentId: '3626', name: 'Level 7', subtext: 'id 3628', type: 'Level 7' },\n  { id: '3629', parentId: '3619', name: 'Level 6', subtext: 'id 3629', type: 'Level 6' },\n  { id: '3630', parentId: '3629', name: 'Level 7', subtext: 'id 3630', type: 'Level 7' },\n  { id: '3631', parentId: '3619', name: 'Level 6', subtext: 'id 3631', type: 'Level 6' },\n  { id: '3632', parentId: '3631', name: 'Level 7', subtext: 'id 3632', type: 'Level 7' },\n  { id: '3633', parentId: '3631', name: 'Level 7', subtext: 'id 3633', type: 'Level 7' },\n  { id: '3634', parentId: '3631', name: 'Level 7', subtext: 'id 3634', type: 'Level 7' },\n  { id: '3635', parentId: '3571', name: 'Level 5', subtext: 'id 3635', type: 'Level 5' },\n  { id: '3636', parentId: '3635', name: 'Level 6', subtext: 'id 3636', type: 'Level 6' },\n  { id: '3637', parentId: '3636', name: 'Level 7', subtext: 'id 3637', type: 'Level 7' },\n  { id: '3638', parentId: '3636', name: 'Level 7', subtext: 'id 3638', type: 'Level 7' },\n  { id: '3639', parentId: '3636', name: 'Level 7', subtext: 'id 3639', type: 'Level 7' },\n  { id: '3640', parentId: '3636', name: 'Level 7', subtext: 'id 3640', type: 'Level 7' },\n  { id: '3641', parentId: '3636', name: 'Level 7', subtext: 'id 3641', type: 'Level 7' },\n  { id: '3642', parentId: '3635', name: 'Level 6', subtext: 'id 3642', type: 'Level 6' },\n  { id: '3643', parentId: '3642', name: 'Level 7', subtext: 'id 3643', type: 'Level 7' },\n  { id: '3644', parentId: '3642', name: 'Level 7', subtext: 'id 3644', type: 'Level 7' },\n  { id: '3645', parentId: '3635', name: 'Level 6', subtext: 'id 3645', type: 'Level 6' },\n  { id: '3646', parentId: '3645', name: 'Level 7', subtext: 'id 3646', type: 'Level 7' },\n  { id: '3647', parentId: '3645', name: 'Level 7', subtext: 'id 3647', type: 'Level 7' },\n  { id: '3648', parentId: '3645', name: 'Level 7', subtext: 'id 3648', type: 'Level 7' },\n  { id: '3649', parentId: '3645', name: 'Level 7', subtext: 'id 3649', type: 'Level 7' },\n  { id: '3650', parentId: '3489', name: 'Level 4', subtext: 'id 3650', type: 'Level 4' },\n  { id: '3651', parentId: '3650', name: 'Level 5', subtext: 'id 3651', type: 'Level 5' },\n  { id: '3652', parentId: '3651', name: 'Level 6', subtext: 'id 3652', type: 'Level 6' },\n  { id: '3653', parentId: '3652', name: 'Level 7', subtext: 'id 3653', type: 'Level 7' },\n  { id: '3654', parentId: '3652', name: 'Level 7', subtext: 'id 3654', type: 'Level 7' },\n  { id: '3655', parentId: '3650', name: 'Level 5', subtext: 'id 3655', type: 'Level 5' },\n  { id: '3656', parentId: '3655', name: 'Level 6', subtext: 'id 3656', type: 'Level 6' },\n  { id: '3657', parentId: '3656', name: 'Level 7', subtext: 'id 3657', type: 'Level 7' },\n  { id: '3658', parentId: '3656', name: 'Level 7', subtext: 'id 3658', type: 'Level 7' },\n  { id: '3659', parentId: '3656', name: 'Level 7', subtext: 'id 3659', type: 'Level 7' },\n  { id: '3660', parentId: '3656', name: 'Level 7', subtext: 'id 3660', type: 'Level 7' },\n  { id: '3661', parentId: '3656', name: 'Level 7', subtext: 'id 3661', type: 'Level 7' },\n  { id: '3662', parentId: '3655', name: 'Level 6', subtext: 'id 3662', type: 'Level 6' },\n  { id: '3663', parentId: '3662', name: 'Level 7', subtext: 'id 3663', type: 'Level 7' },\n  { id: '3664', parentId: '3662', name: 'Level 7', subtext: 'id 3664', type: 'Level 7' },\n  { id: '3665', parentId: '3662', name: 'Level 7', subtext: 'id 3665', type: 'Level 7' },\n  { id: '3666', parentId: '3662', name: 'Level 7', subtext: 'id 3666', type: 'Level 7' },\n  { id: '3667', parentId: '3662', name: 'Level 7', subtext: 'id 3667', type: 'Level 7' },\n  { id: '3668', parentId: '3489', name: 'Level 4', subtext: 'id 3668', type: 'Level 4' },\n  { id: '3669', parentId: '3668', name: 'Level 5', subtext: 'id 3669', type: 'Level 5' },\n  { id: '3670', parentId: '3669', name: 'Level 6', subtext: 'id 3670', type: 'Level 6' },\n  { id: '3671', parentId: '3670', name: 'Level 7', subtext: 'id 3671', type: 'Level 7' },\n  { id: '3672', parentId: '3670', name: 'Level 7', subtext: 'id 3672', type: 'Level 7' },\n  { id: '3673', parentId: '3669', name: 'Level 6', subtext: 'id 3673', type: 'Level 6' },\n  { id: '3674', parentId: '3673', name: 'Level 7', subtext: 'id 3674', type: 'Level 7' },\n  { id: '3675', parentId: '3673', name: 'Level 7', subtext: 'id 3675', type: 'Level 7' },\n  { id: '3676', parentId: '3673', name: 'Level 7', subtext: 'id 3676', type: 'Level 7' },\n  { id: '3677', parentId: '3669', name: 'Level 6', subtext: 'id 3677', type: 'Level 6' },\n  { id: '3678', parentId: '3677', name: 'Level 7', subtext: 'id 3678', type: 'Level 7' },\n  { id: '3679', parentId: '3677', name: 'Level 7', subtext: 'id 3679', type: 'Level 7' },\n  { id: '3680', parentId: '3677', name: 'Level 7', subtext: 'id 3680', type: 'Level 7' },\n  { id: '3681', parentId: '3677', name: 'Level 7', subtext: 'id 3681', type: 'Level 7' },\n  { id: '3682', parentId: '3677', name: 'Level 7', subtext: 'id 3682', type: 'Level 7' },\n  { id: '3683', parentId: '3669', name: 'Level 6', subtext: 'id 3683', type: 'Level 6' },\n  { id: '3684', parentId: '3683', name: 'Level 7', subtext: 'id 3684', type: 'Level 7' },\n  { id: '3685', parentId: '3668', name: 'Level 5', subtext: 'id 3685', type: 'Level 5' },\n  { id: '3686', parentId: '3685', name: 'Level 6', subtext: 'id 3686', type: 'Level 6' },\n  { id: '3687', parentId: '3686', name: 'Level 7', subtext: 'id 3687', type: 'Level 7' },\n  { id: '3688', parentId: '3685', name: 'Level 6', subtext: 'id 3688', type: 'Level 6' },\n  { id: '3689', parentId: '3688', name: 'Level 7', subtext: 'id 3689', type: 'Level 7' },\n  { id: '3690', parentId: '3685', name: 'Level 6', subtext: 'id 3690', type: 'Level 6' },\n  { id: '3691', parentId: '3690', name: 'Level 7', subtext: 'id 3691', type: 'Level 7' },\n  { id: '3692', parentId: '3690', name: 'Level 7', subtext: 'id 3692', type: 'Level 7' },\n  { id: '3693', parentId: '3690', name: 'Level 7', subtext: 'id 3693', type: 'Level 7' },\n  { id: '3694', parentId: '3668', name: 'Level 5', subtext: 'id 3694', type: 'Level 5' },\n  { id: '3695', parentId: '3694', name: 'Level 6', subtext: 'id 3695', type: 'Level 6' },\n  { id: '3696', parentId: '3695', name: 'Level 7', subtext: 'id 3696', type: 'Level 7' },\n  { id: '3697', parentId: '3695', name: 'Level 7', subtext: 'id 3697', type: 'Level 7' },\n  { id: '3698', parentId: '3694', name: 'Level 6', subtext: 'id 3698', type: 'Level 6' },\n  { id: '3699', parentId: '3698', name: 'Level 7', subtext: 'id 3699', type: 'Level 7' },\n  { id: '3700', parentId: '3698', name: 'Level 7', subtext: 'id 3700', type: 'Level 7' },\n  { id: '3701', parentId: '3698', name: 'Level 7', subtext: 'id 3701', type: 'Level 7' },\n  { id: '3702', parentId: '3698', name: 'Level 7', subtext: 'id 3702', type: 'Level 7' },\n  { id: '3703', parentId: '3694', name: 'Level 6', subtext: 'id 3703', type: 'Level 6' },\n  { id: '3704', parentId: '3703', name: 'Level 7', subtext: 'id 3704', type: 'Level 7' },\n  { id: '3705', parentId: '3703', name: 'Level 7', subtext: 'id 3705', type: 'Level 7' },\n  { id: '3706', parentId: '3694', name: 'Level 6', subtext: 'id 3706', type: 'Level 6' },\n  { id: '3707', parentId: '3706', name: 'Level 7', subtext: 'id 3707', type: 'Level 7' },\n  { id: '3708', parentId: '3706', name: 'Level 7', subtext: 'id 3708', type: 'Level 7' },\n  { id: '3709', parentId: '3706', name: 'Level 7', subtext: 'id 3709', type: 'Level 7' },\n  { id: '3710', parentId: '3668', name: 'Level 5', subtext: 'id 3710', type: 'Level 5' },\n  { id: '3711', parentId: '3710', name: 'Level 6', subtext: 'id 3711', type: 'Level 6' },\n  { id: '3712', parentId: '3711', name: 'Level 7', subtext: 'id 3712', type: 'Level 7' },\n  { id: '3713', parentId: '3711', name: 'Level 7', subtext: 'id 3713', type: 'Level 7' },\n  { id: '3714', parentId: '3710', name: 'Level 6', subtext: 'id 3714', type: 'Level 6' },\n  { id: '3715', parentId: '3714', name: 'Level 7', subtext: 'id 3715', type: 'Level 7' },\n  { id: '3716', parentId: '3714', name: 'Level 7', subtext: 'id 3716', type: 'Level 7' },\n  { id: '3717', parentId: '3714', name: 'Level 7', subtext: 'id 3717', type: 'Level 7' },\n  { id: '3718', parentId: '3714', name: 'Level 7', subtext: 'id 3718', type: 'Level 7' },\n  { id: '3719', parentId: '3714', name: 'Level 7', subtext: 'id 3719', type: 'Level 7' },\n  { id: '3720', parentId: '3710', name: 'Level 6', subtext: 'id 3720', type: 'Level 6' },\n  { id: '3721', parentId: '3720', name: 'Level 7', subtext: 'id 3721', type: 'Level 7' },\n  { id: '3722', parentId: '3710', name: 'Level 6', subtext: 'id 3722', type: 'Level 6' },\n  { id: '3723', parentId: '3722', name: 'Level 7', subtext: 'id 3723', type: 'Level 7' },\n  { id: '3724', parentId: '3722', name: 'Level 7', subtext: 'id 3724', type: 'Level 7' },\n  { id: '3725', parentId: '3722', name: 'Level 7', subtext: 'id 3725', type: 'Level 7' },\n  { id: '3726', parentId: '3722', name: 'Level 7', subtext: 'id 3726', type: 'Level 7' },\n  { id: '3727', parentId: '3488', name: 'Level 3', subtext: 'id 3727', type: 'Level 3' },\n  { id: '3728', parentId: '3727', name: 'Level 4', subtext: 'id 3728', type: 'Level 4' },\n  { id: '3729', parentId: '3728', name: 'Level 5', subtext: 'id 3729', type: 'Level 5' },\n  { id: '3730', parentId: '3729', name: 'Level 6', subtext: 'id 3730', type: 'Level 6' },\n  { id: '3731', parentId: '3730', name: 'Level 7', subtext: 'id 3731', type: 'Level 7' },\n  { id: '3732', parentId: '3730', name: 'Level 7', subtext: 'id 3732', type: 'Level 7' },\n  { id: '3733', parentId: '3729', name: 'Level 6', subtext: 'id 3733', type: 'Level 6' },\n  { id: '3734', parentId: '3733', name: 'Level 7', subtext: 'id 3734', type: 'Level 7' },\n  { id: '3735', parentId: '3733', name: 'Level 7', subtext: 'id 3735', type: 'Level 7' },\n  { id: '3736', parentId: '3733', name: 'Level 7', subtext: 'id 3736', type: 'Level 7' },\n  { id: '3737', parentId: '3733', name: 'Level 7', subtext: 'id 3737', type: 'Level 7' },\n  { id: '3738', parentId: '3733', name: 'Level 7', subtext: 'id 3738', type: 'Level 7' },\n  { id: '3739', parentId: '3729', name: 'Level 6', subtext: 'id 3739', type: 'Level 6' },\n  { id: '3740', parentId: '3739', name: 'Level 7', subtext: 'id 3740', type: 'Level 7' },\n  { id: '3741', parentId: '3728', name: 'Level 5', subtext: 'id 3741', type: 'Level 5' },\n  { id: '3742', parentId: '3741', name: 'Level 6', subtext: 'id 3742', type: 'Level 6' },\n  { id: '3743', parentId: '3742', name: 'Level 7', subtext: 'id 3743', type: 'Level 7' },\n  { id: '3744', parentId: '3742', name: 'Level 7', subtext: 'id 3744', type: 'Level 7' },\n  { id: '3745', parentId: '3742', name: 'Level 7', subtext: 'id 3745', type: 'Level 7' },\n  { id: '3746', parentId: '3742', name: 'Level 7', subtext: 'id 3746', type: 'Level 7' },\n  { id: '3747', parentId: '3741', name: 'Level 6', subtext: 'id 3747', type: 'Level 6' },\n  { id: '3748', parentId: '3747', name: 'Level 7', subtext: 'id 3748', type: 'Level 7' },\n  { id: '3749', parentId: '3728', name: 'Level 5', subtext: 'id 3749', type: 'Level 5' },\n  { id: '3750', parentId: '3749', name: 'Level 6', subtext: 'id 3750', type: 'Level 6' },\n  { id: '3751', parentId: '3750', name: 'Level 7', subtext: 'id 3751', type: 'Level 7' },\n  { id: '3752', parentId: '3750', name: 'Level 7', subtext: 'id 3752', type: 'Level 7' },\n  { id: '3753', parentId: '3750', name: 'Level 7', subtext: 'id 3753', type: 'Level 7' },\n  { id: '3754', parentId: '3750', name: 'Level 7', subtext: 'id 3754', type: 'Level 7' },\n  { id: '3755', parentId: '3750', name: 'Level 7', subtext: 'id 3755', type: 'Level 7' },\n  { id: '3756', parentId: '3728', name: 'Level 5', subtext: 'id 3756', type: 'Level 5' },\n  { id: '3757', parentId: '3756', name: 'Level 6', subtext: 'id 3757', type: 'Level 6' },\n  { id: '3758', parentId: '3757', name: 'Level 7', subtext: 'id 3758', type: 'Level 7' },\n  { id: '3759', parentId: '3757', name: 'Level 7', subtext: 'id 3759', type: 'Level 7' },\n  { id: '3760', parentId: '3757', name: 'Level 7', subtext: 'id 3760', type: 'Level 7' },\n  { id: '3761', parentId: '3757', name: 'Level 7', subtext: 'id 3761', type: 'Level 7' },\n  { id: '3762', parentId: '3756', name: 'Level 6', subtext: 'id 3762', type: 'Level 6' },\n  { id: '3763', parentId: '3762', name: 'Level 7', subtext: 'id 3763', type: 'Level 7' },\n  { id: '3764', parentId: '3756', name: 'Level 6', subtext: 'id 3764', type: 'Level 6' },\n  { id: '3765', parentId: '3764', name: 'Level 7', subtext: 'id 3765', type: 'Level 7' },\n  { id: '3766', parentId: '3764', name: 'Level 7', subtext: 'id 3766', type: 'Level 7' },\n  { id: '3767', parentId: '3764', name: 'Level 7', subtext: 'id 3767', type: 'Level 7' },\n  { id: '3768', parentId: '3764', name: 'Level 7', subtext: 'id 3768', type: 'Level 7' },\n  { id: '3769', parentId: '3764', name: 'Level 7', subtext: 'id 3769', type: 'Level 7' },\n  { id: '3770', parentId: '3727', name: 'Level 4', subtext: 'id 3770', type: 'Level 4' },\n  { id: '3771', parentId: '3770', name: 'Level 5', subtext: 'id 3771', type: 'Level 5' },\n  { id: '3772', parentId: '3771', name: 'Level 6', subtext: 'id 3772', type: 'Level 6' },\n  { id: '3773', parentId: '3772', name: 'Level 7', subtext: 'id 3773', type: 'Level 7' },\n  { id: '3774', parentId: '3772', name: 'Level 7', subtext: 'id 3774', type: 'Level 7' },\n  { id: '3775', parentId: '3772', name: 'Level 7', subtext: 'id 3775', type: 'Level 7' },\n  { id: '3776', parentId: '3772', name: 'Level 7', subtext: 'id 3776', type: 'Level 7' },\n  { id: '3777', parentId: '3771', name: 'Level 6', subtext: 'id 3777', type: 'Level 6' },\n  { id: '3778', parentId: '3777', name: 'Level 7', subtext: 'id 3778', type: 'Level 7' },\n  { id: '3779', parentId: '3777', name: 'Level 7', subtext: 'id 3779', type: 'Level 7' },\n  { id: '3780', parentId: '3777', name: 'Level 7', subtext: 'id 3780', type: 'Level 7' },\n  { id: '3781', parentId: '3777', name: 'Level 7', subtext: 'id 3781', type: 'Level 7' },\n  { id: '3782', parentId: '3777', name: 'Level 7', subtext: 'id 3782', type: 'Level 7' },\n  { id: '3783', parentId: '3771', name: 'Level 6', subtext: 'id 3783', type: 'Level 6' },\n  { id: '3784', parentId: '3783', name: 'Level 7', subtext: 'id 3784', type: 'Level 7' },\n  { id: '3785', parentId: '3783', name: 'Level 7', subtext: 'id 3785', type: 'Level 7' },\n  { id: '3786', parentId: '3771', name: 'Level 6', subtext: 'id 3786', type: 'Level 6' },\n  { id: '3787', parentId: '3786', name: 'Level 7', subtext: 'id 3787', type: 'Level 7' },\n  { id: '3788', parentId: '3786', name: 'Level 7', subtext: 'id 3788', type: 'Level 7' },\n  { id: '3789', parentId: '3786', name: 'Level 7', subtext: 'id 3789', type: 'Level 7' },\n  { id: '3790', parentId: '3786', name: 'Level 7', subtext: 'id 3790', type: 'Level 7' },\n  { id: '3791', parentId: '3770', name: 'Level 5', subtext: 'id 3791', type: 'Level 5' },\n  { id: '3792', parentId: '3791', name: 'Level 6', subtext: 'id 3792', type: 'Level 6' },\n  { id: '3793', parentId: '3792', name: 'Level 7', subtext: 'id 3793', type: 'Level 7' },\n  { id: '3794', parentId: '3792', name: 'Level 7', subtext: 'id 3794', type: 'Level 7' },\n  { id: '3795', parentId: '3791', name: 'Level 6', subtext: 'id 3795', type: 'Level 6' },\n  { id: '3796', parentId: '3795', name: 'Level 7', subtext: 'id 3796', type: 'Level 7' },\n  { id: '3797', parentId: '3795', name: 'Level 7', subtext: 'id 3797', type: 'Level 7' },\n  { id: '3798', parentId: '3795', name: 'Level 7', subtext: 'id 3798', type: 'Level 7' },\n  { id: '3799', parentId: '3795', name: 'Level 7', subtext: 'id 3799', type: 'Level 7' },\n  { id: '3800', parentId: '3795', name: 'Level 7', subtext: 'id 3800', type: 'Level 7' },\n  { id: '3801', parentId: '3791', name: 'Level 6', subtext: 'id 3801', type: 'Level 6' },\n  { id: '3802', parentId: '3801', name: 'Level 7', subtext: 'id 3802', type: 'Level 7' },\n  { id: '3803', parentId: '3801', name: 'Level 7', subtext: 'id 3803', type: 'Level 7' },\n  { id: '3804', parentId: '3801', name: 'Level 7', subtext: 'id 3804', type: 'Level 7' },\n  { id: '3805', parentId: '3801', name: 'Level 7', subtext: 'id 3805', type: 'Level 7' },\n  { id: '3806', parentId: '3801', name: 'Level 7', subtext: 'id 3806', type: 'Level 7' },\n  { id: '3807', parentId: '3770', name: 'Level 5', subtext: 'id 3807', type: 'Level 5' },\n  { id: '3808', parentId: '3807', name: 'Level 6', subtext: 'id 3808', type: 'Level 6' },\n  { id: '3809', parentId: '3808', name: 'Level 7', subtext: 'id 3809', type: 'Level 7' },\n  { id: '3810', parentId: '3808', name: 'Level 7', subtext: 'id 3810', type: 'Level 7' },\n  { id: '3811', parentId: '3808', name: 'Level 7', subtext: 'id 3811', type: 'Level 7' },\n  { id: '3812', parentId: '3770', name: 'Level 5', subtext: 'id 3812', type: 'Level 5' },\n  { id: '3813', parentId: '3812', name: 'Level 6', subtext: 'id 3813', type: 'Level 6' },\n  { id: '3814', parentId: '3813', name: 'Level 7', subtext: 'id 3814', type: 'Level 7' },\n  { id: '3815', parentId: '3813', name: 'Level 7', subtext: 'id 3815', type: 'Level 7' },\n  { id: '3816', parentId: '3813', name: 'Level 7', subtext: 'id 3816', type: 'Level 7' },\n  { id: '3817', parentId: '3813', name: 'Level 7', subtext: 'id 3817', type: 'Level 7' },\n  { id: '3818', parentId: '3813', name: 'Level 7', subtext: 'id 3818', type: 'Level 7' },\n  { id: '3819', parentId: '3812', name: 'Level 6', subtext: 'id 3819', type: 'Level 6' },\n  { id: '3820', parentId: '3819', name: 'Level 7', subtext: 'id 3820', type: 'Level 7' },\n  { id: '3821', parentId: '3819', name: 'Level 7', subtext: 'id 3821', type: 'Level 7' },\n  { id: '3822', parentId: '3819', name: 'Level 7', subtext: 'id 3822', type: 'Level 7' },\n  { id: '3823', parentId: '3812', name: 'Level 6', subtext: 'id 3823', type: 'Level 6' },\n  { id: '3824', parentId: '3823', name: 'Level 7', subtext: 'id 3824', type: 'Level 7' },\n  { id: '3825', parentId: '3823', name: 'Level 7', subtext: 'id 3825', type: 'Level 7' },\n  { id: '3826', parentId: '3812', name: 'Level 6', subtext: 'id 3826', type: 'Level 6' },\n  { id: '3827', parentId: '3826', name: 'Level 7', subtext: 'id 3827', type: 'Level 7' },\n  { id: '3828', parentId: '3826', name: 'Level 7', subtext: 'id 3828', type: 'Level 7' },\n  { id: '3829', parentId: '3812', name: 'Level 6', subtext: 'id 3829', type: 'Level 6' },\n  { id: '3830', parentId: '3829', name: 'Level 7', subtext: 'id 3830', type: 'Level 7' },\n  { id: '3831', parentId: '3829', name: 'Level 7', subtext: 'id 3831', type: 'Level 7' },\n  { id: '3832', parentId: '3727', name: 'Level 4', subtext: 'id 3832', type: 'Level 4' },\n  { id: '3833', parentId: '3832', name: 'Level 5', subtext: 'id 3833', type: 'Level 5' },\n  { id: '3834', parentId: '3833', name: 'Level 6', subtext: 'id 3834', type: 'Level 6' },\n  { id: '3835', parentId: '3834', name: 'Level 7', subtext: 'id 3835', type: 'Level 7' },\n  { id: '3836', parentId: '3834', name: 'Level 7', subtext: 'id 3836', type: 'Level 7' },\n  { id: '3837', parentId: '3834', name: 'Level 7', subtext: 'id 3837', type: 'Level 7' },\n  { id: '3838', parentId: '3834', name: 'Level 7', subtext: 'id 3838', type: 'Level 7' },\n  { id: '3839', parentId: '3834', name: 'Level 7', subtext: 'id 3839', type: 'Level 7' },\n  { id: '3840', parentId: '3833', name: 'Level 6', subtext: 'id 3840', type: 'Level 6' },\n  { id: '3841', parentId: '3840', name: 'Level 7', subtext: 'id 3841', type: 'Level 7' },\n  { id: '3842', parentId: '3840', name: 'Level 7', subtext: 'id 3842', type: 'Level 7' },\n  { id: '3843', parentId: '3840', name: 'Level 7', subtext: 'id 3843', type: 'Level 7' },\n  { id: '3844', parentId: '3833', name: 'Level 6', subtext: 'id 3844', type: 'Level 6' },\n  { id: '3845', parentId: '3844', name: 'Level 7', subtext: 'id 3845', type: 'Level 7' },\n  { id: '3846', parentId: '3844', name: 'Level 7', subtext: 'id 3846', type: 'Level 7' },\n  { id: '3847', parentId: '3844', name: 'Level 7', subtext: 'id 3847', type: 'Level 7' },\n  { id: '3848', parentId: '3844', name: 'Level 7', subtext: 'id 3848', type: 'Level 7' },\n  { id: '3849', parentId: '3833', name: 'Level 6', subtext: 'id 3849', type: 'Level 6' },\n  { id: '3850', parentId: '3849', name: 'Level 7', subtext: 'id 3850', type: 'Level 7' },\n  { id: '3851', parentId: '3832', name: 'Level 5', subtext: 'id 3851', type: 'Level 5' },\n  { id: '3852', parentId: '3851', name: 'Level 6', subtext: 'id 3852', type: 'Level 6' },\n  { id: '3853', parentId: '3852', name: 'Level 7', subtext: 'id 3853', type: 'Level 7' },\n  { id: '3854', parentId: '3852', name: 'Level 7', subtext: 'id 3854', type: 'Level 7' },\n  { id: '3855', parentId: '3852', name: 'Level 7', subtext: 'id 3855', type: 'Level 7' },\n  { id: '3856', parentId: '3852', name: 'Level 7', subtext: 'id 3856', type: 'Level 7' },\n  { id: '3857', parentId: '3832', name: 'Level 5', subtext: 'id 3857', type: 'Level 5' },\n  { id: '3858', parentId: '3857', name: 'Level 6', subtext: 'id 3858', type: 'Level 6' },\n  { id: '3859', parentId: '3858', name: 'Level 7', subtext: 'id 3859', type: 'Level 7' },\n  { id: '3860', parentId: '2723', name: 'Level 2', subtext: 'id 3860', type: 'Level 2' },\n  { id: '3861', parentId: '3860', name: 'Level 3', subtext: 'id 3861', type: 'Level 3' },\n  { id: '3862', parentId: '3861', name: 'Level 4', subtext: 'id 3862', type: 'Level 4' },\n  { id: '3863', parentId: '3862', name: 'Level 5', subtext: 'id 3863', type: 'Level 5' },\n  { id: '3864', parentId: '3863', name: 'Level 6', subtext: 'id 3864', type: 'Level 6' },\n  { id: '3865', parentId: '3864', name: 'Level 7', subtext: 'id 3865', type: 'Level 7' },\n  { id: '3866', parentId: '3864', name: 'Level 7', subtext: 'id 3866', type: 'Level 7' },\n  { id: '3867', parentId: '3864', name: 'Level 7', subtext: 'id 3867', type: 'Level 7' },\n  { id: '3868', parentId: '3863', name: 'Level 6', subtext: 'id 3868', type: 'Level 6' },\n  { id: '3869', parentId: '3868', name: 'Level 7', subtext: 'id 3869', type: 'Level 7' },\n  { id: '3870', parentId: '3868', name: 'Level 7', subtext: 'id 3870', type: 'Level 7' },\n  { id: '3871', parentId: '3863', name: 'Level 6', subtext: 'id 3871', type: 'Level 6' },\n  { id: '3872', parentId: '3871', name: 'Level 7', subtext: 'id 3872', type: 'Level 7' },\n  { id: '3873', parentId: '3871', name: 'Level 7', subtext: 'id 3873', type: 'Level 7' },\n  { id: '3874', parentId: '3871', name: 'Level 7', subtext: 'id 3874', type: 'Level 7' },\n  { id: '3875', parentId: '3862', name: 'Level 5', subtext: 'id 3875', type: 'Level 5' },\n  { id: '3876', parentId: '3875', name: 'Level 6', subtext: 'id 3876', type: 'Level 6' },\n  { id: '3877', parentId: '3876', name: 'Level 7', subtext: 'id 3877', type: 'Level 7' },\n  { id: '3878', parentId: '3876', name: 'Level 7', subtext: 'id 3878', type: 'Level 7' },\n  { id: '3879', parentId: '3876', name: 'Level 7', subtext: 'id 3879', type: 'Level 7' },\n  { id: '3880', parentId: '3875', name: 'Level 6', subtext: 'id 3880', type: 'Level 6' },\n  { id: '3881', parentId: '3880', name: 'Level 7', subtext: 'id 3881', type: 'Level 7' },\n  { id: '3882', parentId: '3875', name: 'Level 6', subtext: 'id 3882', type: 'Level 6' },\n  { id: '3883', parentId: '3882', name: 'Level 7', subtext: 'id 3883', type: 'Level 7' },\n  { id: '3884', parentId: '3882', name: 'Level 7', subtext: 'id 3884', type: 'Level 7' },\n  { id: '3885', parentId: '3882', name: 'Level 7', subtext: 'id 3885', type: 'Level 7' },\n  { id: '3886', parentId: '3882', name: 'Level 7', subtext: 'id 3886', type: 'Level 7' },\n  { id: '3887', parentId: '3862', name: 'Level 5', subtext: 'id 3887', type: 'Level 5' },\n  { id: '3888', parentId: '3887', name: 'Level 6', subtext: 'id 3888', type: 'Level 6' },\n  { id: '3889', parentId: '3888', name: 'Level 7', subtext: 'id 3889', type: 'Level 7' },\n  { id: '3890', parentId: '3888', name: 'Level 7', subtext: 'id 3890', type: 'Level 7' },\n  { id: '3891', parentId: '3888', name: 'Level 7', subtext: 'id 3891', type: 'Level 7' },\n  { id: '3892', parentId: '3887', name: 'Level 6', subtext: 'id 3892', type: 'Level 6' },\n  { id: '3893', parentId: '3892', name: 'Level 7', subtext: 'id 3893', type: 'Level 7' },\n  { id: '3894', parentId: '3892', name: 'Level 7', subtext: 'id 3894', type: 'Level 7' },\n  { id: '3895', parentId: '3892', name: 'Level 7', subtext: 'id 3895', type: 'Level 7' },\n  { id: '3896', parentId: '3892', name: 'Level 7', subtext: 'id 3896', type: 'Level 7' },\n  { id: '3897', parentId: '3887', name: 'Level 6', subtext: 'id 3897', type: 'Level 6' },\n  { id: '3898', parentId: '3897', name: 'Level 7', subtext: 'id 3898', type: 'Level 7' },\n  { id: '3899', parentId: '3897', name: 'Level 7', subtext: 'id 3899', type: 'Level 7' },\n  { id: '3900', parentId: '3897', name: 'Level 7', subtext: 'id 3900', type: 'Level 7' },\n  { id: '3901', parentId: '3887', name: 'Level 6', subtext: 'id 3901', type: 'Level 6' },\n  { id: '3902', parentId: '3901', name: 'Level 7', subtext: 'id 3902', type: 'Level 7' },\n  { id: '3903', parentId: '3901', name: 'Level 7', subtext: 'id 3903', type: 'Level 7' },\n  { id: '3904', parentId: '3901', name: 'Level 7', subtext: 'id 3904', type: 'Level 7' },\n  { id: '3905', parentId: '3901', name: 'Level 7', subtext: 'id 3905', type: 'Level 7' },\n  { id: '3906', parentId: '3901', name: 'Level 7', subtext: 'id 3906', type: 'Level 7' },\n  { id: '3907', parentId: '3887', name: 'Level 6', subtext: 'id 3907', type: 'Level 6' },\n  { id: '3908', parentId: '3907', name: 'Level 7', subtext: 'id 3908', type: 'Level 7' },\n  { id: '3909', parentId: '3907', name: 'Level 7', subtext: 'id 3909', type: 'Level 7' },\n  { id: '3910', parentId: '3862', name: 'Level 5', subtext: 'id 3910', type: 'Level 5' },\n  { id: '3911', parentId: '3910', name: 'Level 6', subtext: 'id 3911', type: 'Level 6' },\n  { id: '3912', parentId: '3911', name: 'Level 7', subtext: 'id 3912', type: 'Level 7' },\n  { id: '3913', parentId: '3911', name: 'Level 7', subtext: 'id 3913', type: 'Level 7' },\n  { id: '3914', parentId: '3911', name: 'Level 7', subtext: 'id 3914', type: 'Level 7' },\n  { id: '3915', parentId: '3910', name: 'Level 6', subtext: 'id 3915', type: 'Level 6' },\n  { id: '3916', parentId: '3915', name: 'Level 7', subtext: 'id 3916', type: 'Level 7' },\n  { id: '3917', parentId: '3915', name: 'Level 7', subtext: 'id 3917', type: 'Level 7' },\n  { id: '3918', parentId: '3915', name: 'Level 7', subtext: 'id 3918', type: 'Level 7' },\n  { id: '3919', parentId: '3915', name: 'Level 7', subtext: 'id 3919', type: 'Level 7' },\n  { id: '3920', parentId: '3915', name: 'Level 7', subtext: 'id 3920', type: 'Level 7' },\n  { id: '3921', parentId: '3910', name: 'Level 6', subtext: 'id 3921', type: 'Level 6' },\n  { id: '3922', parentId: '3921', name: 'Level 7', subtext: 'id 3922', type: 'Level 7' },\n  { id: '3923', parentId: '3921', name: 'Level 7', subtext: 'id 3923', type: 'Level 7' },\n  { id: '3924', parentId: '3921', name: 'Level 7', subtext: 'id 3924', type: 'Level 7' },\n  { id: '3925', parentId: '3862', name: 'Level 5', subtext: 'id 3925', type: 'Level 5' },\n  { id: '3926', parentId: '3925', name: 'Level 6', subtext: 'id 3926', type: 'Level 6' },\n  { id: '3927', parentId: '3926', name: 'Level 7', subtext: 'id 3927', type: 'Level 7' },\n  { id: '3928', parentId: '3926', name: 'Level 7', subtext: 'id 3928', type: 'Level 7' },\n  { id: '3929', parentId: '3926', name: 'Level 7', subtext: 'id 3929', type: 'Level 7' },\n  { id: '3930', parentId: '3926', name: 'Level 7', subtext: 'id 3930', type: 'Level 7' },\n  { id: '3931', parentId: '3926', name: 'Level 7', subtext: 'id 3931', type: 'Level 7' },\n  { id: '3932', parentId: '3925', name: 'Level 6', subtext: 'id 3932', type: 'Level 6' },\n  { id: '3933', parentId: '3932', name: 'Level 7', subtext: 'id 3933', type: 'Level 7' },\n  { id: '3934', parentId: '3932', name: 'Level 7', subtext: 'id 3934', type: 'Level 7' },\n  { id: '3935', parentId: '3932', name: 'Level 7', subtext: 'id 3935', type: 'Level 7' },\n  { id: '3936', parentId: '3932', name: 'Level 7', subtext: 'id 3936', type: 'Level 7' },\n  { id: '3937', parentId: '3925', name: 'Level 6', subtext: 'id 3937', type: 'Level 6' },\n  { id: '3938', parentId: '3937', name: 'Level 7', subtext: 'id 3938', type: 'Level 7' },\n  { id: '3939', parentId: '3937', name: 'Level 7', subtext: 'id 3939', type: 'Level 7' },\n  { id: '3940', parentId: '3937', name: 'Level 7', subtext: 'id 3940', type: 'Level 7' },\n  { id: '3941', parentId: '3925', name: 'Level 6', subtext: 'id 3941', type: 'Level 6' },\n  { id: '3942', parentId: '3941', name: 'Level 7', subtext: 'id 3942', type: 'Level 7' },\n  { id: '3943', parentId: '3941', name: 'Level 7', subtext: 'id 3943', type: 'Level 7' },\n  { id: '3944', parentId: '3860', name: 'Level 3', subtext: 'id 3944', type: 'Level 3' },\n  { id: '3945', parentId: '3944', name: 'Level 4', subtext: 'id 3945', type: 'Level 4' },\n  { id: '3946', parentId: '3945', name: 'Level 5', subtext: 'id 3946', type: 'Level 5' },\n  { id: '3947', parentId: '3946', name: 'Level 6', subtext: 'id 3947', type: 'Level 6' },\n  { id: '3948', parentId: '3947', name: 'Level 7', subtext: 'id 3948', type: 'Level 7' },\n  { id: '3949', parentId: '3947', name: 'Level 7', subtext: 'id 3949', type: 'Level 7' },\n  { id: '3950', parentId: '3947', name: 'Level 7', subtext: 'id 3950', type: 'Level 7' },\n  { id: '3951', parentId: '3946', name: 'Level 6', subtext: 'id 3951', type: 'Level 6' },\n  { id: '3952', parentId: '3951', name: 'Level 7', subtext: 'id 3952', type: 'Level 7' },\n  { id: '3953', parentId: '3951', name: 'Level 7', subtext: 'id 3953', type: 'Level 7' },\n  { id: '3954', parentId: '3945', name: 'Level 5', subtext: 'id 3954', type: 'Level 5' },\n  { id: '3955', parentId: '3954', name: 'Level 6', subtext: 'id 3955', type: 'Level 6' },\n  { id: '3956', parentId: '3955', name: 'Level 7', subtext: 'id 3956', type: 'Level 7' },\n  { id: '3957', parentId: '3955', name: 'Level 7', subtext: 'id 3957', type: 'Level 7' },\n  { id: '3958', parentId: '3954', name: 'Level 6', subtext: 'id 3958', type: 'Level 6' },\n  { id: '3959', parentId: '3958', name: 'Level 7', subtext: 'id 3959', type: 'Level 7' },\n  { id: '3960', parentId: '3954', name: 'Level 6', subtext: 'id 3960', type: 'Level 6' },\n  { id: '3961', parentId: '3960', name: 'Level 7', subtext: 'id 3961', type: 'Level 7' },\n  { id: '3962', parentId: '3960', name: 'Level 7', subtext: 'id 3962', type: 'Level 7' },\n  { id: '3963', parentId: '3960', name: 'Level 7', subtext: 'id 3963', type: 'Level 7' },\n  { id: '3964', parentId: '3960', name: 'Level 7', subtext: 'id 3964', type: 'Level 7' },\n  { id: '3965', parentId: '3945', name: 'Level 5', subtext: 'id 3965', type: 'Level 5' },\n  { id: '3966', parentId: '3965', name: 'Level 6', subtext: 'id 3966', type: 'Level 6' },\n  { id: '3967', parentId: '3966', name: 'Level 7', subtext: 'id 3967', type: 'Level 7' },\n  { id: '3968', parentId: '3966', name: 'Level 7', subtext: 'id 3968', type: 'Level 7' },\n  { id: '3969', parentId: '3966', name: 'Level 7', subtext: 'id 3969', type: 'Level 7' },\n  { id: '3970', parentId: '3965', name: 'Level 6', subtext: 'id 3970', type: 'Level 6' },\n  { id: '3971', parentId: '3970', name: 'Level 7', subtext: 'id 3971', type: 'Level 7' },\n  { id: '3972', parentId: '3965', name: 'Level 6', subtext: 'id 3972', type: 'Level 6' },\n  { id: '3973', parentId: '3972', name: 'Level 7', subtext: 'id 3973', type: 'Level 7' },\n  { id: '3974', parentId: '3972', name: 'Level 7', subtext: 'id 3974', type: 'Level 7' },\n  { id: '3975', parentId: '3972', name: 'Level 7', subtext: 'id 3975', type: 'Level 7' },\n  { id: '3976', parentId: '3972', name: 'Level 7', subtext: 'id 3976', type: 'Level 7' },\n  { id: '3977', parentId: '3965', name: 'Level 6', subtext: 'id 3977', type: 'Level 6' },\n  { id: '3978', parentId: '3977', name: 'Level 7', subtext: 'id 3978', type: 'Level 7' },\n  { id: '3979', parentId: '3977', name: 'Level 7', subtext: 'id 3979', type: 'Level 7' },\n  { id: '3980', parentId: '3977', name: 'Level 7', subtext: 'id 3980', type: 'Level 7' },\n  { id: '3981', parentId: '3965', name: 'Level 6', subtext: 'id 3981', type: 'Level 6' },\n  { id: '3982', parentId: '3981', name: 'Level 7', subtext: 'id 3982', type: 'Level 7' },\n  { id: '3983', parentId: '3981', name: 'Level 7', subtext: 'id 3983', type: 'Level 7' },\n  { id: '3984', parentId: '3981', name: 'Level 7', subtext: 'id 3984', type: 'Level 7' },\n  { id: '3985', parentId: '3981', name: 'Level 7', subtext: 'id 3985', type: 'Level 7' },\n  { id: '3986', parentId: '3981', name: 'Level 7', subtext: 'id 3986', type: 'Level 7' },\n  { id: '3987', parentId: '3945', name: 'Level 5', subtext: 'id 3987', type: 'Level 5' },\n  { id: '3988', parentId: '3987', name: 'Level 6', subtext: 'id 3988', type: 'Level 6' },\n  { id: '3989', parentId: '3988', name: 'Level 7', subtext: 'id 3989', type: 'Level 7' },\n  { id: '3990', parentId: '3988', name: 'Level 7', subtext: 'id 3990', type: 'Level 7' },\n  { id: '3991', parentId: '3988', name: 'Level 7', subtext: 'id 3991', type: 'Level 7' },\n  { id: '3992', parentId: '3987', name: 'Level 6', subtext: 'id 3992', type: 'Level 6' },\n  { id: '3993', parentId: '3992', name: 'Level 7', subtext: 'id 3993', type: 'Level 7' },\n  { id: '3994', parentId: '3987', name: 'Level 6', subtext: 'id 3994', type: 'Level 6' },\n  { id: '3995', parentId: '3994', name: 'Level 7', subtext: 'id 3995', type: 'Level 7' },\n  { id: '3996', parentId: '3987', name: 'Level 6', subtext: 'id 3996', type: 'Level 6' },\n  { id: '3997', parentId: '3996', name: 'Level 7', subtext: 'id 3997', type: 'Level 7' },\n  { id: '3998', parentId: '3987', name: 'Level 6', subtext: 'id 3998', type: 'Level 6' },\n  { id: '3999', parentId: '3998', name: 'Level 7', subtext: 'id 3999', type: 'Level 7' },\n  { id: '4000', parentId: '3998', name: 'Level 7', subtext: 'id 4000', type: 'Level 7' },\n  { id: '4001', parentId: '3945', name: 'Level 5', subtext: 'id 4001', type: 'Level 5' },\n  { id: '4002', parentId: '4001', name: 'Level 6', subtext: 'id 4002', type: 'Level 6' },\n  { id: '4003', parentId: '4002', name: 'Level 7', subtext: 'id 4003', type: 'Level 7' },\n  { id: '4004', parentId: '4001', name: 'Level 6', subtext: 'id 4004', type: 'Level 6' },\n  { id: '4005', parentId: '4004', name: 'Level 7', subtext: 'id 4005', type: 'Level 7' },\n  { id: '4006', parentId: '4004', name: 'Level 7', subtext: 'id 4006', type: 'Level 7' },\n  { id: '4007', parentId: '4001', name: 'Level 6', subtext: 'id 4007', type: 'Level 6' },\n  { id: '4008', parentId: '4007', name: 'Level 7', subtext: 'id 4008', type: 'Level 7' },\n  { id: '4009', parentId: '4007', name: 'Level 7', subtext: 'id 4009', type: 'Level 7' },\n  { id: '4010', parentId: '4007', name: 'Level 7', subtext: 'id 4010', type: 'Level 7' },\n  { id: '4011', parentId: '4007', name: 'Level 7', subtext: 'id 4011', type: 'Level 7' },\n  { id: '4012', parentId: '4001', name: 'Level 6', subtext: 'id 4012', type: 'Level 6' },\n  { id: '4013', parentId: '4012', name: 'Level 7', subtext: 'id 4013', type: 'Level 7' },\n  { id: '4014', parentId: '4001', name: 'Level 6', subtext: 'id 4014', type: 'Level 6' },\n  { id: '4015', parentId: '4014', name: 'Level 7', subtext: 'id 4015', type: 'Level 7' },\n  { id: '4016', parentId: '4014', name: 'Level 7', subtext: 'id 4016', type: 'Level 7' },\n  { id: '4017', parentId: '4014', name: 'Level 7', subtext: 'id 4017', type: 'Level 7' },\n  { id: '4018', parentId: '4014', name: 'Level 7', subtext: 'id 4018', type: 'Level 7' },\n  { id: '4019', parentId: '4014', name: 'Level 7', subtext: 'id 4019', type: 'Level 7' },\n  { id: '4020', parentId: '3944', name: 'Level 4', subtext: 'id 4020', type: 'Level 4' },\n  { id: '4021', parentId: '4020', name: 'Level 5', subtext: 'id 4021', type: 'Level 5' },\n  { id: '4022', parentId: '4021', name: 'Level 6', subtext: 'id 4022', type: 'Level 6' },\n  { id: '4023', parentId: '4022', name: 'Level 7', subtext: 'id 4023', type: 'Level 7' },\n  { id: '4024', parentId: '4022', name: 'Level 7', subtext: 'id 4024', type: 'Level 7' },\n  { id: '4025', parentId: '4022', name: 'Level 7', subtext: 'id 4025', type: 'Level 7' },\n  { id: '4026', parentId: '4022', name: 'Level 7', subtext: 'id 4026', type: 'Level 7' },\n  { id: '4027', parentId: '4022', name: 'Level 7', subtext: 'id 4027', type: 'Level 7' },\n  { id: '4028', parentId: '4021', name: 'Level 6', subtext: 'id 4028', type: 'Level 6' },\n  { id: '4029', parentId: '4028', name: 'Level 7', subtext: 'id 4029', type: 'Level 7' },\n  { id: '4030', parentId: '4028', name: 'Level 7', subtext: 'id 4030', type: 'Level 7' },\n  { id: '4031', parentId: '4028', name: 'Level 7', subtext: 'id 4031', type: 'Level 7' },\n  { id: '4032', parentId: '4020', name: 'Level 5', subtext: 'id 4032', type: 'Level 5' },\n  { id: '4033', parentId: '4032', name: 'Level 6', subtext: 'id 4033', type: 'Level 6' },\n  { id: '4034', parentId: '4033', name: 'Level 7', subtext: 'id 4034', type: 'Level 7' },\n  { id: '4035', parentId: '4033', name: 'Level 7', subtext: 'id 4035', type: 'Level 7' },\n  { id: '4036', parentId: '4033', name: 'Level 7', subtext: 'id 4036', type: 'Level 7' },\n  { id: '4037', parentId: '4033', name: 'Level 7', subtext: 'id 4037', type: 'Level 7' },\n  { id: '4038', parentId: '4032', name: 'Level 6', subtext: 'id 4038', type: 'Level 6' },\n  { id: '4039', parentId: '4038', name: 'Level 7', subtext: 'id 4039', type: 'Level 7' },\n  { id: '4040', parentId: '4032', name: 'Level 6', subtext: 'id 4040', type: 'Level 6' },\n  { id: '4041', parentId: '4040', name: 'Level 7', subtext: 'id 4041', type: 'Level 7' },\n  { id: '4042', parentId: '4040', name: 'Level 7', subtext: 'id 4042', type: 'Level 7' },\n  { id: '4043', parentId: '4040', name: 'Level 7', subtext: 'id 4043', type: 'Level 7' },\n  { id: '4044', parentId: '4020', name: 'Level 5', subtext: 'id 4044', type: 'Level 5' },\n  { id: '4045', parentId: '4044', name: 'Level 6', subtext: 'id 4045', type: 'Level 6' },\n  { id: '4046', parentId: '4045', name: 'Level 7', subtext: 'id 4046', type: 'Level 7' },\n  { id: '4047', parentId: '4045', name: 'Level 7', subtext: 'id 4047', type: 'Level 7' },\n  { id: '4048', parentId: '4045', name: 'Level 7', subtext: 'id 4048', type: 'Level 7' },\n  { id: '4049', parentId: '4044', name: 'Level 6', subtext: 'id 4049', type: 'Level 6' },\n  { id: '4050', parentId: '4049', name: 'Level 7', subtext: 'id 4050', type: 'Level 7' },\n  { id: '4051', parentId: '4049', name: 'Level 7', subtext: 'id 4051', type: 'Level 7' },\n  { id: '4052', parentId: '4049', name: 'Level 7', subtext: 'id 4052', type: 'Level 7' },\n  { id: '4053', parentId: '4049', name: 'Level 7', subtext: 'id 4053', type: 'Level 7' },\n  { id: '4054', parentId: '4044', name: 'Level 6', subtext: 'id 4054', type: 'Level 6' },\n  { id: '4055', parentId: '4054', name: 'Level 7', subtext: 'id 4055', type: 'Level 7' },\n  { id: '4056', parentId: '4054', name: 'Level 7', subtext: 'id 4056', type: 'Level 7' },\n  { id: '4057', parentId: '4054', name: 'Level 7', subtext: 'id 4057', type: 'Level 7' },\n  { id: '4058', parentId: '4054', name: 'Level 7', subtext: 'id 4058', type: 'Level 7' },\n  { id: '4059', parentId: '4044', name: 'Level 6', subtext: 'id 4059', type: 'Level 6' },\n  { id: '4060', parentId: '4059', name: 'Level 7', subtext: 'id 4060', type: 'Level 7' },\n  { id: '4061', parentId: '4059', name: 'Level 7', subtext: 'id 4061', type: 'Level 7' },\n  { id: '4062', parentId: '4059', name: 'Level 7', subtext: 'id 4062', type: 'Level 7' },\n  { id: '4063', parentId: '4059', name: 'Level 7', subtext: 'id 4063', type: 'Level 7' },\n  { id: '4064', parentId: '4020', name: 'Level 5', subtext: 'id 4064', type: 'Level 5' },\n  { id: '4065', parentId: '4064', name: 'Level 6', subtext: 'id 4065', type: 'Level 6' },\n  { id: '4066', parentId: '4065', name: 'Level 7', subtext: 'id 4066', type: 'Level 7' },\n  { id: '4067', parentId: '4065', name: 'Level 7', subtext: 'id 4067', type: 'Level 7' },\n  { id: '4068', parentId: '4065', name: 'Level 7', subtext: 'id 4068', type: 'Level 7' },\n  { id: '4069', parentId: '4065', name: 'Level 7', subtext: 'id 4069', type: 'Level 7' },\n  { id: '4070', parentId: '4065', name: 'Level 7', subtext: 'id 4070', type: 'Level 7' },\n  { id: '4071', parentId: '4020', name: 'Level 5', subtext: 'id 4071', type: 'Level 5' },\n  { id: '4072', parentId: '4071', name: 'Level 6', subtext: 'id 4072', type: 'Level 6' },\n  { id: '4073', parentId: '4072', name: 'Level 7', subtext: 'id 4073', type: 'Level 7' },\n  { id: '4074', parentId: '4072', name: 'Level 7', subtext: 'id 4074', type: 'Level 7' },\n  { id: '4075', parentId: '4072', name: 'Level 7', subtext: 'id 4075', type: 'Level 7' },\n  { id: '4076', parentId: '3944', name: 'Level 4', subtext: 'id 4076', type: 'Level 4' },\n  { id: '4077', parentId: '4076', name: 'Level 5', subtext: 'id 4077', type: 'Level 5' },\n  { id: '4078', parentId: '4077', name: 'Level 6', subtext: 'id 4078', type: 'Level 6' },\n  { id: '4079', parentId: '4078', name: 'Level 7', subtext: 'id 4079', type: 'Level 7' },\n  { id: '4080', parentId: '4078', name: 'Level 7', subtext: 'id 4080', type: 'Level 7' },\n  { id: '4081', parentId: '4077', name: 'Level 6', subtext: 'id 4081', type: 'Level 6' },\n  { id: '4082', parentId: '4081', name: 'Level 7', subtext: 'id 4082', type: 'Level 7' },\n  { id: '4083', parentId: '4081', name: 'Level 7', subtext: 'id 4083', type: 'Level 7' },\n  { id: '4084', parentId: '4081', name: 'Level 7', subtext: 'id 4084', type: 'Level 7' },\n  { id: '4085', parentId: '4081', name: 'Level 7', subtext: 'id 4085', type: 'Level 7' },\n  { id: '4086', parentId: '4081', name: 'Level 7', subtext: 'id 4086', type: 'Level 7' },\n  { id: '4087', parentId: '4076', name: 'Level 5', subtext: 'id 4087', type: 'Level 5' },\n  { id: '4088', parentId: '4087', name: 'Level 6', subtext: 'id 4088', type: 'Level 6' },\n  { id: '4089', parentId: '4088', name: 'Level 7', subtext: 'id 4089', type: 'Level 7' },\n  { id: '4090', parentId: '4087', name: 'Level 6', subtext: 'id 4090', type: 'Level 6' },\n  { id: '4091', parentId: '4090', name: 'Level 7', subtext: 'id 4091', type: 'Level 7' },\n  { id: '4092', parentId: '4090', name: 'Level 7', subtext: 'id 4092', type: 'Level 7' },\n  { id: '4093', parentId: '4090', name: 'Level 7', subtext: 'id 4093', type: 'Level 7' },\n  { id: '4094', parentId: '4090', name: 'Level 7', subtext: 'id 4094', type: 'Level 7' },\n  { id: '4095', parentId: '4087', name: 'Level 6', subtext: 'id 4095', type: 'Level 6' },\n  { id: '4096', parentId: '4095', name: 'Level 7', subtext: 'id 4096', type: 'Level 7' },\n  { id: '4097', parentId: '4087', name: 'Level 6', subtext: 'id 4097', type: 'Level 6' },\n  { id: '4098', parentId: '4097', name: 'Level 7', subtext: 'id 4098', type: 'Level 7' },\n  { id: '4099', parentId: '4097', name: 'Level 7', subtext: 'id 4099', type: 'Level 7' },\n  { id: '4100', parentId: '4087', name: 'Level 6', subtext: 'id 4100', type: 'Level 6' },\n  { id: '4101', parentId: '4100', name: 'Level 7', subtext: 'id 4101', type: 'Level 7' },\n  { id: '4102', parentId: '4076', name: 'Level 5', subtext: 'id 4102', type: 'Level 5' },\n  { id: '4103', parentId: '4102', name: 'Level 6', subtext: 'id 4103', type: 'Level 6' },\n  { id: '4104', parentId: '4103', name: 'Level 7', subtext: 'id 4104', type: 'Level 7' },\n  { id: '4105', parentId: '4103', name: 'Level 7', subtext: 'id 4105', type: 'Level 7' },\n  { id: '4106', parentId: '4103', name: 'Level 7', subtext: 'id 4106', type: 'Level 7' },\n  { id: '4107', parentId: '4102', name: 'Level 6', subtext: 'id 4107', type: 'Level 6' },\n  { id: '4108', parentId: '4107', name: 'Level 7', subtext: 'id 4108', type: 'Level 7' },\n  { id: '4109', parentId: '4107', name: 'Level 7', subtext: 'id 4109', type: 'Level 7' },\n  { id: '4110', parentId: '4076', name: 'Level 5', subtext: 'id 4110', type: 'Level 5' },\n  { id: '4111', parentId: '4110', name: 'Level 6', subtext: 'id 4111', type: 'Level 6' },\n  { id: '4112', parentId: '4111', name: 'Level 7', subtext: 'id 4112', type: 'Level 7' },\n  { id: '4113', parentId: '4111', name: 'Level 7', subtext: 'id 4113', type: 'Level 7' },\n  { id: '4114', parentId: '4111', name: 'Level 7', subtext: 'id 4114', type: 'Level 7' },\n  { id: '4115', parentId: '4110', name: 'Level 6', subtext: 'id 4115', type: 'Level 6' },\n  { id: '4116', parentId: '4115', name: 'Level 7', subtext: 'id 4116', type: 'Level 7' },\n  { id: '4117', parentId: '4115', name: 'Level 7', subtext: 'id 4117', type: 'Level 7' },\n  { id: '4118', parentId: '4110', name: 'Level 6', subtext: 'id 4118', type: 'Level 6' },\n  { id: '4119', parentId: '4118', name: 'Level 7', subtext: 'id 4119', type: 'Level 7' },\n  { id: '4120', parentId: '4110', name: 'Level 6', subtext: 'id 4120', type: 'Level 6' },\n  { id: '4121', parentId: '4120', name: 'Level 7', subtext: 'id 4121', type: 'Level 7' },\n  { id: '4122', parentId: '4120', name: 'Level 7', subtext: 'id 4122', type: 'Level 7' },\n  { id: '4123', parentId: '4120', name: 'Level 7', subtext: 'id 4123', type: 'Level 7' },\n  { id: '4124', parentId: '4120', name: 'Level 7', subtext: 'id 4124', type: 'Level 7' },\n  { id: '4125', parentId: '4120', name: 'Level 7', subtext: 'id 4125', type: 'Level 7' },\n  { id: '4126', parentId: '4110', name: 'Level 6', subtext: 'id 4126', type: 'Level 6' },\n  { id: '4127', parentId: '4126', name: 'Level 7', subtext: 'id 4127', type: 'Level 7' },\n  { id: '4128', parentId: '4126', name: 'Level 7', subtext: 'id 4128', type: 'Level 7' },\n  { id: '4129', parentId: '3860', name: 'Level 3', subtext: 'id 4129', type: 'Level 3' },\n  { id: '4130', parentId: '4129', name: 'Level 4', subtext: 'id 4130', type: 'Level 4' },\n  { id: '4131', parentId: '4130', name: 'Level 5', subtext: 'id 4131', type: 'Level 5' },\n  { id: '4132', parentId: '4131', name: 'Level 6', subtext: 'id 4132', type: 'Level 6' },\n  { id: '4133', parentId: '4132', name: 'Level 7', subtext: 'id 4133', type: 'Level 7' },\n  { id: '4134', parentId: '4132', name: 'Level 7', subtext: 'id 4134', type: 'Level 7' },\n  { id: '4135', parentId: '4132', name: 'Level 7', subtext: 'id 4135', type: 'Level 7' },\n  { id: '4136', parentId: '4132', name: 'Level 7', subtext: 'id 4136', type: 'Level 7' },\n  { id: '4137', parentId: '4132', name: 'Level 7', subtext: 'id 4137', type: 'Level 7' },\n  { id: '4138', parentId: '4130', name: 'Level 5', subtext: 'id 4138', type: 'Level 5' },\n  { id: '4139', parentId: '4138', name: 'Level 6', subtext: 'id 4139', type: 'Level 6' },\n  { id: '4140', parentId: '4139', name: 'Level 7', subtext: 'id 4140', type: 'Level 7' },\n  { id: '4141', parentId: '4139', name: 'Level 7', subtext: 'id 4141', type: 'Level 7' },\n  { id: '4142', parentId: '4138', name: 'Level 6', subtext: 'id 4142', type: 'Level 6' },\n  { id: '4143', parentId: '4142', name: 'Level 7', subtext: 'id 4143', type: 'Level 7' },\n  { id: '4144', parentId: '4142', name: 'Level 7', subtext: 'id 4144', type: 'Level 7' },\n  { id: '4145', parentId: '4142', name: 'Level 7', subtext: 'id 4145', type: 'Level 7' },\n  { id: '4146', parentId: '4142', name: 'Level 7', subtext: 'id 4146', type: 'Level 7' },\n  { id: '4147', parentId: '4142', name: 'Level 7', subtext: 'id 4147', type: 'Level 7' },\n  { id: '4148', parentId: '4138', name: 'Level 6', subtext: 'id 4148', type: 'Level 6' },\n  { id: '4149', parentId: '4148', name: 'Level 7', subtext: 'id 4149', type: 'Level 7' },\n  { id: '4150', parentId: '4148', name: 'Level 7', subtext: 'id 4150', type: 'Level 7' },\n  { id: '4151', parentId: '4148', name: 'Level 7', subtext: 'id 4151', type: 'Level 7' },\n  { id: '4152', parentId: '4130', name: 'Level 5', subtext: 'id 4152', type: 'Level 5' },\n  { id: '4153', parentId: '4152', name: 'Level 6', subtext: 'id 4153', type: 'Level 6' },\n  { id: '4154', parentId: '4153', name: 'Level 7', subtext: 'id 4154', type: 'Level 7' },\n  { id: '4155', parentId: '4153', name: 'Level 7', subtext: 'id 4155', type: 'Level 7' },\n  { id: '4156', parentId: '4153', name: 'Level 7', subtext: 'id 4156', type: 'Level 7' },\n  { id: '4157', parentId: '4153', name: 'Level 7', subtext: 'id 4157', type: 'Level 7' },\n  { id: '4158', parentId: '4152', name: 'Level 6', subtext: 'id 4158', type: 'Level 6' },\n  { id: '4159', parentId: '4158', name: 'Level 7', subtext: 'id 4159', type: 'Level 7' },\n  { id: '4160', parentId: '4129', name: 'Level 4', subtext: 'id 4160', type: 'Level 4' },\n  { id: '4161', parentId: '4160', name: 'Level 5', subtext: 'id 4161', type: 'Level 5' },\n  { id: '4162', parentId: '4161', name: 'Level 6', subtext: 'id 4162', type: 'Level 6' },\n  { id: '4163', parentId: '4162', name: 'Level 7', subtext: 'id 4163', type: 'Level 7' },\n  { id: '4164', parentId: '4162', name: 'Level 7', subtext: 'id 4164', type: 'Level 7' },\n  { id: '4165', parentId: '4161', name: 'Level 6', subtext: 'id 4165', type: 'Level 6' },\n  { id: '4166', parentId: '4165', name: 'Level 7', subtext: 'id 4166', type: 'Level 7' },\n  { id: '4167', parentId: '4165', name: 'Level 7', subtext: 'id 4167', type: 'Level 7' },\n  { id: '4168', parentId: '4165', name: 'Level 7', subtext: 'id 4168', type: 'Level 7' },\n  { id: '4169', parentId: '4160', name: 'Level 5', subtext: 'id 4169', type: 'Level 5' },\n  { id: '4170', parentId: '4169', name: 'Level 6', subtext: 'id 4170', type: 'Level 6' },\n  { id: '4171', parentId: '4170', name: 'Level 7', subtext: 'id 4171', type: 'Level 7' },\n  { id: '4172', parentId: '4170', name: 'Level 7', subtext: 'id 4172', type: 'Level 7' },\n  { id: '4173', parentId: '4169', name: 'Level 6', subtext: 'id 4173', type: 'Level 6' },\n  { id: '4174', parentId: '4173', name: 'Level 7', subtext: 'id 4174', type: 'Level 7' },\n  { id: '4175', parentId: '4173', name: 'Level 7', subtext: 'id 4175', type: 'Level 7' },\n  { id: '4176', parentId: '4173', name: 'Level 7', subtext: 'id 4176', type: 'Level 7' },\n  { id: '4177', parentId: '4169', name: 'Level 6', subtext: 'id 4177', type: 'Level 6' },\n  { id: '4178', parentId: '4177', name: 'Level 7', subtext: 'id 4178', type: 'Level 7' },\n  { id: '4179', parentId: '4177', name: 'Level 7', subtext: 'id 4179', type: 'Level 7' },\n  { id: '4180', parentId: '4177', name: 'Level 7', subtext: 'id 4180', type: 'Level 7' },\n  { id: '4181', parentId: '4177', name: 'Level 7', subtext: 'id 4181', type: 'Level 7' },\n  { id: '4182', parentId: '4177', name: 'Level 7', subtext: 'id 4182', type: 'Level 7' },\n  { id: '4183', parentId: '4169', name: 'Level 6', subtext: 'id 4183', type: 'Level 6' },\n  { id: '4184', parentId: '4183', name: 'Level 7', subtext: 'id 4184', type: 'Level 7' },\n  { id: '4185', parentId: '4183', name: 'Level 7', subtext: 'id 4185', type: 'Level 7' },\n  { id: '4186', parentId: '4183', name: 'Level 7', subtext: 'id 4186', type: 'Level 7' },\n  { id: '4187', parentId: '4183', name: 'Level 7', subtext: 'id 4187', type: 'Level 7' },\n  { id: '4188', parentId: '4183', name: 'Level 7', subtext: 'id 4188', type: 'Level 7' },\n  { id: '4189', parentId: '4169', name: 'Level 6', subtext: 'id 4189', type: 'Level 6' },\n  { id: '4190', parentId: '4189', name: 'Level 7', subtext: 'id 4190', type: 'Level 7' },\n  { id: '4191', parentId: '4189', name: 'Level 7', subtext: 'id 4191', type: 'Level 7' },\n  { id: '4192', parentId: '4189', name: 'Level 7', subtext: 'id 4192', type: 'Level 7' },\n  { id: '4193', parentId: '4160', name: 'Level 5', subtext: 'id 4193', type: 'Level 5' },\n  { id: '4194', parentId: '4193', name: 'Level 6', subtext: 'id 4194', type: 'Level 6' },\n  { id: '4195', parentId: '4194', name: 'Level 7', subtext: 'id 4195', type: 'Level 7' },\n  { id: '4196', parentId: '4194', name: 'Level 7', subtext: 'id 4196', type: 'Level 7' },\n  { id: '4197', parentId: '4194', name: 'Level 7', subtext: 'id 4197', type: 'Level 7' },\n  { id: '4198', parentId: '4194', name: 'Level 7', subtext: 'id 4198', type: 'Level 7' },\n  { id: '4199', parentId: '4194', name: 'Level 7', subtext: 'id 4199', type: 'Level 7' },\n  { id: '4200', parentId: '4129', name: 'Level 4', subtext: 'id 4200', type: 'Level 4' },\n  { id: '4201', parentId: '4200', name: 'Level 5', subtext: 'id 4201', type: 'Level 5' },\n  { id: '4202', parentId: '4201', name: 'Level 6', subtext: 'id 4202', type: 'Level 6' },\n  { id: '4203', parentId: '4202', name: 'Level 7', subtext: 'id 4203', type: 'Level 7' },\n  { id: '4204', parentId: '4202', name: 'Level 7', subtext: 'id 4204', type: 'Level 7' },\n  { id: '4205', parentId: '4201', name: 'Level 6', subtext: 'id 4205', type: 'Level 6' },\n  { id: '4206', parentId: '4205', name: 'Level 7', subtext: 'id 4206', type: 'Level 7' },\n  { id: '4207', parentId: '4205', name: 'Level 7', subtext: 'id 4207', type: 'Level 7' },\n  { id: '4208', parentId: '4205', name: 'Level 7', subtext: 'id 4208', type: 'Level 7' },\n  { id: '4209', parentId: '4205', name: 'Level 7', subtext: 'id 4209', type: 'Level 7' },\n  { id: '4210', parentId: '4205', name: 'Level 7', subtext: 'id 4210', type: 'Level 7' },\n  { id: '4211', parentId: '4201', name: 'Level 6', subtext: 'id 4211', type: 'Level 6' },\n  { id: '4212', parentId: '4211', name: 'Level 7', subtext: 'id 4212', type: 'Level 7' },\n  { id: '4213', parentId: '4211', name: 'Level 7', subtext: 'id 4213', type: 'Level 7' },\n  { id: '4214', parentId: '4211', name: 'Level 7', subtext: 'id 4214', type: 'Level 7' },\n  { id: '4215', parentId: '4201', name: 'Level 6', subtext: 'id 4215', type: 'Level 6' },\n  { id: '4216', parentId: '4215', name: 'Level 7', subtext: 'id 4216', type: 'Level 7' },\n  { id: '4217', parentId: '4215', name: 'Level 7', subtext: 'id 4217', type: 'Level 7' },\n  { id: '4218', parentId: '4215', name: 'Level 7', subtext: 'id 4218', type: 'Level 7' },\n  { id: '4219', parentId: '4201', name: 'Level 6', subtext: 'id 4219', type: 'Level 6' },\n  { id: '4220', parentId: '4219', name: 'Level 7', subtext: 'id 4220', type: 'Level 7' },\n  { id: '4221', parentId: '4219', name: 'Level 7', subtext: 'id 4221', type: 'Level 7' },\n  { id: '4222', parentId: '4219', name: 'Level 7', subtext: 'id 4222', type: 'Level 7' },\n  { id: '4223', parentId: '4219', name: 'Level 7', subtext: 'id 4223', type: 'Level 7' },\n  { id: '4224', parentId: '4200', name: 'Level 5', subtext: 'id 4224', type: 'Level 5' },\n  { id: '4225', parentId: '4224', name: 'Level 6', subtext: 'id 4225', type: 'Level 6' },\n  { id: '4226', parentId: '4225', name: 'Level 7', subtext: 'id 4226', type: 'Level 7' },\n  { id: '4227', parentId: '4225', name: 'Level 7', subtext: 'id 4227', type: 'Level 7' },\n  { id: '4228', parentId: '4225', name: 'Level 7', subtext: 'id 4228', type: 'Level 7' },\n  { id: '4229', parentId: '4225', name: 'Level 7', subtext: 'id 4229', type: 'Level 7' },\n  { id: '4230', parentId: '4225', name: 'Level 7', subtext: 'id 4230', type: 'Level 7' },\n  { id: '4231', parentId: '4200', name: 'Level 5', subtext: 'id 4231', type: 'Level 5' },\n  { id: '4232', parentId: '4231', name: 'Level 6', subtext: 'id 4232', type: 'Level 6' },\n  { id: '4233', parentId: '4232', name: 'Level 7', subtext: 'id 4233', type: 'Level 7' },\n  { id: '4234', parentId: '4232', name: 'Level 7', subtext: 'id 4234', type: 'Level 7' },\n  { id: '4235', parentId: '4231', name: 'Level 6', subtext: 'id 4235', type: 'Level 6' },\n  { id: '4236', parentId: '4235', name: 'Level 7', subtext: 'id 4236', type: 'Level 7' },\n  { id: '4237', parentId: '4235', name: 'Level 7', subtext: 'id 4237', type: 'Level 7' },\n  { id: '4238', parentId: '4231', name: 'Level 6', subtext: 'id 4238', type: 'Level 6' },\n  { id: '4239', parentId: '4238', name: 'Level 7', subtext: 'id 4239', type: 'Level 7' },\n  { id: '4240', parentId: '4238', name: 'Level 7', subtext: 'id 4240', type: 'Level 7' },\n  { id: '4241', parentId: '4238', name: 'Level 7', subtext: 'id 4241', type: 'Level 7' },\n  { id: '4242', parentId: '4238', name: 'Level 7', subtext: 'id 4242', type: 'Level 7' },\n  { id: '4243', parentId: '4238', name: 'Level 7', subtext: 'id 4243', type: 'Level 7' },\n  { id: '4244', parentId: '4231', name: 'Level 6', subtext: 'id 4244', type: 'Level 6' },\n  { id: '4245', parentId: '4244', name: 'Level 7', subtext: 'id 4245', type: 'Level 7' },\n  { id: '4246', parentId: '4244', name: 'Level 7', subtext: 'id 4246', type: 'Level 7' },\n  { id: '4247', parentId: '4244', name: 'Level 7', subtext: 'id 4247', type: 'Level 7' },\n  { id: '4248', parentId: '4244', name: 'Level 7', subtext: 'id 4248', type: 'Level 7' },\n  { id: '4249', parentId: '4200', name: 'Level 5', subtext: 'id 4249', type: 'Level 5' },\n  { id: '4250', parentId: '4249', name: 'Level 6', subtext: 'id 4250', type: 'Level 6' },\n  { id: '4251', parentId: '4250', name: 'Level 7', subtext: 'id 4251', type: 'Level 7' },\n  { id: '4252', parentId: '4250', name: 'Level 7', subtext: 'id 4252', type: 'Level 7' },\n  { id: '4253', parentId: '4250', name: 'Level 7', subtext: 'id 4253', type: 'Level 7' },\n  { id: '4254', parentId: '4250', name: 'Level 7', subtext: 'id 4254', type: 'Level 7' },\n  { id: '4255', parentId: '4250', name: 'Level 7', subtext: 'id 4255', type: 'Level 7' },\n  { id: '4256', parentId: '4249', name: 'Level 6', subtext: 'id 4256', type: 'Level 6' },\n  { id: '4257', parentId: '4256', name: 'Level 7', subtext: 'id 4257', type: 'Level 7' },\n  { id: '4258', parentId: '4256', name: 'Level 7', subtext: 'id 4258', type: 'Level 7' },\n  { id: '4259', parentId: '4256', name: 'Level 7', subtext: 'id 4259', type: 'Level 7' },\n  { id: '4260', parentId: '4256', name: 'Level 7', subtext: 'id 4260', type: 'Level 7' },\n  { id: '4261', parentId: '4256', name: 'Level 7', subtext: 'id 4261', type: 'Level 7' },\n  { id: '4262', parentId: '4249', name: 'Level 6', subtext: 'id 4262', type: 'Level 6' },\n  { id: '4263', parentId: '4262', name: 'Level 7', subtext: 'id 4263', type: 'Level 7' },\n  { id: '4264', parentId: '4262', name: 'Level 7', subtext: 'id 4264', type: 'Level 7' },\n  { id: '4265', parentId: '4262', name: 'Level 7', subtext: 'id 4265', type: 'Level 7' },\n  { id: '4266', parentId: '4262', name: 'Level 7', subtext: 'id 4266', type: 'Level 7' },\n  { id: '4267', parentId: '4249', name: 'Level 6', subtext: 'id 4267', type: 'Level 6' },\n  { id: '4268', parentId: '4267', name: 'Level 7', subtext: 'id 4268', type: 'Level 7' },\n  { id: '4269', parentId: '4267', name: 'Level 7', subtext: 'id 4269', type: 'Level 7' },\n  { id: '4270', parentId: '4267', name: 'Level 7', subtext: 'id 4270', type: 'Level 7' },\n  { id: '4271', parentId: '4249', name: 'Level 6', subtext: 'id 4271', type: 'Level 6' },\n  { id: '4272', parentId: '4271', name: 'Level 7', subtext: 'id 4272', type: 'Level 7' },\n  { id: '4273', parentId: '4271', name: 'Level 7', subtext: 'id 4273', type: 'Level 7' },\n  { id: '4274', parentId: '4271', name: 'Level 7', subtext: 'id 4274', type: 'Level 7' },\n  { id: '4275', parentId: '4271', name: 'Level 7', subtext: 'id 4275', type: 'Level 7' },\n  { id: '4276', parentId: '4271', name: 'Level 7', subtext: 'id 4276', type: 'Level 7' },\n  { id: '4277', parentId: '3860', name: 'Level 3', subtext: 'id 4277', type: 'Level 3' },\n  { id: '4278', parentId: '4277', name: 'Level 4', subtext: 'id 4278', type: 'Level 4' },\n  { id: '4279', parentId: '4278', name: 'Level 5', subtext: 'id 4279', type: 'Level 5' },\n  { id: '4280', parentId: '4279', name: 'Level 6', subtext: 'id 4280', type: 'Level 6' },\n  { id: '4281', parentId: '4280', name: 'Level 7', subtext: 'id 4281', type: 'Level 7' },\n  { id: '4282', parentId: '4280', name: 'Level 7', subtext: 'id 4282', type: 'Level 7' },\n  { id: '4283', parentId: '4280', name: 'Level 7', subtext: 'id 4283', type: 'Level 7' },\n  { id: '4284', parentId: '4279', name: 'Level 6', subtext: 'id 4284', type: 'Level 6' },\n  { id: '4285', parentId: '4284', name: 'Level 7', subtext: 'id 4285', type: 'Level 7' },\n  { id: '4286', parentId: '4284', name: 'Level 7', subtext: 'id 4286', type: 'Level 7' },\n  { id: '4287', parentId: '4284', name: 'Level 7', subtext: 'id 4287', type: 'Level 7' },\n  { id: '4288', parentId: '4284', name: 'Level 7', subtext: 'id 4288', type: 'Level 7' },\n  { id: '4289', parentId: '4279', name: 'Level 6', subtext: 'id 4289', type: 'Level 6' },\n  { id: '4290', parentId: '4289', name: 'Level 7', subtext: 'id 4290', type: 'Level 7' },\n  { id: '4291', parentId: '4279', name: 'Level 6', subtext: 'id 4291', type: 'Level 6' },\n  { id: '4292', parentId: '4291', name: 'Level 7', subtext: 'id 4292', type: 'Level 7' },\n  { id: '4293', parentId: '4291', name: 'Level 7', subtext: 'id 4293', type: 'Level 7' },\n  { id: '4294', parentId: '4291', name: 'Level 7', subtext: 'id 4294', type: 'Level 7' },\n  { id: '4295', parentId: '4279', name: 'Level 6', subtext: 'id 4295', type: 'Level 6' },\n  { id: '4296', parentId: '4295', name: 'Level 7', subtext: 'id 4296', type: 'Level 7' },\n  { id: '4297', parentId: '4295', name: 'Level 7', subtext: 'id 4297', type: 'Level 7' },\n  { id: '4298', parentId: '4278', name: 'Level 5', subtext: 'id 4298', type: 'Level 5' },\n  { id: '4299', parentId: '4298', name: 'Level 6', subtext: 'id 4299', type: 'Level 6' },\n  { id: '4300', parentId: '4299', name: 'Level 7', subtext: 'id 4300', type: 'Level 7' },\n  { id: '4301', parentId: '4299', name: 'Level 7', subtext: 'id 4301', type: 'Level 7' },\n  { id: '4302', parentId: '4299', name: 'Level 7', subtext: 'id 4302', type: 'Level 7' },\n  { id: '4303', parentId: '4299', name: 'Level 7', subtext: 'id 4303', type: 'Level 7' },\n  { id: '4304', parentId: '4298', name: 'Level 6', subtext: 'id 4304', type: 'Level 6' },\n  { id: '4305', parentId: '4304', name: 'Level 7', subtext: 'id 4305', type: 'Level 7' },\n  { id: '4306', parentId: '4304', name: 'Level 7', subtext: 'id 4306', type: 'Level 7' },\n  { id: '4307', parentId: '4304', name: 'Level 7', subtext: 'id 4307', type: 'Level 7' },\n  { id: '4308', parentId: '4304', name: 'Level 7', subtext: 'id 4308', type: 'Level 7' },\n  { id: '4309', parentId: '4304', name: 'Level 7', subtext: 'id 4309', type: 'Level 7' },\n  { id: '4310', parentId: '4298', name: 'Level 6', subtext: 'id 4310', type: 'Level 6' },\n  { id: '4311', parentId: '4310', name: 'Level 7', subtext: 'id 4311', type: 'Level 7' },\n  { id: '4312', parentId: '4310', name: 'Level 7', subtext: 'id 4312', type: 'Level 7' },\n  { id: '4313', parentId: '4310', name: 'Level 7', subtext: 'id 4313', type: 'Level 7' },\n  { id: '4314', parentId: '4298', name: 'Level 6', subtext: 'id 4314', type: 'Level 6' },\n  { id: '4315', parentId: '4314', name: 'Level 7', subtext: 'id 4315', type: 'Level 7' },\n  { id: '4316', parentId: '4314', name: 'Level 7', subtext: 'id 4316', type: 'Level 7' },\n  { id: '4317', parentId: '4298', name: 'Level 6', subtext: 'id 4317', type: 'Level 6' },\n  { id: '4318', parentId: '4317', name: 'Level 7', subtext: 'id 4318', type: 'Level 7' },\n  { id: '4319', parentId: '4317', name: 'Level 7', subtext: 'id 4319', type: 'Level 7' },\n  { id: '4320', parentId: '4317', name: 'Level 7', subtext: 'id 4320', type: 'Level 7' },\n  { id: '4321', parentId: '4277', name: 'Level 4', subtext: 'id 4321', type: 'Level 4' },\n  { id: '4322', parentId: '4321', name: 'Level 5', subtext: 'id 4322', type: 'Level 5' },\n  { id: '4323', parentId: '4322', name: 'Level 6', subtext: 'id 4323', type: 'Level 6' },\n  { id: '4324', parentId: '4323', name: 'Level 7', subtext: 'id 4324', type: 'Level 7' },\n  { id: '4325', parentId: '4323', name: 'Level 7', subtext: 'id 4325', type: 'Level 7' },\n  { id: '4326', parentId: '4322', name: 'Level 6', subtext: 'id 4326', type: 'Level 6' },\n  { id: '4327', parentId: '4326', name: 'Level 7', subtext: 'id 4327', type: 'Level 7' },\n  { id: '4328', parentId: '4326', name: 'Level 7', subtext: 'id 4328', type: 'Level 7' },\n  { id: '4329', parentId: '4326', name: 'Level 7', subtext: 'id 4329', type: 'Level 7' },\n  { id: '4330', parentId: '4326', name: 'Level 7', subtext: 'id 4330', type: 'Level 7' },\n  { id: '4331', parentId: '4326', name: 'Level 7', subtext: 'id 4331', type: 'Level 7' },\n  { id: '4332', parentId: '4322', name: 'Level 6', subtext: 'id 4332', type: 'Level 6' },\n  { id: '4333', parentId: '4332', name: 'Level 7', subtext: 'id 4333', type: 'Level 7' },\n  { id: '4334', parentId: '4332', name: 'Level 7', subtext: 'id 4334', type: 'Level 7' },\n  { id: '4335', parentId: '4332', name: 'Level 7', subtext: 'id 4335', type: 'Level 7' },\n  { id: '4336', parentId: '4322', name: 'Level 6', subtext: 'id 4336', type: 'Level 6' },\n  { id: '4337', parentId: '4336', name: 'Level 7', subtext: 'id 4337', type: 'Level 7' },\n  { id: '4338', parentId: '4336', name: 'Level 7', subtext: 'id 4338', type: 'Level 7' },\n  { id: '4339', parentId: '4321', name: 'Level 5', subtext: 'id 4339', type: 'Level 5' },\n  { id: '4340', parentId: '4339', name: 'Level 6', subtext: 'id 4340', type: 'Level 6' },\n  { id: '4341', parentId: '4340', name: 'Level 7', subtext: 'id 4341', type: 'Level 7' },\n  { id: '4342', parentId: '4340', name: 'Level 7', subtext: 'id 4342', type: 'Level 7' },\n  { id: '4343', parentId: '4339', name: 'Level 6', subtext: 'id 4343', type: 'Level 6' },\n  { id: '4344', parentId: '4343', name: 'Level 7', subtext: 'id 4344', type: 'Level 7' },\n  { id: '4345', parentId: '4343', name: 'Level 7', subtext: 'id 4345', type: 'Level 7' },\n  { id: '4346', parentId: '4343', name: 'Level 7', subtext: 'id 4346', type: 'Level 7' },\n  { id: '4347', parentId: '4343', name: 'Level 7', subtext: 'id 4347', type: 'Level 7' },\n  { id: '4348', parentId: '4343', name: 'Level 7', subtext: 'id 4348', type: 'Level 7' },\n  { id: '4349', parentId: '4321', name: 'Level 5', subtext: 'id 4349', type: 'Level 5' },\n  { id: '4350', parentId: '4349', name: 'Level 6', subtext: 'id 4350', type: 'Level 6' },\n  { id: '4351', parentId: '4350', name: 'Level 7', subtext: 'id 4351', type: 'Level 7' },\n  { id: '4352', parentId: '4350', name: 'Level 7', subtext: 'id 4352', type: 'Level 7' },\n  { id: '4353', parentId: '4350', name: 'Level 7', subtext: 'id 4353', type: 'Level 7' },\n  { id: '4354', parentId: '4350', name: 'Level 7', subtext: 'id 4354', type: 'Level 7' },\n  { id: '4355', parentId: '4349', name: 'Level 6', subtext: 'id 4355', type: 'Level 6' },\n  { id: '4356', parentId: '4355', name: 'Level 7', subtext: 'id 4356', type: 'Level 7' },\n  { id: '4357', parentId: '3860', name: 'Level 3', subtext: 'id 4357', type: 'Level 3' },\n  { id: '4358', parentId: '4357', name: 'Level 4', subtext: 'id 4358', type: 'Level 4' },\n  { id: '4359', parentId: '4358', name: 'Level 5', subtext: 'id 4359', type: 'Level 5' },\n  { id: '4360', parentId: '4359', name: 'Level 6', subtext: 'id 4360', type: 'Level 6' },\n  { id: '4361', parentId: '4360', name: 'Level 7', subtext: 'id 4361', type: 'Level 7' },\n  { id: '4362', parentId: '4359', name: 'Level 6', subtext: 'id 4362', type: 'Level 6' },\n  { id: '4363', parentId: '4362', name: 'Level 7', subtext: 'id 4363', type: 'Level 7' },\n  { id: '4364', parentId: '4359', name: 'Level 6', subtext: 'id 4364', type: 'Level 6' },\n  { id: '4365', parentId: '4364', name: 'Level 7', subtext: 'id 4365', type: 'Level 7' },\n  { id: '4366', parentId: '4364', name: 'Level 7', subtext: 'id 4366', type: 'Level 7' },\n  { id: '4367', parentId: '4364', name: 'Level 7', subtext: 'id 4367', type: 'Level 7' },\n  { id: '4368', parentId: '4364', name: 'Level 7', subtext: 'id 4368', type: 'Level 7' },\n  { id: '4369', parentId: '4359', name: 'Level 6', subtext: 'id 4369', type: 'Level 6' },\n  { id: '4370', parentId: '4369', name: 'Level 7', subtext: 'id 4370', type: 'Level 7' },\n  { id: '4371', parentId: '4369', name: 'Level 7', subtext: 'id 4371', type: 'Level 7' },\n  { id: '4372', parentId: '4369', name: 'Level 7', subtext: 'id 4372', type: 'Level 7' },\n  { id: '4373', parentId: '4369', name: 'Level 7', subtext: 'id 4373', type: 'Level 7' },\n  { id: '4374', parentId: '4359', name: 'Level 6', subtext: 'id 4374', type: 'Level 6' },\n  { id: '4375', parentId: '4374', name: 'Level 7', subtext: 'id 4375', type: 'Level 7' },\n  { id: '4376', parentId: '4374', name: 'Level 7', subtext: 'id 4376', type: 'Level 7' },\n  { id: '4377', parentId: '4357', name: 'Level 4', subtext: 'id 4377', type: 'Level 4' },\n  { id: '4378', parentId: '4377', name: 'Level 5', subtext: 'id 4378', type: 'Level 5' },\n  { id: '4379', parentId: '4378', name: 'Level 6', subtext: 'id 4379', type: 'Level 6' },\n  { id: '4380', parentId: '4379', name: 'Level 7', subtext: 'id 4380', type: 'Level 7' },\n  { id: '4381', parentId: '4379', name: 'Level 7', subtext: 'id 4381', type: 'Level 7' },\n  { id: '4382', parentId: '4377', name: 'Level 5', subtext: 'id 4382', type: 'Level 5' },\n  { id: '4383', parentId: '4382', name: 'Level 6', subtext: 'id 4383', type: 'Level 6' },\n  { id: '4384', parentId: '4383', name: 'Level 7', subtext: 'id 4384', type: 'Level 7' },\n  { id: '4385', parentId: '4383', name: 'Level 7', subtext: 'id 4385', type: 'Level 7' },\n  { id: '4386', parentId: '4383', name: 'Level 7', subtext: 'id 4386', type: 'Level 7' },\n  { id: '4387', parentId: '4383', name: 'Level 7', subtext: 'id 4387', type: 'Level 7' },\n  { id: '4388', parentId: '4383', name: 'Level 7', subtext: 'id 4388', type: 'Level 7' },\n  { id: '4389', parentId: '4382', name: 'Level 6', subtext: 'id 4389', type: 'Level 6' },\n  { id: '4390', parentId: '4389', name: 'Level 7', subtext: 'id 4390', type: 'Level 7' },\n  { id: '4391', parentId: '4389', name: 'Level 7', subtext: 'id 4391', type: 'Level 7' },\n  { id: '4392', parentId: '4389', name: 'Level 7', subtext: 'id 4392', type: 'Level 7' },\n  { id: '4393', parentId: '4389', name: 'Level 7', subtext: 'id 4393', type: 'Level 7' },\n  { id: '4394', parentId: '4389', name: 'Level 7', subtext: 'id 4394', type: 'Level 7' },\n  { id: '4395', parentId: '4377', name: 'Level 5', subtext: 'id 4395', type: 'Level 5' },\n  { id: '4396', parentId: '4395', name: 'Level 6', subtext: 'id 4396', type: 'Level 6' },\n  { id: '4397', parentId: '4396', name: 'Level 7', subtext: 'id 4397', type: 'Level 7' },\n  { id: '4398', parentId: '4396', name: 'Level 7', subtext: 'id 4398', type: 'Level 7' },\n  { id: '4399', parentId: '4396', name: 'Level 7', subtext: 'id 4399', type: 'Level 7' },\n  { id: '4400', parentId: '4396', name: 'Level 7', subtext: 'id 4400', type: 'Level 7' },\n  { id: '4401', parentId: '4395', name: 'Level 6', subtext: 'id 4401', type: 'Level 6' },\n  { id: '4402', parentId: '4401', name: 'Level 7', subtext: 'id 4402', type: 'Level 7' },\n  { id: '4403', parentId: '4401', name: 'Level 7', subtext: 'id 4403', type: 'Level 7' },\n  { id: '4404', parentId: '4401', name: 'Level 7', subtext: 'id 4404', type: 'Level 7' },\n  { id: '4405', parentId: '4395', name: 'Level 6', subtext: 'id 4405', type: 'Level 6' },\n  { id: '4406', parentId: '4405', name: 'Level 7', subtext: 'id 4406', type: 'Level 7' },\n  { id: '4407', parentId: '4405', name: 'Level 7', subtext: 'id 4407', type: 'Level 7' },\n  { id: '4408', parentId: '4405', name: 'Level 7', subtext: 'id 4408', type: 'Level 7' },\n  { id: '4409', parentId: '4395', name: 'Level 6', subtext: 'id 4409', type: 'Level 6' },\n  { id: '4410', parentId: '4409', name: 'Level 7', subtext: 'id 4410', type: 'Level 7' },\n  { id: '4411', parentId: '4377', name: 'Level 5', subtext: 'id 4411', type: 'Level 5' },\n  { id: '4412', parentId: '4411', name: 'Level 6', subtext: 'id 4412', type: 'Level 6' },\n  { id: '4413', parentId: '4412', name: 'Level 7', subtext: 'id 4413', type: 'Level 7' },\n  { id: '4414', parentId: '4412', name: 'Level 7', subtext: 'id 4414', type: 'Level 7' },\n  { id: '4415', parentId: '4412', name: 'Level 7', subtext: 'id 4415', type: 'Level 7' },\n  { id: '4416', parentId: '4412', name: 'Level 7', subtext: 'id 4416', type: 'Level 7' },\n  { id: '4417', parentId: '4412', name: 'Level 7', subtext: 'id 4417', type: 'Level 7' },\n  { id: '4418', parentId: '4411', name: 'Level 6', subtext: 'id 4418', type: 'Level 6' },\n  { id: '4419', parentId: '4418', name: 'Level 7', subtext: 'id 4419', type: 'Level 7' },\n  { id: '4420', parentId: '4411', name: 'Level 6', subtext: 'id 4420', type: 'Level 6' },\n  { id: '4421', parentId: '4420', name: 'Level 7', subtext: 'id 4421', type: 'Level 7' },\n  { id: '4422', parentId: '4411', name: 'Level 6', subtext: 'id 4422', type: 'Level 6' },\n  { id: '4423', parentId: '4422', name: 'Level 7', subtext: 'id 4423', type: 'Level 7' },\n  { id: '4424', parentId: '4411', name: 'Level 6', subtext: 'id 4424', type: 'Level 6' },\n  { id: '4425', parentId: '4424', name: 'Level 7', subtext: 'id 4425', type: 'Level 7' },\n  { id: '4426', parentId: '4424', name: 'Level 7', subtext: 'id 4426', type: 'Level 7' },\n  { id: '4427', parentId: '4357', name: 'Level 4', subtext: 'id 4427', type: 'Level 4' },\n  { id: '4428', parentId: '4427', name: 'Level 5', subtext: 'id 4428', type: 'Level 5' },\n  { id: '4429', parentId: '4428', name: 'Level 6', subtext: 'id 4429', type: 'Level 6' },\n  { id: '4430', parentId: '4429', name: 'Level 7', subtext: 'id 4430', type: 'Level 7' },\n  { id: '4431', parentId: '4428', name: 'Level 6', subtext: 'id 4431', type: 'Level 6' },\n  { id: '4432', parentId: '4431', name: 'Level 7', subtext: 'id 4432', type: 'Level 7' },\n  { id: '4433', parentId: '4431', name: 'Level 7', subtext: 'id 4433', type: 'Level 7' },\n  { id: '4434', parentId: '4431', name: 'Level 7', subtext: 'id 4434', type: 'Level 7' },\n  { id: '4435', parentId: '4431', name: 'Level 7', subtext: 'id 4435', type: 'Level 7' },\n  { id: '4436', parentId: '4427', name: 'Level 5', subtext: 'id 4436', type: 'Level 5' },\n  { id: '4437', parentId: '4436', name: 'Level 6', subtext: 'id 4437', type: 'Level 6' },\n  { id: '4438', parentId: '4437', name: 'Level 7', subtext: 'id 4438', type: 'Level 7' },\n  { id: '4439', parentId: '4437', name: 'Level 7', subtext: 'id 4439', type: 'Level 7' },\n  { id: '4440', parentId: '4437', name: 'Level 7', subtext: 'id 4440', type: 'Level 7' },\n  { id: '4441', parentId: '4437', name: 'Level 7', subtext: 'id 4441', type: 'Level 7' },\n  { id: '4442', parentId: '4436', name: 'Level 6', subtext: 'id 4442', type: 'Level 6' },\n  { id: '4443', parentId: '4442', name: 'Level 7', subtext: 'id 4443', type: 'Level 7' },\n  { id: '4444', parentId: '4442', name: 'Level 7', subtext: 'id 4444', type: 'Level 7' },\n  { id: '4445', parentId: '4442', name: 'Level 7', subtext: 'id 4445', type: 'Level 7' },\n  { id: '4446', parentId: '4442', name: 'Level 7', subtext: 'id 4446', type: 'Level 7' },\n  { id: '4447', parentId: '4436', name: 'Level 6', subtext: 'id 4447', type: 'Level 6' },\n  { id: '4448', parentId: '4447', name: 'Level 7', subtext: 'id 4448', type: 'Level 7' },\n  { id: '4449', parentId: '4447', name: 'Level 7', subtext: 'id 4449', type: 'Level 7' },\n  { id: '4450', parentId: '4447', name: 'Level 7', subtext: 'id 4450', type: 'Level 7' },\n  { id: '4451', parentId: '4436', name: 'Level 6', subtext: 'id 4451', type: 'Level 6' },\n  { id: '4452', parentId: '4451', name: 'Level 7', subtext: 'id 4452', type: 'Level 7' },\n  { id: '4453', parentId: '4451', name: 'Level 7', subtext: 'id 4453', type: 'Level 7' },\n  { id: '4454', parentId: '4451', name: 'Level 7', subtext: 'id 4454', type: 'Level 7' },\n  { id: '4455', parentId: '4436', name: 'Level 6', subtext: 'id 4455', type: 'Level 6' },\n  { id: '4456', parentId: '4455', name: 'Level 7', subtext: 'id 4456', type: 'Level 7' },\n  { id: '4457', parentId: '4455', name: 'Level 7', subtext: 'id 4457', type: 'Level 7' },\n  { id: '4458', parentId: '4455', name: 'Level 7', subtext: 'id 4458', type: 'Level 7' },\n  { id: '4459', parentId: '4455', name: 'Level 7', subtext: 'id 4459', type: 'Level 7' },\n  { id: '4460', parentId: '4455', name: 'Level 7', subtext: 'id 4460', type: 'Level 7' },\n  { id: '4461', parentId: '4357', name: 'Level 4', subtext: 'id 4461', type: 'Level 4' },\n  { id: '4462', parentId: '4461', name: 'Level 5', subtext: 'id 4462', type: 'Level 5' },\n  { id: '4463', parentId: '4462', name: 'Level 6', subtext: 'id 4463', type: 'Level 6' },\n  { id: '4464', parentId: '4463', name: 'Level 7', subtext: 'id 4464', type: 'Level 7' },\n  { id: '4465', parentId: '4463', name: 'Level 7', subtext: 'id 4465', type: 'Level 7' },\n  { id: '4466', parentId: '4463', name: 'Level 7', subtext: 'id 4466', type: 'Level 7' },\n  { id: '4467', parentId: '4463', name: 'Level 7', subtext: 'id 4467', type: 'Level 7' },\n  { id: '4468', parentId: '4462', name: 'Level 6', subtext: 'id 4468', type: 'Level 6' },\n  { id: '4469', parentId: '4468', name: 'Level 7', subtext: 'id 4469', type: 'Level 7' },\n  { id: '4470', parentId: '4468', name: 'Level 7', subtext: 'id 4470', type: 'Level 7' },\n  { id: '4471', parentId: '4468', name: 'Level 7', subtext: 'id 4471', type: 'Level 7' },\n  { id: '4472', parentId: '4468', name: 'Level 7', subtext: 'id 4472', type: 'Level 7' },\n  { id: '4473', parentId: '4468', name: 'Level 7', subtext: 'id 4473', type: 'Level 7' },\n  { id: '4474', parentId: '4461', name: 'Level 5', subtext: 'id 4474', type: 'Level 5' },\n  { id: '4475', parentId: '4474', name: 'Level 6', subtext: 'id 4475', type: 'Level 6' },\n  { id: '4476', parentId: '4475', name: 'Level 7', subtext: 'id 4476', type: 'Level 7' },\n  { id: '4477', parentId: '4475', name: 'Level 7', subtext: 'id 4477', type: 'Level 7' },\n  { id: '4478', parentId: '4475', name: 'Level 7', subtext: 'id 4478', type: 'Level 7' },\n  { id: '4479', parentId: '4475', name: 'Level 7', subtext: 'id 4479', type: 'Level 7' },\n  { id: '4480', parentId: '4475', name: 'Level 7', subtext: 'id 4480', type: 'Level 7' },\n  { id: '4481', parentId: '4474', name: 'Level 6', subtext: 'id 4481', type: 'Level 6' },\n  { id: '4482', parentId: '4481', name: 'Level 7', subtext: 'id 4482', type: 'Level 7' },\n  { id: '4483', parentId: '4481', name: 'Level 7', subtext: 'id 4483', type: 'Level 7' },\n  { id: '4484', parentId: '4481', name: 'Level 7', subtext: 'id 4484', type: 'Level 7' },\n  { id: '4485', parentId: '4474', name: 'Level 6', subtext: 'id 4485', type: 'Level 6' },\n  { id: '4486', parentId: '4485', name: 'Level 7', subtext: 'id 4486', type: 'Level 7' },\n  { id: '4487', parentId: '4485', name: 'Level 7', subtext: 'id 4487', type: 'Level 7' },\n  { id: '4488', parentId: '4485', name: 'Level 7', subtext: 'id 4488', type: 'Level 7' },\n  { id: '4489', parentId: '4485', name: 'Level 7', subtext: 'id 4489', type: 'Level 7' },\n  { id: '4490', parentId: '4485', name: 'Level 7', subtext: 'id 4490', type: 'Level 7' },\n  { id: '4491', parentId: '4474', name: 'Level 6', subtext: 'id 4491', type: 'Level 6' },\n  { id: '4492', parentId: '4491', name: 'Level 7', subtext: 'id 4492', type: 'Level 7' },\n  { id: '4493', parentId: '4491', name: 'Level 7', subtext: 'id 4493', type: 'Level 7' },\n  { id: '4494', parentId: '4491', name: 'Level 7', subtext: 'id 4494', type: 'Level 7' },\n  { id: '4495', parentId: '4461', name: 'Level 5', subtext: 'id 4495', type: 'Level 5' },\n  { id: '4496', parentId: '4495', name: 'Level 6', subtext: 'id 4496', type: 'Level 6' },\n  { id: '4497', parentId: '4496', name: 'Level 7', subtext: 'id 4497', type: 'Level 7' },\n  { id: '4498', parentId: '4496', name: 'Level 7', subtext: 'id 4498', type: 'Level 7' },\n  { id: '4499', parentId: '4496', name: 'Level 7', subtext: 'id 4499', type: 'Level 7' },\n  { id: '4500', parentId: '4496', name: 'Level 7', subtext: 'id 4500', type: 'Level 7' },\n  { id: '4501', parentId: '4496', name: 'Level 7', subtext: 'id 4501', type: 'Level 7' },\n  { id: '4502', parentId: '4495', name: 'Level 6', subtext: 'id 4502', type: 'Level 6' },\n  { id: '4503', parentId: '4502', name: 'Level 7', subtext: 'id 4503', type: 'Level 7' },\n  { id: '4504', parentId: '4502', name: 'Level 7', subtext: 'id 4504', type: 'Level 7' },\n  { id: '4505', parentId: '4495', name: 'Level 6', subtext: 'id 4505', type: 'Level 6' },\n  { id: '4506', parentId: '4505', name: 'Level 7', subtext: 'id 4506', type: 'Level 7' },\n  { id: '4507', parentId: '4505', name: 'Level 7', subtext: 'id 4507', type: 'Level 7' },\n  { id: '4508', parentId: '4505', name: 'Level 7', subtext: 'id 4508', type: 'Level 7' },\n  { id: '4509', parentId: '4495', name: 'Level 6', subtext: 'id 4509', type: 'Level 6' },\n  { id: '4510', parentId: '4509', name: 'Level 7', subtext: 'id 4510', type: 'Level 7' },\n  { id: '4511', parentId: '4495', name: 'Level 6', subtext: 'id 4511', type: 'Level 6' },\n  { id: '4512', parentId: '4511', name: 'Level 7', subtext: 'id 4512', type: 'Level 7' },\n  { id: '4513', parentId: '4511', name: 'Level 7', subtext: 'id 4513', type: 'Level 7' },\n  { id: '4514', parentId: '4461', name: 'Level 5', subtext: 'id 4514', type: 'Level 5' },\n  { id: '4515', parentId: '4514', name: 'Level 6', subtext: 'id 4515', type: 'Level 6' },\n  { id: '4516', parentId: '4515', name: 'Level 7', subtext: 'id 4516', type: 'Level 7' },\n  { id: '4517', parentId: '4515', name: 'Level 7', subtext: 'id 4517', type: 'Level 7' },\n  { id: '4518', parentId: '4515', name: 'Level 7', subtext: 'id 4518', type: 'Level 7' },\n  { id: '4519', parentId: '4515', name: 'Level 7', subtext: 'id 4519', type: 'Level 7' },\n  { id: '4520', parentId: '4514', name: 'Level 6', subtext: 'id 4520', type: 'Level 6' },\n  { id: '4521', parentId: '4520', name: 'Level 7', subtext: 'id 4521', type: 'Level 7' },\n  { id: '4522', parentId: '4514', name: 'Level 6', subtext: 'id 4522', type: 'Level 6' },\n  { id: '4523', parentId: '4522', name: 'Level 7', subtext: 'id 4523', type: 'Level 7' },\n  { id: '4524', parentId: '4522', name: 'Level 7', subtext: 'id 4524', type: 'Level 7' },\n  { id: '4525', parentId: '4522', name: 'Level 7', subtext: 'id 4525', type: 'Level 7' },\n  { id: '4526', parentId: '4522', name: 'Level 7', subtext: 'id 4526', type: 'Level 7' },\n  { id: '4527', parentId: '4522', name: 'Level 7', subtext: 'id 4527', type: 'Level 7' },\n  { id: '4528', parentId: '4514', name: 'Level 6', subtext: 'id 4528', type: 'Level 6' },\n  { id: '4529', parentId: '4528', name: 'Level 7', subtext: 'id 4529', type: 'Level 7' },\n  { id: '4530', parentId: '4528', name: 'Level 7', subtext: 'id 4530', type: 'Level 7' },\n  { id: '4531', parentId: '4528', name: 'Level 7', subtext: 'id 4531', type: 'Level 7' },\n  { id: '4532', parentId: '4528', name: 'Level 7', subtext: 'id 4532', type: 'Level 7' },\n  { id: '4533', parentId: '4528', name: 'Level 7', subtext: 'id 4533', type: 'Level 7' },\n  { id: '4534', parentId: '4514', name: 'Level 6', subtext: 'id 4534', type: 'Level 6' },\n  { id: '4535', parentId: '4534', name: 'Level 7', subtext: 'id 4535', type: 'Level 7' },\n  { id: '4536', parentId: '4461', name: 'Level 5', subtext: 'id 4536', type: 'Level 5' },\n  { id: '4537', parentId: '4536', name: 'Level 6', subtext: 'id 4537', type: 'Level 6' },\n  { id: '4538', parentId: '4537', name: 'Level 7', subtext: 'id 4538', type: 'Level 7' },\n  { id: '4539', parentId: '4537', name: 'Level 7', subtext: 'id 4539', type: 'Level 7' },\n  { id: '4540', parentId: '4537', name: 'Level 7', subtext: 'id 4540', type: 'Level 7' },\n  { id: '4541', parentId: '4537', name: 'Level 7', subtext: 'id 4541', type: 'Level 7' },\n  { id: '4542', parentId: '4537', name: 'Level 7', subtext: 'id 4542', type: 'Level 7' },\n  { id: '4543', parentId: '4536', name: 'Level 6', subtext: 'id 4543', type: 'Level 6' },\n  { id: '4544', parentId: '4543', name: 'Level 7', subtext: 'id 4544', type: 'Level 7' },\n  { id: '4545', parentId: '4543', name: 'Level 7', subtext: 'id 4545', type: 'Level 7' },\n  { id: '4546', parentId: '4543', name: 'Level 7', subtext: 'id 4546', type: 'Level 7' },\n  { id: '4547', parentId: '4543', name: 'Level 7', subtext: 'id 4547', type: 'Level 7' },\n  { id: '4548', parentId: '4543', name: 'Level 7', subtext: 'id 4548', type: 'Level 7' },\n  { id: '4549', parentId: null, name: 'Level 1', subtext: 'id 4549', type: 'Level 1' },\n  { id: '4550', parentId: '4549', name: 'Level 2', subtext: 'id 4550', type: 'Level 2' },\n  { id: '4551', parentId: '4550', name: 'Level 3', subtext: 'id 4551', type: 'Level 3' },\n  { id: '4552', parentId: '4551', name: 'Level 4', subtext: 'id 4552', type: 'Level 4' },\n  { id: '4553', parentId: '4552', name: 'Level 5', subtext: 'id 4553', type: 'Level 5' },\n  { id: '4554', parentId: '4553', name: 'Level 6', subtext: 'id 4554', type: 'Level 6' },\n  { id: '4555', parentId: '4554', name: 'Level 7', subtext: 'id 4555', type: 'Level 7' },\n  { id: '4556', parentId: '4554', name: 'Level 7', subtext: 'id 4556', type: 'Level 7' },\n  { id: '4557', parentId: '4553', name: 'Level 6', subtext: 'id 4557', type: 'Level 6' },\n  { id: '4558', parentId: '4557', name: 'Level 7', subtext: 'id 4558', type: 'Level 7' },\n  { id: '4559', parentId: '4557', name: 'Level 7', subtext: 'id 4559', type: 'Level 7' },\n  { id: '4560', parentId: '4557', name: 'Level 7', subtext: 'id 4560', type: 'Level 7' },\n  { id: '4561', parentId: '4557', name: 'Level 7', subtext: 'id 4561', type: 'Level 7' },\n  { id: '4562', parentId: '4553', name: 'Level 6', subtext: 'id 4562', type: 'Level 6' },\n  { id: '4563', parentId: '4562', name: 'Level 7', subtext: 'id 4563', type: 'Level 7' },\n  { id: '4564', parentId: '4562', name: 'Level 7', subtext: 'id 4564', type: 'Level 7' },\n  { id: '4565', parentId: '4562', name: 'Level 7', subtext: 'id 4565', type: 'Level 7' },\n  { id: '4566', parentId: '4553', name: 'Level 6', subtext: 'id 4566', type: 'Level 6' },\n  { id: '4567', parentId: '4566', name: 'Level 7', subtext: 'id 4567', type: 'Level 7' },\n  { id: '4568', parentId: '4566', name: 'Level 7', subtext: 'id 4568', type: 'Level 7' },\n  { id: '4569', parentId: '4566', name: 'Level 7', subtext: 'id 4569', type: 'Level 7' },\n  { id: '4570', parentId: '4566', name: 'Level 7', subtext: 'id 4570', type: 'Level 7' },\n  { id: '4571', parentId: '4552', name: 'Level 5', subtext: 'id 4571', type: 'Level 5' },\n  { id: '4572', parentId: '4571', name: 'Level 6', subtext: 'id 4572', type: 'Level 6' },\n  { id: '4573', parentId: '4572', name: 'Level 7', subtext: 'id 4573', type: 'Level 7' },\n  { id: '4574', parentId: '4572', name: 'Level 7', subtext: 'id 4574', type: 'Level 7' },\n  { id: '4575', parentId: '4572', name: 'Level 7', subtext: 'id 4575', type: 'Level 7' },\n  { id: '4576', parentId: '4571', name: 'Level 6', subtext: 'id 4576', type: 'Level 6' },\n  { id: '4577', parentId: '4576', name: 'Level 7', subtext: 'id 4577', type: 'Level 7' },\n  { id: '4578', parentId: '4571', name: 'Level 6', subtext: 'id 4578', type: 'Level 6' },\n  { id: '4579', parentId: '4578', name: 'Level 7', subtext: 'id 4579', type: 'Level 7' },\n  { id: '4580', parentId: '4571', name: 'Level 6', subtext: 'id 4580', type: 'Level 6' },\n  { id: '4581', parentId: '4580', name: 'Level 7', subtext: 'id 4581', type: 'Level 7' },\n  { id: '4582', parentId: '4580', name: 'Level 7', subtext: 'id 4582', type: 'Level 7' },\n  { id: '4583', parentId: '4552', name: 'Level 5', subtext: 'id 4583', type: 'Level 5' },\n  { id: '4584', parentId: '4583', name: 'Level 6', subtext: 'id 4584', type: 'Level 6' },\n  { id: '4585', parentId: '4584', name: 'Level 7', subtext: 'id 4585', type: 'Level 7' },\n  { id: '4586', parentId: '4584', name: 'Level 7', subtext: 'id 4586', type: 'Level 7' },\n\n  { id: '4587', parentId: null, name: 'Level 1', subtext: 'id 4587', type: 'Level 1' },\n  { id: '4588', parentId: null, name: 'Level 1', subtext: 'id 4588', type: 'Level 1' },\n  { id: '4589', parentId: null, name: 'Level 1', subtext: 'id 4589', type: 'Level 1' },\n  { id: '4590', parentId: null, name: 'Level 1', subtext: 'id 4590', type: 'Level 1' },\n  { id: '4591', parentId: null, name: 'Level 1', subtext: 'id 4591', type: 'Level 1' },\n  { id: '4592', parentId: null, name: 'Level 1', subtext: 'id 4592', type: 'Level 1' },\n  { id: '4593', parentId: null, name: 'Level 1', subtext: 'id 4593', type: 'Level 1' },\n  { id: '4594', parentId: null, name: 'Level 1', subtext: 'id 4594', type: 'Level 1' },\n  { id: '4595', parentId: null, name: 'Level 1', subtext: 'id 4595', type: 'Level 1' },\n  { id: '4596', parentId: null, name: 'Level 1', subtext: 'id 4596', type: 'Level 1' },\n  { id: '4597', parentId: null, name: 'Level 1', subtext: 'id 4597', type: 'Level 1' },\n  { id: '4598', parentId: null, name: 'Level 1', subtext: 'id 4598', type: 'Level 1' },\n  { id: '4599', parentId: null, name: 'Level 1', subtext: 'id 4599', type: 'Level 1' },\n  { id: '4600', parentId: null, name: 'Level 1', subtext: 'id 4600', type: 'Level 1' },\n  { id: '4601', parentId: null, name: 'Level 1', subtext: 'id 4601', type: 'Level 1' },\n  { id: '4602', parentId: null, name: 'Level 1', subtext: 'id 4602', type: 'Level 1' },\n  { id: '4603', parentId: null, name: 'Level 1', subtext: 'id 4603', type: 'Level 1' },\n  { id: '4604', parentId: null, name: 'Level 1', subtext: 'id 4604', type: 'Level 1' },\n  { id: '4605', parentId: null, name: 'Level 1', subtext: 'id 4605', type: 'Level 1' },\n  { id: '4606', parentId: null, name: 'Level 1', subtext: 'id 4606', type: 'Level 1' },\n  { id: '4607', parentId: null, name: 'Level 1', subtext: 'id 4607', type: 'Level 1' },\n  { id: '4608', parentId: null, name: 'Level 1', subtext: 'id 4608', type: 'Level 1' },\n  { id: '4609', parentId: null, name: 'Level 1', subtext: 'id 4609', type: 'Level 1' },\n  { id: '4610', parentId: null, name: 'Level 1', subtext: 'id 4610', type: 'Level 1' },\n  { id: '4611', parentId: null, name: 'Level 1', subtext: 'id 4611', type: 'Level 1' },\n  { id: '4612', parentId: null, name: 'Level 1', subtext: 'id 4612', type: 'Level 1' },\n  { id: '4613', parentId: null, name: 'Level 1', subtext: 'id 4613', type: 'Level 1' },\n  { id: '4614', parentId: null, name: 'Level 1', subtext: 'id 4614', type: 'Level 1' },\n  { id: '4615', parentId: null, name: 'Level 1', subtext: 'id 4615', type: 'Level 1' },\n  { id: '4616', parentId: null, name: 'Level 1', subtext: 'id 4616', type: 'Level 1' },\n  { id: '4617', parentId: null, name: 'Level 1', subtext: 'id 4617', type: 'Level 1' },\n  { id: '4618', parentId: null, name: 'Level 1', subtext: 'id 4618', type: 'Level 1' },\n  { id: '4619', parentId: null, name: 'Level 1', subtext: 'id 4619', type: 'Level 1' },\n  { id: '4620', parentId: null, name: 'Level 1', subtext: 'id 4620', type: 'Level 1' },\n  { id: '4621', parentId: null, name: 'Level 1', subtext: 'id 4621', type: 'Level 1' },\n  { id: '4622', parentId: null, name: 'Level 1', subtext: 'id 4622', type: 'Level 1' },\n  { id: '4623', parentId: null, name: 'Level 1', subtext: 'id 4623', type: 'Level 1' },\n  { id: '4624', parentId: null, name: 'Level 1', subtext: 'id 4624', type: 'Level 1' },\n  { id: '4625', parentId: null, name: 'Level 1', subtext: 'id 4625', type: 'Level 1' },\n  { id: '4626', parentId: null, name: 'Level 1', subtext: 'id 4626', type: 'Level 1' },\n  { id: '4627', parentId: null, name: 'Level 1', subtext: 'id 4627', type: 'Level 1' },\n  { id: '4628', parentId: null, name: 'Level 1', subtext: 'id 4628', type: 'Level 1' },\n  { id: '4629', parentId: null, name: 'Level 1', subtext: 'id 4629', type: 'Level 1' },\n  { id: '4630', parentId: null, name: 'Level 1', subtext: 'id 4630', type: 'Level 1' },\n  { id: '4631', parentId: null, name: 'Level 1', subtext: 'id 4631', type: 'Level 1' },\n  { id: '4632', parentId: null, name: 'Level 1', subtext: 'id 4632', type: 'Level 1' },\n  { id: '4633', parentId: null, name: 'Level 1', subtext: 'id 4633', type: 'Level 1' },\n  { id: '4634', parentId: null, name: 'Level 1', subtext: 'id 4634', type: 'Level 1' },\n  { id: '4635', parentId: null, name: 'Level 1', subtext: 'id 4635', type: 'Level 1' },\n  { id: '4636', parentId: null, name: 'Level 1', subtext: 'id 4636', type: 'Level 1' },\n  { id: '4637', parentId: null, name: 'Level 1', subtext: 'id 4637', type: 'Level 1' },\n  { id: '4638', parentId: null, name: 'Level 1', subtext: 'id 4638', type: 'Level 1' },\n  { id: '4639', parentId: null, name: 'Level 1', subtext: 'id 4639', type: 'Level 1' },\n  { id: '4640', parentId: null, name: 'Level 1', subtext: 'id 4640', type: 'Level 1' },\n  { id: '4641', parentId: null, name: 'Level 1', subtext: 'id 4641', type: 'Level 1' },\n  { id: '4642', parentId: null, name: 'Level 1', subtext: 'id 4642', type: 'Level 1' },\n  { id: '4643', parentId: null, name: 'Level 1', subtext: 'id 4643', type: 'Level 1' },\n  { id: '4644', parentId: null, name: 'Level 1', subtext: 'id 4644', type: 'Level 1' },\n  { id: '4645', parentId: null, name: 'Level 1', subtext: 'id 4645', type: 'Level 1' },\n  { id: '4646', parentId: null, name: 'Level 1', subtext: 'id 4646', type: 'Level 1' },\n  { id: '4647', parentId: null, name: 'Level 1', subtext: 'id 4647', type: 'Level 1' },\n  { id: '4648', parentId: null, name: 'Level 1', subtext: 'id 4648', type: 'Level 1' },\n  { id: '4649', parentId: null, name: 'Level 1', subtext: 'id 4649', type: 'Level 1' },\n  { id: '4650', parentId: null, name: 'Level 1', subtext: 'id 4650', type: 'Level 1' },\n  { id: '4651', parentId: null, name: 'Level 1', subtext: 'id 4651', type: 'Level 1' },\n  { id: '4652', parentId: null, name: 'Level 1', subtext: 'id 4652', type: 'Level 1' },\n  { id: '4653', parentId: null, name: 'Level 1', subtext: 'id 4653', type: 'Level 1' },\n  { id: '4654', parentId: null, name: 'Level 1', subtext: 'id 4654', type: 'Level 1' },\n  { id: '4655', parentId: null, name: 'Level 1', subtext: 'id 4655', type: 'Level 1' },\n  { id: '4656', parentId: null, name: 'Level 1', subtext: 'id 4656', type: 'Level 1' },\n  { id: '4657', parentId: null, name: 'Level 1', subtext: 'id 4657', type: 'Level 1' },\n  { id: '4658', parentId: null, name: 'Level 1', subtext: 'id 4658', type: 'Level 1' },\n  { id: '4659', parentId: null, name: 'Level 1', subtext: 'id 4659', type: 'Level 1' },\n]"
                }
            ],
            "libs/packages/sam-formly/src/lib/formly/sds-formly-options.ts": [
                {
                    "name": "sdsFieldWrapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/sds-formly-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['readonly', 'label', 'description', 'validation']"
                },
                {
                    "name": "sdsGroupWrapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/sds-formly-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "['group']"
                },
                {
                    "name": "sdsWrappers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/sds-formly-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[...sdsGroupWrapper, ...sdsFieldWrapper]"
                }
            ],
            "libs/packages/sam-formly/src/lib/formly/wrappers/form-field.animation.ts": [
                {
                    "name": "SlideInOutAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/packages/sam-formly/src/lib/formly/wrappers/form-field.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  trigger('slideInOut', [\n    state(\n      'in',\n      style({\n        'max-height': 'auto',\n        opacity: '1',\n        visibility: 'visible',\n      })\n    ),\n    state(\n      'out',\n      style({\n        'max-height': '0px',\n        opacity: '0',\n        visibility: 'hidden',\n      })\n    ),\n    transition('in => out', [\n      group([\n        animate(\n          '400ms ease-in-out',\n          style({\n            opacity: '0',\n          })\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '0px',\n          })\n        ),\n        animate(\n          '700ms ease-in-out',\n          style({\n            visibility: 'hidden',\n          })\n        ),\n      ]),\n    ]),\n    transition('out => in', [\n      group([\n        animate(\n          '1ms ease-in-out',\n          style({\n            visibility: 'visible',\n          })\n        ),\n        animate(\n          '600ms ease-in-out',\n          style({\n            'max-height': '500px',\n          })\n        ),\n        animate(\n          '800ms ease-in-out',\n          style({\n            opacity: '1',\n          })\n        ),\n      ]),\n    ]),\n  ]),\n]"
                }
            ]
        },
        "groupedFunctions": {
            "libs/packages/sam-formly/src/lib/formly/formly.module.ts": [
                {
                    "name": "animationExtension",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "betweenDateValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "invalidDateFormatValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "matDateInBetweenValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "matDatepickerMaxValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "matDatepickerMinValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "maxDateValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "maxlengthValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "maxValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "minDateValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "minlengthValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "minValidationMessage",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/packages/sam-formly/src/lib/formly/formly.validators.ts": [
                {
                    "name": "autocompleteRequired",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Usage:\n Override the required validator to allow autocompletes to behave more like\n the other inputs regarding error messages</p>\n<p>// In the formly config\n{\n   type: &#39;autocomplete&#39;,\n   props: {\n     required: true,\n   },\n   validators: {\n     required: autocompleteRequired\n   },</p>\n",
                    "args": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dateRangeValidator",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "maxDateValidator",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2036,
                                "end": 2043,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "control"
                            },
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2030,
                                "end": 2035,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 2054,
                                "end": 2059,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2048,
                                "end": 2053,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "minDateValidator",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 143,
                                "end": 150,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "control"
                            },
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 137,
                                "end": 142,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        },
                        {
                            "name": {
                                "pos": 161,
                                "end": 166,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "field"
                            },
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 155,
                                "end": 160,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "multiCheckboxRequired",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Usage:\n Override the required validator to allow multicheckbox to behave more like required atleast one item is selected\n the other inputs regarding error messages</p>\n<p>// In the formly config\n{\n   type: &#39;multicheckbox&#39;,\n   props: {\n     required: true,\n   },\n   validators: {\n     required: multiCheckboxRequired\n   },</p>\n",
                    "args": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "UntypedFormControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "libs/packages/sam-formly/src/lib/formly/services/utils.ts": [
                {
                    "name": "deepCopy",
                    "file": "libs/packages/sam-formly/src/lib/formly/services/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Given an object, create a deep copy such that no references in the two objects\noverlap</p>\n",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 107,
                                "end": 110,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "obj"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 101,
                                "end": 106,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<ul>\n<li>object to deep copy</li>\n</ul>\n"
                        },
                        {
                            "tagName": {
                                "pos": 137,
                                "end": 144,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<ul>\n<li>the cloned object</li>\n</ul>\n"
                        }
                    ]
                }
            ],
            "libs/packages/sam-formly/src/lib/formly/formly.config.ts": [
                {
                    "name": "getParentHideOptional",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "maxDateFromDateRangePicker",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "maxDateToDateRangePicker",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "minDateFromDateRangePicker",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "minDateToDateRangePicker",
                    "file": "libs/packages/sam-formly/src/lib/formly/formly.config.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "model",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formState",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "field",
                            "type": "FormlyFieldConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "libs/packages/sam-formly/src/lib/formly/models/formly-types.ts": [
                {
                    "name": "SdsFormlyTypes",
                    "childs": [
                        {
                            "name": "INPUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "input"
                        },
                        {
                            "name": "BUTTON",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "button"
                        },
                        {
                            "name": "CHECKBOX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "checkbox"
                        },
                        {
                            "name": "MULTICHECKBOX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "multicheckbox"
                        },
                        {
                            "name": "RADIO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "radio"
                        },
                        {
                            "name": "AUTOCOMPLETE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "autocomplete"
                        },
                        {
                            "name": "DATEPICKER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "datepicker"
                        },
                        {
                            "name": "SELECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "select"
                        },
                        {
                            "name": "TEXTAREA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "textarea"
                        },
                        {
                            "name": "READONLY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "readonly"
                        },
                        {
                            "name": "DATERANGEPICKER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "daterangepicker"
                        },
                        {
                            "name": "DATERANGEPICKERV2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "daterangepickerv2"
                        },
                        {
                            "name": "FORMLYGROUP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "formly-group"
                        },
                        {
                            "name": "CUSTOMTEXT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "customtext"
                        },
                        {
                            "name": "EDITOR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "editor"
                        },
                        {
                            "name": "FILEINFO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "fileinfo"
                        },
                        {
                            "name": "SEARCH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "search"
                        },
                        {
                            "name": "FILEINPUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "fileinput"
                        },
                        {
                            "name": "TABS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "tabs"
                        },
                        {
                            "name": "RICHTEXTEDITOR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "rich-text-editor"
                        },
                        {
                            "name": "STEPARROW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "step-arrow"
                        },
                        {
                            "name": "TABLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "table"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/packages/sam-formly/src/lib/formly/models/formly-types.ts"
                },
                {
                    "name": "SdsReadonlyTypes",
                    "childs": [
                        {
                            "name": "INPUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "input"
                        },
                        {
                            "name": "CHECKBOX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "checkbox"
                        },
                        {
                            "name": "MULTICHECKBOX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "multicheckbox"
                        },
                        {
                            "name": "RADIO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "radio"
                        },
                        {
                            "name": "AUTOCOMPLETE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "autocomplete"
                        },
                        {
                            "name": "DATEPICKER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "datepicker"
                        },
                        {
                            "name": "SELECT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "select"
                        },
                        {
                            "name": "TEXTAREA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "textarea"
                        },
                        {
                            "name": "READONLY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "readonly"
                        },
                        {
                            "name": "DATERANGEPICKER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "daterangepicker"
                        },
                        {
                            "name": "DATERANGEPICKERV2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "daterangepickerv2"
                        },
                        {
                            "name": "FILEINFO",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "fileinfo"
                        },
                        {
                            "name": "SEARCH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "search"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "libs/packages/sam-formly/src/lib/formly/models/formly-types.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    }
};

export default FORMLY;