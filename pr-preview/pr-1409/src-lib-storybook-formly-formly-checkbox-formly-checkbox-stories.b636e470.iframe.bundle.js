"use strict";(self.webpackChunksam_design_system=self.webpackChunksam_design_system||[]).push([[8551],{"./node_modules/lodash-es/toString.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>lodash_es_toString});var _Symbol=__webpack_require__("./node_modules/lodash-es/_Symbol.js");const _arrayMap=function arrayMap(array,iteratee){for(var index=-1,length=null==array?0:array.length,result=Array(length);++index<length;)result[index]=iteratee(array[index],index,array);return result};var isArray=__webpack_require__("./node_modules/lodash-es/isArray.js"),isSymbol=__webpack_require__("./node_modules/lodash-es/isSymbol.js"),symbolProto=_Symbol.Z?_Symbol.Z.prototype:void 0,symbolToString=symbolProto?symbolProto.toString:void 0;const _baseToString=function baseToString(value){if("string"==typeof value)return value;if((0,isArray.Z)(value))return _arrayMap(value,baseToString)+"";if((0,isSymbol.Z)(value))return symbolToString?symbolToString.call(value):"";var result=value+"";return"0"==result&&1/value==-Infinity?"-0":result};const lodash_es_toString=function toString_toString(value){return null==value?"":_baseToString(value)}},"./node_modules/lodash-es/upperFirst.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>lodash_es_upperFirst});const _baseSlice=function baseSlice(array,start,end){var index=-1,length=array.length;start<0&&(start=-start>length?0:length+start),(end=end>length?length:end)<0&&(end+=length),length=start>end?0:end-start>>>0,start>>>=0;for(var result=Array(length);++index<length;)result[index]=array[index+start];return result};const _castSlice=function castSlice(array,start,end){var length=array.length;return end=void 0===end?length:end,!start&&end>=length?array:_baseSlice(array,start,end)};var reHasUnicode=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");const _hasUnicode=function hasUnicode(string){return reHasUnicode.test(string)};const _asciiToArray=function asciiToArray(string){return string.split("")};var rsAstral="[\\ud800-\\udfff]",rsCombo="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",rsFitz="\\ud83c[\\udffb-\\udfff]",rsNonAstral="[^\\ud800-\\udfff]",rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",reOptMod="(?:"+rsCombo+"|"+rsFitz+")"+"?",rsSeq="[\\ufe0e\\ufe0f]?"+reOptMod+("(?:\\u200d(?:"+[rsNonAstral,rsRegional,rsSurrPair].join("|")+")[\\ufe0e\\ufe0f]?"+reOptMod+")*"),rsSymbol="(?:"+[rsNonAstral+rsCombo+"?",rsCombo,rsRegional,rsSurrPair,rsAstral].join("|")+")",reUnicode=RegExp(rsFitz+"(?="+rsFitz+")|"+rsSymbol+rsSeq,"g");const _unicodeToArray=function unicodeToArray(string){return string.match(reUnicode)||[]};const _stringToArray=function stringToArray(string){return _hasUnicode(string)?_unicodeToArray(string):_asciiToArray(string)};var lodash_es_toString=__webpack_require__("./node_modules/lodash-es/toString.js");const lodash_es_upperFirst=function createCaseFirst(methodName){return function(string){string=(0,lodash_es_toString.Z)(string);var strSymbols=_hasUnicode(string)?_stringToArray(string):void 0,chr=strSymbols?strSymbols[0]:string.charAt(0),trailing=strSymbols?_castSlice(strSymbols,1).join(""):string.slice(1);return chr[methodName]()+trailing}}("toUpperCase")},"./libs/documentation/src/lib/storybook/formly/formly-checkbox/formly-checkbox.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Description:()=>Description,Introduction:()=>Introduction,Label:()=>Label,Nested:()=>Nested,Required:()=>Required,Template:()=>Template,Tooltip:()=>Tooltip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>formly_checkbox_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),src=__webpack_require__("./libs/packages/sam-formly/src/index.ts"),ngx_formly_core=__webpack_require__("./node_modules/@ngx-formly/core/fesm2020/ngx-formly-core.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),sandbox_utils=__webpack_require__("./libs/documentation/src/sandbox/sandbox-utils.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let FormlyCheckboxIntroductionComponent=class FormlyCheckboxIntroductionComponent{};FormlyCheckboxIntroductionComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-introduction",template:"<p>\n  The 'Formly Checkbox' component in the Sam Design System is for cases where a single selection is required.\n</p>\n"})],FormlyCheckboxIntroductionComponent);let FormlyCheckboxIntroductionModule=class FormlyCheckboxIntroductionModule{};FormlyCheckboxIntroductionModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot()],declarations:[FormlyCheckboxIntroductionComponent],exports:[FormlyCheckboxIntroductionComponent],bootstrap:[FormlyCheckboxIntroductionComponent]})],FormlyCheckboxIntroductionModule);let FormlyCheckboxTemplateComponent=class FormlyCheckboxTemplateComponent{constructor(){this.form=new fesm2022_forms.cw({}),this.model={},this.options={},this.fields=[{key:"entity.userAgreement",type:"checkbox",props:{label:"I agree",required:!0}}]}ngAfterViewInit(){this.fields[0].props.template=this.checkboxTemplate}static#_=this.ctorParameters=()=>[];static#_2=this.propDecorators={checkboxTemplate:[{type:core.ViewChild,args:["checkboxTemplate"]}]}};FormlyCheckboxTemplateComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-template",template:'<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n<ng-template\n  #checkboxTemplate\n  let-to\n  let-showError="showError"\n  let-formControl="formControl"\n  let-field="field"\n  let-id="id"\n>\n  <div class="usa-checkbox" [class.text-align-end]="to.textAlignEnd">\n    <input\n      class="usa-checkbox__input"\n      type="checkbox"\n      [class.is-invalid]="showError"\n      [indeterminate]="to.indeterminate && formControl.value === null"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n    />\n    <label class="usa-checkbox__label text-bold" [for]="id" [innerHtml]="to.label"> </label>\n  </div>\n  <div class="padding-left-3">\n    <usa-icon [icon]="\'question-octagon\'" [size]="\'5x\'"></usa-icon>\n  </div>\n</ng-template>\n'})],FormlyCheckboxTemplateComponent);var ngx_bootstrap_icons=__webpack_require__("./node_modules/ngx-bootstrap-icons/fesm2020/ngx-bootstrap-icons.mjs"),gsa_sam_ngx_uswds_icons=__webpack_require__("./node_modules/@gsa-sam/ngx-uswds-icons/fesm2022/gsa-sam-ngx-uswds-icons.mjs"),upperFirst=__webpack_require__("./node_modules/lodash-es/upperFirst.js"),cloneDeep=__webpack_require__("./node_modules/lodash-es/cloneDeep.js");let FormlyCheckboxTemplateModule=class FormlyCheckboxTemplateModule{};FormlyCheckboxTemplateModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot(),gsa_sam_ngx_uswds_icons.QX1,ngx_bootstrap_icons.o7e.pick(Object.assign(cloneDeep.Z(ngx_bootstrap_icons.kEt),((iconsObject,prefix)=>{const prefixedIconsObject={};return Object.keys(iconsObject).forEach((key=>{prefixedIconsObject[`${prefix}${upperFirst.Z(key)}`]=iconsObject[key]})),prefixedIconsObject})(cloneDeep.Z(gsa_sam_ngx_uswds_icons.kEt),"sds"),cloneDeep.Z(gsa_sam_ngx_uswds_icons.iBy)))],declarations:[FormlyCheckboxTemplateComponent],exports:[FormlyCheckboxTemplateComponent],bootstrap:[FormlyCheckboxTemplateComponent]})],FormlyCheckboxTemplateModule);let FormlyCheckboxBasicComponent=class FormlyCheckboxBasicComponent{constructor(){this.form=new fesm2022_forms.cw({}),this.model={},this.options={},this.fields=[{key:"entity.userAgreement",type:"checkbox",validators:{validation:["requiredTrue"]},props:{label:"I agree",description:"By checking the box below you agree to the terms and conditions of the site.",required:!0,tooltipText:"By checking the box you agree to the terms and conditions"}}]}};FormlyCheckboxBasicComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-basic",template:'<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'})],FormlyCheckboxBasicComponent);let FormlyCheckboxBasicModule=class FormlyCheckboxBasicModule{};FormlyCheckboxBasicModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot()],declarations:[FormlyCheckboxBasicComponent],exports:[FormlyCheckboxBasicComponent],bootstrap:[FormlyCheckboxBasicComponent]})],FormlyCheckboxBasicModule);let FormlyCheckboxNestedComponent=class FormlyCheckboxNestedComponent{constructor(){this.form=new fesm2022_forms.cw({}),this.model={},this.options={},this.fields=[{fieldGroup:[{key:"entity.downloadableLink",type:"checkbox",props:{label:"Send me a link to a downloadable file with updated search results",required:!0}},{className:"grid-row margin-left-4 margin-top-1",key:"entity.linkOptions",type:"radio",props:{options:[{value:"CSV",label:"CSV"},{value:"PDF",label:"PDF"}]}}]}]}};FormlyCheckboxNestedComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-nested",template:'<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'})],FormlyCheckboxNestedComponent);let FormlyCheckboxNestedModule=class FormlyCheckboxNestedModule{};FormlyCheckboxNestedModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot()],declarations:[FormlyCheckboxNestedComponent],exports:[FormlyCheckboxNestedComponent],bootstrap:[FormlyCheckboxNestedComponent]})],FormlyCheckboxNestedModule);let FormlyCheckboxRequiredComponent=class FormlyCheckboxRequiredComponent{constructor(){this.form=new fesm2022_forms.cw({}),this.model={},this.options={},this.fields=[{key:"entity.userAgreement",type:"checkbox",validators:{validation:["requiredTrue"]},props:{label:"I agree",description:"By checking the box below you agree to the terms and conditions of the site.",required:!0}}]}};FormlyCheckboxRequiredComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-required",template:'<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'})],FormlyCheckboxRequiredComponent);let FormlyCheckboxRequiredModule=class FormlyCheckboxRequiredModule{};FormlyCheckboxRequiredModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot()],declarations:[FormlyCheckboxRequiredComponent],exports:[FormlyCheckboxRequiredComponent],bootstrap:[FormlyCheckboxRequiredComponent]})],FormlyCheckboxRequiredModule);let FormlyCheckboxTooltipComponent=class FormlyCheckboxTooltipComponent{constructor(){this.form=new fesm2022_forms.cw({}),this.model={},this.options={},this.fields=[{key:"entity.userAgreement",type:"checkbox",props:{tooltipText:"By checking the box you agree to the terms and conditions"}}]}};FormlyCheckboxTooltipComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-tooltip",template:'<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'})],FormlyCheckboxTooltipComponent);let FormlyCheckboxTooltipModule=class FormlyCheckboxTooltipModule{};FormlyCheckboxTooltipModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot()],declarations:[FormlyCheckboxTooltipComponent],exports:[FormlyCheckboxTooltipComponent],bootstrap:[FormlyCheckboxTooltipComponent]})],FormlyCheckboxTooltipModule);let FormlyCheckboxLabelComponent=class FormlyCheckboxLabelComponent{constructor(){this.form=new fesm2022_forms.cw({}),this.model={},this.options={},this.fields=[{key:"entity.userAgreement",type:"checkbox",props:{label:"I agree"}}]}};FormlyCheckboxLabelComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-label",template:'<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'})],FormlyCheckboxLabelComponent);let FormlyCheckboxLabelModule=class FormlyCheckboxLabelModule{};FormlyCheckboxLabelModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot()],declarations:[FormlyCheckboxLabelComponent],exports:[FormlyCheckboxLabelComponent],bootstrap:[FormlyCheckboxLabelComponent]})],FormlyCheckboxLabelModule);let FormlyCheckboxDescriptionComponent=class FormlyCheckboxDescriptionComponent{constructor(){this.form=new fesm2022_forms.cw({}),this.model={},this.options={},this.fields=[{key:"entity.userAgreement",type:"checkbox",props:{description:"By checking the box below you agree to the terms and conditions of the site."}}]}};FormlyCheckboxDescriptionComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"sds-formly-checkbox-description",template:'<form [formGroup]="form">\n  <formly-form [model]="model" [fields]="fields" [options]="options" [form]="form"></formly-form>\n</form>\n'})],FormlyCheckboxDescriptionComponent);let FormlyCheckboxDescriptionModule=class FormlyCheckboxDescriptionModule{};FormlyCheckboxDescriptionModule=(0,tslib_es6.gn)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,ngx_formly_core.X0.forRoot()],declarations:[FormlyCheckboxDescriptionComponent],exports:[FormlyCheckboxDescriptionComponent],bootstrap:[FormlyCheckboxDescriptionComponent]})],FormlyCheckboxDescriptionModule);const formly_checkbox_stories={title:"Formly/Checkbox",decorators:[(0,dist.moduleMetadata)({imports:[common.CommonModule,fesm2022_forms.UX,src.fZ,fesm2022_forms.u5,animations.NoopAnimationsModule,ngx_formly_core.X0.forRoot(),FormlyCheckboxIntroductionModule,FormlyCheckboxBasicModule,FormlyCheckboxTemplateModule,FormlyCheckboxNestedModule,FormlyCheckboxRequiredModule,FormlyCheckboxTooltipModule,FormlyCheckboxLabelModule,FormlyCheckboxDescriptionModule]})]},Introduction=args=>({template:"<sds-formly-checkbox-introduction></sds-formly-checkbox-introduction>",props:args});Introduction.parameters={options:{showPanel:!1}};const Basic=args=>({template:"<sds-formly-checkbox-basic></sds-formly-checkbox-basic>",props:args});Basic.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.zg)("storybook/formly/formly-checkbox/formly-checkbox-basic","FormlyCheckboxBasicModule","sds-formly-checkbox-basic"),stackblitzLink:(0,sandbox_utils.wX)("formly-checkbox","basic")};const Nested=args=>({template:"<sds-formly-checkbox-nested></sds-formly-checkbox-nested>",props:args});Nested.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.zg)("storybook/formly/formly-checkbox/formly-checkbox-nested","FormlyCheckboxNestedModule","sds-formly-checkbox-nested"),stackblitzLink:(0,sandbox_utils.wX)("formly-checkbox","nested")};const Template=args=>({template:"<sds-formly-checkbox-template></sds-formly-checkbox-template>",props:args});Template.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.zg)("storybook/formly/formly-checkbox/formly-checkbox-template","FormlyCheckboxTemplateModule","sds-formly-checkbox-template"),stackblitzLink:(0,sandbox_utils.wX)("formly-checkbox","template")};const Required=args=>({template:"<sds-formly-checkbox-required></sds-formly-checkbox-required>",props:args});Required.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.zg)("storybook/formly/formly-checkbox/formly-checkbox-required","FormlyCheckboxRequiredModule","sds-formly-checkbox-required"),stackblitzLink:(0,sandbox_utils.wX)("formly-checkbox","required")};const Tooltip=args=>({template:"<sds-formly-checkbox-tooltip></sds-formly-checkbox-tooltip>",props:args});Tooltip.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.zg)("storybook/formly/formly-checkbox/formly-checkbox-tooltip","FormlyCheckboxTooltipModule","sds-formly-checkbox-tooltip"),stackblitzLink:(0,sandbox_utils.wX)("formly-checkbox","tooltip")};const Label=args=>({template:"<sds-formly-checkbox-label></sds-formly-checkbox-label>",props:args});Label.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.zg)("storybook/formly/formly-checkbox/formly-checkbox-label","FormlyCheckboxLabelModule","sds-formly-checkbox-label"),stackblitzLink:(0,sandbox_utils.wX)("formly-checkbox","label")};const Description=args=>({template:"<sds-formly-checkbox-description></sds-formly-checkbox-description>",props:args});Description.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.zg)("storybook/formly/formly-checkbox/formly-checkbox-description","FormlyCheckboxDescriptionModule","sds-formly-checkbox-description"),stackblitzLink:(0,sandbox_utils.wX)("formly-checkbox","description")};const __namedExportsOrder=["Introduction","Basic","Description","Label","Required","Tooltip","Nested","Template"];Introduction.parameters={...Introduction.parameters,docs:{...Introduction.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-introduction></sds-formly-checkbox-introduction>',\n  props: args\n})",...Introduction.parameters?.docs?.source}}},Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-basic></sds-formly-checkbox-basic>',\n  props: args\n})",...Basic.parameters?.docs?.source}}},Description.parameters={...Description.parameters,docs:{...Description.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-description></sds-formly-checkbox-description>',\n  props: args\n})",...Description.parameters?.docs?.source}}},Label.parameters={...Label.parameters,docs:{...Label.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-label></sds-formly-checkbox-label>',\n  props: args\n})",...Label.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-required></sds-formly-checkbox-required>',\n  props: args\n})",...Required.parameters?.docs?.source}}},Tooltip.parameters={...Tooltip.parameters,docs:{...Tooltip.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-tooltip></sds-formly-checkbox-tooltip>',\n  props: args\n})",...Tooltip.parameters?.docs?.source}}},Nested.parameters={...Nested.parameters,docs:{...Nested.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-nested></sds-formly-checkbox-nested>',\n  props: args\n})",...Nested.parameters?.docs?.source}}},Template.parameters={...Template.parameters,docs:{...Template.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-formly-checkbox-template></sds-formly-checkbox-template>',\n  props: args\n})",...Template.parameters?.docs?.source}}}}}]);