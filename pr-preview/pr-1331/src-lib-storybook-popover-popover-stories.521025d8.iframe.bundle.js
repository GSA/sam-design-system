"use strict";(self.webpackChunksam_design_system=self.webpackChunksam_design_system||[]).push([[8238],{"./libs/documentation/src/lib/storybook/popover/popover.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CloseBehavior:()=>CloseBehavior,Configurable:()=>Configurable,Introduction:()=>Introduction,Position:()=>Position,Title:()=>Title,__namedExportsOrder:()=>__namedExportsOrder,default:()=>popover_stories});var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),src=__webpack_require__("./libs/packages/components/src/index.ts"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),sandbox_utils=__webpack_require__("./libs/documentation/src/sandbox/sandbox-utils.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let PopoverIntroductionComponent=class PopoverIntroductionComponent{constructor(){}static#_=this.ctorParameters=()=>[]};PopoverIntroductionComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"sds-popover-introduction",template:"<h2>17.0.7 Migration</h2>\n<p>\n  With version 17.0.7 of SAM Design System the popover was updated to match the latest design mockups and to address a\n  number of long-standing issues that had been raised with the existing popover.\n</p>\n<h3>Changes</h3>\n<h4>Positioning</h4>\n<p>\n  With this update popovers can now reposition if their content will spill out of view. The position input can now take\n  multiple direction tokens as input. If the first token in the list would place the popover off the user's screen, the\n  next token in the list will be tested. The first token in the list that does not overflow will be the token that is\n  used. If all of the provided tokens would result in the popover going off the screen, the first token in the list will\n  be used. Take a look at the position demo for this dynamic positioning in action.\n</p>\n<h3>Breaking Changes</h3>\n<h4>Close Behavior</h4>\n<p>\n  Previously the close behavior was controlled by two inputs <code>closeOnContentClick</code> and\n  <code>closeOnClickOutside</code>. Going forward the close behavior of the popover will be controlled by one input\n  <code>autoClose</code>. The default behavior of the popover will remain the same, an update will only be required if\n  either <code>closeOnContentClick</code> or <code>closeOnClickOutside</code> were being set on a popover. Below is a\n  chart to guide in maintaining the same close behavior.\n</p>\n<table>\n  <thead>\n    <tr>\n      <th>autoClose</th>\n      <th>closeOnContentClick</th>\n      <th>closeOnClickOutside</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>'false'</td>\n      <td>false</td>\n      <td>false</td>\n    </tr>\n    <tr>\n      <td>'inside'</td>\n      <td>true</td>\n      <td>false</td>\n    </tr>\n    <tr>\n      <td>'outside'</td>\n      <td>false</td>\n      <td>true</td>\n    </tr>\n    <tr>\n      <td>'true'</td>\n      <td>true</td>\n      <td>true</td>\n    </tr>\n  </tbody>\n</table>\n<h4>HTML Embedding</h4>\n<p>\n  The way that HTML elements are passed to the popover are being update with this updated. Previously a tag such as\n  #popover-content would have been applied to the element to be embedded, this tag would then be passed into the\n  <code>sdsPopover</code> input. Going forward the HTML element to be embedded will need to be wrapped in an ng-template\n  element which is tagged with the original popover-tag. See below for an example of the changes needed.\n</p>\n<h5>Pre-17.0.7</h5>\n<code>\n  &#60;p #tipContent&#62;Hello, &#60;b&#62;World&#60;/b&#62;!&#60;/p&#62;<br />\n  &#60;button [sdsPopover]=\"tipContent\" [position]=\"'bottom'\" class=\"usa-button\n  usa-button--base\"&#62;&#60;/button&#62;<br />\n</code>\n\n<h5>Post-17.0.7</h5>\n<code>\n  &#60;ng-template #tipContent&#62;<br />\n  &emsp;&#60;p&#62;Hello, &#60;b&#62;World&#60;/b&#62;!&#60;/p&#62;<br />\n  &#60;/ng-template&#62;<br />\n  &#60;button [sdsPopover]=\"tipContent\" [position]=\"'bottom'\" class=\"usa-button usa-button--base\"&#62;&#60;/button&#62;\n</code>\n",preserveWhitespaces:!0})],PopoverIntroductionComponent);let PopoverIntroductionModule=class PopoverIntroductionModule{};PopoverIntroductionModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule],declarations:[PopoverIntroductionComponent],exports:[PopoverIntroductionComponent],bootstrap:[PopoverIntroductionComponent]})],PopoverIntroductionModule);let PopoverPositionComponent=class PopoverPositionComponent{};PopoverPositionComponent=(0,tslib_es6.Cg)([(0,core.Component)({template:'<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<div class="padding-top-4 padding-left-15">\n  <button class="usa-button usa-button--base" [sdsPopover]="\'Popover on left\'" [position]="\'left\'">\n    Popover on left\n  </button>\n  <button class="usa-button usa-button--base" [sdsPopover]="\'Popover on top\'" [position]="\'top bottom\'">\n    Popover on top\n  </button>\n  <button class="usa-button usa-button--base" [sdsPopover]="\'Popover on bottom\'" [position]="\'bottom top\'">\n    Popover on bottom\n  </button>\n  <button class="usa-button usa-button--base" [sdsPopover]="\'Popover on right\'" [position]="\'right\'">\n    Popover on right\n  </button>\n</div>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n',selector:"sds-popover-position"})],PopoverPositionComponent);let PopoverPositionModule=class PopoverPositionModule{};PopoverPositionModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule,src.ch],declarations:[PopoverPositionComponent],exports:[PopoverPositionComponent],bootstrap:[PopoverPositionComponent]})],PopoverPositionModule);let PopoverTitleComponent=class PopoverTitleComponent{};PopoverTitleComponent=(0,tslib_es6.Cg)([(0,core.Component)({template:'<div class="padding-4">\n  <button class="usa-button usa-button--base" [sdsPopover]="\'This is the body\'" [sdsPopoverTitle]="\'This is the title\'">\n    Click to see title\n  </button>\n</div>\n',selector:"popover-title"})],PopoverTitleComponent);var gsa_sam_ngx_uswds_icons=__webpack_require__("./node_modules/@gsa-sam/ngx-uswds-icons/fesm2022/gsa-sam-ngx-uswds-icons.mjs"),ngx_bootstrap_icons=__webpack_require__("./node_modules/ngx-bootstrap-icons/fesm2020/ngx-bootstrap-icons.mjs");let PopoverTitleModule=class PopoverTitleModule{};PopoverTitleModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule,src.ch,gsa_sam_ngx_uswds_icons.opy,gsa_sam_ngx_uswds_icons.hTG,ngx_bootstrap_icons.YWJ.pick({caretDownSquare:ngx_bootstrap_icons.foR,squareFill:ngx_bootstrap_icons.lHT,handThumbsDown:ngx_bootstrap_icons.FAr})],declarations:[PopoverTitleComponent],exports:[PopoverTitleComponent],bootstrap:[PopoverTitleComponent]})],PopoverTitleModule);let PopoverCloseBehaviorComponent=class PopoverCloseBehaviorComponent{};PopoverCloseBehaviorComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"sds-popover-close-behavior",template:'<div class="padding-4">\n  <button\n    class="usa-button usa-button--base"\n    [sdsPopoverTitle]="\'autoClose=false\'"\n    [sdsPopover]="\'Click button to close\'"\n    [autoClose]="false"\n  >\n    Close By Button\n  </button>\n  <button\n    class="usa-button usa-button--base"\n    [sdsPopoverTitle]="\'autoClose=\\\'inside\\\'\'"\n    [sdsPopover]="\'Click popover to close\'"\n    [autoClose]="\'inside\'"\n  >\n    Close By Popover\n  </button>\n  <button\n    class="usa-button usa-button--base"\n    [sdsPopoverTitle]="\'autoClose=\\\'outside\\\'\'"\n    [sdsPopover]="\'Click anything other than popover to close\'"\n    [autoClose]="\'outside\'"\n  >\n    Close Almost Anywhere\n  </button>\n  <button\n    class="usa-button usa-button--base"\n    [sdsPopoverTitle]="\'autoClose=true\'"\n    [sdsPopover]="\'Click anything to close\'"\n    [autoClose]="true"\n  >\n    Close Anywhere\n  </button>\n</div>\n'})],PopoverCloseBehaviorComponent);let PopoverCloseBehaviorModule=class PopoverCloseBehaviorModule{};PopoverCloseBehaviorModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule,src.ch],declarations:[PopoverCloseBehaviorComponent],exports:[PopoverCloseBehaviorComponent],bootstrap:[PopoverCloseBehaviorComponent]})],PopoverCloseBehaviorModule);const disable={table:{disable:!0}},popover_stories={title:"Components/Popover",decorators:[(0,dist.moduleMetadata)({imports:[common.CommonModule,src.ch,PopoverPositionModule,PopoverTitleModule,PopoverIntroductionModule,PopoverCloseBehaviorModule]})],argTypes:{position:{options:["top","bottom","left","right"],control:{type:"radio"}},_sdsPopoverContent:disable,_sdsPopoverTitle:disable,popoverDivId:disable,popoverVisible:disable,sdsPopoverDiv:disable,clickEvent:disable,clickout:disable,handlePopoverContent:disable,handlePopoverSection:disable,handlePopoverTitle:disable,handlePosition:disable,hidePopover:disable,ngAfterViewInit:disable,ngOnChanges:disable,onChangesPositionUpdate:disable,onChangesSdsPopoverTitleUpdate:disable,onChangesSdsPopoverUpdate:disable,onClick:disable,onEscape:disable,onKeySpace:disable,onKeyUp:disable}},Configurable=args=>({template:'\n      <div class="padding-4" *ngIf="sdsPopover">\n      <button class="usa-button usa-button--base"\n        [sdsPopover]="sdsPopover"\n        [sdsPopoverTitle]="sdsPopoverTitle"\n        [position]="position"\n      >\n        I\'m a popover!\n      </button>\n      </div>\n    ',props:args});Configurable.args={sdsPopover:"Default Body",sdsPopoverTitle:"",position:"top"},Configurable.parameters={actions:{disable:!0},sdsCodePreview:{disable:!0}};const Position=args=>({template:"<sds-popover-position></sds-popover-position>",props:args});Position.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.CC)("storybook/popover/popover-position","PopoverPositionModule","sds-popover-position"),stackblitzLink:(0,sandbox_utils.ft)("popover","position")};const Title=args=>({template:"<popover-title></popover-title>",props:args});Title.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.CC)("storybook/popover/popover-title","PopoverSdsPopoverTitleModule","sds-popover-sds-popover-title"),stackblitzLink:(0,sandbox_utils.ft)("popover","title")};const CloseBehavior=args=>({template:"<sds-popover-close-behavior></sds-popover-close-behavior>",props:args});CloseBehavior.parameters={controls:{disable:!0,hideNoControlsWarning:!0},actions:{disable:!0},preview:(0,sandbox_utils.CC)("storybook/popover/popover-close-behavior","PopoverCloseBehaviorModule","sds-popover-close-behavior"),stackblitzLink:(0,sandbox_utils.ft)("popover","close-on-content-click")};const Introduction=args=>({template:"<sds-popover-introduction></sds-popover-introduction>",props:args});Introduction.parameters={controls:{disable:!0},actions:{disable:!0},sdsCodePreview:{disable:!0}},Configurable.parameters={...Configurable.parameters,docs:{...Configurable.parameters?.docs,source:{originalSource:'args => ({\n  template: `\n      <div class="padding-4" *ngIf="sdsPopover">\n      <button class="usa-button usa-button--base"\n        [sdsPopover]="sdsPopover"\n        [sdsPopoverTitle]="sdsPopoverTitle"\n        [position]="position"\n      >\n        I\'m a popover!\n      </button>\n      </div>\n    `,\n  props: args\n})',...Configurable.parameters?.docs?.source}}},Position.parameters={...Position.parameters,docs:{...Position.parameters?.docs,source:{originalSource:"args => ({\n  template: `<sds-popover-position></sds-popover-position>`,\n  props: args\n})",...Position.parameters?.docs?.source}}},Title.parameters={...Title.parameters,docs:{...Title.parameters?.docs,source:{originalSource:"args => ({\n  template: `<popover-title></popover-title>`,\n  props: args\n})",...Title.parameters?.docs?.source}}},CloseBehavior.parameters={...CloseBehavior.parameters,docs:{...CloseBehavior.parameters?.docs,source:{originalSource:"args => ({\n  template: `<sds-popover-close-behavior></sds-popover-close-behavior>`,\n  props: args\n})",...CloseBehavior.parameters?.docs?.source}}},Introduction.parameters={...Introduction.parameters,docs:{...Introduction.parameters?.docs,source:{originalSource:"args => ({\n  template: '<sds-popover-introduction></sds-popover-introduction>',\n  props: args\n})",...Introduction.parameters?.docs?.source}}};const __namedExportsOrder=["Configurable","Position","Title","CloseBehavior","Introduction"]}}]);